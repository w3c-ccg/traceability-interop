{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aeeb967e-2c46-4a95-b4fd-f9c90ed2c2d9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6fae72bd-dc19-4928-8f03-08804739b657",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8861c8cd-5ead-4f21-987a-593b45d05d60",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb19ecbc-e9fc-4eff-a62a-a6848a036dc6"
                }
              }
            ]
          },
          {
            "id": "19f4f1e6-f670-485e-aeec-3576aca9c162",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2bd93cf9-8cae-411f-9371-485098328df5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f6be8eac-0824-47b6-9296-cae4b8f7fd5a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f4720b72-0d69-46f6-a070-c4b67b90b947",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7816afb9-72c4-4722-99bb-507458594733",
            "name": "Positive Testing",
            "item": [
              {
                "id": "016b48d6-87e2-4f31-911f-91207c06cdc3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e17e388b-effd-4e3d-8a0f-285eda81d712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3c2c7f0-33b9-4d8c-ab52-f6f237f863b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c64a4ed8-f7ec-4912-b09e-0f1091fbf783",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7533672-d523-4097-a37b-af0ea9404b1b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e5d57f4-dbf7-4461-8baf-4fa5b1c713b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2836863f-38a9-4195-badf-015faaee0ae6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51bc910e-254a-487a-ab7b-90dac5b2866d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d945ca45-ced9-431f-a26c-fa1b14c925b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e752d827-04f3-4144-8805-d20da8777aaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c52d021-42c0-4076-b878-3aabe1ad8bb4"
            }
          }
        ]
      },
      {
        "id": "d571f868-c3d6-4e47-8854-90a1fde62a8e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dc3eee92-dc03-49a7-a585-eba7c70156c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8baada77-0b44-47bb-9606-5797a3659db6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c71e19ce-767e-4947-b07b-3e244e7941e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e7b74d-fd01-4fff-8006-a60d415845c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8238cdfb-bbcd-4f0e-b5ee-cdb7c338033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f05cf0e-a265-43d9-be49-1599c6feb63b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f2f016-2a85-4cce-9d79-9984db70466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9983ac60-a556-4e04-9e84-0b98e3a9049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bd9e53-20d6-420e-8151-110114d31739",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eaba92-f41a-48eb-bb84-eba2756b80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c4e3a1f-aefd-4ddb-840d-1ddab92e520b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9cf5d6b2-ba04-4087-93a1-3f91b5000a37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9242ba26-a144-462e-bbbc-4df3e129ed59",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8914fa-ccb7-4c3c-bfc7-296a1ed6008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdef4d32-668e-4efe-99c7-5c362d997dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d5deb0-bfcf-4836-855a-501606dfb004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7a2bea-a0c6-4c09-8be2-fe4628e3fb89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6756a8c3-8bd1-4eec-8644-458ca4b30856",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8c26c86-5729-438c-87cb-e7da48d21f8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef8f240d-059e-4496-9948-a1abe6e36c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ee891d75-6cf1-4dfa-a526-08e976231adc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8414b00-7fc2-44e4-94c7-9462c43ba051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "001cb34f-5449-4848-9d64-a0534889c9bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0908d777-0782-4d44-8a34-6d3b53f1e574",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "616ee471-29b7-45fb-b795-57362d68bb4d"
            }
          }
        ]
      },
      {
        "id": "e4f50ed1-0f12-4dac-9ac4-3f508df59218",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd017717-3fc2-464d-939e-661aec0b1866",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0571d87-9f02-4a00-a898-2d8758c5df53",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eea347a1-e32e-4d18-9144-05e214f70151",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb13de32-0ba3-442e-9c71-76551258e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0a3b77-5a9c-4d0f-9f34-0074a657ccb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1815264d-feac-4716-9364-051104b2f46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "273b2971-77ec-41de-976a-9f45b2a2e4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022f83c5-9e08-4ccc-b47a-a22ab9963939",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec770b67-8a8d-4f01-aa3a-d1712b89ca1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da7a875-004b-4cad-8e74-1f47f1660783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d1a84-6700-41cd-8341-ed086e75d1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6511215-43c0-4549-a21a-4843b092b9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab0e54b-c52d-4ffe-9fa3-90068f3c75bf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e3202d-ff4e-4b8e-b01c-4ec3509005bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff1776c-b501-4350-8e9b-017aadcbf37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7390fe6-90a7-4b41-bc52-ca45e02dda4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74a421fc-4eb4-4a64-a041-79b4e0653051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105969a4-c439-4e8a-b9c4-11c615b62f78",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc3420-9cbd-47f5-bc43-c010e754dea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f51960-167a-4f7b-837c-0e198502948e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d97a2e3-d17d-40ce-8ecb-7de06d9ca3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d99d93-f3c4-49b5-9ac1-87849227eb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4c35f2-bf88-4bab-8258-5cb18cac6738",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660d5418-9f5c-408d-9a89-b5091ae9fd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daa92c7-49d5-40c8-b15c-72fd0896d4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dec0ef3-3373-4c37-ba91-ba5162c72846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3481fe0a-0b60-4cca-b6fe-b59338b89662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55657324-5f94-4473-a841-8b37ddbf4599",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eb3b99-31be-4574-b373-2c133b940448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dd0386-6d58-41d1-9c12-bcfd8892557b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac59368-d889-4478-a0cb-3644c04e7f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab7d633c-4bde-477a-92b7-a3eab23dfccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7294dc14-6513-42c5-858d-e3a85ce632a1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e90dadb-9ce5-4cf5-890c-713f372d711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8795c177-5511-4621-941f-fd8b849e81bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230d2a49-3264-478c-9d4f-3bedb4cca180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e352b82b-8aa3-4eb0-a487-1e99f880288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdadcf5-4367-4783-97af-f1b9aa88d79f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39f1f97-d7aa-4953-adbb-0e4c5efff09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923b6657-fd4e-4d3a-a2df-7fee826f6fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7696de-0f3d-4ec2-acba-4572b6282675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4845ef-583a-415c-903c-40779c59b8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6771ae-44ed-44e3-b9c0-b72f12420aef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad782c7-39a3-453a-87c2-49c2b9614c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adfe39f-6edc-43d0-984b-ce3918a47fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d16f56-398c-449f-a8d4-74910b01d544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4216b6b7-e9be-4c36-8459-e3966289afbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336715af-5b18-4433-8f0d-c292c5d20145",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21f2dfc-ba05-4791-bc5c-084613b82131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9852b64-9ba5-48c7-9e6e-f987950fa94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e357da7a-f577-4beb-a267-039c5bf5aa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08848ab1-c901-42f7-bf83-ed2428e4bd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9b1f03-aca0-4175-945a-c65aa1504be2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fdbf59-26d6-4fcc-ba39-aab4cb18bf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d2b060-0ad1-4526-8ef3-9202c4d1dc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f3289a-dfd6-47d7-9d5f-4e2d952a2a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86a52dd6-e543-4f29-99d5-e2b98dc3c6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd050c7-3124-45ee-bde6-b7bc32f28e42",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f037fa6a-a7ed-45df-96ba-ee785466e491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a191f070-ba13-4fd7-a5f6-065b8614b107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df568d0-f246-4c3d-af5f-5f7df95f2d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cee90f5a-2a7b-44e8-b8da-50caa9de0eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70eccfac-6a47-4256-b95a-4d6bdc3ef553",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b9fbcc-acf0-4559-9b55-4f7fa31c971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5de6b4-6503-455b-9a5b-1c2edd5981c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc6ad4-9915-4030-b9a8-25d8e88ae666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc5b9e8a-e643-4984-971f-12a36ebe15c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3f28f0-aceb-4608-9398-d48420de4a46",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c727f8-4e76-4ef5-9cf1-204d5ed0abe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d555009d-040a-460e-b629-901caae9bfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b768eb-9ee2-46d3-8711-97dd5d0f61cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb234b3-714f-4d1f-9803-f35e41a72b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bce82a3-0028-41a6-9608-9ea0ca118f57",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f912375e-44a4-4edf-a8e2-2c539e5179ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f45c395-5d0d-4c9b-9bc5-2ab2d7e26e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c79978-a329-4b83-aaf3-d3a91db50220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a42739e7-0ab7-4d91-9a2c-b80cf219d0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72acae87-0e56-48a3-a629-23056ddbd217",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424ec7fb-be80-4e64-9fcb-ed45cf54830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1cc0d8-1cb3-417e-96e1-75f8ff52c213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ccf1b4-8c9a-4704-bd60-3b656989c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b802f78-4688-4419-b59d-7cf309e4d6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cde4a23-64c7-4cf6-bb3e-3feccd4c6833",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46707da-8d81-47f0-96c9-f3499ec07386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a3dd6b-4409-424d-b7ee-c38d73bec2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b8219-e832-4825-8f20-81d833081f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06dd2d3d-eee4-42a4-8426-b2aef52bd4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2fc84e-77f6-455a-9a73-b5e452e8cb90",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbb6e27-4265-400f-9b36-06e61438be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283e5947-b8d3-4a16-a595-4ea1bc4441f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410e276f-fa58-41c9-bfd3-18e8186710fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7de37cd-9c83-4886-8800-59aa53638fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa7fe3d-37ec-4c4b-9df2-d063ea683ebc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479671ec-ca2d-4626-b8a7-e493478466b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bb8399-3349-4609-b77f-e22d5070a82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9344aa17-d747-4624-9f08-23c8f88f18dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cd4fdd-5782-4dff-811f-f067999aabcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec60377-2818-44c4-a4b4-8aef1738f09a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60053c0-76d6-49f8-b7cb-442054c3993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb864a55-66e8-4d9a-882c-bee528b403e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69978fe7-9cc1-4e03-9455-e6f36f29ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e00482-ac64-4dd3-a45a-860e929cb5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1911b384-f7b6-4cc2-bacc-5aedf658b641",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07253c6-0ce0-4932-b487-e18f415b4c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9617470-9ae0-4210-a247-771aa93dd261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22de02-d4d7-4295-9819-39ced429728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fa4782-fe2f-4652-9ef2-6f88eb66958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793f5f2-0d34-471c-aefd-3a8f79dc9326",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b0953b-a22b-4a87-967f-3e4075064f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4361b71-4323-4ca5-92c4-d8db7fda6454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54bc7e2-8e43-4349-b6a2-ab4022bb87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaeef01-f303-4893-a80b-c3a3ccb0ce06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8cbc3d-a657-47a9-b97a-3c86bf33d30a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa2cb9a-ec27-41af-bdb1-82d298a23e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ad837-30e5-4f68-a179-5bc757a4f8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8590e5ea-e402-4498-a39d-7453b6113699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a1f8b8-0c5a-4949-a211-12f73bad4145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16d9066-ff8d-4ac3-aeb8-acff837b3347",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1bb6dd-bc5e-4d36-a8db-1eb07e77380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526ce451-958c-45ba-9b8a-e590123cc73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce436e6-91cb-49d3-a555-7c4745ea402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2068ffa2-e72e-4fae-ba27-9a90dc1fad9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71150c49-f91f-489f-85e9-6ffde6001b51",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b7563b-19a4-4357-bfeb-dda2b65505ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0295dccd-d3c8-4059-808a-ecec6aa45366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce437fd6-d1c8-4e31-a33f-a658b8123b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "490d59e5-4b8a-4fd2-9d32-48f992479ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ab8e0f-a75f-4be7-adc7-dbf7d1b906fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e12cd4b-f6aa-4028-b5cc-abb477d424ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fbb911-9ed5-44b1-842c-31ff42447e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6439b338-2a7c-46da-9e82-3fca56201e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29cdcd9-2e62-4913-908b-9af12e122883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d810fd63-de5e-4705-96f7-4a3106c91666",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb8a8ce-107d-4791-a01c-219c58ec0ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8d712a-0491-4da8-8805-82307fb69354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13a9549-6eda-4153-b522-f80e16814c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cfa870-bd4b-4fbe-b201-1a1c7a2159f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118341d4-b64c-402e-b3a7-49db6ebf5d53",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fada668-acf8-4840-86a9-a03c81d54360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6a5dad-a081-45b6-b58e-7d2ac8458607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db33466-3392-4c7e-93ca-4534be6db653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b121872d-a532-46f3-8cce-9f17568162ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d9306b-90bb-486f-980d-4c891d8c4165",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72b0fd-f421-4c5d-9831-d15de53a11a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff1f534-a7b1-4969-a097-7bb079893401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37809596-3234-4137-aa72-0723008e2f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9a3e38-38a5-4e83-8c2d-bc8686e4d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed31eb-bd11-43e3-86ce-7a17de515190",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16032624-605d-4b80-9754-c96a2fa49f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b38379-2474-46c7-8620-afe5ac7d8d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c06d1fa-4b73-4d87-936c-619af715c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c068f0-51f3-4d61-b518-04a949cf1c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e18d884-ff45-4312-9a9b-309937724179",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd046967-84dd-4434-994e-3144f080aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38cb0dc-2b3d-4517-a885-abde81dc6e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010add4f-785a-4992-b3a7-6f190ffd7400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2555ad-1af7-4531-b94f-42bb1c33904d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea5323d-1e00-4054-889c-61b0c8c0938e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ebc3f4-6cb1-4dc9-9f13-a3d130a874d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02454eea-b72c-4a28-aaa7-149b9460c003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed932e5-e2af-4ff9-a4cd-a6b429d7dcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "104af5c6-b0cf-4383-8599-8f0634908d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282eda49-d246-488e-abaa-1612b77ea7cf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a816e9-7a1a-4280-adae-2bef1b992cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfc8b9d-0dc9-453a-b75a-cd4cf48065c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3831bd3b-81db-4648-8913-ec44cab3108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6a818e-68ad-4bf0-9508-2eaecf8119be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53e8fe0-1240-4687-b9e4-2a49da451f39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b8f0ad-ac25-4bfe-a678-849b47a4fc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a86f2c-56c5-4d5a-8358-3db54035bc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d06a0c0-6d58-4db4-95bc-865be1e52982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc57b0b3-4770-4f20-8064-cd21bfb1bd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c61c7-a6f3-4c24-be58-81dde2f9969f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d555c3b-8eb0-47d8-bad7-cffdb85cf830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e04e07-5b0b-4a71-8c93-958ee7f3043a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cc4128-f6d5-4e1a-a26a-a2757c53442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7fcaa3-e039-43b6-abeb-691bd433ef89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd7d9e2-f64e-4d36-91de-f7b2144c6cf5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbe4fba-f0e9-4b6c-ae3a-2910dce997c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df006be2-be35-45ba-afd5-63e853725911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f544938e-6b84-4029-b4b3-4c4274534901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f448b59-1e94-4391-a2ba-b2080cd43290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c23e25-6200-4651-9cb6-0d67eaad8f80",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57abfaf9-a44b-4b2d-a125-57dd33a22562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a9db74-9449-42ba-b072-1bce5dafe9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc36e04b-a183-4024-8318-8adf82bd3cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f62deccb-dfe4-405c-ab68-0f50b38a3285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81a390c-07bf-4a9c-b76b-6b17b4b17f67",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee03a31-b2ef-4617-9e99-552c03c09893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafb3759-dbb4-4c9a-b223-3d0f0cd95234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223da9eb-665a-4a90-a819-6a2c9a8a3f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3135a900-9aa1-4445-977e-68a9dbc32ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a2876a-1710-4707-b956-3434b9986620",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730a27c-dc7e-4d9c-91b8-299783ec4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0b71d1-b803-47f2-80d4-667b4d7f2c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadbf441-f1de-4a68-9dd4-5468d249d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a1ae32-1f3b-4ecc-bd0c-ca58765287f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abcd46c-594f-496d-9ba8-d80d1c18009b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9e8037-8699-4902-9045-d31bc59448df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b70ac0-c846-4f16-ba46-090200a4af3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88739036-33da-4989-8f07-121b0e58d8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7278ce-3737-44c4-b338-456886bd5cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058e946a-5f4a-419b-9ae6-3ee7ece6a5dd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf59cd-7164-4e4b-8a12-a88d9dd70a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5937e5cc-0b1a-43e8-b8ca-6d293f27e1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbf1e1a-d3b2-41ff-baa2-77f737eb9cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "525026c9-83f5-4052-9806-64892b159edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c563e2-4ca9-46fc-a06e-3996ae0e3775",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63beb24-8430-4f74-aefc-ad0bf0296678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1533c445-4956-41ba-8e9b-cf8bd6bc1f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5939b56-91b9-4982-bfe2-129d740177fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d1babb1b-69b6-479d-800b-61fa74441f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a71bb8c-7bb8-44ad-9552-8b3d385a6b94",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865bef61-e673-4e62-a913-d2e033efea7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8947b686-d51c-4575-a16f-cb0e43f2f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18090365-32a8-4fef-9a16-9ddaac5fb411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65561ab-0820-487d-99f9-cd8d6e18fee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2af563c-a253-4478-bf5c-b97b1b1e2a32",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26465a-37f9-448e-aa48-2a43b7494c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d058f8ff-a598-448a-82ce-c64f3b21be84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36dfeeb-fa16-44ab-9ced-5f5d1c4b3e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf3a5c7-fd34-45de-81c1-f438b0b51100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0e6ad4-3f9f-4c1b-9783-03ac71c6f194",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f769828-b16c-4a81-8cd3-59e46cb785f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06630efe-2ef5-4fa2-ac39-214c86ad3910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c4047b-6f9f-458a-863b-f56825e97ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da00b66-c9b7-41a2-afaa-fac928514a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a110031-0731-42d3-afd1-133cda0ef4b7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0052d8-cdef-4513-b20b-b5d28fe7cfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8089dfb1-1950-4f04-84be-8f1da9bd6919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca90c156-dc79-41f5-80c7-12292d3289f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b4b6a1-d0db-4f20-8b15-bd5d3fbf45b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa01926-9449-4d6b-a12b-2ddae89c9073",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a32d450-b9be-471c-9e6b-fda75fdda62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c3ea15-20b7-46f3-9061-a3628432ecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce24f18-ec45-4038-b850-d68a3b285698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "287198c3-cbe0-4926-98cd-93edd230ffce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1cd7cb-498a-4464-a6eb-7b9b35133c01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b40fc3-9d02-419d-b759-07da0906f407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d27ec8-c388-41fb-a914-91b0bae1cbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0238405-45fc-401a-9b55-373cf10705ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b08a450-40c0-49c9-9df9-ff355c06a757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82711c61-0eca-46ef-8994-034ed70075d8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63862f8-745a-4059-b101-0c8755fd564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1cf8e1-dc4e-4108-970b-d6f6fa98349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4e701-8a97-4a15-946e-24651299cf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c70c5dc-4fd2-4100-8b98-30a88fe6dc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2d58f-b30a-46a2-bcf3-65ccaf4e851a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c558f727-7935-4466-91f1-ff2568097806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecfc810-01d5-42e3-ac3c-af64a56be6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b49e339-eee7-4cef-800c-173a6e1729aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01425093-7b6b-46ae-8e08-7d2342091d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc5dd8d-8a8b-4fff-8fde-7e14cd8fb702",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2c5123-1ff0-45f1-b568-860f64b3e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2e2c17-ef38-43c3-b531-c628296def7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81799423-fb3f-49e4-a904-834a6f5ff647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2119fcf3-3cb4-4730-96ba-6840fa549a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d082155-bb13-4169-b9f0-2fb891204758",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0499928-4082-4687-8813-54afbb8bcba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cf9bab-8325-47f2-be7c-7ce9a9fe03ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e84b58d-6547-4be2-879b-3d929731f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd11da2-9225-4c7a-a7a5-3c6d75fa022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65fe84a-86c6-4e94-ae6f-c19864ed5e3d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310d23f2-9faa-490b-b875-82eb82cf822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6477efda-204b-4b93-9424-df1c9797dad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312c25db-9e5c-475e-9415-51daf17dbebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab9da55-7d0c-4296-9128-cebf5b1d1765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c25d49-f6c4-4c1f-a9e3-d4dbd065e520",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55190b2-61f8-48ef-8998-8394b5a6e743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8575c8bb-3e38-4473-bfcf-f0048d61a950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019160f5-d4ea-47bf-aaf2-94dcf2ce8890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c684c825-3159-41f5-938c-d435dc841817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8ea169-e71a-4b66-ab72-8e8ca82d81fb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdf991a-764b-4d6a-8463-045322304ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a46c15-2c6b-489c-a700-c4cffd5e37d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48818d02-b411-494c-84fe-4d1712b63ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "524ca662-25b1-4a7a-95ed-3ffeae693668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9381a49c-ee68-457d-8c52-258acbd7ef4b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80892fcc-d0fb-488f-86f7-4c2875319186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bae838-739f-4875-9086-8b5ee66e040f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96294304-a68c-4cfe-a744-5adfe8e17637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0d28cce4-7fa0-496c-9534-ad90624e6318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66958082-3e76-4e0c-bc1b-ad5223f89a4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2380e413-043c-4760-863d-fd41100cadde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a788b84-8a95-4536-a318-436d6ca84475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779506d-2776-4323-a420-555752173e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd58a1a9-2d46-482f-9e77-aa7a9b73665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f391ac-df40-4cc4-a417-fbb00aeaa121",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55dd73-1a1a-42ec-a758-8c9dc99fdc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7cdda7-171e-4fc9-b3da-00d5859c126e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e1291a-ed32-44d3-b07d-8477a3204891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "983ddf63-3491-4081-885e-1a716bac5409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d740dbd-518d-4be1-8479-c4ad75f30f21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4900b2-a371-49c7-93b0-b7bddb399845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c14d1e-e755-48c3-8800-d6152e8f3e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0699da9c-f6c0-4397-8a2f-506f9ba98d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13ca467-3a04-4234-91b1-251aa90a08b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c4e84c-f8ba-4084-b4f0-474952df51f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90590d7-8efa-4e4e-9773-ca92b08e62fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3ee5b1-564a-449c-b00e-5f0f66c44452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ef1fa-5447-417a-805b-d6d80bff6290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de17e556-787d-40af-9f7f-b9c0805ac845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43ce398-5f63-40a0-978a-04094726de8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0992d735-3510-4659-8f0b-f4b18fc20c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fe1380-5662-4fd4-ac82-67ab0e6972c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9680d962-1f36-441b-a331-a5de83e70d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8df2d4a-1708-45b5-9f6b-d2a45e09dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25411ed6-7a18-4c3e-b70a-5f2ee5ec0899",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46456c1f-4d1b-4ce7-89b4-f1a82eade537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc036088-f5c8-455b-a8b4-fbca46849ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e44b22-2459-4433-bfd5-8a197698769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9d12eb-024d-48e4-85e9-06fb794b4936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd865bc8-c4f9-4504-9ec3-c4fcc31f20aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ab453-03bd-40eb-a2d6-83217b79de6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e7c321-0075-4836-9411-7552678d220c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefb15a1-f19a-4b17-88c3-308b644aacdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a81a1e02-2d36-4a0c-b3dd-3e90dd388748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b447c01f-e2a5-408a-acbe-d2378d6f614b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fc2c7c-2119-47db-9528-93169fc286b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970beeb0-50ec-4146-b6ae-9fad207ea48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0063d8f7-351b-41c2-8805-6c428be795e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df9f9d93-ca50-4500-b884-5f48adb5af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11e7949-4808-48f0-8e39-9ed300b5467a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c746b54-b219-4ca8-b218-cc24a5892299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb53552a-ecd5-4f30-914a-44e07be043c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc9afd3-bcaf-4933-bfce-9c9a1fba4cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "970de88f-3ca1-421b-8743-396a7d2bf9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7980f42-744f-4829-a7eb-e005b8ab2038",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d336a80-f460-42ae-8a69-9348d16c6670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1b750f-e8de-40fc-8c19-eeb7f900204b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d75885e-d8b9-4d61-83f1-0dd9aa2fb781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1245ff-e8eb-40ff-b2fa-129b9dd86bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a088d7a5-f476-4198-862e-a0733502dc99",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6161c736-3638-45c5-8c5c-4cd44fa2bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4a91b2-389a-4539-b792-08b94de37b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb39b9f2-aa40-4292-92d5-0d49039c2c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29ac5c5c-3b04-47d4-8984-ac949df1244f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55583954-269b-4710-9996-5c5a026e1892",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d009462-a5ee-435a-8bd8-1556bc744999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc738c48-5611-4cd8-a1a8-946f241a05ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a721b613-fce6-4a36-b142-d6e6c2820940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ba3336-0a3e-43e8-abc7-dc38abc4ef9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d779e1-1c45-4c8f-a0cf-1f44b76254a0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e10ac40-25cd-4858-850b-4cbaba6034d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bd6224-3db9-49a6-be28-15da8e65c7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72b401-bc69-4b16-9885-66db6fe61b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "548100ee-c978-463a-bedb-8b9f23781a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf073f-0e84-4aca-9126-d687e5bc1d15",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8168cd62-9aaf-4a9f-97de-c25f8f4c9025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f61fa6-b62f-47c4-b09e-2e1491297aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb265f99-6fe6-4870-8205-b48d907f0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81f50166-fff7-4e90-af02-f698b2609418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f57fbc-896a-49b6-bdc1-f3bf8851bd25",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545c182-e438-4ae0-9ab5-43b99218daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c834af7-7066-4650-a2eb-2fee460293a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543aa0c7-649a-4c21-8532-6271b7901e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69da8143-4086-4a50-92c3-859c320cb035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcde8625-da13-440e-9f17-8ce73a9cab07",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de9f0d-8190-4b5d-9830-5c995d8725ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd293b6f-7307-4e46-8550-2e69162ba623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a31cc29-662c-41c9-aa1a-886849f2938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed08703d-829e-4a32-94df-2f05fc380252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1515fb-b67f-4b9e-8296-494464148f64",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc71db4-bc1d-4a4f-baa7-aefdd26b6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a06aa73-b96b-4856-bede-318605bec28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f81ce-8b50-4dc1-a4e0-db37c9ad542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0130fa66-b60b-4989-8bff-351f7b1baf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3819ba4-814d-46f6-8134-deea10d3c822",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d55ac-05b4-4bfc-863d-744222d64a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7943a3f6-e778-4359-bb9b-fc59e04543e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe3006-4124-4097-bb83-966dae4235fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7b924e-dbb9-4156-b7ef-5d6d80a4cb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b102a06a-8335-487e-aaa4-e058bf947af7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868f8197-2e92-4b03-978e-ff6f83df8fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f04f95-7b3a-4f2c-91d2-e467b4d262a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29705473-80e8-4d0a-b4f2-a5d3bf586a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac69194c-db9e-4364-b2f2-d8f9b8b8ee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227913bd-1a67-4b1e-ab2a-a59176544925",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f393301-c6e3-4ba2-9dcf-4d7095a0b9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dbad96-442e-481a-b6b7-1a7af9527fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f389af61-5235-423b-89d3-d4f42b3835b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f58bd42-9653-419d-97a3-e56308d3c40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c1146-7ff2-4d9e-8501-b106c0a34a12",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28adc81b-29f7-4ddd-98b0-aaab2f00dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cd3d8d-9894-4af6-a889-958e26f3b6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ba9a7a-9bf7-47cd-a9da-f06644733eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01db93b0-c7e8-4800-a24b-a0b398dc6f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ded4f5-229a-4835-82c9-15c13060ba17",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d24798c-599e-4ede-becf-590727e9a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61867b1f-db80-49a9-b671-6ebe065d0390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b15005-8aa0-4d16-8782-932337b41731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e73f0b-63ce-4c46-8f69-4d2ba72a5f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c43a5-286e-41a2-a9a3-eef67c3245ef",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a244f912-370e-4f1d-9ddb-b865e5728e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff30baa-4a4e-43ee-8832-953f02e33e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5013d703-c1d3-45e8-8afa-d6bd152da666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "816e7651-00e6-493c-b9c5-0e1de83070e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7341d87-1c9f-4ccf-8ecf-ad141333075c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd91a7c-b2e3-40eb-b9c4-f3c80c9977fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e14b63-f4fc-4248-a695-1f0a26e61fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881ddc7d-14be-47f5-ba4f-584425a7ddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a47994cb-637a-485c-b282-6e3e750c4919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755998e3-2c44-4215-9484-6c086329f35d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d861940-6265-4abe-b18e-f34e4897c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7c31c4-370a-4061-92fa-91479fbd89e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc10639-6014-4feb-8b7b-1f028b4f18ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b86304b7-e616-4e49-882d-128a0d79f335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a4cc06-9834-4447-9287-1180b2ae9efd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a983cc6-f184-4741-a76f-638fd22d14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa17b53-60e0-47b2-b592-a19407b1e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce0bb85-914d-438e-82c6-9352b49e8089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9a2356-e1dc-486b-b89e-941a0120e087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533eb6de-3116-4162-9f0b-c4a9a3efc77d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfca859-bdaa-4a7b-8e0d-9f458c6a155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b517ebc-f853-4719-a9e1-72d5f95b106d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3b5d2-18f6-491d-b168-87830a2485ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a496e35-e90d-4ec1-b63a-8f49ebfcd4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cabbdc-0e0c-4679-9fa6-77b1e73e1a14",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a699e1-16ab-4acc-9924-fb58b437948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea954b4-0477-49a7-b441-5cf593fb72c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bce711-0ae7-4b1e-b680-06da1cd1dcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7120270-202c-4f97-9982-4aad728dd66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad5b32-513d-48ff-bc4f-78f05f6a284e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c2e639-f182-405d-a648-2735bacb9840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ed918f-8f1b-4f3c-a704-c31de6a8e100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5b7529-3d73-4c52-bcb2-664fdec02d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2770c33-fdfe-4694-8002-8ebf28ad5fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb76547-c28b-4512-8045-0a2355a33a40",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edadb7c2-f5e3-4526-a7c6-b3f7d316dc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12883d2-555b-4f96-bf75-8a72a0a5a493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f729d92-9e8e-4869-929b-441e45b120ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5a235f-9583-48b9-8606-ea0c516dc3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1355408d-f345-446c-b811-c72dfa8b7b00",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a3218f-828d-4cbc-8981-f9b49b478a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552e1ba6-b436-4333-9ee7-c48d28b14e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3516454f-77d1-4599-aaac-75d7374c6eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8999c7-e0f1-4e72-8e11-98230fd56a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0fe916-e7df-4953-bf5d-bbb99a7b55bb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf8e15-eb4b-41e1-9027-1e5903b7c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe6f574-85ce-486d-9c4b-ea47f340401a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bada2d5c-41a2-4b2c-aaba-6c2880d82d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9df41c-d3eb-4e8e-a3a0-14455702b682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59353093-faa0-450e-aca0-0ac486c7bfdb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb3cf0e-0239-420a-b1a9-03f8e274484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2eb669-38e2-46a2-bb70-4b782592d19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337f266-c039-455e-bfab-5c0d17a28526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40a425a8-6fea-4480-8844-f0ed09571725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9067e5d0-9492-4f61-8ef4-eb6efdde8c8f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cac975-cd02-4d7f-98e3-f7f553e7b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08c7419-c70e-499b-8f9c-077942367d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e148db3b-a3b0-4740-9413-2325e44cc39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b22106-61aa-49fc-b7b4-f5c92cf1591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3502f898-3052-4a30-8b44-2ff9c079765f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe8710a-0512-44be-bd35-09ede342d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a0a8a6-2dce-4eea-bb25-88b2e99c7be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeadacc-4882-471a-9592-ee3e136c2bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c657a5-6439-4616-9b96-05a7c9c7b357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ccd29d-c2df-4f04-ae03-6c514bcd3a35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c96c47-c859-4f2a-8e71-8fd90779f240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1286a7d6-0621-425c-93f1-2e63ca30fb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbde0f7e-46a1-4eb1-9f3b-9d9d991d37b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e8386f-0cf8-4051-a182-d15c50570e13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74e927ec-9d14-4e0b-904f-addb0b9769e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef803438-9e3d-413c-9da5-684061268d1b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119014d3-5cd1-493e-bd3f-7de0240de7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65212f84-b32a-4569-a9fb-4b8161cacf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c90b5a-8119-4891-9e6d-ddc75d6cd0d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9fd02c8-2fdd-4510-9a61-b12b31e59197"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f961d30b-609d-4a32-96b0-902194e9f45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81b3619a-d9da-40c8-aa6d-28f2cd0bbb13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d1e8d2-2047-4820-8ef4-b2871333e25b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "972abccd-fdcd-4975-b053-ad40764cdbc3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2defe38-3f2f-44a2-b5e4-474cfa26a866",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db8e6dab-8bf8-48f1-8c5e-ed38054ac38c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32f7127f-6694-412a-a128-f3460352bac7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91adb93b-9279-406d-8249-e53b5be446dc"
                }
              }
            ]
          },
          {
            "id": "227f8e8f-92ac-449d-9aa9-092cf71e5180",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0e6fe81-83b3-4b28-ae2f-b728a4dd6536",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "38aec7bc-cc56-46ae-ace2-03b9cdb3baaa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a5a25f-f39b-49cf-9c8a-da9abdb8e526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "baa4c7c8-10ef-4dab-b03d-d64eeb3732e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9d7f7d-7eea-473a-8568-61e3df88f920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d087680-a18f-40ed-bcbb-91e22e2a0245"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c4d1416-09a8-4e87-a915-4145d8650c59",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7e6dfd0-0cc4-4899-a9ec-b79b5d790de8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34e69c59-97fd-421d-a436-8e6419959c37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ad4532c-ae65-4443-aa42-70527bf2d3c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3269830-e001-4659-9d13-3ec339c1d805"
                    }
                  }
                ]
              },
              {
                "id": "075f9d12-eb76-4596-b237-4287e7c1abed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1042c969-330b-4fea-a71b-2ae68c9adf3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8f84d68-18e4-4519-ad8f-917de86e45ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1decdfe0-7f8d-4d21-862c-ade775f4bd94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e2e04a9-3c2b-4f31-b5d1-766caa0e3e18"
                    }
                  }
                ]
              },
              {
                "id": "986a773f-f80d-4fd6-a6c6-2d2cd6e5d78b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d27a32-20eb-4285-8fe5-5a9d0a88be4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6772d2e-7d34-448f-8cff-464bc8437bd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4665ad4e-2bdb-430a-8e89-f0f0caf20eea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3e3411c-dba0-4a9f-b18a-70b4d0dc8648"
                    }
                  }
                ]
              },
              {
                "id": "0f9c24f8-a543-4e95-b03b-ec931123ca88",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35cd14ca-1c89-4c47-a49c-d5f6d5488814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47210f43-ccc1-41c1-adc8-e2b677e1a156"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c5817a-63a1-420b-b05f-730f24e31b35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2c1722af-13ee-4de4-90b6-1f43692133d6"
                    }
                  }
                ]
              },
              {
                "id": "d0d3b9ac-8865-4ca6-8900-2413b7d43088",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f08e2baf-45de-40d6-9822-fbb4b734d2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13fb402a-1717-4eb5-9b15-aca4078380fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "607aca5b-03cf-42f9-aedd-63b6cff09cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64465069-9036-4d3c-b0ec-aaf31f24a25e"
                    }
                  }
                ]
              },
              {
                "id": "0d8fee5d-5698-4178-83f6-7e4422aa6d25",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29b3bfd4-a397-4945-8335-68587c4d6e96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ee59176-5cbc-499b-a222-23854e968626"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5145f66-c913-4d65-8d07-c585e96cc578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e02668c-e046-45bb-af73-7169e05ec809"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9a0bfc7-2c51-4cb3-a80c-8474b4675202",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "100d9b24-568f-4815-a2f3-4eee1d40f14c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4e8dd72-a8c2-4e8c-af2b-d810c49bade0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b8be163-9410-4c77-bcd7-ee6d37cf1c01"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f86b9b4a-cf5b-49d9-90cf-8f5082f230a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dfe06315-0db4-4413-a207-b4404ce54e42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61f5745-982f-4293-99be-de59f60dff81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c60dec75-ea51-458e-a4fa-ac764dbdc520"
            }
          }
        ]
      },
      {
        "id": "d5be56be-cb76-43d6-bde6-21d58579cde1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b41c37e7-2777-4aad-8343-69b2bb821b1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bfb150c-4202-4163-8db2-114fbd1af072",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b6f2a5d-e3a5-44e2-8aeb-5024b94a8433",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f34987-fe4a-4e1d-80d2-c54c0f23fef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23713e9b-0bfd-4096-9b1d-40a80ccecf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c6e5e5-fb05-4e29-af7c-7ad9a0be5370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae68ed8-278d-4caa-bad7-88e5a5c232ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de01d341-2445-4e50-aa16-b3e1dac4da17",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cfbb22-bd24-44a6-a13a-c514302bda4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688393ba-26b7-469d-b841-92198c678726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a58ff-c68a-47eb-8bcc-8f2d0f1104ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9493b884-10bf-4e6a-87fc-57df30bb24f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d08f4-a8bf-475f-94a5-6166fd9084ea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3cd039-0395-46bc-b831-d21b99d71b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1783a5-6471-403c-88b3-924eb599e18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ca0008-27bb-4ec8-ab2f-38aa809461ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e892196-f373-4a57-970c-5b5230fc1ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9762097-4b13-497e-a4df-e6213b3f2d7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c6e012-a088-4543-986a-2bd0cd2c5671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4b81f1-2104-4a9c-acc0-1edd39e9b40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db52da0-c608-4a79-a262-378c9e0d3de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7cded9-1a79-4e35-bc6a-de11e255fe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70ae7a3-919a-4174-9522-cf2d41dfe3b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9741d5-418d-48c6-b268-929774538379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7daab5-2dd0-4ccf-b3b5-618991e55589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8460b8b-8bfc-4285-8096-2e6fbe5a7b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "194bbe34-ad50-47c1-82d4-c8fb4ae335f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f2f906-7f5a-4972-8a66-e9ff94ca9896",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3de8c7a-e446-4131-84d2-88868425056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c412ea9-e175-461b-bbac-2687a46d3e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3262f21f-1587-4142-9009-a7e785de77c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "979e02b4-6e2b-40d8-b1f4-ffa20a28bfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666bb86a-4d98-4827-9844-70c9b19845e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df8678-815f-49fa-8861-a91ce83927e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903198c-3d75-435f-b4bd-dd1c35c1a208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d40e43-038d-49f8-a535-c14f8666c726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "646b3b5c-effe-41ac-b69a-f608d98a0bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d74ffe-a786-4087-9bf1-4f20490b6437",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28b60d5-5534-425b-a996-c17a505a5d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687b9158-7a78-42c6-a9de-02b290bd9324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52274a54-46eb-4bfb-ad28-9b97b4657ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d83e93e-9143-4b6a-a4af-c98d52370834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e2e83-91c0-41a2-aca1-b0b6c7b59562",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22d9d18-66db-4f72-a279-851f2ca130d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd28104e-e7a3-464c-80db-3e391ec73fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27bea3-308d-450c-a498-8190d085d6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce3fdd5-4126-47f3-ac12-9c6f7c7330b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be82a74-58a7-48a3-896e-3c14814285e2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6084c0-187c-4dc5-90c4-8608bce95b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb55db5-20db-4dcc-b432-70aa1537b481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5c35ab-bd7b-4e4d-bb58-95e147eb89a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6406a58d-b766-47f7-8ae5-b6bb506083a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beb87aa-47ab-44bb-9988-ea8ec23fe125",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d34e6-f9fc-4266-9142-a639db520775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ff7d75-c6ad-4585-b3fe-c873285b3633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cb50b1-ede6-40e4-b970-23af9d595271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "705b8da4-b63b-4eba-9be0-d8275f26961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c885273-995b-42e8-b2ed-cd5ab0d91ebf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493e0a6-6387-4286-9fb1-34063ae46497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7fb741-017e-4711-a6fd-adc2760c8c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3c5f7d-e590-4724-a68e-247cfa84b5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee2e94a-f323-44bf-a60e-6328c031b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff5f5fd-3a63-4be3-93c3-9a949395b70a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e306863b-5752-44aa-8d96-800f7678da75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee37a2db-a1a3-4d0c-bb5b-23bb484736f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401574c5-4fa0-420c-93e0-89bc779bbc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bb36eb-9289-4a8f-b533-6ee1f71a6ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a323e72f-ae15-470e-9953-405dfa56484f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047e9840-3d58-4128-b6eb-da63067ed264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04728e88-b7fa-4bf5-bc61-ca580de2ee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f22dc-86c6-47e5-80ce-9cb1108aa99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dec7905-5a7f-409e-a9b8-455b9fc4ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f92bf48-59a2-4832-ac25-3841e7307592",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4d66ee-41e5-4dac-b335-a62aff90cd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff65a76d-3c9a-4cc1-9487-930b3340c39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a7e760-17ef-48ca-b56f-c97486a78f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea6d480-3fcc-4230-9933-6a4f526fa6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5112b5d-7978-4f21-b01f-314ca297811e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6128f32-831b-4b91-aa23-a6453826f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7869f94b-c9c9-4a23-bd42-46e6160bed2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249d6d66-e933-45d4-9ae3-1ff38f9d747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5235b827-0c4e-4ed5-8a1d-84f9288ba2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b9ac17-f698-47c3-b433-11b50b125e46",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffb177a-95e9-46fb-82fc-204f951b42e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bf1344-3526-435f-be17-5857bfbac203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567def93-7814-4130-98f4-76bd10682f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "799cafa9-7d44-4092-9462-589aabdff186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea65a483-129e-4350-8dea-69a6f7847dac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc23a5-9831-49e1-bb61-d0ddebf21537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefd1839-9ea7-4f62-9067-3433add2e319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39418990-6c36-4285-8cef-071cc62d97c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47268b3-5767-4827-9579-0030cd348b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1062ba1b-3134-4d38-9c9d-8c30e955fe60",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858d71e2-e8a6-4046-bb4e-4dcaa4d948cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91c1048-db9b-4651-b67d-2507942e4dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e58ba0-7c9f-465a-b4fb-5e63d0bd76c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d81dd1-fb19-4d66-b691-21ce18eee62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f639ff-06d1-4e06-80ae-af381dd2f061",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa81e529-b0c7-4d3d-be4b-95a6fbdc9785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26d409b-de3e-4cea-bcf3-5393da2e58ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f58486-3b74-43e4-8b37-0d4679c0157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ea03ee-b373-4709-a007-bf85cc3881e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d28bc-d3dd-4d7d-9324-1f6d0f948d01",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fad6f7-5925-495e-b181-9bfc123d72e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429b9de1-3aa7-4618-a23a-8689fb58356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660441b8-9d14-4856-86f5-f7ab9cf114c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "679de137-bea6-4f13-84cc-ad5077cf18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ee11c-ba16-4ad7-aa50-fc904b30fd0f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eae4db7-ecb1-4b9f-8a28-15982a1ed5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40296ec2-eb16-4ea2-ba79-168c0e00ebe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158396b1-11f1-4d2b-bc5a-077927339b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71e160c-90a2-4af1-a7dd-4de0e03d04c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43373ff-e99d-4c02-b344-73093951d051",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41863d4e-5a70-4598-b9e6-2fce9bc2850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f9094a-5e65-4510-82a3-e8d166eacd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58122d12-71c4-4ddf-9fa2-1ec7b80a56e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5cda40-3cd5-44ea-adb1-f16359e47169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e904032-c700-4edd-b76b-a135c7f5489d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa561d25-34c9-4b84-b553-fa8e0b13bd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7febeb-757a-4d25-a935-f7552cb36900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd2eca6-0e14-4ae0-baff-3525b06bbfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c04cd9-3a8a-4f84-8842-fe087ec40ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dbc7d3-b447-4bf7-87f8-e0c317722e43",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263b4344-2b2f-4684-b996-62d5ae7f49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1801b3-0cf7-4a2e-be53-1f362dbf2e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465bccfd-dcb2-465e-9d83-8173c92ef3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf950b5-ea18-4fdc-932c-b6f38e161827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974b93d8-bf64-4ed3-adc8-9628c5f07ee8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ba8daa-a862-4807-93e0-9cd0c6149745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cdc7db-d6a5-45f9-bde2-27e5296e43b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82814246-99a4-47f4-a1eb-ea1b69bd9221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "744de3c4-76ac-49f9-8e8b-ca0295e6ab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb72495-648f-4762-a635-0683e77cad8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae500af-4415-4558-bd5f-93d5b0ba19b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74f1597-599f-41f3-ad25-bb4434141e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34605bc-9cfb-4414-b0cc-6efbbe238841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b780ddf-a9da-44c2-a680-e0e36fe9efd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6786d3ef-e318-4e9d-8270-bf3d9c18535d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2999443f-a226-461c-bf6a-f89b2359ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23f25da-e57e-48f8-bb2d-411e38ff6264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c2e772-ef12-4407-a73e-f51479d53fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a200ad82-cdac-45be-ac58-55efcc4ef827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3d88ec-fa63-416e-b164-935bb9551265",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b800caf9-f0b0-461c-99fb-70bb48e497ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acdd3bf-244d-4a06-aaf1-70bcad195025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df202edc-99c3-4977-a4c5-2c54df5e7803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc76039-7a2d-4198-a496-41e53b493615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39712291-f639-4c25-8532-327654fd3473",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a38ece-9bfe-48d4-acf2-78f7779f288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf24ab6-75c0-4b42-95c0-946498b10335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d712bdc9-18b4-481a-ab46-bc3cda18c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6194f02-13d8-4bb0-b9c4-b4a7d7b4044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e8405d-cd55-4dea-ac8d-a34672ae404a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b34ead-75a9-4b58-bf93-82a652bfc6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901a565d-cdd2-4508-b07f-776263b00712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81644f7-c6a0-4642-b0ba-d88ecd34bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3e2742-2cf2-4f4b-86c7-0243db255a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073e0df9-c45c-4dd0-bf7c-14a1e2892195",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7843ae-459e-48af-ad0d-06e880febecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738da78e-3b20-42e0-88ce-1df2b89aeaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceedc7ce-effe-493f-b464-df2c613f556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb2bbd5-0271-4391-9ebc-014d8b1cba2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3171753-7d5a-4837-a5ed-1acb283b6db0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67fc5559-8c95-46d5-878c-953bd4435dbf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c105e70-8eb4-4280-909c-db4a3fe3d570",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d87616-59e1-4a15-acc1-e78df6f93a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b459c7-8df3-40bd-b495-3c50910ad3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21efc06f-346b-4618-bd1f-07120c72f35e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b4f963c-8186-45ea-b0b2-3047ae776659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b740ccec-6bca-4017-8e63-287665bf335d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43956c9f-113b-4b33-a01f-f9886f553d3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f506e66b-e792-4102-b531-aa1638ee4056"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a65bd5b7-5a5b-4f17-96c3-83a4bb714294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05ae20c8-fc36-4393-b79e-c2c1d0937635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fb2f9e4-1e71-47bf-b739-fcd1644b7610",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cf61c9d-2f34-4c0b-98ea-21746a78b6b1"
            }
          }
        ]
      },
      {
        "id": "1d4c9947-2ace-46ed-b75d-cb108eda6a2a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0bb9cefb-bef1-4bd1-97a0-69632d7e0268",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c55a78dc-9ad3-4437-86b0-22d2e7e0e7f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f4b974b-a9c8-47de-afb0-8ca30f085439",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dafe7a-2709-4ae7-b812-28266e7e7d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf8588a-dc83-45da-be1c-814565668a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef07fd-1ac4-4683-bfb6-770c253a9cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "af18b8e2-e89b-4bb0-850a-964249d2fae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4196c202-898a-46d7-8244-8b22c86f7697",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b29b624-44e5-4270-8dd9-05db71b97acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1b8f00-ab5f-4f28-a030-44012ddd6775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c0d1e-7ecf-4fab-8603-8b6eb1ca909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fda3d82-ebf8-4c41-830e-d15a33f144b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd579f-e63a-4225-88b7-142343b31cbc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d4fd82-1de0-48dd-b37f-0c213d5fc2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e864e0-6d5f-4616-9811-ec57920a85d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd9521-0ac1-4ac5-a0b0-aa49a162f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ff736d-7389-42aa-adfb-906c4abefb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee50849f-7be6-4fdb-b658-6cdf4de72619",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edecec45-a21f-48cf-b2dd-0b40e26e28e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c18f13d-82c6-40fa-ac67-a6b75823fa94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21888a14-0978-495c-969f-62174607a66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59015ce0-3871-4df5-bb09-4f776d46c631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b31bd90-61aa-4955-a572-74dc6d0716f5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f883e-bbf1-41a5-a7af-dc57822b15bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2d637a-67a8-4e3e-9127-b61f32ba0056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fabeed2-00b4-43fd-b26f-f8d2cea3c083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ca051e-4d83-4c86-b6b3-eb3b4d0dea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab05713f-4289-4567-a0fb-962dcaa83787",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4884201e-b796-49fc-a2be-88dab38cf83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bca428-caf2-450e-9224-447863eea13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61137060-f7e4-4df3-bd91-59a8132dae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d8913c-fd32-4090-bcc0-f198377dbe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced6afc-9cff-4bbe-bda9-219a5a5b10f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a4131-05e6-4cd5-ae01-13a48c073155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c75dee-4454-4a09-bfa9-a04519078eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6d7c39-ef24-4e5b-8631-6f97989ab3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b44b00b-aa81-4986-9b8f-4ad2359cd378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5636f7-8e17-4243-9081-8b826758fa5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafdc149-20dc-4ee4-8d1a-8b22df98e781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df11288-c44d-43cb-932c-a0ec2e82b44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed78d14d-8a0c-4682-bcec-1b1cf2a13df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2ad434-fd8c-482e-aa1a-4a5d2d0d87c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be051d35-72af-4c17-ac2e-4c2d533e6557",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad062fbe-6536-4083-b345-25acabad14d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614e765c-445b-4f3f-bfd1-ecda2e8cfacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6356cc9-6c6d-4cf6-83a3-8ed0d5f29e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f659a5f-7da1-48d0-9066-06e9d741072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7676cd2c-25e6-4195-a9de-7a2ab6059eb9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7369dc-53c4-4ad2-8035-39977195ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefd850b-c30d-42a9-9bd4-a53cd702f3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ccdb55-addc-423b-aaa2-b5332bfb779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6458b9-86c5-4d04-b389-af2bbe907d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90cbc00-a388-41ef-a5e8-e6c9dd162ecb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f30319a-08a4-4fa3-81f9-97f6fc2a2d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8702a5eb-46ef-4f61-ba4d-df2a20ccb099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39034164-c0d3-4949-a9f1-d8725c6b08f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4de25cd-34d0-456d-9638-ecf2955d4e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d753f3ea-51f4-4195-b45e-884a896ef11d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8187593a-8aea-4155-bfdb-ba6ff42108e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58629546-5391-4ba0-a208-10bbe250e4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a8ef11-19a6-4473-a834-a7686ff35aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "290c93c3-d03b-4998-a5ef-2e897c240980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f800fe29-175a-468c-bf5a-4f0d06b59adc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a90a862-1a09-45a1-88d7-b6205d03ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7ec5c-b7db-4b97-981b-5f0944bac817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48076b-dc9f-42c4-ad0e-10e7f2e7eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70a613e-9006-4b09-a7f4-fda12afbe2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc8fb36-9b25-4df7-bd0f-dcbd41248b33",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fe638c-7e5d-47b7-89ca-ec2e65c2bae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effcba74-111b-4bc5-bad1-ee741dbce42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba00328e-d287-4373-bd13-9f5f26606ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1b48f7-7176-4f5d-b39a-8364f82a049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7933ea1-9661-4fc9-90c4-6c8a349b205b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0f1050-94d8-4d49-8944-e673ec9bb995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd22268d-1eee-4bd0-b62e-e89fc49a0851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a5d12d-7648-4559-8889-46cb793804e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa782c2-4262-4057-9f22-421626686b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5e8eec-7c10-4ac5-b577-229efd6ed4d5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e2a7b5-3cb3-45d7-8c78-5b0110bec869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b440e571-b607-4e07-b61d-291c201050fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821107bf-36ad-4763-9a48-146063ac0061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2f3f30-ae2b-4ec8-b33b-480eb36f89a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62762578-803a-4d5b-ac02-28dfc08e686d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d57af-31cf-498f-9dcc-d16b5a60623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4235ed-1a80-460d-a585-daf0982115ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fb6f8d-0236-4312-92c6-ecfd3bac885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd9653a-69d1-4038-9a67-4407d04869f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df18f0f7-a194-4e2d-a8fd-efcae03b91fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9798a-04d8-40e1-912b-c1f218e26ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a83da3-4e26-4312-9cfe-b29cbc7a915a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b057c71a-f91a-4c93-9d06-16255affeec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c223adb-4044-4577-8de1-20f916f6fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d404de2-3b65-40fb-a99d-61eb991836f3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf64d539-b490-4bcf-a191-bf763453135d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d340e3-c5f0-4d82-8ed0-e39efe430770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7387b05b-7fb7-4bd7-a2cd-834b6681c14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2683b761-2955-4fa3-93c8-f755118dfcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a09b01-ca4a-49f2-b555-ba5d641eeac1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca5a23b-1f95-4d69-9f78-9157d7f76d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b323724-e3b9-49a3-927a-00f10b9ae1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c6f8d2-dc6e-4cf1-ac73-238433a87edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "281efdcd-acb7-4297-bede-88ecd50d4f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce512ab-e1f2-4737-a2f3-83779cf7dfeb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e98312-3ead-4d2d-b526-fd5982849c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1ac325-0a1f-493c-aba6-ab76c64985be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c128fa3-702d-4d28-87e5-50b44d0b8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86eefdbb-7dc2-46b5-a0cc-a64d4f65c624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8585a226-f44d-4d61-bdd0-d0c5078d6268",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48186ac5-dbe9-4160-b650-70889052ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10a6482-b977-4221-b76b-28c3c39a94ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f8d0e5-0d8c-4ab0-af6c-884164f82b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61cba268-3862-4834-b0dd-e4d6c61c6d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d01383d-a53a-4d31-9875-fff8e03b2196",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd1ba0-7f7b-48b5-99b1-dec7d0529dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c879fc-1562-427d-a894-c9e4a987adc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aae53f9-6eef-43c4-8fd5-2074235577a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88892e45-3032-4673-aa7b-d973b086f6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efa9b92-4119-4f53-a79c-a118ee8729dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dd14a5-e7bb-4fa6-97d9-792409bb0344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03bd3ed-3ce6-4d02-8dd3-3717d7242cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd62b90-b1ed-4789-8ffd-5ec3d9a1f5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c03d06c-6a05-4623-8156-e036ad82a364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff325f1-82f5-41b7-a24f-5be89b285684",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd55f39-7a36-4270-8477-e21b9b9f9c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7a3476-4c79-4bd8-b4d2-fee6e980b625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f13a32-c7d0-4e82-b735-b3599526910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d5c293-16f7-465a-9e76-13a7a09dd647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d91a89-b9e3-454b-a2f2-375001496965",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ec9672-af0a-469e-9cec-59fc81b50adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac216e0-dbdb-471c-8bef-2870bd172ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aea3e8-fe92-44b4-b46d-8907c046f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baefd36a-ce7a-4a88-b2f5-effe453f1158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0a77a1-87f1-48f8-a472-026743c13dcb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390a1dfc-9a24-4496-9788-060528d2eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e97627c-3ef5-4f7e-9ab3-e3a6ac63951a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d5ac9-d12a-4fde-8044-b80d7b78b9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68399250-8c41-4f13-bed6-a65463007371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d582d50-c66d-4043-9dc7-ae34e08b0fdb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e0ff4b-9626-45bd-918b-881184a7b617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20595278-c1ae-4b4e-b30f-73d7f45239f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2628c129-1299-42d9-889b-22619ffe4b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e79846-ecb5-4220-8d08-91d28ead2fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a75e5a0-d00b-44a5-90b3-0e6f1368a6a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca214d-7f89-47ca-92da-d1eabb9c6e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d610169b-69b4-4443-a080-6322caf0156b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6532fc9-1839-4d6d-b696-981ff8371324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43d4107-4885-40a5-abf6-bea135912ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1153992-635d-48d3-8564-8cbef379b3c2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f51e41-159a-42c6-9763-b2b807aaa6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9bc44c-9116-40a8-a219-f40124ce7f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33165b3e-600d-4a71-81fc-e17511e2db3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76956bdd-90c3-41a8-ae9f-e3fc414ba737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f804d86c-3ed5-4948-8589-1cace1ec52e6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f5a4a9-c8f9-4955-9c5b-fb3b79261686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0406cc7f-8f84-4aec-aa6d-ff1b3d18bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b930e418-96d7-4b8c-8b3b-169d2e1d5a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530c1654-3236-4e3b-af08-f38a7871f45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5907b725-d585-4c21-9736-cbe65c49dbf6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a362c0-8e80-4197-9460-e1dc87205502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4f394c-9227-466f-ad43-a54b7170a93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f459138b-3acd-4b1e-87ae-14a148a4698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "612ba594-5184-47a5-bc37-f3a3e973bb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce4f37f-736f-4073-8313-b5896670fb05",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90351730-4de9-41ba-b700-7a32aa8ba693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf0800-412d-46f6-b4f0-54cae54e0fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f7130d-4795-4cb4-aa94-68b0f4a20f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73caeba-eda7-4c76-91c0-8633549040f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57bcdf4-2ca8-4772-af19-04c221c22bc7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf32d76-c80b-4e84-b617-c7f192aa0d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6032ad75-a52c-4876-bdc4-5a63134f405f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963f6728-e639-420c-9efa-46ad3edfab49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa102410-5008-4b03-ba6b-345f19189559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e845ce76-cbf1-427c-8ed1-acbeb679240b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5610f8c0-36ef-4fbc-b8e6-4691495acfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281d688a-f611-436e-bf8c-c79d0b5c66b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c6efc-ded5-407e-b5f2-a6900dce34cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad08aba-0e40-434f-b6c4-81d20991f34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce33de-2c80-4fa5-87ed-89c4cb8fab77",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bed2a9e-adc6-4c54-8f2c-601fdfa293b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fccf88-a8fd-416c-af14-c575b35842dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a362df7-1a67-4666-8580-e1cff00141c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b124038-4893-4d20-b0ef-0a67710f862a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e551b39d-04a6-47ef-a607-5bd561c2b992",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a81c1d5-fcc6-4a4e-ab5c-46fe86643afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f98667-6422-428b-8992-29db3b0ecee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a9833-585d-4e95-9b54-59a15728e474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5428904-a8f8-4590-b03f-d7f6954f84d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee34b134-a48e-4477-8bd5-7e583e926799",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89a96080-1c80-44ab-9008-0436d770d064",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f318e5a2-e8ae-461c-bb71-6f5566cbe300",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5a70c3-e96c-4062-803a-69cd19d1c3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812315ce-4c67-465a-b69c-dfc920454941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd37d520-e17b-4fdb-bdf2-3bb3efcb8b68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "493b6655-6ee1-408b-9e39-a04e2e244bb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "004c3586-6f49-4613-aa4c-665f933f1cc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25309c2a-3245-468f-88f0-26ce5a860860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59840b8e-e882-4638-928b-fd2a7c2e654f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bdcccd9-60b3-4a9a-a3a4-7fc9475916ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ac73a7e-54f0-4f5d-9620-097c5a1ce4c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79377162-c2ce-4888-a015-0e9f8f3836a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60230302-4265-455e-945a-dd15e0e2c9ad"
            }
          }
        ]
      },
      {
        "id": "348226c7-5e68-47b4-ad85-998350ac51de",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e6e08955-550b-4b5f-8373-137a8ee6320d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b78e18f-f164-4a72-8013-6fd5303278a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5286db27-01a7-450d-b232-871df9d21d10",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555fe83-5114-4c32-a0cc-9d2d41f68c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5900c4dd-4ab1-4171-af70-cda1c1286bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad700e3-59c8-485c-8284-0f5facbcde40",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9838a130-5f70-4323-87c4-bc7f7d760dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e7458f-df50-4a33-9ea1-154c859da856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d69197-127f-4dcd-96c6-5e8e65f0b0c3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f69a244-2eb2-44cd-8bb1-92ec228839b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d784238b-da4a-48e9-9622-6f4e167b9707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67bbbbb-b34c-4919-b7ec-537fe362f183",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ba619-dffa-478a-b8ed-7cb915b2df4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca62df5-0579-4b44-b320-77f824346d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecfeba2-e7ac-40d0-9dda-60cf0549aca4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948a91c-be16-470e-8712-70dff54e750e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41076a2-ecd5-45b8-a7d0-a0e000602771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d98c60-b8d2-426b-b4f3-6aa37a40fd6a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bfa8f6-f1d4-4934-b594-0766a7306cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c954da-07fa-4bac-8d8f-45aa924d23f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7049e20c-d295-4003-ad3e-adf0f8dd0fef",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae3150b-8ab0-40e5-815a-3ffbea9a76a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ec6ec3-28cd-4c2b-b6bd-125bb20e0eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd1369-94cb-436e-b57b-aab1fe79b70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abade13-f367-4d1b-b45d-f7c9dd52ec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d4998-42a7-4cc8-8105-46ba467944e2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5735935-bfce-4961-b109-aa199c11abb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51e4b83-effb-4816-94bc-77d48ccc0430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4301e36-8ea6-4407-a8e0-0ec7a5e58cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695e77c0-f9e7-4879-b7ef-43c4c3c0ff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45919d75-447a-4992-b648-94d9d87a42a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f466f-efa3-4071-a6c8-03c0e229cf85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98966cad-a5ad-438c-9d6d-82eb75ae3f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e088615c-74ca-4ae5-a860-692227f69593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdd8b20-1529-4a79-81d8-7bc5d3641501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3978b28f-38a1-4d48-b9aa-f55c051d1d24",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2ce1b9-e227-402b-a068-9df8679213aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274dcc1a-32d6-4f0d-9717-f52f1ca30627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865573c6-8a17-4cec-b0b2-1fff24a0865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6f2afd-d2fa-4329-9375-7c153850a756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee5e743-a6e2-4e1d-bac1-0b7daf001268",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fc15de-807a-4cb6-8284-c69dd049bbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36a5f0a-fd71-4719-9d3b-321207a0fcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b49f47-9d9e-48e3-8140-8ceda5cd158c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261bae0f-3514-4a9d-bf9c-3e2b660c230d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33adbfad-962a-4cf6-b05e-c4d3b04f3d61",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9549c-7ab3-43c8-958b-f08a522b5ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512113e6-9d3f-4831-87ac-6131bcbe934a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a07d8-1cae-410d-bf18-cfd06b301298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ff4c3c-1d90-4397-8807-8e43f4b4ac0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d99b973-18be-4c04-b3f2-09bf01c53b93",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a15151-20bf-4334-af36-17f950ddc276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a14f0a-870e-4fca-8a88-2c0e407fdbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c1696-1770-4ac1-9783-ff879d15e4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f8fe55-e81b-410a-b0fb-dca1dee9cadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72208ed-78b7-4fdc-a260-fa10a91a4bf8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bf2686-e112-4581-bd05-0402487882e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34050d5b-ea1d-4cec-9ed1-150623aa7da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b21ffc2-983a-4346-aa8b-4e12cd276f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbc2d1d-cce3-4d7c-8ad2-d035bf1432b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b241b023-f2c5-466e-be29-ae2d06cde782",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183258b4-18a8-47eb-874f-0e10095ed4d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1f76d3-a08b-4fd5-bd53-28490ec1f371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcc2e16-bfb2-4d5b-bb9c-9847a5814644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bfdef1-0459-477b-8421-aa95652b8d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dc362c-1c91-4264-870f-cad2f515d87e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66db3caf-fe2c-4d59-9215-7ff5c9017047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2302899a-6475-42a6-b581-b57f70fd59c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388471c4-d874-4e0e-9972-96e2f95a74e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1244abba-e58e-4090-a3b0-734c53e72445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acf9241-7255-4c69-b50d-882d8f08304c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7706f48-ea81-47a6-8492-3e1f1e662503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aaa71df-0ca6-4dd9-a8df-ecf30ab60201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4277ba3-1f3d-4fe1-87fa-95b3e235ac74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aab316b-7714-45e1-b098-0509d3c3b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3c8e03-ffd1-41b2-a58c-1be537d26930",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f34a853-44c5-431b-81a0-ddf47ecdee3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628ec4cb-6c6a-4f68-95ba-dfbadb71fdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2dfadc-ad78-4bb2-ba2b-9d84fb74be92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f2d74-5bb5-48de-bb6b-b754723cd829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda91f53-1168-4c3c-a2c8-10146af292dd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ba7eae-085c-480d-b835-ba48faed3a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cee0af6-037b-47d4-b5a9-1f47ab39c952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8791ca-f235-41e5-be19-793391b29569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521ef1ed-f7a1-43be-a466-1fc797199823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b6aa1-db32-4c9e-b6ed-d82a43ccded1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae60ade7-ef0f-46f1-a04c-3a1ec07441b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de92b34-d587-48e2-ae13-5f6e8574b3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748db4f4-d851-415d-86f0-41c8367619c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022bcda4-53fe-4ac9-a9e1-85143dfda246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ced07f-c0a2-47a0-b56f-23f22a305356",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1331f50e-8760-4692-b241-0f73bd90664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb0aefc-fd51-459e-9c2e-f5ddb57b8f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed83677-a6cc-419b-859c-027be4d7b752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8610dee4-14fc-4936-9baf-7546edd57c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a80f95-978c-44aa-aa59-4219f9287829",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014b3fde-e184-4f65-998b-33a09535acc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c09040-d602-4777-968f-9c976fdb7ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e503be-6bee-473f-b55d-d5c4ab258a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bb4c40-b6b7-4ec0-b2a0-d513c541a1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3805c2a8-33c0-4663-8e25-7619a8e0f80d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15498944-bb68-4c06-b620-09da596d6f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a28763-f6e0-4cfe-91b1-7e4aebcbf7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ba64f4-1637-4a77-a415-14b46ed306bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c7d55e-80e3-4ae1-a427-f3ee7be508ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159fcb95-4ece-4924-8365-14a238cc5b55",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b0faea-f38b-4e28-bcef-d306bedfa36c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77d9281-eff9-45d0-92d8-b1185d032bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c518f157-542d-473a-adbc-a0660a770595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac447e64-d26d-4d95-8ae2-bd9aff799a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e54c7e-9db2-48e8-ba41-08bdb58a6f7b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79c6491-d068-4fd2-b796-64c40724d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b96e23-4852-4568-b248-3e2c01388908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de9c303-8d01-495f-aa6f-2a4248eed663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fbe2a8-1550-4370-8371-50cba1a10458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3bbaef-8606-4b91-a5ad-07fc33a06c63",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c83dd6-9dd4-4792-a1c6-f9d1bded36e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f7544d-362b-4024-b3ea-2abeb1d6f6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124f75e-6ff3-4019-82a2-a21810a1936e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b05791-911f-4a70-b124-ba483291e1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103ca8bd-857b-4ce0-8ed1-6e4f6468fec9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7ac06-7b21-473a-8c17-80941d01cb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3794d9c6-9b60-40ed-be51-f6654af2abf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95537d4d-827b-4883-943c-f458d8219335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69194877-525e-4373-88f3-71aad14af10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aabf70b-64a3-4403-9255-a43a6f735620",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf373bc-445b-4b8a-8159-12ca1c4ece88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a25fdf-b627-431e-8f52-216bc6b39551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06005f0b-4d49-478a-afd3-7c3405e4a6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b1d850-8d48-4d0e-9447-9a8a5381119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a5ead9-2c84-417a-bf0c-6dafda06f5cf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bc4944-b447-4f29-849d-2cae549cf772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a898cbc3-118d-4989-8381-e0129c4150a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f2ea9-41be-4d97-8307-1432bf82bd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60972eba-ff09-4bda-b8a2-c51720d3409f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3a4e7-d0d5-4b86-8ba2-0549fc723975",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffd00a9-d6ad-43fd-83e3-0d2717f27239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076af67a-9a36-40e8-b16f-6d227eab636b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a80a434-1131-4cfc-9e8c-82a487163491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4656420f-c938-407f-bd77-b6b52c6179b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ca8e8-a368-46cf-a137-6e57418855ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0f4d30-0c4c-4a4d-af91-7ba4367307b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bd7b9f-c9b3-4913-9918-c1a671b6bbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec14504-3cd9-434d-bd8a-8ff31e1d986d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fcc7f6-9aa6-413c-9365-337e01345b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82472169-6af9-4469-9ade-8d598588cdde",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fdff17-c904-48eb-b01f-8d66e1beaaf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2339807-80d9-4f42-a618-366cdf4e20c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27ab0ba-8840-43ba-9c50-29ed476e3804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dded8175-a63c-4425-98a1-569d0a646167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d02b96-91eb-4e9e-9777-f300cd20f8d0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1cca70-c146-4913-a3da-d3313f61f05a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22239d9-1b9d-467f-8d2d-0451c9b6952b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae14085c-4796-43ca-afb0-646cf03cc366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572ae985-c1cb-4dac-beab-74453bf1134c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c75923-2030-4a56-84ba-bed20eb3eb2a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8fc05-7e5e-4c99-a094-ccde93e84e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558e31c1-e27d-457a-8adc-823175d4fc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4ff4be-4a49-438e-9156-9bcf40eb233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf4d88e-c608-4a85-9a58-04442da9f0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca1f7d0-0cb5-4de8-b44f-58a5f37fe7a5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87df0da-ebc8-43dd-9ed7-f8afc6e02fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e49ad5-4c82-4f3b-9e76-f8e865ba8c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdb3924-7960-4420-a8f6-e5477d8ef0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67b0b33-8716-468b-baa7-bf49a0ad31da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3318ddd-c4e6-4ecc-8500-08cddfef6caf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729ac9a2-dc98-42ea-af35-edf812452bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672dbe74-9ebd-485e-b2e1-6bc9a8007240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a112891-640c-4873-9532-3d1ac2c631b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e08b7b6-36e9-4aa0-8ada-c8320923f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef19aee0-282d-498e-9262-97e30f16e140",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8551fd-5be3-4b44-92d1-d6e8f2910627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ae3d85-7248-4f5c-8338-b55e39136686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1243d06f-fc63-4eab-b691-589f1772fdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce41c20-20f2-4153-8ebf-06b8deaecf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e80956d-d0be-42ed-a3e3-84b08fbaf9f1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be13dbd8-e01a-418f-93b4-f1225d6797e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e126fbe0-62f3-49e9-980a-f1089559b75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d5b9fa-b981-4e8c-9553-7991dace2af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58bd1a1-7049-40bf-b026-c9e9bbd734f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19082ea5-b5d8-4f6c-9c2b-80c389ea87eb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e15601b-2452-47a4-90b8-e38e677392c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c37766-8e87-4fc4-ac1b-8160da58e1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2c978d-1beb-4046-bcae-62da5fe6337b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101d9038-5a5f-4dad-a9d8-56036173efd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d06a97b-f2f5-4355-870e-b6436b4904a5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedc235f-49e2-4ee1-ba83-d3f331816c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19b3bf6-1945-49b2-9c08-2d45c3d73035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2a4efb-c3e5-4e9e-babc-ceebc3f67251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744b0589-f8a8-4cc8-b76d-a102371c4d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ca360d-c9b0-4b57-b545-1df683098acf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485b0b84-6253-41f6-bfcf-bd8439139298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d882dd-bdae-48c6-be71-15c5dd02a648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a0f03-e670-47fc-88e7-f9acefd7bdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e10d9b-36f3-4b0e-8b10-2ffe5d6b9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bc35b3-d42e-4d38-b687-aab79b74a970",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cd6e09-0f40-4623-8c7a-da93466a848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef846e1-91df-44d3-ad46-116721067bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95239b2b-44c1-463e-b807-484fddb0eba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bcf798-3c25-4081-9992-26a6a3f6dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e19b68f-55eb-4038-97a9-eb3c5443dbd4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ab848-2271-4886-b73c-05ce39c0bada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679804d6-4285-4d80-802f-bb85f395a973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6418e90e-93eb-466b-b795-5a5a4b6efa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4099756c-7fa7-4082-aebf-4252163ac52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b0f290-4083-4505-844e-d0ee693d0053",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592c3365-2d82-469f-9b09-75897e20fc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f5dd19-75bd-498c-a941-06b78e788bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33cdaaf-079c-4121-b884-c673231af522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ac73d0-dcf1-4c5b-8798-3ac4f12958c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9c2af5-6d03-4b14-8219-108d5d77c6df",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804bdb69-3c54-4e88-995e-b3097314128b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb7fb43-a4e0-4080-ba2c-38dc1019be8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1d13d-084a-4b31-a619-57af2b7ebeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497d2993-8135-4a1c-a1af-ff13fa51315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc596165-7390-4403-b730-71a4b2b3abc0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556486c-fe7c-41ca-8d7f-6b049c7b6358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467d89ba-1acc-4e8d-9aa7-0461fc5c6d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dfa93b-5df9-4e1b-857b-064cc882276c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0765bb54-7048-4255-a167-c9b4457dbe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95386e7d-6005-4bb4-92ce-15d80193b876",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94db8e9-172e-4214-a087-632b15cff9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb3251e-4f3a-4d79-8d94-5c2b98bc2f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee8398-b6f9-420f-b4c6-f1c6391281ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e232a8-98d3-4acd-b7c9-a8b18e3c6bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f4369-00e2-4e08-a50e-0693122d8cff",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6025305b-67b4-4784-9162-bab789126f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5853ce-7c6b-45ff-b493-f7ddd824c5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8275c81-4bef-4c2b-87ee-f6c7243eec2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc3499d-e690-442f-9e61-c2c808c9e38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db4ee79-0305-4a85-8be9-0da71c986abc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a70ef9a-c46d-45c9-a598-a1451bd8ec46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4065d80-e64b-4114-9c91-be7930f7ed03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135b4e8-88ed-43c8-9975-4fff50ff8a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247d7790-2a5a-4151-92e0-441701f2db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f024ba1-12df-4636-9938-370350a5fbd6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c358b794-e9c4-4b39-bd97-d52e2c1cc805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f785dd9-340f-4b08-a01b-5337c72814b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb86ea-3e03-420c-9f9c-f7765ca75ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf09e153-1906-4766-9fd6-ed971f0f08bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5793787a-333b-4f3f-9879-14e59c39e5a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86029790-4d92-4e86-ae41-dbca588c2ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4791032-07cc-42cf-a22b-d30ca7f65fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea692fa2-48ad-413e-879c-ff5262b24f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea95f7-0b33-4750-8993-7bbde13f98f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed67d1b6-138b-4460-84d9-0fe86ea131a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71f387b-a594-45b3-9206-c39f20433a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd88e95-d573-4433-8d54-cde311d460a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3910a2f-261c-47a8-a7a2-2699aa74622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bced58e6-4e0f-412b-b7d7-11705755ff0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc9a7b3-63bb-4da8-a5f7-dd2d0486427d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e86e6f8-9352-466b-af31-2ea06c152d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1c82e3-e181-46a4-a486-da10e6ae9098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2c5bff-4431-4c5e-90b5-6e633eebd846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bd1c1e-ffdd-425b-9492-0d95211a2244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34e1586-3ec1-4447-b6f4-045fc8dceb28",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d9691e-acbe-4449-acd8-c707adcb42d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cd5fc1-f38a-478f-b38e-93287885e774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0c9ae8-4093-47d7-a63c-1d53b7c73f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ce177b-c58d-475e-bff8-3879a7b3478c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ddd55c-0ef9-4b63-a07b-3d68bc0e552f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba935bfc-99c0-44a4-ac53-028837be146a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f27a51-2c9d-45cb-ab89-b70d067c0afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8342dbe7-f885-415d-8f0e-e5708214bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac49874-c479-4e21-9a2c-796493cd45c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef114c7-57a3-4ef5-95c0-5c443920175c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218b328a-8be8-4c5b-9252-2c52868089ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b314d-4bbc-4aaf-a2e0-fcb3dea51d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c147179f-59f1-4993-9e9c-a587a02ef0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d64e51-3a7d-404f-89c1-86764bffa35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6deca9-0788-4eac-a975-03da167af4a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fb5399-cd8a-436d-8cf2-4efdd1f33938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b26e7e-97fd-44bc-bcf0-faedbeeef24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef084358-769b-4a54-9c0d-6f0b7df4adf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9cab96-da54-424c-bb7f-a1b2df1a5d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924a82f-4097-457f-a310-243a29cb7f66",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0a5913-0442-4270-bc7c-344abc1ceb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aff9b3-b114-4aaf-a35c-8e2dd37ab6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02202529-e045-4cd0-8bd5-7e81e47d5f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155c1f2d-a77d-4729-b803-032ecbad06bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba4ae4-6320-44e5-a724-4ca21e5a4319",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73a240b-edf6-4f4e-82dc-297b54a6aa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b32bbd-22af-43c0-b658-b970237dda38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbd6e9b-4dd5-46b6-ab02-72e9b71aba99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ada88b-89e4-4743-a72a-08f72feae47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa4e077-ca92-4086-b512-e5f73463210e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf7ec9-5149-4a8d-a52b-13e56f519862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8eeb43-8666-41a8-9f99-29c4c23c9cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91bc165-1007-4f6f-8922-0300dd5e716a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c8b9f6-c3a0-4edf-afdc-fdb077be6724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a781c210-25aa-4c6d-8ea6-315507e9b983",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff3f52-43cf-4287-bfc1-8275d3d95d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5898e5b-fe35-48a5-a450-90407a06ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcff983-22f7-41a1-bf65-167d967ca3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52c6303-b5fb-4a39-bcd1-257181727dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45421dd2-3442-42c2-845f-6d04bc1134d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aff61a-7527-4a24-b8eb-f773c263531f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a633aa32-8b8d-4d0a-9ac0-ea4b6cc55196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363bfbc3-f165-4f08-a869-9be65036173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72304f09-ed03-4338-afa7-8c5feaafe920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ac2c87-bf22-4185-91da-00a38df9cfd6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dc1fab-d6fd-498c-a994-3206bdb460c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b5090-a314-4c7c-978b-8f4f40319af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86473aa8-ffad-479a-a432-3e4a9dc6c4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaeca05-a3d6-45e5-a012-c133e01cd11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d43de-feae-4089-9a47-1643c1ae8f40",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcaf76f-88c4-480c-900f-6fc1d6378a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cf82be-d63a-49b4-a345-cb2fcbe5cb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1750caf-31dd-4882-ba43-3cf0f20581ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c43d42-f468-4f3f-ae89-7b686dcd668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0cad5b-1316-48e7-ac74-b3a559d328e6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad0e776-1fce-45e3-902c-371b8069328c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec5f37d-caaf-4f89-a837-b1f2d16bbd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40196e17-eb65-4472-8be0-d9371e67356c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e242e7e-7b81-43c8-8d8b-624024c55b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fe59c4-7e3d-41c0-ba21-de52d52b8b7a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbda7b4-c807-4a49-a8cf-d6c1789f6eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5058f74-ef03-4aa7-9c84-acf75c48bf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34559e6e-9933-4aab-b19e-e6f31e27dafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d5b72a-a43e-43ea-855f-08e3dfe5b4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791037c9-82d3-4be3-a33f-c1779851f0d9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacfe644-a756-4e19-a9af-82a43c86a949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d1ec6e-b738-4d55-9e07-0cd868f4faf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90088c0b-8ea0-42bf-8b71-674918283bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2f3e87-a222-4256-a35e-f4befdff04b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a296effa-466c-49cc-881c-96c85fb2a668",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019dcf28-914e-4789-a126-2b288b4f7a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82c2b34-2b61-47b3-9942-1ce1e2581008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44457796-7bc4-40c2-84e1-ebb5a4a8d6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c11f5dd-b4cb-4577-a760-c9add76e13bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b1577-623f-462c-ab68-79d3d5ed5a2f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd86377-ca98-4d05-b029-620e72a7c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee7c46f-c5df-4eba-8dd5-8ad38b76a5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b0968d-fae4-4390-8522-6298523827ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30413f1-41e8-44d2-ad5f-d8bdc118b5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2063cb0b-e13d-4c51-9b55-a1078b33edfb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d48fa-f768-4771-af98-0737a1041239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b58bf1-d814-44d1-a6a1-376dfb3910df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ad311b-d499-4e44-9421-cda6632cefc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ce1a62-4685-4271-b349-a61a06c52925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf990d6-e3f4-4059-94bd-2ceaa9711b19",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427cb5e3-b787-43ee-95be-2267d8458890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f593dba2-2184-404c-9719-01b16822032e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c361d733-ffef-426c-8b33-3789214665b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea02606-6071-4c34-8685-aaedee9bedf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7d1f20-bc21-4be9-a51c-56b1cbc2a54f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1f414b-f577-4659-9b17-e2cbf18631a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3cdce9-353d-45fa-b0a6-2b032fc9ee37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eba0636-4709-4872-bc85-af62ee25c23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f8cab0-5d30-471d-8a57-36ed665544ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adf566b-1e75-4219-ad89-5e3e71b4407f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b28b0e-fdcb-4ded-8eb5-b58275402224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b053677-417d-4f15-bf0a-8b7698a72d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deae2bea-98fc-40fd-b9ae-7a8e30ad2f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63a6abf-eea8-4b0d-8f0f-84a3d36a9e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c42f606-2167-4d0a-97f2-19517346c7e1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea4de92-c804-42a4-8331-74afa1af0fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195083ef-7311-4585-958c-9fd35deff25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cc9f3f-1776-4e0d-8315-0ffb4267875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f8dc1-59f8-483f-8746-9a7780f467ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de06a58e-07c5-4e28-9246-12be16c7cd10",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5b595d-ba89-4f02-a200-9a40aec0c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a1a043-7637-46ab-aa70-289578b67708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cee701f-e469-47c9-9b64-4634204b6e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ee4b2e-6503-4de7-9e77-b0147c62603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e25c52-d357-41c6-8c6a-67b5af7a5328",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cb3b19-801d-424c-a538-ae0ea3d69c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e732c9e-bda8-4203-b3b0-09782bc81f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0af836-6fde-4db6-b857-2f70eb2eccbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57d7564-ef37-4e65-9004-cee3a62be669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d595a0-0489-4867-a7b2-896b34f5c890",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40238314-3e06-4c85-9bd2-b39eb3882868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84adc65c-153d-4cbd-9731-6b1f2c0b7046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a37eb0a-a876-415d-b8e9-2023d69f5b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d2b417-2b9a-4b03-981c-78ad6a8add12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3542fe88-df71-4787-bfac-fb17a7a3ea85",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6525fc-8892-4ff9-878d-0e04f70d3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75da3038-eaad-484b-9f71-254d88498d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eece13-e316-40d1-80dc-fd4632d673d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e76b410-5624-4a8d-a077-152827e8b214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e537cb6a-c2e5-4b67-8955-07f9b14f90fb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3feffbb-9910-41af-bf5d-175a8b16279b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1518de9f-32ed-4957-9c22-b42de2dafc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847f3a11-a30c-4c57-82d4-b10a535f0168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3472e29a-a3bd-4007-8e15-d5368d29649e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1402319e-8018-4082-9b5f-923ebafe9fa2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd57fa4-0f8e-459e-baad-8abf07420d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aae70bb-393d-4c9c-98f0-eb58d8878d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc07ba0e-f3f4-4983-99b4-23f4126af227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d0ae16-37ab-4f3f-a98d-5f38652978b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bca4872-cf2b-4cd1-95b7-e473807730de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3049da04-b70c-488a-9736-94880d1f8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99aaa649-66f5-419a-b073-7beae5e9f643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6857cf9-c2c6-4137-aa1f-6595a1d99dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4d0db5-d38b-4a32-9657-e2eb36048c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37eebfa-1f5b-4f33-9dc3-5eb348e63e08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90213e2-a3d6-4a2c-8b68-c01db34a30bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c577e16-e3f2-4926-9616-3b4aa75d11a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e148f5-f0c2-4ea4-ac86-5b227b991e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df08398-5091-46ca-8257-ec334cfca674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cf438c-1a33-4404-8b89-01283a351ba8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88566e13-b7c6-4ba4-b978-fc58fc29d002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09e688a-79b3-477b-a774-ec4a948fac1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f69434-c748-4395-a02f-649d0426e228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45400e1-aced-4a41-908e-14138da0da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0c9ae4-c7c7-425b-97c8-db3244579646",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e531a175-3be5-4079-85bc-23cbe8e7d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8224ee-30b2-4aab-a55e-d0ce886ee1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db25697d-43b3-4a30-ab7d-62dcaab1f064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744c767c-e6be-4217-8bb2-60dc4fa1b9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f15084-92c5-45ec-a051-f2ce6c404aa5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8c7ea7-3ec2-4767-91f7-9648704cdeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7cd5ec-3aa7-4565-bec8-c7044c11632e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e59498b-4d33-4ed7-82a1-75afc6285237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3fee6f-7f62-456a-a7ca-c697369adb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f131b279-4a67-4675-9689-3132de257042",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c927a7-22f7-44c8-965d-76dfbdd3bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90a9d72-1366-4a60-9b44-56827c868b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1927887f-0463-4a35-b46e-994592fef007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a844d7-f5a7-4e8b-a776-91f251e977d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1cb753-38b7-48e5-8b6f-4986d285d9a0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f4717c-e4c9-4bff-92d5-53bbcade1fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed086c80-dcd6-4f01-925c-99081bc3f1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7089725e-9e3d-4298-ac05-92460eb67451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7258e71-f22d-4dbf-9202-6051edad86de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b77969-d49a-4aa5-b759-289247d64f01",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5dbcc9-f1e8-457f-be2a-df31f576db5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeb9a026-bc14-4b98-8173-ec88af983891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa7f5c-7097-41b4-956b-bbaa469f5920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d29c4c-db83-48c6-a979-6bf5a6be5bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f7f67f-5595-44c5-8366-1a4b59767f7f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce2f908-be1d-4b7c-bc56-f5d884041bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9561a216-cc0b-4fe9-83d2-4c3a1f110330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b4eb5-a52c-47c2-99c2-d0bdbbaaa312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa50cf9-a820-4a34-9e16-43d79e6cd066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4e0cbd-5cea-45f2-af7d-30a18167b839",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1c70c6-4a0a-4876-aee5-ec902832c4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87acf43-2abb-40c9-bb4d-91a40f7861d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04184673-06b9-4bb3-b71a-c1b7c706b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81acfca-f7eb-4cb1-bbac-17d918838d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280f9c3-3f20-4af0-a851-b24ce8859ea4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519f7519-372f-4fcc-b5d7-98c10bbaf6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "046d230d-84b9-4122-a11d-1665841179f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43276613-2fc1-400c-b7b9-0bfebae7e531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aade491a-f891-435f-886b-00d96e681c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb9d684-22e5-47c8-aa7c-4ebe2c7dac97",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b1ace4-719e-4f44-90c8-c4976338d30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449e38b0-9e58-4906-9c51-9504d0c49e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546237ab-4ccd-46c7-ba9b-e27340d78dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be8b11c-ea6e-4f1f-87e4-6c49e07ba8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d1aaa6-fb6e-452a-9f04-299d40d0107e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7eff9d-0e00-44d3-90cc-eb5547403223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22ed6a1-5885-4fb4-bfa3-40da8519bb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14613a2-42d8-4640-bf2a-19a7a0fb051d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4be3cf1-e3ab-4d8c-9a30-ae380fa0d73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532391a8-4713-4cf8-87c8-5c41e9449fc6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1070a292-ae05-46c4-af0a-143484540c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2964e9e3-fa92-4e32-915e-3b0c5ba83c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcff41e-6f94-4e0e-8912-54f1c5a15b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a4bf2f-9843-421c-a9ff-6c69461e2609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbb22cb-777f-4499-97e8-a3d55bd56ae6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8122d7f-728e-4230-8bce-aef6f8b1bb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49ac81d-cb90-4329-b241-e431ef9d2b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7478b3c9-e43b-4acc-a7b4-308d946ae429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59488fb-f900-4c9f-b1bc-909d563051c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49a64e-ecbe-45aa-8c4a-1cf60fb63c79",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd10e7d4-301c-4f72-9e4e-d786c5e96b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9496ab40-7d9f-457f-9d20-116583ca4700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8aecdc-f1d3-41a6-badf-ed031477596a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6b4ac4-52cf-4c42-a9f1-e46235b51a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86183673-1801-4a6d-8644-61f6e3cb36ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0353c677-0942-4c89-84c9-0d74f539c2ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15a6717-edc1-4b54-92a6-eae7e17aafe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e008b8c-28e7-4f87-a565-0d646ae7b5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c291263-6703-45a5-8663-afd5e0a9cd02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb10a350-e798-4d0d-811d-f1987449216a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041b0053-e093-4afd-9172-56cf3638c112"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79c1a320-8d5c-49d7-9c4c-45f8314d2ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a2450f2-d714-47bb-a919-e26557290234"
                    }
                  }
                ]
              },
              {
                "id": "da78a189-3f29-42aa-8e28-72aebe158373",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb04b5f9-2159-49f2-97ea-b5dc3a06a861",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26808c2f-373d-407c-ba60-9d577485e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d7417f7-d59d-4da8-8c67-41b041bbec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b4384e-3d18-4a86-9d6d-351147f5ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ab84402-bf5e-457d-9e71-b50917c31612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9f023ab-de21-4093-ad44-c4bc3eee72b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc553f77-7c2a-4047-839a-961d02eb09ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5a1573f-0550-411d-9e7f-b705cd81f1e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "413fd61a-f93e-4fe3-b72a-a68da839526f"
                    }
                  }
                ]
              },
              {
                "id": "916c988b-a414-467a-86ce-86efcb22284a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bfb6f336-3cb8-4aea-acad-7c67d5149c0f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea27c7e-fdb9-4529-9204-f55d31f0adca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "21e2496d-6bf6-492b-bbfa-32e0c61a7c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9103142b-1fac-40ac-a22a-5e1bcd742940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d9b46e-6035-40a4-83e1-6b19a50dae0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37dd8311-3b1a-44d3-97cb-c0ff99196830",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e58039a7-c876-4306-8912-2834559eee03",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f2da40e-6b22-4434-9438-ca4b6250995d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dd3ed0d-231a-4e4e-ac81-26a8c0469f20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1933a4fe-e976-4e01-983f-aa10b8f1b7a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3b6ffb8-7631-44e9-950e-34656907e2a5"
                    }
                  }
                ]
              },
              {
                "id": "6869e319-6e8e-48ef-9e78-6593dd068441",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b316271-e5d9-4ea6-9aa9-209479afd196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5db8f946-28ee-4870-884d-db542d982f19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77b9f982-0a0a-438a-862a-3b647dd2e275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "868ca2f2-4edb-4ced-9c39-cf3f4ab515c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab0ae4c2-48e3-4286-991f-5169f9b33857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "28a051c5-efb2-43e6-84b0-6a18600fb958"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81f13e6b-5e3d-4d20-9f42-220f895c97f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d095e1ad-0007-4f45-a1a6-89de8c367ab4"
            }
          }
        ]
      },
      {
        "id": "d3963861-c79d-40cc-85d2-bd4f1d6762fd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dcc5e0bc-d8f6-43b4-afe0-e030cd11762c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "195a31fd-4764-422f-9ff8-bb9a40a749aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5823d369-a805-4101-b57a-35c1e2adf755",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ec5388-7273-42df-95f2-0503afaa7a99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c99b023-b6f1-4ab4-bda9-46ad56195a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4707db-3e0c-444a-b153-e2d939a2c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe9bca7d-71a2-4ddd-a02f-14744c5d5bc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41fea40c-6410-4f03-8b24-e37d3cc4ce47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46e99dc6-7e13-4545-bad4-d140dbfce1bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63f240c7-dde7-45a0-ac4d-c38448aea8ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ece8a6f0-3f62-4646-97f7-709d3a7ee1ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acea2aaa-310c-490f-9f27-939f844b8719",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "29f8ee4f-483a-4886-bd05-2ab61660f921"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8035362c-a1f2-4509-b8c8-2bb9d95897d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2750cbb-221e-42f6-9f24-f1ac331c649b"
            }
          }
        ]
      },
      {
        "id": "c8535b8f-fa08-438d-be92-a829e7cedd2f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8b2521cd-e8ab-4d0a-bdb5-56ad15ec4b4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4108a58b-f92f-4787-9f10-0f9f5c616572",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb02f2d4-27f1-4ba8-8448-4b273f473228",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4edb33-6aa1-4df3-9ce5-d9d65dcc948f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97baf494-a45a-43d6-b3cd-6dfe389bd839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd41e0f-972a-499c-b847-3c208fab630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4302b29c-1709-450d-b953-44cab36ab559"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0668556c-de95-4b5d-a107-23d06bb74836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3a92063-8175-44e5-87f7-9f568418eae5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14655fb4-b3be-4035-94fb-34245e72a027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c07a631-22d3-42c9-94ef-33b0b20c4a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "007fc52d-9428-48ea-b493-3198174b8ae1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9aeb8733-3c90-447f-a7b7-5076224f2327"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7044411d-396f-48d3-85ce-993e7d186656",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0231d253-f048-4163-9b7d-71beccfc511a"
            }
          }
        ]
      },
      {
        "id": "41bdbd7a-1687-4049-b415-d0b7afa0024d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fa37840b-401e-4ce7-9794-c4f46370f83e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da959e67-8297-4b7c-810d-1be3a75893bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "295eaf31-8c82-468c-9dda-e72994b1cfe3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc929a9b-e253-43ad-bfeb-eca91c92025b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a2a77e-bee3-4ba4-b6ee-13eead73ce7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1da382d-ff47-4fe8-a7ca-6e1a27317e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f47aeb-d96c-4f46-bd86-5de9fde91809"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4da432d-33b0-4ead-b4a7-601471d79fad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f2f46e8-3495-4ccc-aeb6-f46493cdc340"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "058b1dcf-c4c9-4512-8be7-1bc1f871482f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fa8f690-27b8-4600-8abc-5c3481372989"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b43d0d4-5c3d-4ac0-99e0-3fb8884b0006",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57b40f47-2571-4730-9184-7372fda56d81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4644e9c0-9695-491c-be7e-e1fbba1c4ae1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ff8fa78-79f6-40de-9b5f-5e9cae3cc334"
            }
          }
        ]
      },
      {
        "id": "696e6082-aaaf-4b6d-8597-4e4d5ceda325",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "583456ab-e480-4be8-8c9e-ca8915a1d6b0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3d74bed-9d02-48cc-a9a2-875dbe74d9dd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6c105301-a8e9-4bd5-be3e-b902b3e61de1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "206f3f0f-ac32-4b1b-8e49-9d82f6471b04",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5963dd7-9560-41e3-9937-82245f5293b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 52.90526315789472,
      "responseMin": 21,
      "responseMax": 291,
      "responseSd": 25.572356381367374,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703291634792,
      "completed": 1703291658816
    },
    "executions": [
      {
        "id": "6fae72bd-dc19-4928-8f03-08804739b657",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "11768af3-ebc1-44a5-bc8e-f5b53ad12cf9",
          "httpRequestId": "91036c57-9835-4e73-9078-f9f741f56eaa"
        },
        "item": {
          "id": "6fae72bd-dc19-4928-8f03-08804739b657",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e13329f-2934-4f57-b9dd-7d237bd594ee",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 0
        }
      },
      {
        "id": "19f4f1e6-f670-485e-aeec-3576aca9c162",
        "cursor": {
          "ref": "5ce7f9d2-6cbb-49c7-9c28-bb23dc50db9f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "26589a37-e0c3-4a55-8d7b-76500a24d1bd"
        },
        "item": {
          "id": "19f4f1e6-f670-485e-aeec-3576aca9c162",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa169117-bb4b-45eb-bb88-71113cf0fb3f",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "016b48d6-87e2-4f31-911f-91207c06cdc3",
        "cursor": {
          "ref": "f15cddc5-9761-4081-9c62-d42c5dec1ac0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68ef21b2-8551-4a1f-bc10-e81c9d913779"
        },
        "item": {
          "id": "016b48d6-87e2-4f31-911f-91207c06cdc3",
          "name": "did_json"
        },
        "response": {
          "id": "b4ccac8c-106e-42db-a8a3-a1e7fb4d927b",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e19ce-767e-4947-b07b-3e244e7941e4",
        "cursor": {
          "ref": "7e1b1434-3155-4493-96a7-9e859723a879",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6589f515-ad05-447c-b22f-dfebfb094cf2"
        },
        "item": {
          "id": "c71e19ce-767e-4947-b07b-3e244e7941e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "cdb1ccb9-bc67-413a-8a4e-2ba640962ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e19ce-767e-4947-b07b-3e244e7941e4",
        "cursor": {
          "ref": "7e1b1434-3155-4493-96a7-9e859723a879",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6589f515-ad05-447c-b22f-dfebfb094cf2"
        },
        "item": {
          "id": "c71e19ce-767e-4947-b07b-3e244e7941e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "cdb1ccb9-bc67-413a-8a4e-2ba640962ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f05cf0e-a265-43d9-be49-1599c6feb63b",
        "cursor": {
          "ref": "da38cef7-17b7-4925-92b4-5ecf5de1ef8f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "686a4ebf-fd96-44d5-bab3-387296dc3466"
        },
        "item": {
          "id": "0f05cf0e-a265-43d9-be49-1599c6feb63b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a735ee49-cc7e-4dca-b5bf-65088b03291f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bd9e53-20d6-420e-8151-110114d31739",
        "cursor": {
          "ref": "c20de06f-939c-4c2b-8c83-177ffd177502",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8c944ba-87da-4443-9f6f-98e42edd2478"
        },
        "item": {
          "id": "59bd9e53-20d6-420e-8151-110114d31739",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b34a2444-5e79-40ab-91a0-7b32c231c5ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9242ba26-a144-462e-bbbc-4df3e129ed59",
        "cursor": {
          "ref": "ec5bd477-d5ff-4206-a237-dea17162bce7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42e0d80a-79f2-4e84-a6de-ac69f3f0d198"
        },
        "item": {
          "id": "9242ba26-a144-462e-bbbc-4df3e129ed59",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c3dc6f1f-eb62-488c-a7cb-c11b4711881b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c26c86-5729-438c-87cb-e7da48d21f8e",
        "cursor": {
          "ref": "58efcea9-9234-42ef-949e-63d31fbebcfd",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d9c0dc40-c570-46e0-a3f2-d01a9acd5ac0"
        },
        "item": {
          "id": "b8c26c86-5729-438c-87cb-e7da48d21f8e",
          "name": "identifiers"
        },
        "response": {
          "id": "50ff6b0e-3668-45cf-aa92-3511cc9572ac",
          "status": "OK",
          "code": 200,
          "responseTime": 238,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea347a1-e32e-4d18-9144-05e214f70151",
        "cursor": {
          "ref": "c0b32d7c-b8d0-4047-beaa-c7ca7ba693cb",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ecb0c01-3958-4c59-9aec-e354d2c65699"
        },
        "item": {
          "id": "eea347a1-e32e-4d18-9144-05e214f70151",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9fbae5b6-94f6-4653-a011-2be9c13bef77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f83c5-9e08-4ccc-b47a-a22ab9963939",
        "cursor": {
          "ref": "7257efe1-e585-40e4-b838-c5bef24242b9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8389f180-b6c6-4e64-99e4-0a39ea2fdee0"
        },
        "item": {
          "id": "022f83c5-9e08-4ccc-b47a-a22ab9963939",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f8e0fc76-8736-4da2-b421-0eba05bebdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab0e54b-c52d-4ffe-9fa3-90068f3c75bf",
        "cursor": {
          "ref": "7e9eb9e8-ef4d-4e84-9abd-cb159b675170",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "33b7e1e1-00fd-4e4b-86f7-0bbeb50f112a"
        },
        "item": {
          "id": "aab0e54b-c52d-4ffe-9fa3-90068f3c75bf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0c5b27ba-0260-4331-b239-6ce3653b4603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105969a4-c439-4e8a-b9c4-11c615b62f78",
        "cursor": {
          "ref": "773eb736-75e0-4b18-a9f8-872d9c245d31",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa16bc12-a46c-47da-9e9f-0fadc66405ff"
        },
        "item": {
          "id": "105969a4-c439-4e8a-b9c4-11c615b62f78",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e7cef33a-72ea-483a-a908-112db147e4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4c35f2-bf88-4bab-8258-5cb18cac6738",
        "cursor": {
          "ref": "07eb093d-85e9-4bd9-8479-59a1ac73afc9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "45d27aca-0862-425e-8c6d-1e1950e4b128"
        },
        "item": {
          "id": "5f4c35f2-bf88-4bab-8258-5cb18cac6738",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "85ede3df-ac15-4957-a77e-fbad4b42a0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55657324-5f94-4473-a841-8b37ddbf4599",
        "cursor": {
          "ref": "843e97c0-454e-4f1e-83b0-83434b3a3dac",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ef820c52-bb01-4d56-9e1d-539b8c994e78"
        },
        "item": {
          "id": "55657324-5f94-4473-a841-8b37ddbf4599",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ddebb49-1dcb-4d29-9bf0-8326e64b629f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7294dc14-6513-42c5-858d-e3a85ce632a1",
        "cursor": {
          "ref": "ac19dc9f-b1f9-4eb3-9e4f-ed6cfe81c449",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e1f0cf43-ac5b-4d7e-9a1a-b299edb4d127"
        },
        "item": {
          "id": "7294dc14-6513-42c5-858d-e3a85ce632a1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0a963236-8b41-4bd6-bc39-f85221dc5f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdadcf5-4367-4783-97af-f1b9aa88d79f",
        "cursor": {
          "ref": "d51dc0a6-aaa7-436c-9ca0-bf154570efe4",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "738b137e-06c8-4a30-be23-d08b05fc4979"
        },
        "item": {
          "id": "6fdadcf5-4367-4783-97af-f1b9aa88d79f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fe0ccc35-8ecb-467f-b1bb-a8423a2ced12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6771ae-44ed-44e3-b9c0-b72f12420aef",
        "cursor": {
          "ref": "ff8bd5ce-c3af-42f9-89c5-7b5de775a168",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7d4d10a2-34a1-4747-b497-ccdbce135510"
        },
        "item": {
          "id": "6b6771ae-44ed-44e3-b9c0-b72f12420aef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f590cba0-44fc-478b-b089-09165d047b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336715af-5b18-4433-8f0d-c292c5d20145",
        "cursor": {
          "ref": "92fd11f6-a883-460f-8cd0-e996ec237fa4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cefa2f56-81c0-455f-ac13-14b8fd4e27f3"
        },
        "item": {
          "id": "336715af-5b18-4433-8f0d-c292c5d20145",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b4ee3d26-8c7b-4ff7-93e8-3286236fdd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9b1f03-aca0-4175-945a-c65aa1504be2",
        "cursor": {
          "ref": "e6e37ea2-def6-41e4-9f46-da33bf8a6aba",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d3d0a13-2025-4ebc-a5e0-be4ddbb71128"
        },
        "item": {
          "id": "8f9b1f03-aca0-4175-945a-c65aa1504be2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a215b68-1f14-4501-b485-ff88446aa2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd050c7-3124-45ee-bde6-b7bc32f28e42",
        "cursor": {
          "ref": "b24e7e03-c10e-41b8-aabc-07c5fd8e49b3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f1cc8da8-5915-4eb0-97f5-91223bd05a73"
        },
        "item": {
          "id": "ecd050c7-3124-45ee-bde6-b7bc32f28e42",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a537664b-f854-40db-9174-de066c92812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eccfac-6a47-4256-b95a-4d6bdc3ef553",
        "cursor": {
          "ref": "3bf3fedc-1afa-44b3-ba9c-526e9b0ee1f3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b6b9f8bb-c4f0-44ad-a4dd-46fdd187e8a0"
        },
        "item": {
          "id": "70eccfac-6a47-4256-b95a-4d6bdc3ef553",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "35fed2e3-9816-4cea-a022-8ef5f1f7bd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f28f0-aceb-4608-9398-d48420de4a46",
        "cursor": {
          "ref": "fb0cba96-b6b5-4cc8-b06b-2ac2a4df9224",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d77a01e3-4bee-414f-940e-a3f686cc6630"
        },
        "item": {
          "id": "0f3f28f0-aceb-4608-9398-d48420de4a46",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07867013-a73a-4d3c-ae92-01c05c366c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bce82a3-0028-41a6-9608-9ea0ca118f57",
        "cursor": {
          "ref": "390a18b8-1645-46d4-92f1-36172b085f8b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e4d77fcb-d0de-4326-86a4-b9447c154856"
        },
        "item": {
          "id": "8bce82a3-0028-41a6-9608-9ea0ca118f57",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "af00d2a7-d503-429c-9112-1b31db0109da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72acae87-0e56-48a3-a629-23056ddbd217",
        "cursor": {
          "ref": "c7b64acb-8074-44c0-b18f-6e95acc72497",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "82afcc58-608f-4703-a4a7-4451d48250e7"
        },
        "item": {
          "id": "72acae87-0e56-48a3-a629-23056ddbd217",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "40153998-9412-407b-aac2-0855bd5efee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cde4a23-64c7-4cf6-bb3e-3feccd4c6833",
        "cursor": {
          "ref": "40516cce-8ed8-4a7c-96b8-942f82b40afa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ea744e2a-e13d-42ed-b348-227bdbfbe5b3"
        },
        "item": {
          "id": "0cde4a23-64c7-4cf6-bb3e-3feccd4c6833",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "490b97f4-d56f-4143-b9bb-a34b3ccbca45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2fc84e-77f6-455a-9a73-b5e452e8cb90",
        "cursor": {
          "ref": "3fecd39c-3bbd-4db5-8a20-b77b8fc4184f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "09cdf4e5-73e3-4288-a61c-8862b1135c0a"
        },
        "item": {
          "id": "6c2fc84e-77f6-455a-9a73-b5e452e8cb90",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21cffd64-1cc9-4ada-9317-d556ada72be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa7fe3d-37ec-4c4b-9df2-d063ea683ebc",
        "cursor": {
          "ref": "a24036ec-3db1-4201-9dde-c9485234a2fe",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9726e1ed-ed07-4dad-a5ee-79101bf25b36"
        },
        "item": {
          "id": "afa7fe3d-37ec-4c4b-9df2-d063ea683ebc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "411ea3e9-632a-4a06-a219-e0d878480fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec60377-2818-44c4-a4b4-8aef1738f09a",
        "cursor": {
          "ref": "9cba387e-ffc9-4026-889d-448ae5e5ea57",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "933fcec8-c94b-4da0-9d3f-9a8ab4353fec"
        },
        "item": {
          "id": "4ec60377-2818-44c4-a4b4-8aef1738f09a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fcb59792-03de-473b-a071-ade725d9e334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1911b384-f7b6-4cc2-bacc-5aedf658b641",
        "cursor": {
          "ref": "817d9140-ff3d-4983-ae99-30fa60f03473",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f508f949-42aa-4edb-b344-a4bbb6abdb4b"
        },
        "item": {
          "id": "1911b384-f7b6-4cc2-bacc-5aedf658b641",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0b4e4ac6-ba36-4fcf-9427-8475e6bc3770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793f5f2-0d34-471c-aefd-3a8f79dc9326",
        "cursor": {
          "ref": "f8206957-43c6-44a6-91f7-2541709d94b3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2385eb1-1629-482d-996a-0128501bc670"
        },
        "item": {
          "id": "e793f5f2-0d34-471c-aefd-3a8f79dc9326",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "95ae3b9b-6667-4172-ad9d-72b1c0bea627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8cbc3d-a657-47a9-b97a-3c86bf33d30a",
        "cursor": {
          "ref": "3ce79883-4382-41d7-8074-3b9196ed49e8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8d05a08-6330-4d28-b809-e0b38ad89cc7"
        },
        "item": {
          "id": "0e8cbc3d-a657-47a9-b97a-3c86bf33d30a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "350b47d5-b154-4106-86cf-17453e96a277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16d9066-ff8d-4ac3-aeb8-acff837b3347",
        "cursor": {
          "ref": "2f3296fb-9f95-48ac-aa84-53938bae3129",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6aa13bfd-1988-46d6-bf13-34907456d3fe"
        },
        "item": {
          "id": "d16d9066-ff8d-4ac3-aeb8-acff837b3347",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58e67e2e-ac4c-4433-855f-141939367881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71150c49-f91f-489f-85e9-6ffde6001b51",
        "cursor": {
          "ref": "e10463db-4444-4838-886f-a4eb27728ba5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "112b1d9c-c43e-4d99-886a-a5ec53678318"
        },
        "item": {
          "id": "71150c49-f91f-489f-85e9-6ffde6001b51",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5df806a9-87b5-43ce-a341-6b7ed929d00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ab8e0f-a75f-4be7-adc7-dbf7d1b906fa",
        "cursor": {
          "ref": "6f09eba9-4c09-4af3-a09a-69e9302b8d0b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27323141-5331-4cde-bbac-e298c58d0c7d"
        },
        "item": {
          "id": "58ab8e0f-a75f-4be7-adc7-dbf7d1b906fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4147eed-5a5d-4cc0-9307-2fee77f5dacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d810fd63-de5e-4705-96f7-4a3106c91666",
        "cursor": {
          "ref": "76cee5f3-c096-42c2-b76c-5b044791506c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "08fdc6dc-e14a-4c5e-b680-d268ea15e0a1"
        },
        "item": {
          "id": "d810fd63-de5e-4705-96f7-4a3106c91666",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "13fe255d-ac68-4823-ab71-3888833f935c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118341d4-b64c-402e-b3a7-49db6ebf5d53",
        "cursor": {
          "ref": "a37698db-9e2c-4c56-ba71-e94c13dc8fe0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "53b4740d-4bc8-475c-9981-f5853293767a"
        },
        "item": {
          "id": "118341d4-b64c-402e-b3a7-49db6ebf5d53",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e97f8198-821a-4d8d-b9b8-1bd8481ccab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d9306b-90bb-486f-980d-4c891d8c4165",
        "cursor": {
          "ref": "98a1768d-2e78-40f2-9b28-416509bcacb1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "41438a48-50b7-401d-a09c-8badf89d456c"
        },
        "item": {
          "id": "e9d9306b-90bb-486f-980d-4c891d8c4165",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0019c28a-57d5-47f2-846c-78f228bc4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed31eb-bd11-43e3-86ce-7a17de515190",
        "cursor": {
          "ref": "93a9320e-f913-4862-a6ff-8f0d32c58713",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "064301d6-184b-4713-9988-6d07c2fc5b64"
        },
        "item": {
          "id": "4fed31eb-bd11-43e3-86ce-7a17de515190",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b1cb9aa7-8563-4c19-bbd6-ae67cd08b34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e18d884-ff45-4312-9a9b-309937724179",
        "cursor": {
          "ref": "4b392af4-d104-4c85-b84f-490fbf8cc534",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f7d6cce5-4bdf-4c39-a243-b66119e444b5"
        },
        "item": {
          "id": "3e18d884-ff45-4312-9a9b-309937724179",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5ce1ea06-647f-426c-86f0-a5a77c9e92c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea5323d-1e00-4054-889c-61b0c8c0938e",
        "cursor": {
          "ref": "34f85373-89f1-4c3d-a108-dbbed13c0bee",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7eabc0c3-5d6a-443e-a1f8-4ccb655b0475"
        },
        "item": {
          "id": "6ea5323d-1e00-4054-889c-61b0c8c0938e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4ccc5dc6-810d-4ab3-a702-ffc1c3e8b760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282eda49-d246-488e-abaa-1612b77ea7cf",
        "cursor": {
          "ref": "990144ae-94a3-4486-af88-1f09f01c24ac",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5ae1cdc4-e572-4a1a-b548-798e348375f2"
        },
        "item": {
          "id": "282eda49-d246-488e-abaa-1612b77ea7cf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "70a5abee-ef52-406c-9af0-235198ff036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53e8fe0-1240-4687-b9e4-2a49da451f39",
        "cursor": {
          "ref": "fbe3f03b-f4ce-4972-9b3a-f8dc65b3cfb6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "74d244a2-325d-4bde-8c91-61fa1d29a0e0"
        },
        "item": {
          "id": "e53e8fe0-1240-4687-b9e4-2a49da451f39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fa452a48-69eb-4c9e-a5f4-491b084c0946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c61c7-a6f3-4c24-be58-81dde2f9969f",
        "cursor": {
          "ref": "edcbd47c-631a-4190-a062-f1f5027b5238",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dec0d16f-6925-4049-a1f9-27307be3e303"
        },
        "item": {
          "id": "fd7c61c7-a6f3-4c24-be58-81dde2f9969f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "178832c2-19cb-4dc3-9e9a-0a6de20c953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd7d9e2-f64e-4d36-91de-f7b2144c6cf5",
        "cursor": {
          "ref": "76dcdbc1-a13f-4431-a95a-2540ae5bb488",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c057d91-eee1-454d-b0a2-1914d701c725"
        },
        "item": {
          "id": "5bd7d9e2-f64e-4d36-91de-f7b2144c6cf5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aa152fee-1065-4e78-8c61-6d94883fe5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c23e25-6200-4651-9cb6-0d67eaad8f80",
        "cursor": {
          "ref": "0fae0728-d3d7-4446-877e-b814d2838b5e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8667d338-36e3-46cf-bcd9-aa8f73e74f13"
        },
        "item": {
          "id": "d1c23e25-6200-4651-9cb6-0d67eaad8f80",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9c9e74ac-542f-47cd-8a94-192650f11f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a390c-07bf-4a9c-b76b-6b17b4b17f67",
        "cursor": {
          "ref": "0ebe6a56-9123-4dc4-92c6-479ce1af67ba",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2ccadab0-e95e-427a-ba40-2db96cd89de1"
        },
        "item": {
          "id": "f81a390c-07bf-4a9c-b76b-6b17b4b17f67",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3643fa89-9a89-4184-ae67-431ca65c411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a2876a-1710-4707-b956-3434b9986620",
        "cursor": {
          "ref": "94317c05-72a6-4054-9859-8305ed2b5c7b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "145436eb-2072-46e7-9769-9baa65c1a86e"
        },
        "item": {
          "id": "a4a2876a-1710-4707-b956-3434b9986620",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "08a9cc18-c341-4f4a-afa8-61a4e510fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abcd46c-594f-496d-9ba8-d80d1c18009b",
        "cursor": {
          "ref": "5f086203-6033-4b66-aafb-a32f2f6d1149",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "71c0323b-0984-4aa4-a994-d2add090c2e8"
        },
        "item": {
          "id": "0abcd46c-594f-496d-9ba8-d80d1c18009b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "20176b6c-d6c1-4800-abcd-1ef88161e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058e946a-5f4a-419b-9ae6-3ee7ece6a5dd",
        "cursor": {
          "ref": "50176efd-1341-47ba-b3cd-8c49f61ab54f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ff072eed-bf46-4e7b-a10b-8f1fc9cf28ba"
        },
        "item": {
          "id": "058e946a-5f4a-419b-9ae6-3ee7ece6a5dd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9935bd2b-f460-4fd7-a485-eaca69be811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c563e2-4ca9-46fc-a06e-3996ae0e3775",
        "cursor": {
          "ref": "d44723b0-913b-4012-ad3d-30faaf45054b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7c46efae-4802-4e24-a6dc-6cc38bc23d50"
        },
        "item": {
          "id": "a8c563e2-4ca9-46fc-a06e-3996ae0e3775",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4984e969-ad4e-44c0-840b-5a7ef7c5ba41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a71bb8c-7bb8-44ad-9552-8b3d385a6b94",
        "cursor": {
          "ref": "a64c68bc-c9ca-4de9-bdd5-86857aff59c0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "114d5c42-cc3a-44d1-9c38-5257745052e7"
        },
        "item": {
          "id": "3a71bb8c-7bb8-44ad-9552-8b3d385a6b94",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "622e4086-c1a9-4bbb-8f3b-2605c9699a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2af563c-a253-4478-bf5c-b97b1b1e2a32",
        "cursor": {
          "ref": "98c9ef1b-9fc1-40d9-a05b-aa84afb5ff69",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca8fc6db-0fe8-49ef-91ad-b8afb74e9641"
        },
        "item": {
          "id": "a2af563c-a253-4478-bf5c-b97b1b1e2a32",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "379ecb2f-e667-4406-a963-fc965796464f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e6ad4-3f9f-4c1b-9783-03ac71c6f194",
        "cursor": {
          "ref": "282769b7-2a9d-4f4d-92ff-3b4aea82809c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "80ecfeb5-ca41-4469-ae31-9cad2bb540a8"
        },
        "item": {
          "id": "6a0e6ad4-3f9f-4c1b-9783-03ac71c6f194",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42938173-df9e-44ea-9267-fb1ac386e078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a110031-0731-42d3-afd1-133cda0ef4b7",
        "cursor": {
          "ref": "5b2b047c-23cf-4f03-b67f-718ab7c6e480",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7b51cae-21d7-4f4e-8d6b-957f5e51c7c1"
        },
        "item": {
          "id": "3a110031-0731-42d3-afd1-133cda0ef4b7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "506f77e7-99a1-48d1-acd7-5ba9844133e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa01926-9449-4d6b-a12b-2ddae89c9073",
        "cursor": {
          "ref": "0dfa8e29-f594-4145-83b9-26b4992b7661",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e9f25a16-38de-44ab-b970-bf9789b61f94"
        },
        "item": {
          "id": "2fa01926-9449-4d6b-a12b-2ddae89c9073",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d0b8972d-b888-466e-bdb2-f217195e1946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1cd7cb-498a-4464-a6eb-7b9b35133c01",
        "cursor": {
          "ref": "c5184326-350a-4eda-a1f0-36c9764623ab",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1aea382f-14dc-4923-8c4c-0df903deeb65"
        },
        "item": {
          "id": "6b1cd7cb-498a-4464-a6eb-7b9b35133c01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af2f321e-5ddf-4aa7-af4f-63290b254b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82711c61-0eca-46ef-8994-034ed70075d8",
        "cursor": {
          "ref": "17c79409-56c6-4c49-aee5-d44b5be0cb5c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2486ab41-5d9b-4021-8860-ee30f76bc969"
        },
        "item": {
          "id": "82711c61-0eca-46ef-8994-034ed70075d8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "079f7716-6148-4116-be9f-d8e093e44668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2d58f-b30a-46a2-bcf3-65ccaf4e851a",
        "cursor": {
          "ref": "9dbcb12e-c5c1-4c84-8c2b-e8007c7f493a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "317d3d68-dc5a-46a9-986c-8a57a808a50f"
        },
        "item": {
          "id": "f5c2d58f-b30a-46a2-bcf3-65ccaf4e851a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9fe9d039-ac25-4553-af9a-97ce702e992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc5dd8d-8a8b-4fff-8fde-7e14cd8fb702",
        "cursor": {
          "ref": "0cf9ef77-101a-4ece-8a14-f95e814d1ce8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d8dd891-1692-4550-9585-18762b991840"
        },
        "item": {
          "id": "dcc5dd8d-8a8b-4fff-8fde-7e14cd8fb702",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7e4c5b0b-15b8-4d87-ad86-5b630a7bda46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d082155-bb13-4169-b9f0-2fb891204758",
        "cursor": {
          "ref": "b0d64564-8c64-40bc-8eeb-871164b2c5ee",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "31701ad7-1641-4125-9297-c38550e20a76"
        },
        "item": {
          "id": "4d082155-bb13-4169-b9f0-2fb891204758",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d0366f9-3138-4dc8-bbfc-4ddfa33def91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65fe84a-86c6-4e94-ae6f-c19864ed5e3d",
        "cursor": {
          "ref": "53df8c32-dc03-4acb-b470-bdf3d0b577b5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40a010b2-60a9-4f79-8ba4-b523ab3bcf18"
        },
        "item": {
          "id": "f65fe84a-86c6-4e94-ae6f-c19864ed5e3d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "055e8c25-820a-4915-8265-519ef655c40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c25d49-f6c4-4c1f-a9e3-d4dbd065e520",
        "cursor": {
          "ref": "b0bb0507-6307-4ebb-b402-9cc42b82c6c7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3f6d80c2-cb7a-4c0d-9962-ff230773934b"
        },
        "item": {
          "id": "29c25d49-f6c4-4c1f-a9e3-d4dbd065e520",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ba07bd7-4e99-4cbd-89cb-af7b8f509075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8ea169-e71a-4b66-ab72-8e8ca82d81fb",
        "cursor": {
          "ref": "60dd0c59-7d6c-4a91-9091-24ffcf2ba97c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bcae61b6-8c1e-406e-bd30-7e9c1be800f0"
        },
        "item": {
          "id": "9f8ea169-e71a-4b66-ab72-8e8ca82d81fb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "700ed15f-590e-4779-95a1-d7e5b64d94ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9381a49c-ee68-457d-8c52-258acbd7ef4b",
        "cursor": {
          "ref": "31a22be5-0d9e-409e-8141-57d567a5bbc3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "855362eb-f6ea-42bb-84cf-39701424dfa1"
        },
        "item": {
          "id": "9381a49c-ee68-457d-8c52-258acbd7ef4b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8b77a871-3053-4171-8301-123d327fa374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66958082-3e76-4e0c-bc1b-ad5223f89a4c",
        "cursor": {
          "ref": "1a2342b7-c3d3-4bff-aca6-2bce6d097116",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9fb89b51-dfb6-46a6-bbc4-a111ff7ca1e8"
        },
        "item": {
          "id": "66958082-3e76-4e0c-bc1b-ad5223f89a4c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4df753c8-4879-416f-81d2-a1946801b4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f391ac-df40-4cc4-a417-fbb00aeaa121",
        "cursor": {
          "ref": "d586bbbe-d934-4ac6-82f5-8889fec299e4",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "237a8fb8-74fc-43b1-bf70-90690a1de20d"
        },
        "item": {
          "id": "b2f391ac-df40-4cc4-a417-fbb00aeaa121",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d487b97e-c642-4e3d-af79-286b5a5e7553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d740dbd-518d-4be1-8479-c4ad75f30f21",
        "cursor": {
          "ref": "f9d330dc-220c-4f6a-929e-a48c2a1c4879",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d98001b1-db92-49be-bb00-83f83441fc97"
        },
        "item": {
          "id": "9d740dbd-518d-4be1-8479-c4ad75f30f21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2ad1debe-14fe-464b-b71c-06fd84306c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c4e84c-f8ba-4084-b4f0-474952df51f9",
        "cursor": {
          "ref": "80158a03-0b86-4923-8adc-d25866d342b4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a4a6df0a-3fc5-4abc-ba31-89a78bf01a85"
        },
        "item": {
          "id": "48c4e84c-f8ba-4084-b4f0-474952df51f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "033b075c-1362-4e69-bc03-3db01d6205be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43ce398-5f63-40a0-978a-04094726de8a",
        "cursor": {
          "ref": "f673b934-ffdf-4157-9b22-f6dc51781bd3",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06d8490e-775e-4e97-a14c-1e1b2412e77e"
        },
        "item": {
          "id": "c43ce398-5f63-40a0-978a-04094726de8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "512bf1c7-5a90-48d9-843b-9eee21c06e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25411ed6-7a18-4c3e-b70a-5f2ee5ec0899",
        "cursor": {
          "ref": "bb2d3309-e6fc-4e27-992e-354a6b6b0b7e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5225c8b-a369-4b2f-95e8-83748b5b5c3a"
        },
        "item": {
          "id": "25411ed6-7a18-4c3e-b70a-5f2ee5ec0899",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d38cbf21-943a-4e92-bf28-4355551fa853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd865bc8-c4f9-4504-9ec3-c4fcc31f20aa",
        "cursor": {
          "ref": "85ac085d-06a6-4fba-992b-729bc1ed9f16",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff708109-4803-4554-ba1a-63fd4fa973e8"
        },
        "item": {
          "id": "cd865bc8-c4f9-4504-9ec3-c4fcc31f20aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "89a54821-7e17-41ff-85fa-958e9d2055a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b447c01f-e2a5-408a-acbe-d2378d6f614b",
        "cursor": {
          "ref": "17a7304a-9450-4109-bfa0-d3fb720df12f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7877fcfc-d2ee-4d82-9047-9244338194c0"
        },
        "item": {
          "id": "b447c01f-e2a5-408a-acbe-d2378d6f614b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "57ea031a-7f6a-4b89-8e80-91cd6623be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11e7949-4808-48f0-8e39-9ed300b5467a",
        "cursor": {
          "ref": "38fdb688-fdc9-4220-8ee2-bc3b6d3db236",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "901bdf31-cfc4-4424-a197-cd7d59f0938b"
        },
        "item": {
          "id": "d11e7949-4808-48f0-8e39-9ed300b5467a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8a4eac1e-e771-4492-8409-1a7663f02c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7980f42-744f-4829-a7eb-e005b8ab2038",
        "cursor": {
          "ref": "f0990057-27ae-44f6-950d-63ab636b31c9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bc50585c-0050-4688-93fb-c3f11ceb4fbd"
        },
        "item": {
          "id": "c7980f42-744f-4829-a7eb-e005b8ab2038",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ed73302-4d5e-4cef-bd43-35d936bfeafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088d7a5-f476-4198-862e-a0733502dc99",
        "cursor": {
          "ref": "6f63d651-abbe-42f6-8363-6894ce99f7b7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3f56804-d16d-434c-8157-a8db89b8d10d"
        },
        "item": {
          "id": "a088d7a5-f476-4198-862e-a0733502dc99",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c0eb9e84-9e00-4273-a85b-7b0562eadbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55583954-269b-4710-9996-5c5a026e1892",
        "cursor": {
          "ref": "23b62390-f9bd-4572-b45d-82399fdec9ac",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "26e96fa3-4cef-4ba5-8adf-c3b70b62ea4f"
        },
        "item": {
          "id": "55583954-269b-4710-9996-5c5a026e1892",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dcc69816-e12b-4b8a-bd3d-11c9feac8f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d779e1-1c45-4c8f-a0cf-1f44b76254a0",
        "cursor": {
          "ref": "974853f6-f476-4f9c-967c-20f0533d08b8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51149a66-10a7-423e-a421-d34995345f5f"
        },
        "item": {
          "id": "c0d779e1-1c45-4c8f-a0cf-1f44b76254a0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fbff90e1-57c8-4fae-a731-fa16bc2a9988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf073f-0e84-4aca-9126-d687e5bc1d15",
        "cursor": {
          "ref": "fa300e64-deef-4b5d-89ba-226c384659e4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "78afaedc-414c-4eb0-a630-89fb791c6fc0"
        },
        "item": {
          "id": "6fdf073f-0e84-4aca-9126-d687e5bc1d15",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6ef674ed-17d1-4b70-b0d6-d042e78479a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f57fbc-896a-49b6-bdc1-f3bf8851bd25",
        "cursor": {
          "ref": "8b7879ce-b113-4b66-bfa7-406bff5b9079",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e439c8b4-67d2-4df1-91df-e96ca17ad353"
        },
        "item": {
          "id": "18f57fbc-896a-49b6-bdc1-f3bf8851bd25",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "514ee459-f810-4262-adb4-811913ebc642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcde8625-da13-440e-9f17-8ce73a9cab07",
        "cursor": {
          "ref": "e03504f7-5977-46fc-be76-dbf5a81cbab3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "62d5e838-0c70-4bfd-8d7c-8b6604a0bae2"
        },
        "item": {
          "id": "bcde8625-da13-440e-9f17-8ce73a9cab07",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "812c820a-ba0e-4fa8-ad59-d5782b8c9e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1515fb-b67f-4b9e-8296-494464148f64",
        "cursor": {
          "ref": "c1cac9d2-9eb6-46c2-9458-9ed5881366b5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "62e85b93-03b1-4d11-8393-93e8950b1487"
        },
        "item": {
          "id": "ae1515fb-b67f-4b9e-8296-494464148f64",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1d8d9e34-55af-4e72-a8a3-eb13b53d95d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3819ba4-814d-46f6-8134-deea10d3c822",
        "cursor": {
          "ref": "4cc854a6-fda4-4c52-8545-e43503f1c7d7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d18dcb4d-c9e3-44ce-a2dc-ff9ebe4ae7ed"
        },
        "item": {
          "id": "a3819ba4-814d-46f6-8134-deea10d3c822",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7956dc76-c256-4536-907e-4dc78d81a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b102a06a-8335-487e-aaa4-e058bf947af7",
        "cursor": {
          "ref": "a2ed6718-cf10-4090-ad83-177bebd44ee1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3caf7fa5-07fc-4d68-8745-1fe8205a90cf"
        },
        "item": {
          "id": "b102a06a-8335-487e-aaa4-e058bf947af7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6bd0538b-52a7-4b47-a703-4087eb35968b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227913bd-1a67-4b1e-ab2a-a59176544925",
        "cursor": {
          "ref": "8a514efc-e129-47c8-a9b3-f09ef6e07a43",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "37545f16-22a1-4cef-9331-f41339799962"
        },
        "item": {
          "id": "227913bd-1a67-4b1e-ab2a-a59176544925",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "319eeeb0-6c60-40ed-8ec6-6d61e585c0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c1146-7ff2-4d9e-8501-b106c0a34a12",
        "cursor": {
          "ref": "690682d4-d1ff-4bfc-8a48-30792a83ba10",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "be4e6d55-d9f3-463d-bf73-472ad1c31fda"
        },
        "item": {
          "id": "861c1146-7ff2-4d9e-8501-b106c0a34a12",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d8115771-0a25-4467-8ea0-58b4eadf3d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ded4f5-229a-4835-82c9-15c13060ba17",
        "cursor": {
          "ref": "2dff22ad-8014-4a2c-86ce-07d32e1247f9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f1d6d721-9255-4ad1-b5a5-5f1e38cb4885"
        },
        "item": {
          "id": "73ded4f5-229a-4835-82c9-15c13060ba17",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eef9f901-2a49-4c31-a575-1aeee84b88e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c43a5-286e-41a2-a9a3-eef67c3245ef",
        "cursor": {
          "ref": "4133c53d-a4e2-43d4-a87b-f74d33f10881",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b7914dfe-3476-4840-ba59-7937f7014027"
        },
        "item": {
          "id": "d43c43a5-286e-41a2-a9a3-eef67c3245ef",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b733c68f-ba22-4b47-8ea4-3630bc467cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7341d87-1c9f-4ccf-8ecf-ad141333075c",
        "cursor": {
          "ref": "cabbe20f-bf62-440b-96e3-3ea2fe120133",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "323b663e-ad74-46c4-8d0f-58082011afd1"
        },
        "item": {
          "id": "a7341d87-1c9f-4ccf-8ecf-ad141333075c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "894a0184-9f02-473e-ba52-ec726cf2fa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755998e3-2c44-4215-9484-6c086329f35d",
        "cursor": {
          "ref": "3c167372-1d6f-431b-8115-e65ab835a8a5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "930ae036-2b47-4ae9-96fd-70406d882d5a"
        },
        "item": {
          "id": "755998e3-2c44-4215-9484-6c086329f35d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f7ab111-e159-41f3-a58c-45803ad4f7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a4cc06-9834-4447-9287-1180b2ae9efd",
        "cursor": {
          "ref": "4a4adff3-6994-4594-8414-08bcdc248f2a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d52ac29d-5f2a-4fbb-a45b-cb83b8c6ffde"
        },
        "item": {
          "id": "f5a4cc06-9834-4447-9287-1180b2ae9efd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1f01c872-99cf-44f3-839c-5e62f2d85c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533eb6de-3116-4162-9f0b-c4a9a3efc77d",
        "cursor": {
          "ref": "2a8c246c-80bc-43a5-bc94-2c32bcf66785",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "902cae15-8cb4-476f-b626-c7cd6dd9cdfd"
        },
        "item": {
          "id": "533eb6de-3116-4162-9f0b-c4a9a3efc77d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8386392a-7e3e-4d7f-980e-5b211aaaedaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cabbdc-0e0c-4679-9fa6-77b1e73e1a14",
        "cursor": {
          "ref": "3f723c26-99fb-4e8c-9350-d67292091d36",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "316d57d2-08b8-4283-b3c5-5f38a8c4546b"
        },
        "item": {
          "id": "19cabbdc-0e0c-4679-9fa6-77b1e73e1a14",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e275f5d1-f40f-45b8-b8a7-85f8d47fa2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad5b32-513d-48ff-bc4f-78f05f6a284e",
        "cursor": {
          "ref": "6c003186-f8d2-4e8c-aa7d-377217e4a1f4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2251ffa8-6d91-4c85-9467-aa01c8dd2c4a"
        },
        "item": {
          "id": "17ad5b32-513d-48ff-bc4f-78f05f6a284e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1d371d12-8cde-4b7f-a591-20aab7730553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb76547-c28b-4512-8045-0a2355a33a40",
        "cursor": {
          "ref": "9adfec14-e740-43ed-9a70-7d308107bd73",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca61029f-4bfc-463c-99e4-741a24d36801"
        },
        "item": {
          "id": "eeb76547-c28b-4512-8045-0a2355a33a40",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "838fbca8-517e-4635-8155-a32e85f1a417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1355408d-f345-446c-b811-c72dfa8b7b00",
        "cursor": {
          "ref": "09eb178e-9184-4ada-9eb6-156ffd3e21a0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b733a92e-1ec4-4cd5-811b-7bf53875e24a"
        },
        "item": {
          "id": "1355408d-f345-446c-b811-c72dfa8b7b00",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4c0455ff-4d17-4e4a-ba98-45c2c6e1e9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0fe916-e7df-4953-bf5d-bbb99a7b55bb",
        "cursor": {
          "ref": "6336d14d-bfde-4da9-9b1e-803a3589d550",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "220d86a7-6518-4500-a177-7372ce1fb8a3"
        },
        "item": {
          "id": "0f0fe916-e7df-4953-bf5d-bbb99a7b55bb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8153af76-0425-47cb-a1bd-8ef25af5a42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59353093-faa0-450e-aca0-0ac486c7bfdb",
        "cursor": {
          "ref": "b876e44f-f2cb-4ced-a25e-50a8fcde2711",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65115dfc-79c2-4f57-be44-11fc2368a344"
        },
        "item": {
          "id": "59353093-faa0-450e-aca0-0ac486c7bfdb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3672542-610f-420f-8f71-d32dac44e046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9067e5d0-9492-4f61-8ef4-eb6efdde8c8f",
        "cursor": {
          "ref": "89b4c4f0-42c6-46db-a9fb-f4ab9214f52a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "86836260-16c3-4c6b-b49e-7593fd2ce358"
        },
        "item": {
          "id": "9067e5d0-9492-4f61-8ef4-eb6efdde8c8f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bfd1f6f5-4a11-47cf-88c8-bf32797c8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3502f898-3052-4a30-8b44-2ff9c079765f",
        "cursor": {
          "ref": "647f91f4-5c14-42ec-8668-9c97f100429e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0820ab9a-0cdd-4b1f-93cc-caf07eadb57c"
        },
        "item": {
          "id": "3502f898-3052-4a30-8b44-2ff9c079765f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f8584fb-2fba-4cbf-a6f5-cfa7979d47fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ccd29d-c2df-4f04-ae03-6c514bcd3a35",
        "cursor": {
          "ref": "c06ec69d-b1d5-4b70-8a7b-85c46c15c8b4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cf4b075c-7acf-43ab-8faa-6e94810e1a3d"
        },
        "item": {
          "id": "74ccd29d-c2df-4f04-ae03-6c514bcd3a35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "28bd322d-c5a0-4499-b7c5-1a35e89a1272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef803438-9e3d-413c-9da5-684061268d1b",
        "cursor": {
          "ref": "49c3f10a-7ef2-4c56-94c5-fcbbf2d5f528",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d131a36e-a0c4-4dcf-a56e-ed6ebd5920d1"
        },
        "item": {
          "id": "ef803438-9e3d-413c-9da5-684061268d1b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9f3b87ba-ef6f-464a-8cc4-b35cd820b957",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aec7bc-cc56-46ae-ace2-03b9cdb3baaa",
        "cursor": {
          "ref": "dc18bdf9-e707-420f-838c-fb8684666657",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96eeedfe-7c08-4657-b9ea-5ef5f91000e3"
        },
        "item": {
          "id": "38aec7bc-cc56-46ae-ace2-03b9cdb3baaa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6ff23e06-92f7-4684-b6cc-02f29185590d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8c4d1416-09a8-4e87-a915-4145d8650c59",
        "cursor": {
          "ref": "5b5980b6-278d-4a84-b079-95dfffc9aa4d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fc4792cb-a137-4a1d-8a65-8bce34ae41a6"
        },
        "item": {
          "id": "8c4d1416-09a8-4e87-a915-4145d8650c59",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fdc7e61f-7bed-4acb-b697-d23b0e2b26fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "075f9d12-eb76-4596-b237-4287e7c1abed",
        "cursor": {
          "ref": "0a2f5dd3-83e5-490e-a30c-709131edbc41",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da3632a8-d01e-4bd1-ba49-adcbb2a9e3fd"
        },
        "item": {
          "id": "075f9d12-eb76-4596-b237-4287e7c1abed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "29c96980-cc08-4c71-b161-c7f77a4d8048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "986a773f-f80d-4fd6-a6c6-2d2cd6e5d78b",
        "cursor": {
          "ref": "758888c8-f565-4184-8fde-d9d1ca107e61",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7efc0124-46b7-4cb1-bad1-8ab2f00ec26d"
        },
        "item": {
          "id": "986a773f-f80d-4fd6-a6c6-2d2cd6e5d78b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "55b56970-7684-4912-a6e8-359582690579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0f9c24f8-a543-4e95-b03b-ec931123ca88",
        "cursor": {
          "ref": "b5f85c70-0496-4290-9155-523ff27ea532",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "24fdb4ac-d1ce-489a-84ca-e14d25b49716"
        },
        "item": {
          "id": "0f9c24f8-a543-4e95-b03b-ec931123ca88",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1096d945-bae6-495d-88d4-e331b86d9c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d0d3b9ac-8865-4ca6-8900-2413b7d43088",
        "cursor": {
          "ref": "a95cc7ae-2bf2-4217-818e-b23a409f1db9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "130bc265-282f-48ca-b365-7077b144a2be"
        },
        "item": {
          "id": "d0d3b9ac-8865-4ca6-8900-2413b7d43088",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3c1b036d-9db2-4ce5-a7a5-d71004ffb416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0d8fee5d-5698-4178-83f6-7e4422aa6d25",
        "cursor": {
          "ref": "8494e8d1-6894-4724-86cf-d60a3c3b8f16",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35f6a882-79b0-4cac-b716-076231fc317d"
        },
        "item": {
          "id": "0d8fee5d-5698-4178-83f6-7e4422aa6d25",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "40050659-ba7e-4194-863c-5d3d56aa93d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2b6f2a5d-e3a5-44e2-8aeb-5024b94a8433",
        "cursor": {
          "ref": "282caec1-24d0-4aad-9228-e6ce68107d01",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f5903aaf-4155-4861-a427-4d81e1f5e8ea"
        },
        "item": {
          "id": "2b6f2a5d-e3a5-44e2-8aeb-5024b94a8433",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05f993b7-a0ae-4403-b166-cd5c728a9e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de01d341-2445-4e50-aa16-b3e1dac4da17",
        "cursor": {
          "ref": "b2ddc6d5-8960-46d7-8c0a-8cfe25b37465",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "33c65476-b046-41da-b252-e6c9c59ec22c"
        },
        "item": {
          "id": "de01d341-2445-4e50-aa16-b3e1dac4da17",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b1ae9c3a-1e38-4242-b1dc-bba6c64a94b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d08f4-a8bf-475f-94a5-6166fd9084ea",
        "cursor": {
          "ref": "ef0701f1-4bbe-479a-93a8-da55053e18a5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76d3da55-44f3-4268-a75c-50887c38d235"
        },
        "item": {
          "id": "185d08f4-a8bf-475f-94a5-6166fd9084ea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb91201c-24ae-45dd-b4fb-e95dc0135ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9762097-4b13-497e-a4df-e6213b3f2d7e",
        "cursor": {
          "ref": "277b5d07-f5a9-4336-bcc0-46e29bd52c91",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b3d6d77c-47ea-44cc-a6a2-f08fd763650c"
        },
        "item": {
          "id": "b9762097-4b13-497e-a4df-e6213b3f2d7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f313b7de-d49a-4310-b94c-ca33dc7f6929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70ae7a3-919a-4174-9522-cf2d41dfe3b5",
        "cursor": {
          "ref": "9f957851-0ef6-4d3d-88c7-b3453431d05c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d1c626e3-c788-4711-8ac3-48b1f26e6341"
        },
        "item": {
          "id": "c70ae7a3-919a-4174-9522-cf2d41dfe3b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9bc19a3e-d6cf-4ca8-aadd-a095e0ed2157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f2f906-7f5a-4972-8a66-e9ff94ca9896",
        "cursor": {
          "ref": "4719c2ba-8cc1-4d21-a646-ef0488498416",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff27553d-6e6b-410d-9584-a030d912bf09"
        },
        "item": {
          "id": "16f2f906-7f5a-4972-8a66-e9ff94ca9896",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a96e1d0-c971-42c4-b303-cd291789f78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666bb86a-4d98-4827-9844-70c9b19845e1",
        "cursor": {
          "ref": "30868639-0054-44c7-bb10-1175d6926333",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "64b511bb-bb8f-4afc-9e87-30bfc7943622"
        },
        "item": {
          "id": "666bb86a-4d98-4827-9844-70c9b19845e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8777ab4a-eba9-4dbe-b21e-0b38c9cbf814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d74ffe-a786-4087-9bf1-4f20490b6437",
        "cursor": {
          "ref": "80592ed6-70b4-41d2-a2db-10b9145b9a8a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "523f2100-4692-4fbd-be0a-91ccf2f5dbd1"
        },
        "item": {
          "id": "a7d74ffe-a786-4087-9bf1-4f20490b6437",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a236580-6be9-441d-b21a-dca980fafe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e2e83-91c0-41a2-aca1-b0b6c7b59562",
        "cursor": {
          "ref": "2742e50e-abec-4fea-ade7-c58f5bd84ce8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b7687a58-0bc5-4b14-a9a3-a6403f4f4811"
        },
        "item": {
          "id": "9a5e2e83-91c0-41a2-aca1-b0b6c7b59562",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "02394c73-2b5e-454d-99d5-454d372ed405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be82a74-58a7-48a3-896e-3c14814285e2",
        "cursor": {
          "ref": "db806174-3f9b-4067-ae9c-75a0b9811790",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1157a22e-27e9-4659-8b65-7ca00252316e"
        },
        "item": {
          "id": "1be82a74-58a7-48a3-896e-3c14814285e2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "213978e1-c6e7-45a2-842a-2c4a1271597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beb87aa-47ab-44bb-9988-ea8ec23fe125",
        "cursor": {
          "ref": "af305f45-6277-4250-87d5-80741e0efae9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1e72494-4737-48f9-96af-0e9539475cce"
        },
        "item": {
          "id": "7beb87aa-47ab-44bb-9988-ea8ec23fe125",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dcde1739-3c84-4de8-95ef-716d35a9bf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c885273-995b-42e8-b2ed-cd5ab0d91ebf",
        "cursor": {
          "ref": "0470365d-98fb-4b40-b7dc-2917143254c5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "65ecdec0-f626-4dad-bc70-47c86369dbe4"
        },
        "item": {
          "id": "0c885273-995b-42e8-b2ed-cd5ab0d91ebf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a0842c17-c62a-497d-b956-e05de082fbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff5f5fd-3a63-4be3-93c3-9a949395b70a",
        "cursor": {
          "ref": "dcf8bdc4-7203-4b9f-b388-4ee99bd5bced",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5b0ff4a4-2933-4f4f-b4f9-1f62c0038373"
        },
        "item": {
          "id": "4ff5f5fd-3a63-4be3-93c3-9a949395b70a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "498c4215-321b-4e90-8695-9637813ac3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a323e72f-ae15-470e-9953-405dfa56484f",
        "cursor": {
          "ref": "cadec391-5318-4f4e-ba55-1218238815fa",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e8517c97-2690-430d-8ad9-7bb3c63a88e3"
        },
        "item": {
          "id": "a323e72f-ae15-470e-9953-405dfa56484f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d6f47ae-9e45-45d4-a917-0e3bec51d8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f92bf48-59a2-4832-ac25-3841e7307592",
        "cursor": {
          "ref": "19c653dc-3d14-4c35-8eaf-16e50331ed6b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "661f9bf0-c297-4972-b84a-92e652cb662d"
        },
        "item": {
          "id": "6f92bf48-59a2-4832-ac25-3841e7307592",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "24b5b3c5-f5fb-423b-be61-f0e7c8beb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5112b5d-7978-4f21-b01f-314ca297811e",
        "cursor": {
          "ref": "72783f84-7735-450c-b410-f062a5549fe0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9e044aec-7350-4bb1-9f18-73c07b302a87"
        },
        "item": {
          "id": "b5112b5d-7978-4f21-b01f-314ca297811e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "56776f1f-ea93-4b26-b553-e9e049be9209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b9ac17-f698-47c3-b433-11b50b125e46",
        "cursor": {
          "ref": "c099b3b4-8d69-46bf-9fa0-7c6f6dbd07a7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62bf1118-da9c-4123-bad0-aac4fdb0f240"
        },
        "item": {
          "id": "09b9ac17-f698-47c3-b433-11b50b125e46",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8adc2205-9032-43f2-bffc-41956d6686af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea65a483-129e-4350-8dea-69a6f7847dac",
        "cursor": {
          "ref": "734f265d-9dc8-4174-b685-cd30a953e6aa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6f834cf8-1157-466f-88ad-756f7b055654"
        },
        "item": {
          "id": "ea65a483-129e-4350-8dea-69a6f7847dac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "41b42a34-ec54-4370-8492-da4a911dcac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1062ba1b-3134-4d38-9c9d-8c30e955fe60",
        "cursor": {
          "ref": "dfec9023-5701-4c12-bccd-429c5ddd6789",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "886b590c-c5a9-4b2e-bb71-19755e73dba3"
        },
        "item": {
          "id": "1062ba1b-3134-4d38-9c9d-8c30e955fe60",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1dd0ba10-6fbd-4b1d-8e89-64c5d4026e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f639ff-06d1-4e06-80ae-af381dd2f061",
        "cursor": {
          "ref": "d8a3e9a2-ca5a-46be-8707-e9e1ec35048e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a0fb37a6-6583-48af-a6e0-2ccfe82933f8"
        },
        "item": {
          "id": "70f639ff-06d1-4e06-80ae-af381dd2f061",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "845f1d01-6531-42a6-b316-b852e4b57d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d28bc-d3dd-4d7d-9324-1f6d0f948d01",
        "cursor": {
          "ref": "014f566f-f9bc-4732-8ae4-f04c2420a09f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f10cc393-cbad-4392-8a1a-b113ebd9b9a1"
        },
        "item": {
          "id": "646d28bc-d3dd-4d7d-9324-1f6d0f948d01",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8094b7a4-1ee0-4a5a-b0e2-458b13b5b740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ee11c-ba16-4ad7-aa50-fc904b30fd0f",
        "cursor": {
          "ref": "3909c225-08e8-408d-84e8-5f311e09f596",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e9a2e53e-7687-4783-84ed-f560b71cbdce"
        },
        "item": {
          "id": "900ee11c-ba16-4ad7-aa50-fc904b30fd0f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c73fcaec-1add-423a-a458-7a6c1b725fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43373ff-e99d-4c02-b344-73093951d051",
        "cursor": {
          "ref": "be9c3505-c54c-47cb-bece-bfb0a8522273",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c7e20463-b971-4b1a-8adb-2ef113960654"
        },
        "item": {
          "id": "c43373ff-e99d-4c02-b344-73093951d051",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dc134012-64e4-4dc7-a3c0-61cc1596fb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e904032-c700-4edd-b76b-a135c7f5489d",
        "cursor": {
          "ref": "5bb1c170-4216-4fec-8574-f0248e78b355",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4a9f7628-eb7b-4027-9398-b0c2637879bd"
        },
        "item": {
          "id": "3e904032-c700-4edd-b76b-a135c7f5489d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f9dbe24-cb8c-4f49-95ca-4db75c0c5394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dbc7d3-b447-4bf7-87f8-e0c317722e43",
        "cursor": {
          "ref": "31e6c902-6313-427c-9fb2-034ab5c19329",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ec8a95ce-716d-486f-87a1-e63c60977ba7"
        },
        "item": {
          "id": "56dbc7d3-b447-4bf7-87f8-e0c317722e43",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6237b38e-aba7-4a3b-9afe-b5e239e65ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974b93d8-bf64-4ed3-adc8-9628c5f07ee8",
        "cursor": {
          "ref": "1da1559d-413c-4c39-a533-41ad369f8af6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "56c278f4-ae91-442f-a86b-7271a167e160"
        },
        "item": {
          "id": "974b93d8-bf64-4ed3-adc8-9628c5f07ee8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09f385ae-4b80-4c43-a0bb-779324f706c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb72495-648f-4762-a635-0683e77cad8a",
        "cursor": {
          "ref": "2cbc80b3-ed04-47e6-9775-c4accf903d91",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f9d79061-14e1-4c2a-b1e2-0522691b395a"
        },
        "item": {
          "id": "9bb72495-648f-4762-a635-0683e77cad8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b6a8d5e-c0fe-4554-be60-82ffb230824b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6786d3ef-e318-4e9d-8270-bf3d9c18535d",
        "cursor": {
          "ref": "daa4dbef-9d83-48bf-ac81-68aa29003244",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e1a82b66-15ec-4b78-be01-43c918737d7e"
        },
        "item": {
          "id": "6786d3ef-e318-4e9d-8270-bf3d9c18535d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e03859e7-860e-4b22-bf0e-faab3ce3e2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3d88ec-fa63-416e-b164-935bb9551265",
        "cursor": {
          "ref": "b754907e-2d1b-462d-a035-056eb503b0b1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7055044c-6b64-41ed-bc1e-ec75f7e6b89c"
        },
        "item": {
          "id": "6b3d88ec-fa63-416e-b164-935bb9551265",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "86f8c763-59a6-461b-a7ce-39d2e2570e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39712291-f639-4c25-8532-327654fd3473",
        "cursor": {
          "ref": "b2b52022-33e2-4ba7-9dfa-92f91f3d8057",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d66d74a8-e88f-4fb2-ac9f-6a8e86f69192"
        },
        "item": {
          "id": "39712291-f639-4c25-8532-327654fd3473",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e57f813-b489-4798-87b4-8ee3ec241fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8405d-cd55-4dea-ac8d-a34672ae404a",
        "cursor": {
          "ref": "8048fcab-3970-452e-b0b0-091ac80997cc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bd54f063-0f31-4dec-8a2c-fb1a9dc9fffa"
        },
        "item": {
          "id": "10e8405d-cd55-4dea-ac8d-a34672ae404a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "501b0d59-92f2-495a-b6be-b44bf74298d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e0df9-c45c-4dd0-bf7c-14a1e2892195",
        "cursor": {
          "ref": "d907ad39-d8db-4908-a0bb-5c000a6499b1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "697a4cd6-7359-40e7-b960-d7c930ebd51a"
        },
        "item": {
          "id": "073e0df9-c45c-4dd0-bf7c-14a1e2892195",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "36e70eb4-4a7e-4a36-8e1b-94a1c82c520f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc5559-8c95-46d5-878c-953bd4435dbf",
        "cursor": {
          "ref": "74bf755e-b0fe-47e8-9841-701655dd6489",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "54a27105-4e73-4677-b77d-d4b3ed62adcd"
        },
        "item": {
          "id": "67fc5559-8c95-46d5-878c-953bd4435dbf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66919932-4ece-49b4-bb84-035b9ffcbd71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4b974b-a9c8-47de-afb0-8ca30f085439",
        "cursor": {
          "ref": "e748b072-3694-4262-80a9-28f50873b86a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90ee2d9e-3e7f-4470-bb40-9ccc9b548b66"
        },
        "item": {
          "id": "8f4b974b-a9c8-47de-afb0-8ca30f085439",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4137fc1b-321e-4f33-95df-fe4da52c932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4196c202-898a-46d7-8244-8b22c86f7697",
        "cursor": {
          "ref": "afdbbc55-836f-4f2b-9c30-6dec0c0086c9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "57041104-ea64-42b0-95d1-bcb4a41a12e3"
        },
        "item": {
          "id": "4196c202-898a-46d7-8244-8b22c86f7697",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef12f1d7-7b02-4298-b671-e39610851fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd579f-e63a-4225-88b7-142343b31cbc",
        "cursor": {
          "ref": "8e43fa1e-acfb-4e2b-bf21-30f464c4697f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d5dec1ee-34fd-4628-9991-a19621897c2e"
        },
        "item": {
          "id": "20fd579f-e63a-4225-88b7-142343b31cbc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d810ca1a-22ee-4e28-9995-67b587192b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee50849f-7be6-4fdb-b658-6cdf4de72619",
        "cursor": {
          "ref": "ecbe19eb-cbea-4d20-a5c0-26946f1fdc3c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bcf12810-55fe-403a-a1d0-4c8de4561979"
        },
        "item": {
          "id": "ee50849f-7be6-4fdb-b658-6cdf4de72619",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "79c07334-cd0d-4705-9270-720b39018a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b31bd90-61aa-4955-a572-74dc6d0716f5",
        "cursor": {
          "ref": "2fcaf0b2-8d1f-48be-aedc-39d56aee0dfc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "162943b4-a7fb-44e8-a45a-44a438acbf48"
        },
        "item": {
          "id": "3b31bd90-61aa-4955-a572-74dc6d0716f5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d55e086b-44a3-416c-8abc-02a87a65463f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab05713f-4289-4567-a0fb-962dcaa83787",
        "cursor": {
          "ref": "1cbc7714-a11b-4ac0-bcc8-2f0f19223024",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "01a887c6-803a-4e35-848d-dfe0e4422583"
        },
        "item": {
          "id": "ab05713f-4289-4567-a0fb-962dcaa83787",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "232a9891-3a30-497a-8e5a-df6251a3e738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced6afc-9cff-4bbe-bda9-219a5a5b10f8",
        "cursor": {
          "ref": "9e9d1bd2-04f9-453e-8c5f-cd137fedf18e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d7750951-806e-4a12-8b14-cb8ae88973de"
        },
        "item": {
          "id": "aced6afc-9cff-4bbe-bda9-219a5a5b10f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6307ef4-7574-49bf-8a28-427b53b7444b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5636f7-8e17-4243-9081-8b826758fa5e",
        "cursor": {
          "ref": "e587ca02-bef1-4a6a-aae7-85f4b2dad040",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d529908-cd7a-4253-a475-54c2277f9856"
        },
        "item": {
          "id": "6c5636f7-8e17-4243-9081-8b826758fa5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7718c8bb-4a0f-4f95-9ef8-8f0d06987f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be051d35-72af-4c17-ac2e-4c2d533e6557",
        "cursor": {
          "ref": "ecd6da87-9c0e-49da-96cd-9f2bc6b32211",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "694d4fe6-be66-499e-afd6-5c2091317a48"
        },
        "item": {
          "id": "be051d35-72af-4c17-ac2e-4c2d533e6557",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc9e6184-c176-4dd6-8632-426d0c3b677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7676cd2c-25e6-4195-a9de-7a2ab6059eb9",
        "cursor": {
          "ref": "99b9ddfb-b8e1-41e0-bee6-90ccfe5baf68",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9e08d3de-7902-40a3-98b2-a670f8ec364a"
        },
        "item": {
          "id": "7676cd2c-25e6-4195-a9de-7a2ab6059eb9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fc6a3b4c-0999-472d-9730-eb842ea99645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90cbc00-a388-41ef-a5e8-e6c9dd162ecb",
        "cursor": {
          "ref": "0da07dcc-c183-478e-9f37-0eb268d1e6e6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ed50ab8-9445-44d3-8274-5abb547a01c1"
        },
        "item": {
          "id": "b90cbc00-a388-41ef-a5e8-e6c9dd162ecb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ac964fe-2cf1-485f-a838-29600f9600f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d753f3ea-51f4-4195-b45e-884a896ef11d",
        "cursor": {
          "ref": "6d6a862b-da94-462a-b78d-49a224a3f27a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dfae14ad-c1a7-41c8-84dc-9293224d557e"
        },
        "item": {
          "id": "d753f3ea-51f4-4195-b45e-884a896ef11d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31d53860-bcdb-447b-9f55-ea1c6acba72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f800fe29-175a-468c-bf5a-4f0d06b59adc",
        "cursor": {
          "ref": "02049cbc-9be2-47c3-80d5-fe4b50336cd9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c542b748-9b3b-4bf2-8709-90b712bd07a0"
        },
        "item": {
          "id": "f800fe29-175a-468c-bf5a-4f0d06b59adc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed5dffbd-2d61-4737-8139-ef875228e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc8fb36-9b25-4df7-bd0f-dcbd41248b33",
        "cursor": {
          "ref": "92d10890-1e43-404e-b8dd-bf30bc7a8e0f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93a9e361-20f7-49c5-9819-e8bdb4c64fb2"
        },
        "item": {
          "id": "7fc8fb36-9b25-4df7-bd0f-dcbd41248b33",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b085911-1da0-4df1-afc2-201bcd93f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7933ea1-9661-4fc9-90c4-6c8a349b205b",
        "cursor": {
          "ref": "9cdafda3-b74a-4977-a84b-04ba01145c07",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d695efb4-1f33-4d67-a3d5-4bab1345d194"
        },
        "item": {
          "id": "a7933ea1-9661-4fc9-90c4-6c8a349b205b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1a1148b-9ec0-492f-87d8-2ff71944fb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5e8eec-7c10-4ac5-b577-229efd6ed4d5",
        "cursor": {
          "ref": "d4f58103-54c2-469f-a770-c93277880d40",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "827500a1-5db7-4852-9c2b-2a5ae6469fba"
        },
        "item": {
          "id": "8b5e8eec-7c10-4ac5-b577-229efd6ed4d5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "46d6aa57-3d83-4fb6-8551-ada0dc95fea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62762578-803a-4d5b-ac02-28dfc08e686d",
        "cursor": {
          "ref": "d05e3a4e-7402-43f4-848b-5fee8b958ab2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d9e86b63-1ab9-4c49-bf6d-0eb57f3cd7a0"
        },
        "item": {
          "id": "62762578-803a-4d5b-ac02-28dfc08e686d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52c9e7cb-5b2a-4fe3-823c-ea573c317413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df18f0f7-a194-4e2d-a8fd-efcae03b91fa",
        "cursor": {
          "ref": "2ada838a-cbdf-4806-80de-0ff655efcc09",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9eb59618-f6a4-4fdb-8b89-9f0a764256ad"
        },
        "item": {
          "id": "df18f0f7-a194-4e2d-a8fd-efcae03b91fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "606d166a-aacd-4344-9fda-c7c586c01616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d404de2-3b65-40fb-a99d-61eb991836f3",
        "cursor": {
          "ref": "03852b8a-26d5-4f87-858a-7f9e6d1c86ff",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bda32781-ee6b-4e82-8d4a-8bb134d72bff"
        },
        "item": {
          "id": "4d404de2-3b65-40fb-a99d-61eb991836f3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b6c68ff9-df8d-44e5-af71-b9ed1e4295f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a09b01-ca4a-49f2-b555-ba5d641eeac1",
        "cursor": {
          "ref": "68e86875-379f-4b33-b58d-859a961af6cf",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ee86077a-f970-4a90-9f54-1f55d315de74"
        },
        "item": {
          "id": "07a09b01-ca4a-49f2-b555-ba5d641eeac1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "646e9ec2-5a10-464b-8fcf-8c7963ed4c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce512ab-e1f2-4737-a2f3-83779cf7dfeb",
        "cursor": {
          "ref": "4701245f-b336-41b7-bbea-e50f702321bf",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e2d152e2-483e-4957-89b6-9040fe910e6b"
        },
        "item": {
          "id": "7ce512ab-e1f2-4737-a2f3-83779cf7dfeb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e988da3b-fa61-4ad0-bddb-d32beae21306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8585a226-f44d-4d61-bdd0-d0c5078d6268",
        "cursor": {
          "ref": "860324af-0409-4743-b4d0-f37888909f4b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a5ff0c1d-6894-4714-abfb-348e7a08f72a"
        },
        "item": {
          "id": "8585a226-f44d-4d61-bdd0-d0c5078d6268",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "58643fef-96ad-4f6d-908d-5792e9658c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d01383d-a53a-4d31-9875-fff8e03b2196",
        "cursor": {
          "ref": "7deab6fb-257f-4d03-8c20-4529958d3482",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a8fbb83-76c5-4ccb-94e4-9ba043972db0"
        },
        "item": {
          "id": "5d01383d-a53a-4d31-9875-fff8e03b2196",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9de2144-5640-4d46-9efb-cd729d929f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efa9b92-4119-4f53-a79c-a118ee8729dd",
        "cursor": {
          "ref": "9b149379-fc36-4c1b-bbd9-567afe44ec7d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "14381f82-1115-4df0-b3de-d54cafb8038d"
        },
        "item": {
          "id": "4efa9b92-4119-4f53-a79c-a118ee8729dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14a3e49a-9231-43e9-828e-a32f59901dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff325f1-82f5-41b7-a24f-5be89b285684",
        "cursor": {
          "ref": "2ab2d98b-48d8-4855-bfb4-6d43c12c838b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ac5f42b-352f-458e-b716-f6c97c956a1c"
        },
        "item": {
          "id": "8ff325f1-82f5-41b7-a24f-5be89b285684",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "061d0b8d-da6d-46ec-a187-fa0dabb2dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d91a89-b9e3-454b-a2f2-375001496965",
        "cursor": {
          "ref": "1a84fe12-3bd2-480b-b64c-b6e7d706b43a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b7ed3adb-f2ae-4669-9920-214a6371e924"
        },
        "item": {
          "id": "c6d91a89-b9e3-454b-a2f2-375001496965",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "245e2ac7-5007-4be4-9a38-12d8fc835f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0a77a1-87f1-48f8-a472-026743c13dcb",
        "cursor": {
          "ref": "4c543109-dcfd-47b2-a1b6-2e22a0e0d2b8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "14484f2d-2e45-46e4-935a-de311aef1c80"
        },
        "item": {
          "id": "cb0a77a1-87f1-48f8-a472-026743c13dcb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "70ab84f6-ada1-43d1-bc56-116d2ece942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d582d50-c66d-4043-9dc7-ae34e08b0fdb",
        "cursor": {
          "ref": "4da60137-b6b8-4605-8e53-f45ee6377f29",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c5da47c-6d3e-4a4d-9712-0875e8e94a6a"
        },
        "item": {
          "id": "7d582d50-c66d-4043-9dc7-ae34e08b0fdb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8e3576ce-b838-47d3-8f14-6c38e138a85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a75e5a0-d00b-44a5-90b3-0e6f1368a6a7",
        "cursor": {
          "ref": "855149b6-c801-4bd7-80d8-fa75080553e1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1b2ed23f-5eec-4d7c-9e60-0a91ff320500"
        },
        "item": {
          "id": "6a75e5a0-d00b-44a5-90b3-0e6f1368a6a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af483a60-c17d-463b-a165-8e9d74a827f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1153992-635d-48d3-8564-8cbef379b3c2",
        "cursor": {
          "ref": "0d309d5b-f4ba-4adc-98d3-98963753716e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b37c7e27-40c2-4a55-b976-e8c7f8123b6e"
        },
        "item": {
          "id": "f1153992-635d-48d3-8564-8cbef379b3c2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d57bc7cd-9625-422f-a1e5-235e1207c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f804d86c-3ed5-4948-8589-1cace1ec52e6",
        "cursor": {
          "ref": "29119e1e-0706-4a8a-91e8-db0f57237a84",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a2887979-cf21-4e9a-94ec-b1aa3224bdcb"
        },
        "item": {
          "id": "f804d86c-3ed5-4948-8589-1cace1ec52e6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dec692bf-ac08-4674-9d50-c26b2b9975a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5907b725-d585-4c21-9736-cbe65c49dbf6",
        "cursor": {
          "ref": "20f811e4-16c0-4dd3-8b53-e33df39783f5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "69dad528-df09-4c25-ba87-f9dbc7f4447b"
        },
        "item": {
          "id": "5907b725-d585-4c21-9736-cbe65c49dbf6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "89a5de86-0ba8-4449-858b-a8b0ca280a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce4f37f-736f-4073-8313-b5896670fb05",
        "cursor": {
          "ref": "143f11a2-c800-4f7b-9c91-b331ca4b1cfa",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd9fe29a-0609-422e-9746-6ac6f4d66de3"
        },
        "item": {
          "id": "5ce4f37f-736f-4073-8313-b5896670fb05",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0b81110e-103d-40fc-813c-07a38fce9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bcdf4-2ca8-4772-af19-04c221c22bc7",
        "cursor": {
          "ref": "6bc65cde-d5a1-41f1-9e89-ae02c134eea0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "357e18e7-46fb-438f-a4f3-48464b566d1d"
        },
        "item": {
          "id": "e57bcdf4-2ca8-4772-af19-04c221c22bc7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9c73e6b6-dc2f-4698-ab6c-d045a8eed8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e845ce76-cbf1-427c-8ed1-acbeb679240b",
        "cursor": {
          "ref": "92253cf4-6fc3-4450-be21-05d5215d33ca",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fae31f94-e74b-4e32-880d-c94a891ef9f8"
        },
        "item": {
          "id": "e845ce76-cbf1-427c-8ed1-acbeb679240b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d366841a-063b-474d-8bca-ac19c20cba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce33de-2c80-4fa5-87ed-89c4cb8fab77",
        "cursor": {
          "ref": "7106edff-e6fa-4e63-b784-0efd2243a29d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1590a968-36b6-439d-8f06-b4fa76ad3630"
        },
        "item": {
          "id": "b2ce33de-2c80-4fa5-87ed-89c4cb8fab77",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ffa62f2c-899f-473d-babe-5b235af741f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e551b39d-04a6-47ef-a607-5bd561c2b992",
        "cursor": {
          "ref": "b272237e-4cb4-45e0-84c3-183b447a4739",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c3771763-cabf-46c8-8014-3d0c7d7fb683"
        },
        "item": {
          "id": "e551b39d-04a6-47ef-a607-5bd561c2b992",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0b32cc02-2793-44de-a747-a6c8d81c70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a96080-1c80-44ab-9008-0436d770d064",
        "cursor": {
          "ref": "5f18295e-e139-4c80-8d9b-727d166ba5ea",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "996559c2-9c0e-4274-8591-e1a95dee3317"
        },
        "item": {
          "id": "89a96080-1c80-44ab-9008-0436d770d064",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ca9580f9-6129-4fa7-8e70-b255b344fa9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286db27-01a7-450d-b232-871df9d21d10",
        "cursor": {
          "ref": "71380bf7-09b1-43b4-b063-2e547c0ddc0c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc288041-e829-4975-b54f-83f6abbb206d"
        },
        "item": {
          "id": "5286db27-01a7-450d-b232-871df9d21d10",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a67f93f0-dd06-4141-9633-d7cebbfcdad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad700e3-59c8-485c-8284-0f5facbcde40",
        "cursor": {
          "ref": "4d4d65d4-da2f-46e8-ad3b-e5ccd9d98003",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "045e02eb-3e29-4c7b-9132-88560e208642"
        },
        "item": {
          "id": "2ad700e3-59c8-485c-8284-0f5facbcde40",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1e2cf2cf-8ff5-47c0-92d9-111ebe97cbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d69197-127f-4dcd-96c6-5e8e65f0b0c3",
        "cursor": {
          "ref": "4a50f7b5-0ead-450b-8a85-f4b13654b48c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b8ba9ca5-9053-4e99-8901-4646c95d0d17"
        },
        "item": {
          "id": "d8d69197-127f-4dcd-96c6-5e8e65f0b0c3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8190417a-dd56-4821-93b5-fe1cddc67f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67bbbbb-b34c-4919-b7ec-537fe362f183",
        "cursor": {
          "ref": "df71bcc1-831e-4759-92b9-37d75638e029",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b377c9b-200d-4e72-8620-527c9babc3e2"
        },
        "item": {
          "id": "c67bbbbb-b34c-4919-b7ec-537fe362f183",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "914d81c9-19f3-4515-9ee9-2fa82edece16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecfeba2-e7ac-40d0-9dda-60cf0549aca4",
        "cursor": {
          "ref": "c9ef527a-db63-4264-951d-d0ecdc62d24c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5494121a-a6bf-4b43-942f-7745febbc65f"
        },
        "item": {
          "id": "8ecfeba2-e7ac-40d0-9dda-60cf0549aca4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f217cbd9-514a-4d69-b67c-3cb805a5b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d98c60-b8d2-426b-b4f3-6aa37a40fd6a",
        "cursor": {
          "ref": "5da73b8d-2ffc-4554-8138-e9ceb7d6ac41",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1b6ec8e8-ec01-457c-9af2-7a7309b83d63"
        },
        "item": {
          "id": "a7d98c60-b8d2-426b-b4f3-6aa37a40fd6a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d33d71b6-27ca-4566-9161-f91257ab077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7049e20c-d295-4003-ad3e-adf0f8dd0fef",
        "cursor": {
          "ref": "e1c84fa1-c6a7-4c9d-969c-fe069c959f2b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7d007025-6be0-4aa3-a624-a804ae526898"
        },
        "item": {
          "id": "7049e20c-d295-4003-ad3e-adf0f8dd0fef",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "94942945-da68-40a6-9f9d-0981b34a94aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d4998-42a7-4cc8-8105-46ba467944e2",
        "cursor": {
          "ref": "7018b01f-3c9c-4860-a5e0-007ec5e3cf41",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "75fc52e6-bca0-442c-b9a0-e09a94cda33a"
        },
        "item": {
          "id": "131d4998-42a7-4cc8-8105-46ba467944e2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c120a461-3a2e-4444-a408-47421884433a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45919d75-447a-4992-b648-94d9d87a42a2",
        "cursor": {
          "ref": "8c5e61d4-7bfe-471a-a84a-11ea4e08c064",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6fb41140-4cde-4077-876b-7278a58431ba"
        },
        "item": {
          "id": "45919d75-447a-4992-b648-94d9d87a42a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "12cb0963-47c2-40da-b4ba-9f2a55311d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3978b28f-38a1-4d48-b9aa-f55c051d1d24",
        "cursor": {
          "ref": "39fab9e3-030f-454e-995b-00381497bc56",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1afc35ac-5e22-4f90-aad2-041d6fb61cce"
        },
        "item": {
          "id": "3978b28f-38a1-4d48-b9aa-f55c051d1d24",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5bc2d2c8-9982-44e4-915d-1ad58f3ceef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee5e743-a6e2-4e1d-bac1-0b7daf001268",
        "cursor": {
          "ref": "71310989-87c9-40c2-93c6-f8497192ae48",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "82c4116c-7e5f-457b-8b96-fb6a51522912"
        },
        "item": {
          "id": "8ee5e743-a6e2-4e1d-bac1-0b7daf001268",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9c1ababd-0c29-41d0-b354-a09bebb3bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33adbfad-962a-4cf6-b05e-c4d3b04f3d61",
        "cursor": {
          "ref": "77f99a4a-92c6-44cf-af6b-aaa28e54b556",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa2c6a1d-0e44-4bca-9e70-f5bb3ca095e6"
        },
        "item": {
          "id": "33adbfad-962a-4cf6-b05e-c4d3b04f3d61",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cae2a3eb-90b0-455c-96cb-be0c5ab10478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d99b973-18be-4c04-b3f2-09bf01c53b93",
        "cursor": {
          "ref": "d78298f0-0689-49df-99d3-88257aab4803",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "70aa05f2-bbc6-48aa-8f79-141b2a901353"
        },
        "item": {
          "id": "1d99b973-18be-4c04-b3f2-09bf01c53b93",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "519a0659-09b4-4745-b38d-0fdcc96899d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72208ed-78b7-4fdc-a260-fa10a91a4bf8",
        "cursor": {
          "ref": "580ca330-c5c4-40f7-9ad0-a872bf2da90e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8463f1e6-7c17-4204-bf27-80b96bc7ace5"
        },
        "item": {
          "id": "f72208ed-78b7-4fdc-a260-fa10a91a4bf8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b64aab65-4bca-4391-851c-86245c1b4186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b241b023-f2c5-466e-be29-ae2d06cde782",
        "cursor": {
          "ref": "14a47677-cc3f-409f-9c2e-d5ebaca75139",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f82fd0be-1a9d-485a-a19e-0e0bdc50ce4f"
        },
        "item": {
          "id": "b241b023-f2c5-466e-be29-ae2d06cde782",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "841dad40-d39d-4270-a1b0-2af69ac0c1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dc362c-1c91-4264-870f-cad2f515d87e",
        "cursor": {
          "ref": "8b3e721b-8bba-4dbe-8267-57ae23b2a738",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2d41f738-2fb1-4689-9738-426418a65031"
        },
        "item": {
          "id": "69dc362c-1c91-4264-870f-cad2f515d87e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ec4fd117-eaaa-4c4f-94d9-0dcd4fffc355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acf9241-7255-4c69-b50d-882d8f08304c",
        "cursor": {
          "ref": "594b54b8-11e3-4fa3-828c-fe9b1017d7b2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d1812eac-7525-424d-9a7b-ddac86b321b6"
        },
        "item": {
          "id": "8acf9241-7255-4c69-b50d-882d8f08304c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cd6481f4-c70f-49f4-b7dd-ce4c50167ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3c8e03-ffd1-41b2-a58c-1be537d26930",
        "cursor": {
          "ref": "406c2801-1491-4777-8fc7-fe34c060aad6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dad04f73-6a02-4876-aee0-eeee1e3f1872"
        },
        "item": {
          "id": "de3c8e03-ffd1-41b2-a58c-1be537d26930",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a3c844e-515d-470d-ba6b-435901e96295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda91f53-1168-4c3c-a2c8-10146af292dd",
        "cursor": {
          "ref": "ed4aae5f-5c28-4f8f-800a-a433582ad96b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c3491878-603d-401f-a98c-24f89adc21ad"
        },
        "item": {
          "id": "cda91f53-1168-4c3c-a2c8-10146af292dd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bc00cc54-2be9-4f11-b3bc-fdfd022ed17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b6aa1-db32-4c9e-b6ed-d82a43ccded1",
        "cursor": {
          "ref": "f6b055a0-8854-42fd-8da1-56e669b262d8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6698b6e5-fa97-497a-9c91-28bae0968ed0"
        },
        "item": {
          "id": "5a8b6aa1-db32-4c9e-b6ed-d82a43ccded1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2561b72b-b7da-4231-bdca-b3f10b3f7854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ced07f-c0a2-47a0-b56f-23f22a305356",
        "cursor": {
          "ref": "33e6ed6a-8694-402f-891c-2b124f8eb71f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b89d513a-8940-4d52-a772-c4b9604384c7"
        },
        "item": {
          "id": "55ced07f-c0a2-47a0-b56f-23f22a305356",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ffca62d-1436-485b-99c8-c3858a3aafa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a80f95-978c-44aa-aa59-4219f9287829",
        "cursor": {
          "ref": "d73c4473-f595-42ac-9caf-1276119f1f31",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a37dbe4d-3deb-46d9-83b7-ba547b289a91"
        },
        "item": {
          "id": "17a80f95-978c-44aa-aa59-4219f9287829",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3fcbde34-0526-4903-9370-30358f849e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3805c2a8-33c0-4663-8e25-7619a8e0f80d",
        "cursor": {
          "ref": "2d554ee6-8a7f-4b7c-81e8-6e8e45114843",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "460e6a89-613d-4ea4-8a8d-a715aa2606d3"
        },
        "item": {
          "id": "3805c2a8-33c0-4663-8e25-7619a8e0f80d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ce552bae-c52b-4fad-8a6d-253dad44bb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159fcb95-4ece-4924-8365-14a238cc5b55",
        "cursor": {
          "ref": "cd3d15e5-7388-4655-87e0-3e8484f07b4d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "621b8443-6dfe-417f-87b8-99c9c9e64a5e"
        },
        "item": {
          "id": "159fcb95-4ece-4924-8365-14a238cc5b55",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "095e79e6-3d91-4a7a-a1a0-619e7aea821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e54c7e-9db2-48e8-ba41-08bdb58a6f7b",
        "cursor": {
          "ref": "da7cff2c-e1f9-481f-8b51-3689d3cea777",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "69d13a4e-d126-4c8d-83c2-acc2b17a2262"
        },
        "item": {
          "id": "c8e54c7e-9db2-48e8-ba41-08bdb58a6f7b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "27f0902b-c84f-4fa1-b228-514f46e7de0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3bbaef-8606-4b91-a5ad-07fc33a06c63",
        "cursor": {
          "ref": "3bfbe709-8f9a-490a-91e4-774504fe85a5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf883f1b-3cf8-43ec-84b8-d35a057c461f"
        },
        "item": {
          "id": "3c3bbaef-8606-4b91-a5ad-07fc33a06c63",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "86524d84-d668-4d07-b02c-701e1f0fb31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103ca8bd-857b-4ce0-8ed1-6e4f6468fec9",
        "cursor": {
          "ref": "00c704f7-fa24-4e19-844c-528d24cf460a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66863e89-a979-4edf-835c-41fec837e043"
        },
        "item": {
          "id": "103ca8bd-857b-4ce0-8ed1-6e4f6468fec9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "34279ce8-d083-41e0-a9bc-256e1ccff2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aabf70b-64a3-4403-9255-a43a6f735620",
        "cursor": {
          "ref": "0ccc56e2-941e-4eee-8eae-fcd5078b3594",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3b44a631-4a2c-495a-bb1d-2a179513e9c3"
        },
        "item": {
          "id": "2aabf70b-64a3-4403-9255-a43a6f735620",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "01a18b36-fd71-4ab6-a140-94124e571886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a5ead9-2c84-417a-bf0c-6dafda06f5cf",
        "cursor": {
          "ref": "ab3516e5-6fa2-4835-90c4-2efa9ff4435d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c842dc46-0df8-40a6-a720-5f548fe8aae8"
        },
        "item": {
          "id": "61a5ead9-2c84-417a-bf0c-6dafda06f5cf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1975bebd-6dfd-4591-84ec-40dbd1fe53d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3a4e7-d0d5-4b86-8ba2-0549fc723975",
        "cursor": {
          "ref": "9a1f1883-a4b4-48cb-9d12-b8ebacad2ba5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d32284b5-f6d7-41ab-be29-5c69f359afbb"
        },
        "item": {
          "id": "5fc3a4e7-d0d5-4b86-8ba2-0549fc723975",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "60656d2e-1d79-4101-ac83-422e0aae3395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ca8e8-a368-46cf-a137-6e57418855ee",
        "cursor": {
          "ref": "700a1147-334d-481e-8e39-a07490ad2f6f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "140ace1f-82d8-4c63-87bb-c8e3bd5c8294"
        },
        "item": {
          "id": "af5ca8e8-a368-46cf-a137-6e57418855ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cded5d9d-2d90-488b-8a7a-7a5db29e6bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82472169-6af9-4469-9ade-8d598588cdde",
        "cursor": {
          "ref": "c447815c-7a4e-4bdc-a444-3ef84a866557",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8ba2fc66-9df1-4d69-b825-22327c2cf88d"
        },
        "item": {
          "id": "82472169-6af9-4469-9ade-8d598588cdde",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f16b830a-8696-490e-a00e-703d1f68dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d02b96-91eb-4e9e-9777-f300cd20f8d0",
        "cursor": {
          "ref": "b1fcce9f-328e-4aca-813f-46877201bb6e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "372cfc3a-3a18-442e-87b4-e9e9dea344d2"
        },
        "item": {
          "id": "54d02b96-91eb-4e9e-9777-f300cd20f8d0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "69d542ee-fc9c-4ca0-b990-2795ab380513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c75923-2030-4a56-84ba-bed20eb3eb2a",
        "cursor": {
          "ref": "a7fafe92-dc0e-4c31-96c6-5073d3871956",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a63e766c-b484-4f12-8f35-a06fa510ffd2"
        },
        "item": {
          "id": "09c75923-2030-4a56-84ba-bed20eb3eb2a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2d311a5-fb33-4286-b937-509e8c7d8bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca1f7d0-0cb5-4de8-b44f-58a5f37fe7a5",
        "cursor": {
          "ref": "07185e20-35e1-4cf8-b922-d8cddde07d98",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8b6d6179-a280-46fc-8ed1-bee8be52508a"
        },
        "item": {
          "id": "0ca1f7d0-0cb5-4de8-b44f-58a5f37fe7a5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4ebf38fd-b31e-446a-8ef2-37ce521c7636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3318ddd-c4e6-4ecc-8500-08cddfef6caf",
        "cursor": {
          "ref": "1d9710aa-cdc9-49eb-b482-9a508ed99e7e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c429a58e-dc0c-442f-b217-744aaba5d88b"
        },
        "item": {
          "id": "f3318ddd-c4e6-4ecc-8500-08cddfef6caf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b585fddc-84b8-493a-ad64-fa9c61f2c603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef19aee0-282d-498e-9262-97e30f16e140",
        "cursor": {
          "ref": "60404c93-c13f-447e-864f-3ce4c7d39078",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f1509503-a276-4ffa-aa31-530d084060c5"
        },
        "item": {
          "id": "ef19aee0-282d-498e-9262-97e30f16e140",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42496e69-717c-4f72-b813-37e5c9ed1ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e80956d-d0be-42ed-a3e3-84b08fbaf9f1",
        "cursor": {
          "ref": "95fea4bb-56fb-49df-9722-4515a613ce2d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2b2419a5-7686-45b1-a0f8-309c71cc6acf"
        },
        "item": {
          "id": "5e80956d-d0be-42ed-a3e3-84b08fbaf9f1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "538e73bf-67c2-492a-b071-c594bdd4f98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19082ea5-b5d8-4f6c-9c2b-80c389ea87eb",
        "cursor": {
          "ref": "41b33d39-87a1-4848-9757-8abc8c228d28",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d206146a-ae1e-4061-b4f5-25a50bbf970b"
        },
        "item": {
          "id": "19082ea5-b5d8-4f6c-9c2b-80c389ea87eb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "74ac5b09-1817-40ad-b51c-e17d63bb726f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d06a97b-f2f5-4355-870e-b6436b4904a5",
        "cursor": {
          "ref": "2f2d9d38-cd10-4b10-9f91-dd0432d314b6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9aa3f9e9-167f-4940-8f83-4f134bc7a682"
        },
        "item": {
          "id": "3d06a97b-f2f5-4355-870e-b6436b4904a5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "09bccf9b-eb1f-49a6-af97-618820164516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ca360d-c9b0-4b57-b545-1df683098acf",
        "cursor": {
          "ref": "25a5ad0d-8980-4219-bf5b-11f00ac53cdf",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d43228df-c0bc-4e9d-bb9f-290dde1bd57e"
        },
        "item": {
          "id": "85ca360d-c9b0-4b57-b545-1df683098acf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bfcd197c-b294-4654-82a5-42b503425249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bc35b3-d42e-4d38-b687-aab79b74a970",
        "cursor": {
          "ref": "f6a0e280-c43b-4fcb-b153-19bdf3560c26",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2631f58d-314a-43f4-b98e-a92f5a9d6c2b"
        },
        "item": {
          "id": "92bc35b3-d42e-4d38-b687-aab79b74a970",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e2cd16a4-c2a5-414c-9775-b369faa1746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e19b68f-55eb-4038-97a9-eb3c5443dbd4",
        "cursor": {
          "ref": "b70bcf2b-0dcf-431d-a474-f81529fecfca",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "80d731e2-4e88-4fa8-b2ff-451707f8832e"
        },
        "item": {
          "id": "7e19b68f-55eb-4038-97a9-eb3c5443dbd4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "125fbdca-80e1-4bfd-95d7-873af80163e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b0f290-4083-4505-844e-d0ee693d0053",
        "cursor": {
          "ref": "5adca880-368d-4176-9c54-d2d12128d7c1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ae596544-ab4a-44ee-9590-f0bfd36b4f91"
        },
        "item": {
          "id": "b1b0f290-4083-4505-844e-d0ee693d0053",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "77a5ca94-b8d6-4faa-9e14-eba314a71733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9c2af5-6d03-4b14-8219-108d5d77c6df",
        "cursor": {
          "ref": "f2677502-f6d4-442f-ac3a-0e02b7dd612a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a636db78-ac33-4cc2-a824-b3cd5e671ef7"
        },
        "item": {
          "id": "ff9c2af5-6d03-4b14-8219-108d5d77c6df",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f2c48688-4d2f-4234-9115-1a6bc3ef7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc596165-7390-4403-b730-71a4b2b3abc0",
        "cursor": {
          "ref": "ebe7f891-8dd7-4b4a-9dc0-4c3dd26d2548",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80e710e4-1700-4dcf-8b88-495623caedb8"
        },
        "item": {
          "id": "dc596165-7390-4403-b730-71a4b2b3abc0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3d0188c0-b2ca-46b0-942b-5021b974f658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95386e7d-6005-4bb4-92ce-15d80193b876",
        "cursor": {
          "ref": "11b41d68-d27c-416a-ae9a-a44c8396ab79",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e3d9256-8001-4182-b8bd-aa3235933cfe"
        },
        "item": {
          "id": "95386e7d-6005-4bb4-92ce-15d80193b876",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e881ee62-6438-48dd-a956-02524826e1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f4369-00e2-4e08-a50e-0693122d8cff",
        "cursor": {
          "ref": "394839bf-e176-48ae-850b-d1fe78b0c35a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a34bf9e8-cab8-4a26-a3a5-84357db3eb7c"
        },
        "item": {
          "id": "fb1f4369-00e2-4e08-a50e-0693122d8cff",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a8c4195b-fc3c-4427-8a4f-84181f7eac59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db4ee79-0305-4a85-8be9-0da71c986abc",
        "cursor": {
          "ref": "ebdc4fbe-f7c2-4065-be6c-e119dc6d84b7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0994de67-773e-4f30-a0d1-f2865b102434"
        },
        "item": {
          "id": "7db4ee79-0305-4a85-8be9-0da71c986abc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "632aa892-e140-420c-a94d-c33cd645320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f024ba1-12df-4636-9938-370350a5fbd6",
        "cursor": {
          "ref": "c001516b-2d6d-4794-8799-410ca5b625ee",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fadfab83-f44a-48de-94e5-d67e97cbac40"
        },
        "item": {
          "id": "8f024ba1-12df-4636-9938-370350a5fbd6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b4826eb3-f111-477f-89aa-bf4f7a7d4bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5793787a-333b-4f3f-9879-14e59c39e5a1",
        "cursor": {
          "ref": "fb6edd8c-7886-4cea-90c6-09f8f759b097",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "caee84f3-943c-4676-9467-50c3dde029b1"
        },
        "item": {
          "id": "5793787a-333b-4f3f-9879-14e59c39e5a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8e4f0629-92b1-40bb-995a-ca93623c84ee",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "ed67d1b6-138b-4460-84d9-0fe86ea131a9",
        "cursor": {
          "ref": "086cb1f0-ca6e-45f2-89cb-a72a9d58ec80",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4ce98082-1e60-4668-8a5d-25bd018b2252"
        },
        "item": {
          "id": "ed67d1b6-138b-4460-84d9-0fe86ea131a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "046b6f76-1d74-4601-b9f3-8010ab5f3eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc9a7b3-63bb-4da8-a5f7-dd2d0486427d",
        "cursor": {
          "ref": "5d35f3af-bfbb-4b25-bc7f-4894d13c4a1f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "20470384-0eb8-41b0-9694-1dda3322b56a"
        },
        "item": {
          "id": "1dc9a7b3-63bb-4da8-a5f7-dd2d0486427d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68142c6c-023b-46ff-882b-38b95741785e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34e1586-3ec1-4447-b6f4-045fc8dceb28",
        "cursor": {
          "ref": "18fdc851-ee6e-4d4c-8084-bce886b8242d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e0cf328c-05bd-40a8-bac9-648cd7a9a892"
        },
        "item": {
          "id": "b34e1586-3ec1-4447-b6f4-045fc8dceb28",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "52d09130-ab1e-4e9a-b983-c5ec85c010aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ddd55c-0ef9-4b63-a07b-3d68bc0e552f",
        "cursor": {
          "ref": "1fabfb98-57d7-426c-883a-9a850edfeea8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "525d7e27-504c-4355-99fa-dd85ddbe9989"
        },
        "item": {
          "id": "16ddd55c-0ef9-4b63-a07b-3d68bc0e552f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f0136d7-8191-42e7-a67f-5ba001004279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef114c7-57a3-4ef5-95c0-5c443920175c",
        "cursor": {
          "ref": "a1312ddc-ad71-4ce4-a126-4abb8364927a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d4b72c35-eb5a-40bd-ae7e-81b8acd7874a"
        },
        "item": {
          "id": "3ef114c7-57a3-4ef5-95c0-5c443920175c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8d5b01f-f273-44e6-a8e6-18d97de66ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6deca9-0788-4eac-a975-03da167af4a9",
        "cursor": {
          "ref": "5cc3fdcd-1daf-4e85-a7c8-22389b88e0fe",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "42da7fe2-daed-4829-b230-7f27d11677da"
        },
        "item": {
          "id": "8f6deca9-0788-4eac-a975-03da167af4a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cb7dd55d-efa8-42f4-b791-1424ac4d53ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924a82f-4097-457f-a310-243a29cb7f66",
        "cursor": {
          "ref": "0a782cc4-302f-448c-97ba-b0c7732a6cfc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "db93eb86-3dcd-436d-ae7a-e00483791664"
        },
        "item": {
          "id": "2924a82f-4097-457f-a310-243a29cb7f66",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "63658c96-2ad0-4ee5-be93-e6dfbbe4f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba4ae4-6320-44e5-a724-4ca21e5a4319",
        "cursor": {
          "ref": "f60ba38b-53bb-44cc-8d0a-5fdd645a3f72",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f9a9b799-6316-425f-98a4-4d633ef5ef8d"
        },
        "item": {
          "id": "88ba4ae4-6320-44e5-a724-4ca21e5a4319",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d5b26219-aa3c-46f7-bbc6-414cb989c914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa4e077-ca92-4086-b512-e5f73463210e",
        "cursor": {
          "ref": "f1e605e9-ba9f-4141-aaf5-f299f6201629",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "58bf0323-80ff-4944-9262-ad3085fd42eb"
        },
        "item": {
          "id": "faa4e077-ca92-4086-b512-e5f73463210e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a46c1611-2d31-490e-9900-f110ea4362ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a781c210-25aa-4c6d-8ea6-315507e9b983",
        "cursor": {
          "ref": "5eddf6c0-a784-4d76-b56a-fc67d1c7f279",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3c1d0f01-68dc-401c-815c-124220717214"
        },
        "item": {
          "id": "a781c210-25aa-4c6d-8ea6-315507e9b983",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "01fc271b-5fea-4b4d-8c3e-06509bbaea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45421dd2-3442-42c2-845f-6d04bc1134d4",
        "cursor": {
          "ref": "8ad4118b-4bef-4636-a959-0351adfd5d93",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7e7baf32-04ce-4be8-8f26-2cf725a6e7ca"
        },
        "item": {
          "id": "45421dd2-3442-42c2-845f-6d04bc1134d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6b1d13e5-be87-4f54-903b-69af4af463b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ac2c87-bf22-4185-91da-00a38df9cfd6",
        "cursor": {
          "ref": "49dc0893-ecfd-4d40-b1fd-9dccbbbbbc05",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd3d5142-d281-4bf0-acc2-1d7e38d810b3"
        },
        "item": {
          "id": "a4ac2c87-bf22-4185-91da-00a38df9cfd6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c9775856-4eb5-4118-a06d-2d9763eeea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d43de-feae-4089-9a47-1643c1ae8f40",
        "cursor": {
          "ref": "7db166f0-0ad0-4c28-8c01-275620c3f358",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fc3497da-e6c0-43a2-93ea-768d2fb5e327"
        },
        "item": {
          "id": "b00d43de-feae-4089-9a47-1643c1ae8f40",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e0592d02-20c4-4f1f-aa8a-490d5e1a4141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0cad5b-1316-48e7-ac74-b3a559d328e6",
        "cursor": {
          "ref": "792474fd-1c41-44b6-bbfe-d7adf53c5dcf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a0452249-a449-4e8d-a9b4-d6b8217fa093"
        },
        "item": {
          "id": "8d0cad5b-1316-48e7-ac74-b3a559d328e6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d7cf6d74-03bd-47a7-8fde-2163813e8dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fe59c4-7e3d-41c0-ba21-de52d52b8b7a",
        "cursor": {
          "ref": "299dc9e4-c3dd-48d5-8573-a8b867377369",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d52e6cf-780b-4e54-8d24-ec328e438b4b"
        },
        "item": {
          "id": "12fe59c4-7e3d-41c0-ba21-de52d52b8b7a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b013fad9-4ac3-4dc5-be99-b9a50126e3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791037c9-82d3-4be3-a33f-c1779851f0d9",
        "cursor": {
          "ref": "c3a937db-ca93-42e8-91f4-46e539d69107",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1c4505a2-26c4-4b61-a602-d48b52478501"
        },
        "item": {
          "id": "791037c9-82d3-4be3-a33f-c1779851f0d9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0ac25c2e-5d01-4a46-a941-de8c872f56f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a296effa-466c-49cc-881c-96c85fb2a668",
        "cursor": {
          "ref": "9a1ebbaf-73e4-4628-b7ed-a82efcafd201",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "19037e05-3d81-4274-ad13-ed551fa52183"
        },
        "item": {
          "id": "a296effa-466c-49cc-881c-96c85fb2a668",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b88790a7-c480-4ab0-9983-cfc41ea9f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b1577-623f-462c-ab68-79d3d5ed5a2f",
        "cursor": {
          "ref": "36d15d11-b537-49ee-ba4c-e630bab5d0d1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46017eff-d349-4290-b627-499dee6f91b2"
        },
        "item": {
          "id": "676b1577-623f-462c-ab68-79d3d5ed5a2f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b4c9837-1ecd-4b2b-9033-936c436cb458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2063cb0b-e13d-4c51-9b55-a1078b33edfb",
        "cursor": {
          "ref": "18fd688d-5cb9-4dfc-a3e4-2992dc464307",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f4ddedf9-31d5-4bdd-a912-a538afffd387"
        },
        "item": {
          "id": "2063cb0b-e13d-4c51-9b55-a1078b33edfb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9e9eda1d-b89b-43d6-8a5a-505db50b3b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf990d6-e3f4-4059-94bd-2ceaa9711b19",
        "cursor": {
          "ref": "f1d5eeb4-4b90-4f38-bb38-2a2699228dcf",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "67b42ec5-21f1-4c95-b09a-88778a7c88fe"
        },
        "item": {
          "id": "acf990d6-e3f4-4059-94bd-2ceaa9711b19",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5827ab4-fcfa-430f-945e-f557872c82da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7d1f20-bc21-4be9-a51c-56b1cbc2a54f",
        "cursor": {
          "ref": "37ad472f-773e-448f-97b6-f3768737e129",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "589b82e8-3561-4319-9b1c-c70fb90ce13a"
        },
        "item": {
          "id": "5a7d1f20-bc21-4be9-a51c-56b1cbc2a54f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1b863b87-357d-497a-bf09-45002e7719e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adf566b-1e75-4219-ad89-5e3e71b4407f",
        "cursor": {
          "ref": "cc7c0128-243c-4a20-8c40-5af1483da164",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "72787206-a107-4491-937d-a80f07b2d035"
        },
        "item": {
          "id": "1adf566b-1e75-4219-ad89-5e3e71b4407f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "336b7454-0cc5-4b57-bf8f-8345068c6930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c42f606-2167-4d0a-97f2-19517346c7e1",
        "cursor": {
          "ref": "e685dd7c-42ff-48d2-9e3c-cc593db5239f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "815c1168-0c1f-4a1c-82c3-34eb3dea851d"
        },
        "item": {
          "id": "2c42f606-2167-4d0a-97f2-19517346c7e1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3c3b91f-cf35-4eae-9b3f-e57e1cf2f916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de06a58e-07c5-4e28-9246-12be16c7cd10",
        "cursor": {
          "ref": "7c2808b5-71a5-42f4-9ce8-402e3dcea87c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "37f3a3b5-ab90-4edb-86d4-16be800a11f3"
        },
        "item": {
          "id": "de06a58e-07c5-4e28-9246-12be16c7cd10",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d7800502-aae5-4a71-bc3c-6e52bdb832af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e25c52-d357-41c6-8c6a-67b5af7a5328",
        "cursor": {
          "ref": "4338219f-2bed-4009-837b-4660190b7c3a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "06cc8ec4-acb3-43db-9d5e-e2cfa66bb536"
        },
        "item": {
          "id": "05e25c52-d357-41c6-8c6a-67b5af7a5328",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8ee234cf-c022-4ed0-aa50-7ed76a344076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d595a0-0489-4867-a7b2-896b34f5c890",
        "cursor": {
          "ref": "3da18737-a220-4733-bbff-2f4f6d6de304",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0c8e5b50-7602-4e66-856f-9be666ef796b"
        },
        "item": {
          "id": "c3d595a0-0489-4867-a7b2-896b34f5c890",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d9022769-54cb-4efc-a6da-95a0faf3d477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542fe88-df71-4787-bfac-fb17a7a3ea85",
        "cursor": {
          "ref": "c86db2a2-ec00-49f0-9049-47de87449432",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a77a3d48-eed4-4cb7-8f8c-78b67bf1a86f"
        },
        "item": {
          "id": "3542fe88-df71-4787-bfac-fb17a7a3ea85",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "60301b09-8e40-4ceb-8ac1-4e92ef01b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e537cb6a-c2e5-4b67-8955-07f9b14f90fb",
        "cursor": {
          "ref": "24722e70-7e0f-4ef9-aeb8-9dc366f17e20",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "57b23112-fc3b-4d26-8cac-92a3d9630a7f"
        },
        "item": {
          "id": "e537cb6a-c2e5-4b67-8955-07f9b14f90fb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c0387d7a-8e97-40e5-95b7-e01805d10aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1402319e-8018-4082-9b5f-923ebafe9fa2",
        "cursor": {
          "ref": "1488e5d7-eb3e-4929-8b48-7864efab8c1c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eac931f3-71b7-496a-b7f3-20acb4a13bab"
        },
        "item": {
          "id": "1402319e-8018-4082-9b5f-923ebafe9fa2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2d4e7047-2ddb-40c1-ad9a-029896222e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bca4872-cf2b-4cd1-95b7-e473807730de",
        "cursor": {
          "ref": "271591e4-6040-4402-83f1-6e7b9fe5f7df",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e756e264-92f4-4552-b55a-8d223c09f73b"
        },
        "item": {
          "id": "5bca4872-cf2b-4cd1-95b7-e473807730de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "87b61b07-4431-4621-bb34-91ec1c63d4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37eebfa-1f5b-4f33-9dc3-5eb348e63e08",
        "cursor": {
          "ref": "4eab2778-1193-405b-bd3a-77eb6f81d62c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cc4f785d-7d35-4020-80b8-e6e81584b4e1"
        },
        "item": {
          "id": "c37eebfa-1f5b-4f33-9dc3-5eb348e63e08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "51bd7b48-837b-4fed-9a31-421bc554f3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cf438c-1a33-4404-8b89-01283a351ba8",
        "cursor": {
          "ref": "d56ef821-ac91-461c-8615-393142d6772c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3448033b-1a36-4d77-afd7-cc7ba1712f32"
        },
        "item": {
          "id": "a0cf438c-1a33-4404-8b89-01283a351ba8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c6610ca1-2c2e-467a-9241-f717c1d8352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0c9ae4-c7c7-425b-97c8-db3244579646",
        "cursor": {
          "ref": "413664b2-11aa-4adc-bf18-c655110842cd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cdad7b04-5c7e-4f5f-ac06-ec1f978b5961"
        },
        "item": {
          "id": "fe0c9ae4-c7c7-425b-97c8-db3244579646",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4c3b6b7-a685-4524-b87f-b8b258d42b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f15084-92c5-45ec-a051-f2ce6c404aa5",
        "cursor": {
          "ref": "2aa4c390-bf6a-4677-8299-c0bc9c9558ce",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f0d0234e-e244-413d-bc5f-312a9dac7ab5"
        },
        "item": {
          "id": "00f15084-92c5-45ec-a051-f2ce6c404aa5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b0c0dbe8-9e40-4f0f-9847-92c33d70c3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f131b279-4a67-4675-9689-3132de257042",
        "cursor": {
          "ref": "48cc5978-c591-4eab-9ebe-8e1b187e94ab",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d1a3948e-29d4-44dc-8b68-3a65247f6747"
        },
        "item": {
          "id": "f131b279-4a67-4675-9689-3132de257042",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "15acd630-5f83-4e0c-893e-421fc4d9aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1cb753-38b7-48e5-8b6f-4986d285d9a0",
        "cursor": {
          "ref": "96e9b895-d6ec-444d-a858-c3f1678a33a0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e562db51-ef02-48ad-8896-47d77e870536"
        },
        "item": {
          "id": "1b1cb753-38b7-48e5-8b6f-4986d285d9a0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c3e2e7ad-ef6e-4e4a-b1be-5211083b8955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b77969-d49a-4aa5-b759-289247d64f01",
        "cursor": {
          "ref": "351a4dfa-57cc-4361-b5aa-d354851d6e91",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a847a0e5-e180-440e-97b6-afecd51a82df"
        },
        "item": {
          "id": "49b77969-d49a-4aa5-b759-289247d64f01",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28c6ab57-dcc0-4c08-bdfe-8a104f3bd00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f7f67f-5595-44c5-8366-1a4b59767f7f",
        "cursor": {
          "ref": "809142b7-ee85-4596-bdd5-7c77ffd48496",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f3394c26-0a17-49ce-b38c-297dec00f844"
        },
        "item": {
          "id": "f5f7f67f-5595-44c5-8366-1a4b59767f7f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "441bfa01-06bf-4ca7-88d6-c7a409f4f2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4e0cbd-5cea-45f2-af7d-30a18167b839",
        "cursor": {
          "ref": "ba7b19da-1a27-4d1c-9c19-89dc36d622ff",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a0cbb7fc-9500-4dd0-86fa-cd3cd2c26915"
        },
        "item": {
          "id": "dc4e0cbd-5cea-45f2-af7d-30a18167b839",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aba26004-4f8c-4a9a-87a2-2da8252ae9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280f9c3-3f20-4af0-a851-b24ce8859ea4",
        "cursor": {
          "ref": "e4d7414b-b756-4875-adc1-7c5d0afd25b0",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "84644b3d-4fc2-424e-9f8e-8ec6f9e4aca0"
        },
        "item": {
          "id": "c280f9c3-3f20-4af0-a851-b24ce8859ea4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39e58415-6e90-4780-8bb0-7e03d7e8d7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb9d684-22e5-47c8-aa7c-4ebe2c7dac97",
        "cursor": {
          "ref": "f2b6bcfd-4491-48be-bc9f-b651c82a42f9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2ed74c95-9438-463f-9f2b-4ac83a823d0b"
        },
        "item": {
          "id": "bcb9d684-22e5-47c8-aa7c-4ebe2c7dac97",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1463d2d1-2eff-411c-8da0-e96d27343b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d1aaa6-fb6e-452a-9f04-299d40d0107e",
        "cursor": {
          "ref": "b149ad4f-2f55-4afb-915f-c6724ea0cfe6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2366d91f-49a7-44be-b7d2-eb1ad8478de0"
        },
        "item": {
          "id": "a2d1aaa6-fb6e-452a-9f04-299d40d0107e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "edd75dba-e9b9-47c4-9605-a00c7ea4bea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532391a8-4713-4cf8-87c8-5c41e9449fc6",
        "cursor": {
          "ref": "08c0bced-a149-49e1-8808-e946e067c0b9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d362154f-dedf-422b-8500-fe03d34b4dec"
        },
        "item": {
          "id": "532391a8-4713-4cf8-87c8-5c41e9449fc6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "63b921bd-8651-408d-acf5-4bd70e441571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbb22cb-777f-4499-97e8-a3d55bd56ae6",
        "cursor": {
          "ref": "e04c7ef0-bc12-4607-8f75-48362271526f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0aa5ecd1-541a-4202-b3e8-eb780d6eb2ab"
        },
        "item": {
          "id": "ffbb22cb-777f-4499-97e8-a3d55bd56ae6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "57c91f85-61fe-469b-bc0b-e0976bf4a828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49a64e-ecbe-45aa-8c4a-1cf60fb63c79",
        "cursor": {
          "ref": "da769b16-eb78-4fe4-97e6-a6a521f7dfd2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6711c316-03ad-4faf-9931-3c6a0474eee5"
        },
        "item": {
          "id": "7e49a64e-ecbe-45aa-8c4a-1cf60fb63c79",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ac3da24f-2469-44fc-9c7a-05fba554bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86183673-1801-4a6d-8644-61f6e3cb36ba",
        "cursor": {
          "ref": "9638061b-f301-45d3-9f80-4dbc3e954f0b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9895bcb1-9d07-4682-a0c5-5323a5e275b2"
        },
        "item": {
          "id": "86183673-1801-4a6d-8644-61f6e3cb36ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d05b5f87-8139-4888-8901-c650a1c73efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb04b5f9-2159-49f2-97ea-b5dc3a06a861",
        "cursor": {
          "ref": "6530e6a9-cb65-4f0d-b29f-3fbcc2233569",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9af5b8f2-aa2f-4c97-8a5f-7a2c6d32b4ed"
        },
        "item": {
          "id": "eb04b5f9-2159-49f2-97ea-b5dc3a06a861",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4cf13a48-7139-4959-a5a5-812017157f05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb6f336-3cb8-4aea-acad-7c67d5149c0f",
        "cursor": {
          "ref": "c4330702-d645-4ad8-973e-4b5625664d28",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "454ed5d3-525d-4ca7-b52e-5a048db1e1bc"
        },
        "item": {
          "id": "bfb6f336-3cb8-4aea-acad-7c67d5149c0f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "541f6a8c-1ff3-4815-a93e-dae54b84202e",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58039a7-c876-4306-8912-2834559eee03",
        "cursor": {
          "ref": "740cda91-b984-4d87-99c6-de6e6f849c74",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "00d3d765-bc96-46ff-8b94-cfc10a534e4a"
        },
        "item": {
          "id": "e58039a7-c876-4306-8912-2834559eee03",
          "name": "credentials_verify"
        },
        "response": {
          "id": "76dadcbf-5673-4971-baad-cb705f4c70c4",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6869e319-6e8e-48ef-9e78-6593dd068441",
        "cursor": {
          "ref": "7925e9dc-13e2-427b-8e01-9db1b5124412",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da001bb7-1368-43c2-881b-915fd144fb21"
        },
        "item": {
          "id": "6869e319-6e8e-48ef-9e78-6593dd068441",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "655b0d5a-1d1d-4400-a8b1-66b4b4ab186c",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5823d369-a805-4101-b57a-35c1e2adf755",
        "cursor": {
          "ref": "b3d00ec1-7f4f-434e-83a6-47489fff40fb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20bd66e2-d6d3-49f1-9d67-cf3f1654aa27"
        },
        "item": {
          "id": "5823d369-a805-4101-b57a-35c1e2adf755",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40f468b8-22c6-40f6-8f58-cca67ff64345",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5823d369-a805-4101-b57a-35c1e2adf755",
        "cursor": {
          "ref": "b3d00ec1-7f4f-434e-83a6-47489fff40fb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20bd66e2-d6d3-49f1-9d67-cf3f1654aa27"
        },
        "item": {
          "id": "5823d369-a805-4101-b57a-35c1e2adf755",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40f468b8-22c6-40f6-8f58-cca67ff64345",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02f2d4-27f1-4ba8-8448-4b273f473228",
        "cursor": {
          "ref": "5afb4de8-adf4-4283-96e1-aad9040534f7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "334cd744-8740-49c5-a574-86245bd92ffd"
        },
        "item": {
          "id": "fb02f2d4-27f1-4ba8-8448-4b273f473228",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "193f5285-f4c9-446c-aa49-1881e4e14c47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295eaf31-8c82-468c-9dda-e72994b1cfe3",
        "cursor": {
          "ref": "55f9ca70-9a76-4fa7-8730-1efc29c7096a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "299a8616-83bb-4b3f-9fbf-010f5f1a74d7"
        },
        "item": {
          "id": "295eaf31-8c82-468c-9dda-e72994b1cfe3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5dbd51a0-12fa-4c87-bca3-e83a4db27d59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}