{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e5c1a93-7b6d-480e-b8a7-a03c67a07269",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d0319c3-af52-4da8-9f1d-f18af1e57a16",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa31f6c2-9b2a-47e8-a4d6-6339629843b1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bb90201-62c9-4cfa-a3fb-bde743be89e3"
                }
              }
            ]
          },
          {
            "id": "3b7ca657-57df-4ffa-b19e-7db104675f25",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a01d2e0e-661e-44c1-804d-b17b332aa628",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d528140-5456-40b7-a158-633f9260bfe0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84e24d3f-1299-421b-a3e3-6c6361f24d12",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "84142d2b-dfa3-43f6-ba56-169a72eb60a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa7f6dce-4d6e-4397-a7f0-0222a6aec73c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22fd267-f0be-4f79-a0c4-63b54d0faf90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4942f3c1-f68a-4730-9ca1-37b1de23f4c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "337fc761-e5b9-49e2-82b8-68c9a6aac6f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdbf6df7-996c-40ef-a615-c606bbdbf71a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3cfc1a9-ae64-4da2-bfd2-bb2c26576f31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01a7782e-c005-4196-a27c-9f7bc8e5e3f5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee995d9e-e553-48a9-8c29-884c58745b32",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "546eb1e7-177d-4682-8706-00724804cf27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "049548d9-d083-4f32-9596-b448adc11e8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ae6b4b9-ec5c-4b89-bf51-0a330ac7c9d1"
            }
          }
        ]
      },
      {
        "id": "9cd45666-7740-45ac-a18f-a620f4b22018",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f582c478-458c-4f59-9673-2ecc2af72701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d39a626d-6b41-44b8-8f2a-9a289967f702",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efd8240e-80ce-4f70-b095-b038e13bd897",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef48c96-6931-4f4f-b223-1cb5a310f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fad769e-c264-4b7f-b64f-4ee1075e82ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f32e96-6fe4-4144-9a1a-87cf940ae6e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879bec93-f591-44ec-b495-c5f3cce49a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f568afda-d425-4421-8310-36eb6c57dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e66b183-bcf7-4b86-8d47-ecb8864ee518",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd360eed-f8e7-40b9-af4e-28f5e2ed8a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea1f2e96-4047-4f77-8a59-ac7354067ef1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc1ec5c0-1e91-4490-82a1-74d41a406da2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e4b4672-88bb-4de5-8f29-5d798d6fc41f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4803222-d5fc-405b-a0d2-cee6f9fa6da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6aafa67-7b92-4c0b-b653-54a9e93c1d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8398339a-2f9c-4585-a5cd-d3a4acab2a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac71734-747d-4721-b58b-3105c471b304"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3d16b96-39ba-4c1f-93db-103c7dacc1f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c2f1e3f-9483-4ccd-96e0-ad01e7bb48d6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9832e202-24c3-40f4-a68b-d2b9efce6cde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0921258e-37c6-48d0-aace-7ec19b0f1c7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bec904cb-5a35-48fd-9c36-8cec07d1d8b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1c9e8dd1-5577-4049-96e3-6da7396f7722"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbc0d28d-6cc9-490c-a2b8-13d9ef4b56d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51bb1620-1d16-48e3-9e38-24e8e7a99230"
            }
          }
        ]
      },
      {
        "id": "230d8988-383a-4dd5-9b1b-4c191c8caa9b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "35e24d19-f02a-4d51-9b3d-d7a5c9796aba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ce05f22-d233-4ec2-a4cc-b94ce6e1c397",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "61108fe7-450c-4a77-a006-7846ee238f92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5f0e21-aad1-4901-b36d-cb23197db6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac372e97-e4ef-464b-b9ff-bc414af09cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20cba54-50ce-46b3-8b7b-1582de63be13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7548766b-d4cf-477f-be8f-c5ee647abcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dce336-a274-488a-9fa4-22a6873a3178",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd15ef77-cd39-448a-92d5-d6e1e4d0c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c983fa11-0276-47cd-aca7-dbc380cb068a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3301e2-b30d-478b-a200-a9f667bddf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e9142d-ed90-4fab-9c7d-e21e50535c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d001b428-8fe7-41b7-9299-1782f31b07f9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d9b5f1-13fa-42ed-b1ec-8a8339cdffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b49a05-f7dd-44d5-b36c-930fe10bc5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9282bb58-9830-4861-82b9-755ebf19bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97219bd4-e7a6-4081-835a-dc6b701a17e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201c4abb-d6b5-41fd-8b90-244f9beceb2f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612145cc-a014-4f2d-9dbe-ca444a318abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a37730-e633-45bd-ac4c-9f1b0f1548ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59447759-8b51-4151-aaa5-cfdc41ed028b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19bf7e12-f2ef-406c-9fc0-60a897b99ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344a4df5-4e1c-4047-9e54-3e412c228f75",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20342a12-af78-414b-81b9-1bcfa7ebbcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0452800-1d36-4956-b7cf-9876c6240536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2895acc6-4484-4739-ba0e-0a37fa8248d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb2f33d-13cc-4889-b50f-6be631c67b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca8c38-ac48-4e3c-9dc5-11dd140ed821",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3f14d8-a530-4cdf-bd96-0f28e72e6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee4ac3f-3c94-4e48-a14e-f46d507d2f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7116df17-abe9-4305-8b60-14bf30161411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5863a5e-0088-4b6b-a683-cec44a79f2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0f7552-cd87-46af-921f-4a8c26804021",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f560e9-4491-4d71-a10c-6682352ffe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb5925a-ce59-4c3c-b29f-bd4d68544354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa66fbd-6176-436d-9ef0-ec8b324806a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "247499b2-a329-4d36-8912-573ddb0ca9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcbb55b-bd29-430a-a362-7bd97f8b9a87",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912dc78-66a0-4890-b262-59b1fda4ff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd51bbda-f931-44c2-a5cb-381dfed38ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e7b848-6a66-424d-a76d-d7cf5847f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9761ca6a-405b-40b3-b657-3e36aaadf2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b14df0-ab2a-4784-bce9-7e691eee49c8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f79a05-bf9e-4293-8008-4f5b8ff39485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206ba278-9cf9-4513-981f-560232b1efb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95567785-6786-4cf0-9295-c36b3763a83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4821a018-5792-45a1-83a0-f3f47897d254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb7204c-69e0-4c9b-b137-f55ad8498f66",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b90543c-cb36-4e90-b8bc-817888e4e68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d684f1c0-ed10-4ed4-8b39-964c139188f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a27d7e-b61b-4a78-8df2-e7560f167655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5789918b-99e2-4b9a-ac05-25da53f25129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f14b967-55b9-48d2-9a9f-e19027eaff4c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4922ce1d-c1ff-46f5-90ee-8878e9a32b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bf52a6-db2f-4b48-91d5-68aeb44c1806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d64250-e6f6-4e95-b5e5-1069d28f25d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b2ca618-44ae-4c19-b86a-7b2f2757736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69448eac-f292-46dc-a1ce-80aab40dc9ae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c080f6c2-70a9-4404-a321-b8b8e5fa218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d44f812-2bad-4e67-8992-d9227cec82d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe917914-a998-45a9-9c26-89ccf1b42731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec1b307d-df8e-4b8f-87f8-1d257037a870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de08854-e1c5-4cd9-8e91-04f0e0ce99e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3292d7a-60f5-490b-a27a-072524617fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd63fda-e70a-4f96-b885-aa891abc8066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da8548-9250-4a85-8bb5-05b6ece94c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6e6ca8-7d80-4e0f-8c70-62ad8c135949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6bc44-74b6-4f28-a440-f820a0b0631a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a386b364-3ecf-46b6-b032-6a6a3430edc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f67481c-a6ee-4ea2-ae5d-02bd055c54be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92562713-99a0-4cce-bfcf-d5d5df1daeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fb215a-4ade-4c33-a5e8-78285a7f4c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be0a189-7001-4f9e-9eb1-07ef8f501ca4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a01d6ce-fc18-4fad-b633-095f248cbe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d854df4-53f8-4282-8215-0f27d2a4cd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e5d71-a8f6-4a89-8b81-826c7d3b2ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4484b08-faa0-4e47-91f3-b43fa5bc2c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a9ee6c-2299-4a11-ad15-1eb9eccb43d1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d94a5-2453-4c5c-ba7f-c1b95d7421d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d205c5a1-dd7e-4924-a466-e85f034a806a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f37f9f-c381-4057-98b5-a55423d8a5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0cbc456-2389-43d3-9c58-aa40f48dbe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a952aeda-9f34-4597-a6d5-62cd733c8783",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b0375c-043f-4e43-ba31-2b28ea49834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75dd5bd-71f3-4b89-b272-568ca4a6c39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa909fe6-8004-4658-8903-62e1730121df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b451f3-6ae6-44d8-beec-569a4ea42b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d19741f-e6cf-4a56-b76d-a25c46429a15",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141ed00c-7b2b-4cd0-a330-f2369b61ee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c96d6d-533a-42aa-bb7e-2e33dfde36cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a671f68-14d0-472b-aaa7-645853859fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f15b2ea-2e03-41d5-b244-8ff89ecd8e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f93ef8-3a33-415f-9676-46d8e1da44ce",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160be9c-4883-4879-b31e-09de40813345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f636c11-19ee-4a23-ba44-fb227421085e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0ead5f-1fa8-423a-b9da-b9b11e23d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fe4211-4b9b-48a4-88b2-bf62d2ac55ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77ecfff-2448-448f-86a7-2cf70fe6163e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b1f436-ecd6-4373-99a6-776f40f95cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bb8241-bae1-45f9-a583-ffd11b14f4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1f3789-4763-4805-a7f2-c76963a7746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd46e1ee-2d7c-413f-8f79-da2d8dfe6595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4beb05-f264-494f-8aac-ee2396cc73a0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d42cfe-8fba-463d-b252-3c477545c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ea0744-dccd-4402-8f91-a449627bc300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1a07d6-20ea-4a26-998c-4b76e1d5fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaff7fc-c0fb-459a-9612-59e5b7669654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aa5a7a-5817-43f7-8ea9-ab2e903368aa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4455312a-97e2-4e4b-ac7c-a3061a07b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a567f0f-073a-47fe-9f37-468dfb6fd408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c561eb-0218-4492-a8cd-ccb22ce47c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953d4ecf-8354-4a41-9519-330ebd3c686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892e2db-63f9-43f2-94d5-ff17db43b48d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6e5b00-7e2e-4805-a548-c11d92920b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a618f92-a402-4b84-8bc7-72702aaac67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab97f5db-59bc-4b63-98f9-9eda45a8d671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e0e1c0-e139-4ed8-bd27-7c5b0ff72472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c618cbd-9e90-4c08-8125-beea3f7d39f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6891fac-b906-425c-9212-3bd2112e4ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f47fe4-46a7-4f19-9041-03d1e12d05a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ab6b0-0230-45b2-a6d5-0711aef66c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb3f796-1a27-40a0-bac4-23c6804e192c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996b025a-9be2-4417-a185-eb3589b0d1e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0a8673-19dc-473b-bf6a-4cf8c212e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb09f66e-b69d-4d9b-a06b-21f30c9ee958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4dd45e-1332-4955-8e20-890dcffd0925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4c5649-bcc8-43e7-8233-7ad4b8c5c353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342b5a84-06b5-4691-852d-de495cdf05b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67133d7b-d64a-4400-b9ed-9aadb174bfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c215105d-f69f-48f5-ae31-24b7bb422f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f109c27-bb73-47db-ab79-2cfa6cc106f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6688021-9769-4d74-83d9-45540697e874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b06794-fdba-4a5d-97ee-dc7b3374e59b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679cfaca-b8f4-49f1-8a59-968c82ae732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dfacc8-62bd-4872-89d4-79845b8731ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae00bd1e-511e-4ef4-865d-ac6ac1798821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e1d89f-67c6-4eba-9a16-52d0b8d315f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b61404e-c224-4f7e-bf09-3aa324370a9a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dce670-ad2d-46ad-8d69-cdfc1180ca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8331b5-fe7d-44ed-8c06-09f837474d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33da327-c39d-466c-ba44-ea4cc2a9d366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6282321a-b3d6-48af-96ae-749688f14569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399931d0-0f21-4aeb-9f65-ef0664bba5fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e671a5cd-cf9b-48dc-addb-aaf0d10d5018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485fc1ef-935a-416f-ba97-dcfc4414cc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f7da7-f49c-4248-a2af-8aad45b07a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6466b5-b2e9-4798-930a-d4dbc4b598c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a3483-7ef0-4e66-90ef-b0e40f1aa0fb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6b365a-e493-4aed-80a6-328a35dcf78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e4ba51-e9a4-474f-b3d3-6a91e740c737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb3c56e-6441-4a26-bce1-274b75bc0d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8779cf76-0291-48ae-aac8-8029c85f2611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4268b7-59f3-4d34-8d41-62d5533cd269",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf720789-a314-4daa-aa43-d53abc3ab5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f5f572-4f6f-47dc-ab48-9bdeb0726854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55189a8-5ca6-4c08-8583-3b6b98710193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6715c6-0495-4502-82a3-c486a2f8c3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ee036b-07c0-40bc-8193-30a883dc396a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deab59c7-1f7e-4d15-84f7-b8495dfc768e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b82e671-7bc5-45ba-9ff9-6d557134f551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7ad7d9-282a-48a8-8770-accf51f2064f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1365cf33-7676-4706-a0d1-507d2a4c9f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dc5856-f4a3-4af4-bfaa-eae55b41d9ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275dd553-020a-4b0e-9186-0ac2c8951630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d35ac3-aff6-415f-9ae3-c9729c13777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e46ed7-8eef-46fe-8f32-231845c15465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0893b5f-5dfc-4ec1-aed9-77509b13158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de15714-abea-434c-b37d-d25e220ae85f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc59b1-7d8f-4f42-8acb-7fb35f3d8ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a087cc1-b54d-4d4a-86db-48b033a7d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b28d7b-dcb0-4fba-b1ac-6baa8e4a2549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9503516d-d4c4-40a4-8446-b9e18a3fd718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b8fe7a-9852-4f81-b23d-13ad8628eb48",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a715c049-b977-4413-9552-20333d9b00be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f398224-96c3-4a25-adc0-e6e549e74662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f0836a-7b96-43ed-83bc-c6ce7f7cc5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "df57c9a3-cf88-403c-88ea-976d5d064384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29851f9-8397-4018-801b-77b32eda0a48",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25408a5-96ce-40db-b4f5-c53f26a5f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95c9426c-0324-4e3d-addd-1a1326dbaa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb48917-8af6-4d1a-af71-434cf69f9971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74f57f79-0018-4aee-9788-3e18b1f925ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964da32c-3996-4dab-9930-f40c173b0d6f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a6859b-a7bd-42e8-a9fd-d75866875bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40005faa-6121-41b9-a1a9-ed6ab09e5032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80d81a5-ea30-4d73-ae64-7f1cf1dbfe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c20cb738-3f55-4a3b-a21e-32569e69f95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fefe55-be7e-4ff9-8840-1389eceaa640",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba0c16-2bab-451b-8591-5ce8a17dd408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a4f4f2-d6e3-479e-bde5-dd91b323def2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f2d081-8a75-4945-a87d-2554ee35c030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0d57fd-ea03-4924-a65c-c7dba09f2ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718b2b60-38f1-4ece-b032-a147f194cb37",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1998d9cd-2464-4121-a971-1777a34f5175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f932b86-921d-4fd2-8e14-ca11fec9595c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77f485d-48ba-4d64-b054-067a788e0096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec53cbc-3eaa-4143-b980-cf6601f4fd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08b0f53-165d-4df8-8876-3f5170dc8272",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffa4d91-fc15-4fd6-a5de-c84d8a47b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0697d3aa-b29c-42cc-a80f-ab7269541bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45cec0-e713-4c36-9670-8dc40892b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08713248-c1f8-402a-88d4-810040263d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6868a-9cc3-49fa-a55c-20da153f28ff",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f322088b-be85-4c89-ae23-0716c634059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15e79cf-dedf-403c-96f2-8228d008d903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcc83e-43a0-4fe9-b99e-a61357d5721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c659dec3-9100-4578-9a5b-b88479b544b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7dbf78-72ea-4107-a77c-ddd39c80160d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be354f-1385-49de-ac11-731bb2059741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bdb0ac-90de-4cd2-9920-48dceba7877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c53a92-954c-49ff-88ee-c45ff44a1ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "231d479e-0ef6-4ac6-a5da-42f9f2951a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b91921-7852-4626-960b-834a5d1e3121",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de17372-b3a9-49a4-a48b-d8c5ec4a4081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f986fe8-c754-46a0-9733-e585a3fd5569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24a83b5-a88e-4b3e-aa7e-ed8593273086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc7ba25-13b8-41c9-aaef-a05f55bc9ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5073ba-7c78-4632-a923-4b835fa7995c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ca7173-7673-45f9-ad15-ff76bd667ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9240b546-19cf-448e-8dcd-930ef0dca137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f11e44-b2d7-4441-9cd8-8832c870173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "05efbf4a-1f25-4e95-b738-d0d85ef6588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a34282b-5601-4371-b33a-ffd89dec5243",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4e7c66-5053-4686-a2e0-3cbfb0ffbe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9210c9-a670-4d50-99c9-936f5bf1a127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22117400-5fbd-4b07-bf0a-97d30678675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58bec5c-6867-4b76-be8d-ce82412f4ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5abf15-02e0-46e1-977e-7b6605bdde4f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf0ea89-e859-4e29-8b06-af119d6e3d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf1b152-7d1f-4587-a84d-be0b91d82f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e9b709-a5f3-4d72-9278-23968a6ecafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffea30b-a790-434c-9309-bf180cb6f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bf179b-3c73-4ad7-b782-d75045db3a4d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9ef39-6ed1-47a8-88b9-df07db7a4d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e22447-9ab4-4adb-9a97-6ffa845d037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306b8c05-35c6-4a8d-9574-a90157dabccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1017e652-9a0b-44df-852d-372079a2d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f1bf0c-989c-4147-93bb-ba09e8e3d704",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1f7b16-c71e-4756-beab-505114d84211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b221ac-5a7a-45ca-9099-17948744dfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51a31ba-28f9-4936-95cd-e161413126d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c1b180-019e-41fc-9e94-30207fbac4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feddc07a-fe29-4adc-947a-cde000b69529",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f8fd4a-729c-4db9-a2e1-51ed9575543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e64dfd-e4b1-4e75-9452-cb09530a2b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005edbe8-f9b2-4d18-a7a1-5a991432a889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7fe181-c998-48c8-94cb-02f497177998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0139883-73f4-4ef0-9387-4b65882e83a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdedeec3-3af1-4c49-9ef8-532e8e0fe62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1259e2f7-623d-4145-8935-994b103770ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a570a2-21a3-4167-859b-f43ec9f62ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d30f1646-d7ed-4b53-8c65-b3be236df6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5a1e0d-ba53-409b-8d40-3225189ef068",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a7c911-3c5c-4a54-9ea0-54885bffc452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a184d6bb-9eb5-4626-a8b3-9a214a71c918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e343e314-ef0e-49ea-b93b-4bc28c73855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df4d80d-d4d7-4bed-a8ca-a414216edbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce21b197-8d00-4660-816f-9e522142750a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f068ff9-e3b7-443e-8ba9-2609112e0f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853051a8-cc80-495a-86c6-afa661f08d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464ff2a-56e2-4d80-b0b2-14df4a647bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a63e89-c251-47ad-8d0b-6e65dad4410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3abe0c-658d-40fd-a991-84d544adfe47",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd9a606-1080-47df-b142-142623a762b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3f762c-4d47-4774-9367-fe3196d9db26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca7b966-ffaf-42b2-ba5f-8d0a8b133617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2999b03-867e-4cca-ab56-1e01381e4091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c6a3e2-ea14-43ca-bc99-e837c7e566ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e129d6ac-31bf-44a4-b9fc-d526f7d2bd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7a681a-1236-4328-8bfb-9c6aafead891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63ff1bb-90b4-4890-9672-0090c2d0b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9715474b-9af7-4cf3-b8c3-249bd8558c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1427bb8-6db5-442b-860b-97c518c9aa34",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce5cfc1-fbff-40b9-9567-4c3eeed07263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaed0e4-a822-4104-9cff-84c3f6b01d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049b5d4f-0ce3-4d8a-bf6f-850c1b22e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12323ce7-5cbd-4473-99a1-376a03f483cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623cdc55-e6d9-46ae-bd8d-a5fdb4b4a0b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3a7788-8016-42eb-9b52-efa724db602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dd977d-bb87-4207-95be-8b5f181a945a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4460480-e02d-4b77-96e0-26be23e35208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c9e3e0-6d3d-449b-bb31-d1eab7c80e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325ec3fe-d6de-43bf-886e-98f0ef500bd7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e685ed94-2cfc-422a-b7a5-498f13f6baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50eb195c-9370-49c7-8c7f-5005e0a67522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e952d623-1673-48b1-a5cb-fa546c1c0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae29bc6-0893-4d1e-8ae2-b425419d694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10468a6-6c30-402d-bee6-e9fd3caec7f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df1fd90-c0d5-47f0-a9d2-b0f76b2d89cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6908f911-e94e-43e9-b398-963382686028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3567435c-041d-4d85-a044-0d661a75e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8720d742-a54c-48a2-96ff-ff9bd38873a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d598dc-00fe-4d7b-be22-feecc824735d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046bc9d1-8b87-404d-94b3-4e49e130b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f95f5e4-e609-4c68-a339-b71bc4933ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6af2c1f-a273-4a4e-80b8-c4658ab0da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1edc226-cf4b-4496-9777-22641f82cd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bc2af8-5160-4e98-8c0a-2426b6b3845d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6265d94e-1d55-410d-8f8d-301bafb2d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da25d8f-172e-415e-b8cd-fbccbca8bce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd395c-1cbb-4644-a43c-cffbe367a220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33b8f84a-c18c-4902-b41e-a6ec87d4470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac25c5-d73c-4bc9-8584-e9206ac59d56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b757c09c-c949-4bec-b62c-e6dfe59c088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f34d258-45e9-4633-8abe-26c8230582eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d76374b-073c-4580-ae5e-2b08df2772eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7d044b-9a23-4fbe-9b89-de6b69c6e783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062bb36c-aba8-4923-a6a0-91c7936637ac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d0e327-c094-4771-a78b-03dfdf680891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0506653-e6e1-49cf-b317-d53954361b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1770c4-7870-4846-ac74-7d48e4c8a975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6348ecf3-2566-4080-a7ce-d9a2a080e5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b0016d-aad0-4015-94d9-258e781b1727",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee3ba97-2560-4b1a-8ad8-adefabdd2c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5c6f23-60d5-44f7-bbfc-ad2d2ca52feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7744f045-8e73-47ea-9a02-33c0d7ecbc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdf2ea8-9251-414c-a3f3-2e3faa6d22ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278ed399-523b-46e7-b5a9-b5295fd09b68",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad51fc5-b87c-44b9-8317-bd459be0def6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bb2450-2426-4cac-b44f-a3eacb78c9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a76e88-4241-4332-a2a4-79c1149169bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d679e974-cb7a-4af2-a84c-e9a024b3bd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962e5e0b-9e7d-4a6a-ab67-5ee0b547ba07",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5355656-1b29-4f79-bc71-9021f058aeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b8922e-fc70-4b52-8ac4-8ff26fbb0ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d375bcf-45bb-452a-a62a-5d5a6023089f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff00be5-4138-4d16-b083-fde993908755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2898a2-d98b-453d-bc9c-0f35503a182f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bc3ec9-ea88-4599-92e6-e33f4fd9327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00187b54-bbb0-4be9-8212-4c6f305b5776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f5d4f-6e1c-423c-b292-9381a0558c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01ae297-1f61-4f63-bce0-d93b460b3bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76ecd9d-2647-43d3-9837-1c0b3167f69e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5184c-664c-4070-989f-21a25d357077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64333804-0d6b-4d33-b5cd-4978f38a83bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16788c8-d0ee-4df4-a317-0a68711a9f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54859928-19b3-4973-9917-bcf56cdb1e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232a19b8-2e6d-4d1b-9074-5b6c15aac32c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ca53b4-d0b8-4899-9a9f-c657825449b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6c188c-7a78-4fdd-9a11-45841abcd757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aed0be4-b2fe-47f3-be02-d2651b7565e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f505345-3919-42ad-ac5c-b54a989c2056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8af3f3-58a5-4676-97ac-f780605c931e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817983a3-8d35-46b5-ad3e-9bdac902856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e60c9c-8343-4b7c-8900-b4908d7fa909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e1aa76-ade2-42c2-8d24-f089b38aad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f0f952-91bb-4435-8746-1f1312183326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92484758-1ddc-412e-8460-09fa00baedaa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc850e8-7434-43c5-8daf-337e96ec102a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435edefa-288e-4f86-a878-9968d6125ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4fbf35-f7bd-4b6c-8da8-9655dd466c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "779c5fb5-59a2-4eb5-8083-34d2cf74148b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0824f2a9-b2ff-42ce-80b6-51670c1f5981",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e77748a-9166-48e9-a2b3-87f47acd39c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca881a3-325f-4c29-b81b-8226bf2e7b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6f8ba2-b86e-4e79-949c-b05997ef671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f497d8-abee-45b0-845e-af7df1e53210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ef923-f0cb-487e-8546-00ec1ea9f969",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da315cb-b2da-4982-856e-112bf15653c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176530e0-563b-4207-8389-6feff4ee8bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e2d227-06c9-40c6-8acf-b84322561d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e14d12d-b414-4c66-97da-e58d22ec3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c437e-ab6c-459e-9797-83cf565b3f39",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182394a4-a8c8-479f-9a3d-1765c5536020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01445972-bfd3-4031-807b-299f21194560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca93fe71-bb01-4ffd-86ac-e9ea46703901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "714ca4da-9b94-48e7-a626-fb384471faf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7618897-6200-41b4-928a-8daa0fbda5dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3e4489-9179-47b4-b3eb-21494c04df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbc5911-38db-4bba-a62c-d09089662e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d4171f-0511-4ddf-993b-2f0ce55ab8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5af1a94-4886-41e2-a8b8-41fced3b3001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e6bc3-d9d9-4bbd-8cd1-a146d50c0327",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3fa4c3-15f7-47be-b107-60b158d39e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3093f3-920c-4831-bbf5-b0891ff1166c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96f3dc6-de1d-4d71-8c2b-f5448936392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74159b3-cf9a-4c36-8b47-ba27f9fa3d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e0f966-8ea5-4693-af95-ce98aa5100b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52160214-7343-47bf-b3e3-af53e58d2e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4a4565-e124-4fe8-a7a5-bfa33cc0b34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f261f1-8b73-4c3c-97f5-2ce0f31db19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de43c5e-2e70-4e4e-a92e-ff34755654c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d042e073-36de-43a1-ac4e-1bc9b7e714eb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e8669-68bc-40fb-a091-c93c0351a228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71df9f9-ab4d-4b24-ac75-861483335f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1e550b-b1e5-431e-b553-94a921757f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a35a0f-ed1e-4869-adb7-4c91438f67da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494470d0-8ecd-4ec1-8f64-deb807ec029b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e672eb1e-894e-463a-9993-4317b2700301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79eb2d95-ada4-4e11-8eda-a8514ef2dab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf658ee-ede5-4f36-b588-51284145666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ff7ded-606d-4826-95e7-b18c645c098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61d66da-b901-4964-bacb-4e527fd1adf8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9617f0-ccf5-4ad0-8621-0308bf01de9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350f33f-be26-44cc-9b58-d8ee4af78616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0017c0a-fef0-4987-b080-8e501fc6ae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b971eb25-9cc2-4d24-99ef-14998384f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e6f49d-7ec1-423d-b588-cf8b5d5f3e53",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c253f-0b5a-4d4e-a297-4a6c8f816951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b88974-f548-4704-b3b7-fe988ebf632f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e864688-f9e3-44a0-ae61-18095a20738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a388a5-914e-4c1c-a0c0-13c58e997026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870e7d22-baee-468e-ab0f-618ffafe427c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8683ad22-dc48-4cc2-b697-a6865b508a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073ada4d-0d8e-437f-9670-8b3aa072ecf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201b1d2-6f2c-48b0-823e-4925a1064394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e70a72e-0925-4e6b-8d82-8c41787c5773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32549f6-8dee-409f-af36-75721fc9a0d9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4976c92e-2f92-415b-b7d4-60e4833fdcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c12194e-254b-4b3c-871f-61c239fdcaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5b985e-6003-4d7d-a1b9-4e3eec8687a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0221d486-d08c-4b46-ab58-7ff10ed5bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4780063-daf2-4f0b-9c37-209f11c02ef5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e18cc2f-4a0e-4b6e-8b70-63f499d11755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1234c803-6103-4903-ad40-e9682cdadfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43330e5-8151-4e30-9e07-24e764d79637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daac258f-676c-4863-86cd-44de9adce286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d8a87-f244-427a-88de-a2e1e20d819a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413b3385-6aad-4422-a667-22f8bd929dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667052c1-5019-4440-a5fd-eb7c704843ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af8c744-c5fc-44d4-ae24-5c759cee9007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd78cb0-3285-4f4c-88bb-4d17c56e36d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543ec53d-e7bc-4261-94fe-e7d59e95f008",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669234ba-7156-4788-866c-f39cfdb94562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58df8bbb-3745-4516-b1b3-a6a7fc00c342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c681be6-9484-4738-b727-3b7b23ecb4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2399a8c6-1acd-4922-a4d1-fcd4e6cf4069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e541d75e-fc3e-4dd8-a849-bdb64cdd59cf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e2f50-ea09-4eaf-aaaa-6a73fa8893cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a21f8a-ca6a-4ba4-b2de-965751428f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057a7d61-629a-4a53-b5a2-967dcd1554b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b0f1b8-6492-4fd0-ae2b-471f4a351e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b58a93c-131d-421a-8143-3f7081b1df7a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920c61f-b3df-404a-8d24-f1802f475aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e286911-df4e-4852-b367-47cb798768f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43f4f33-41c5-4fc0-9556-c46ddec65e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "faa4fcb3-1ecb-428c-aff6-136bdca326cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43faa79-c104-4702-b84d-7ec2bfab0283",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5c86d0-bb86-4372-ac62-16b2028e75e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505589ce-29f3-4b3b-83da-f85ab3cf6f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7830f5-92a5-4ce4-9cc2-15b4e39a8ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9985079b-ed8b-4f03-9703-bfea34db58f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40076fdc-8b7e-4fae-96e6-80afcb31dce3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b0cd9b-5a1b-4068-9ac7-0fd7ae549647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001a2453-865b-4886-9580-2f8d8874ee61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8228bb-1b4f-4d16-8ed8-f3d50db4ba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26bdf92-de04-4b31-8ae3-260a0461c9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1da7b5f-648e-4401-ab6e-017faaf2c1e1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bbb412-53c4-41ea-9963-3018a148a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b76209-41ed-41f0-a26f-e4a012904ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43bfb6c-b2d6-43ab-be64-fe73a2dc170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28ee9e5-aff0-40f9-aea4-09974b737895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9493b11c-6f67-41cb-bc68-d275ed400f5e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce921835-c0fc-4193-b2e6-6df3a5198281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a34d87-d9e6-468f-a19f-8bfce216346e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd3f4c-9646-4caf-abca-63fa26f14e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1fd42b-f975-45e9-b613-643344ad1834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf17cf9-d0ac-45c1-8bef-729a0fb56731",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f9898f-b758-49d3-9f92-ae13e8f246bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30ce9d00-12ab-4690-bc50-548e34ca538f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee4931a-8b12-4002-b604-4807a56ba5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12920a56-2a50-4c15-9628-4fd4aca0d876"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02419d5c-7102-4807-8bf1-2dc4b9a0e101",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ffabca7-2c40-4e4f-b5f9-f83fe4856057",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301383e6-485d-48a8-904c-bfc737042a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3d10df8-470b-4b7e-9903-00c7eceacdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b953c1fa-38e1-462a-8967-c8cb073aa5cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9abfb016-436d-410e-8134-95ff5f620837"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdeb718a-38d1-4dc4-9961-091d9bb93a1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d85fc820-2528-4a39-9145-2739e9061e7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c623fa2-ca86-44b9-982e-64100713e8e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e93f0970-9374-430f-9971-6e8fba29a940"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecbf53d6-0efd-41b2-b8c7-8983d7c2ac93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac63da51-8f04-4fab-a4b2-cc216d05e48b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "56a24c9c-c9f7-4ba7-9052-da6e79816e35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38a69f5b-7679-4b46-a66b-69f0ee8f4fc9"
                }
              }
            ]
          },
          {
            "id": "d98c7d73-0459-492e-930b-e38b32d8f6bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb3613f9-7904-4258-a345-bbbe3fb48d4a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5afe488d-1b87-4459-a029-d830356808fa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06833e75-9161-4d2a-9888-23d1c1e503a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c57294a-0708-428b-b23d-bf16cc7b29b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c2867-ce1f-4fb3-8550-2940b243b078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2e8a92-4444-4405-83c0-18db5d14c6d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47fd809e-3721-4167-bc97-ca92f0e12b27",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "773b5fe6-29de-4ff3-9502-0016a08cc124",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbe72b95-3a1b-4b3e-8834-c1eee171664f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "778e4858-1025-4b09-a7f6-4386f9d9fc9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bd7c461-bad1-4456-a6e8-b22466b248e2"
                    }
                  }
                ]
              },
              {
                "id": "46d3b5d2-f2f3-4360-ba73-f37032c4ada1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "963f4084-056b-426c-9598-56b84d73017c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebdd0349-9f07-4a71-8df8-599d510d6350"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "946f0848-c6e1-46bb-82d6-a1252600f4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "040aefac-b6aa-42ae-a30b-87dafe2fdfa8"
                    }
                  }
                ]
              },
              {
                "id": "b0d955fd-9b93-4d50-bc9f-c4d59dd6fcca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c076f70-4ea1-44f1-80be-7c66be803892",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f982bae-adc4-4f02-833c-fceba53efb8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd171411-eb05-4f8d-8a57-6fec4f3a4d87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "535421d6-7877-49bc-9c56-436d90c90650"
                    }
                  }
                ]
              },
              {
                "id": "86bf1e7a-fe71-43a4-85cc-87cb0250791f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36a809a6-13fc-48a5-9991-fb3a21dc01eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e32861d-f435-4c0d-89fc-7ea00b86b4d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0dac3e2-fdc6-4da0-9ec9-106fdf09e619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8c1cce5d-ab4c-43fb-a6d9-4f6f7baec9cf"
                    }
                  }
                ]
              },
              {
                "id": "0421bc90-602f-441e-b56a-b42a8ccb324e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1609d343-568f-480a-aa5e-597aba4960a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71ec2661-60c8-41ef-ad9d-eb93c74cd80a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56f885db-000a-4acb-9ba0-88b14c8142f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9bd5c1c7-890a-4d84-aa7f-5aa60f57c86d"
                    }
                  }
                ]
              },
              {
                "id": "3b043f60-0617-41b7-92ee-42c92e10786a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e91b189e-0749-4118-83bb-f82cd19fcdf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06198422-9a9d-4c73-af3a-376201012636"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a6cb0f2-e1b1-4fac-a3a5-908d7e144084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4362f9c-47bd-44ee-bd76-9db294e6c5a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4843cb1-c2ce-4a28-948b-106b4e76d049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b28c8c8-c7cc-4295-b3ff-41bebd2481cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4113ad2f-bc6c-4320-b8e6-911b74a7239b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7c7cab3-2671-4c16-a234-14f6d29899d7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46404d95-d4a6-4989-b66e-16ffc1154ca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ab5eca6b-71bb-405f-bc84-0c3941c0eeda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06a31be1-4813-4f02-a757-420bdacdf8c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d0ef7d8-7d65-42d7-ab40-2f1621c79680"
            }
          }
        ]
      },
      {
        "id": "0e3e62e4-f05f-4af9-b5db-d98b2d307211",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "865bc04f-636c-4ff1-920d-6086d087335c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f93a9f12-63de-43ac-9fb5-62b6a52a4c0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c946def-3d3b-4d38-afe6-6bb625d78644",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89dd0cd-4b44-496f-b6a2-31e7dfc82724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc437ff-8d00-44c0-8851-9e3d1080ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb732c2-8fb4-4a28-a0c8-0f8ed63ce00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da98a01-82e7-4d82-bace-5bf086cc5a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb3c2b0-509a-45a2-b794-49ce7a9b44e9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13426cb8-5397-4072-b2d0-3f913e83d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892d8762-3c39-4a62-809e-799a2ba5695c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec57ffbb-723b-4743-8d1f-b808cce4dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac34051d-83c5-4d84-83b2-0b68a25820d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c896267-719a-4f61-921a-d51d801cf08a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfe736a-eaef-483b-a97c-9e5b6fbcd8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44927b4-1195-4bea-852e-4b589c9985df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187fcf44-2a10-49e2-aaae-c6bb60326bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd46633-4934-497f-86a3-96c67beaf291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a018f239-f58a-4209-b228-d2c0de856d1d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8251145e-60aa-4259-b687-ba68462a0730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fee8b2-ad58-4256-837a-6ca8a098bee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f97a2e-c055-41e1-94d1-94f54e52c129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0045e9-ee13-415c-aa8c-70160c96e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a352c480-c94c-46b3-93f3-b2a55d096167",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce7ac2-c7d0-4bb2-afca-84d051daa5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd339c6d-3926-42fc-9c81-73b8bc9748a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466ad691-6def-4e03-b971-38bfbaeceb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "911a6876-098b-4d33-bd94-41ff043b1222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab84aa7-3b96-4efb-88ee-8c16faff8306",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14433eb2-e1ec-4e14-9787-0c1fe836baa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a343bf04-b7ff-4453-a928-90b15647089e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652684e0-8d3d-4d42-aa16-f6fefee5eebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb35f98-6254-4fd6-937e-21247d372a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51cde12-bcc5-434d-9a52-beb5b469fbc0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae1b539-23ba-4f9e-b9d3-0216c5d301b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff16a18-bc58-44f3-9318-e65571cfa310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce40b0e6-f1fc-44dc-95f2-8661227003fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb52e9b-8257-49a2-8cc2-6c99aba8aedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a395141-c9d1-4875-997c-6f3274ffd710",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1c1e0a-7c5c-4bae-b96b-9d78d9bcedc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b4fc26-e70d-4a61-ae1c-f607059d4022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863d7c7-4d62-4eb2-91ef-e39068a94f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "852269ac-17ec-4c4e-a215-b1fdacfa532b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa52594d-1753-4981-b386-d8aca3508bff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0cf175-c9a7-4f1d-b08d-c6a9b399a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bba7143-2bff-49f7-8cc4-2047febe54fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6936f64-3749-4b3b-aeb4-7cf37631a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd298998-bfe5-4a51-84e7-6716c4f1e8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255d1987-4444-4d29-a8e2-3bf462199e7b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd2b1d0-0021-4e90-8bff-612718b90f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7eab08-2bfa-4777-8ada-646ca54c4b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebce18d-1b22-4310-9207-2e256a34b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e7522b-c6bb-4210-ade2-640b425a78c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ed890f-5f32-4fa0-a9c0-4186e2c10f52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac50ee5b-5f39-4487-b23c-b82629f6de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d6d1b8-7976-45b0-82dd-f7e7b48e8e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2977ea41-d4a6-4420-9ec6-2ee17e47f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f576ab02-e51e-4ba3-bc2d-1d4911fb0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9588ebdf-746b-42b6-8fd9-3a67a968cf48",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e718ba37-87cd-4999-8f33-1d321486d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dabd457-2ab2-44fd-80e5-60e138c8b5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6318bc92-6ef2-4a6f-bbdd-9a69dd0b9036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba88fa22-d849-4e39-9e0e-253b6785610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1f91a8-f755-4d3d-aeb9-4ff5350297aa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c0a43a-47b9-4095-a1cd-da8c6aeb56e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1b5d18-2d98-4b1b-9a76-571916d3a63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04a4e15-03e2-43b2-b189-564440ed2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43476a9e-77a2-49ad-913e-7701a36b5128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8812a560-8d1d-4176-9627-a72a1d3cc981",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60994b3b-0010-4a90-8d83-2872002a4879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a667c2-65a5-4361-8c20-eaa5a2a0b455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69531d0-3c86-4179-83c8-b6bf7d8272d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "897bd954-e2db-4136-b8da-1070109556c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd667bab-c0dd-4b55-9cf4-995d8e43f2d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f539c28-557c-4370-8f8d-f84d0d3a6d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57028d9-a8b5-4363-9497-10f81e33ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd058f4f-2f7c-40e6-8798-e1598b5dafef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "612632c9-23d5-40a8-ace1-58f12987703f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337ef9ef-8237-4ffa-bb1c-cc3f32a7413e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604ac39c-1bcb-40d2-a49f-1387bfb121ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9368a0-e8b4-4b7e-a50f-f7f964058f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2080b7-2857-41c6-a73f-c39096d7fbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3355338e-1761-401b-b04e-c8b5caa80288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a054f76-623b-489a-82c6-f30c55a14079",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b9a8ea-f3c8-4e52-91a0-3c95a2e8ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d659cda6-baca-4029-8884-a992e7b989b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8948752-e414-49df-9787-7ac6d5f7af61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65399f36-8656-46ae-a875-8dd0330d64ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c63041-1506-4f4b-96fd-6310fe38b0a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca6451f-1ab4-47e0-83f5-ef5cebd96655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6929db70-fb3f-4afc-ad6d-35e29ef3ef34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9739f7e6-f9c2-431c-b671-a9120dc75cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e59570-4b6d-4ce6-8801-19c20f68519f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8e1dab-1202-49c9-9d53-ed2354a8abde",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54ddf96-a122-4e65-8499-1550868efca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a69e4eb-6639-42bd-b9dd-477935189fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c933e38-3035-4573-9a95-d0d533c6fea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8815cdb-e4b5-465d-a097-92fe8be342c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e06b1d-ade6-4f20-bb5e-577f32664076",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033e83d0-71eb-4127-bab2-9eab17a8eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5b04c4-4f66-4f27-a111-56ad25f4f44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15d5279-bce3-49fb-b328-2a5f32e6935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35afdcf-1621-4656-9334-fe1cd187fcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d805436-3e69-476b-ac44-78f811c1bc74",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f48761-37c3-494d-9e89-db323d745c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f80dd0d-f46e-4386-9dbf-a1bcfdb9678a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d9fe89-44cd-4d84-ba56-d2658c1e1818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29c579a-75c3-4ef8-a39c-3fa6a8f72fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9a1d31-7897-4d7e-a303-e2d605189d03",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e910634-a4bb-4969-9bc9-d41d56f8d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dd08d0-bbc9-48ea-8c2b-b14b07e2c0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8626a599-4f98-4958-a9c3-85ceb9299bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45abc7e7-7821-4ce3-aaed-32483c8426fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664c160-8793-4be2-9f13-c42e5f1902b6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968a2748-9745-476f-865a-1a09ec1f5e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d657e2c4-877c-46cb-b357-6e9cb3266381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3150a31c-537f-4e0b-84c1-c7d89659e52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe6b4ec-16e3-4c83-b45c-fb65cbca73c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8734d6-0df3-413e-b83c-a36dec076360",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a287382-6d3f-4f06-99b6-16a5ad1fb851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0e6652-9648-4f05-8924-2dff89fe48db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b0175-ee7c-4f4a-a53d-c9ef7ad7a415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "497b9d67-3575-4405-b149-29fba274b5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93887b9b-b647-46fd-a272-5ee398817d04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22987f56-019c-4bc5-b367-209f5cbaa3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4133fc-2363-477e-85f1-5c94ac19226a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d153368f-24cc-4da7-bcc7-0e154fbe4c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23934e7-4394-448c-b496-61b7110946a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69d5f15-0d13-4e6a-b6a2-3ee90ce72e99",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8250964-c34c-4edb-a58e-e3106e2088bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7fade3-9f57-4c04-8fc0-9e9a15c358fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05680a07-c945-4e0c-8f1a-ac7fa3f420ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bc4b06-a464-4d49-99aa-2cee4d8eaeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73e5148-47ce-4202-b63f-ee0f10cc8305",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e122ec2-d9ac-4418-a0b0-c5dba703586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf189811-44bf-443c-954f-a0ed2ff87451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5b9068-5268-4940-ac35-25de1592140f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7f0207-a437-4f90-8a8f-aadec7e417db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836f49a0-f2e0-4476-bee7-0cf78661d4be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69342c70-b0f4-4ef3-835d-b914cd271c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb786ad-654f-45df-89ec-e798e73f9604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a58d88-78ca-4af8-84b4-fd8ece78c6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f174d7-2b64-4f1c-904a-03456a32e52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99daca2c-994c-4a6c-b704-475690983a90",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcfdfc3-b23d-4ae8-8ffc-c32771b4cfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e83cb14-4429-4e53-9806-f66c3fdf67cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c878943-6cb4-48b3-87a3-c71e099945bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "149f9edb-2bcb-496b-a322-000852a6fc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef96f429-cfb9-4c33-9897-a58401a367a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e3e73-b036-4f35-af96-caed27a53912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b91e3f-a742-40f9-863c-e7db35111cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc6a6bf-bbfd-4cf8-b71f-fc8c838b0af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2544c5-b1b1-4c11-9b09-5534220d5b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ae3983-50f5-44b7-8105-c83f1275fb8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe7fb2-4adf-4b13-9cef-099c32c2a732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9538cfcd-892e-48b1-b039-cee4842955d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05987eb2-3bc9-415d-9451-e03c250bd1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05b9481-fcb8-46ce-8be3-c80b37c658e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89269e55-c288-4107-b6ca-c5d92c82f887",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f3468c-4842-4c41-ac74-1c96ece4a0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8a4c8b-546d-4b6d-86e0-67606acdf8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5f179-6e45-45e9-ba4a-75c7541bc7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7999ac28-ffef-48cd-a9aa-45dfce3fd344"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b39831a-009d-4ce0-904b-4c8861da5a3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43e7f47b-3b79-4506-924c-2183f79a3ffd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b7298f-7e1b-4940-86b8-a612f541e665",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d07725f4-cef3-4a40-9f8e-7a5c9e71071d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f261a0-099d-499f-b501-8daf132c97e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82ba46f1-44ed-4000-aa7a-9a83f9d11031"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e9de99-8952-4b16-a308-707724d1a012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80141cfb-18de-45aa-89dd-7b8d45233acd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "232bd065-a119-4cae-9b19-464de48967fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f903ee8-e1d3-4d02-8c1e-200f9dc65d57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82228f96-4f6b-41b1-b6c7-0f330cdc96f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f3f9d9ee-6a8b-4cca-b9c3-a5bf7d5d94ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aebdecd8-6078-493a-894a-b6d56a8b2ae2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa152d97-eb3c-437f-a4f4-8952fc98c0b7"
            }
          }
        ]
      },
      {
        "id": "77abd6f6-042d-4d4c-bb30-bd0009801a2d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5e11ff20-e794-433b-8322-02e905e2e62f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80e77cd7-0c7d-4056-a348-d823644478bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8872ca8-04a1-4712-8cd4-3288ca8c01d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d4be95-af0d-4613-a5ea-19ff88708994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec75b4f-fc70-45ee-a172-4066c3437ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335ae308-35ea-4b2e-b95b-71806f5249bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05900bc-76ca-4e87-b5c9-e3d05949ca43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e62e9fb-e331-4657-9508-c9f033fb4b5e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68be9672-8734-4603-b22c-2abbca570e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9588d2-220d-4b86-9a0c-eb66ae79f7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d42608e-0124-4997-9451-58a78601b51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87591fc8-495a-4ba2-a28c-91dd2c21fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa597404-0f8c-4778-815d-39cfc2aa715f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb9df14-4320-48f8-aab0-23fd76ff700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a05a16-c726-4045-a495-b909fe20f032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b6a30b-9466-4af5-a2d2-eb2fc2de66e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a68b1be-3670-4a76-b391-9041d614276b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0aeda2-7f5d-42a0-a886-dbdb5ab79644",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1c99e-7b05-4d20-9f35-c1ab13d79d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89a9e33-18aa-44dd-815f-26e5e115f593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37c32df-c105-4f4b-a617-0f9753b9b793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8035a3fb-bcfd-4e3a-baad-f82f5e20c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d65db5a-61f3-4341-808f-aed349243180",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d4dbd2-6360-49c6-a60b-cb1ae5b6330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfe3507-b814-4c7a-8ac1-639b381975ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64315b7a-cb7b-4f88-9f20-6ec5347d91e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04852d69-53da-452e-b5e9-751cd735d764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206e426e-fe30-4c31-b3a1-264035056a21",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b44be97-9971-4dcb-a20c-8b6df6a299dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c244ae-04a9-4267-a33d-cc6216c82735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3305da3-35e7-40db-9c9d-fa4f9e70e4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51ddb6b7-e9f6-4f0f-a649-574f01495434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a47ce-a1b5-4ca8-85fa-139e6f741de4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36ef075-0cee-473c-af62-fde6c5244e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc047e5-729c-448e-abbc-9b26beb17277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320651b1-6f11-4f9e-a988-79c99514a5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e538bad-7c59-43b1-87b0-fa7d6d5aac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac1769-d42b-477b-97ce-6f13ce77597a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c16c4e6-646f-4d3c-9e07-903e47eec147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066a7047-cfcc-4812-99e9-89d6761e44b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31adb5c-2f78-4592-86bd-259a4cafc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6abf20d-f1fb-47ca-a5f2-e8d3ab74f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3793286-c609-423b-a62e-76cbdc411ad9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451c767d-9c1c-4ea8-874c-e0f7e903750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e4b960-638c-4bc1-a6bc-a83b0bb3f0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a0bf7c-818b-4c9e-b1f8-55840409dec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b213f92-75da-42ee-8527-f7ed403bc0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f8d0b3-bf66-4e3e-bdcd-21d4b8658112",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c7dc55-e44d-4ccf-a5fe-fff3f0a80165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004832be-7ac6-49bd-8d61-09cca95bf590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2170d3f8-93e9-493f-a104-cee7cc1d25eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "633b3b17-f316-4c2e-bb61-aeefda06b89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc714f5d-69bf-4a59-acdc-ecfcb6334fb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4263c31-ae56-4865-b9d8-cdd3ba9b89cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89a6af4-affe-41b8-b6e9-b4ed86d904e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2794a357-3e78-45c0-8350-f1f2606da284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e22a031e-42c8-4d90-8deb-d3e3460e739d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa4d169-afa6-44b3-a797-07d6f2d66479",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215ab135-e38d-4efc-979e-9a73bc01ab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65aee2a-2506-42fe-8854-6841e2461d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d80238d-dab7-4bfc-a1ff-aa4860ebc833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb4da0b-a486-4505-9816-45ba1d28ff21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5106bd48-2c62-41cf-bf0e-7b1ed5c66f11",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243d951-c5e2-4794-8e11-bca165ffcfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fb8d14-9a2e-488f-98db-c1b897e4feb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535fe75f-de8e-4d8a-b5a7-7d6cf608670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f307c9-00f5-4dd0-bec0-6c90618b679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f39dc1-49b2-4b77-97a3-612ca59b1cb9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0ac292-71c1-4015-b6ef-197808606e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd12baca-0392-4d7e-bece-ca05a79f62f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1472cdd-51af-4373-9d54-f2342f74178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c3b9ab-6296-4e2e-a83c-8c27f1fead7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc434552-032b-4d98-a5b6-faec2affbca8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31abc154-3a7c-4577-a4fd-15d923eb88e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5958139-a911-4b24-8573-95ee6ca7a7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38bf084-72a7-48be-a23a-a9c1b6e458e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c947ca-d251-42d8-a3b4-f7c2ace366de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b367e760-0df3-43bd-a939-338c762913c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b994b0-5268-4e29-bcbb-fc41187263a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e130153b-e5c8-4520-8fc9-766a27f9cb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e2a405-a101-4ebf-ae13-4295ea0c1d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f36e74-820e-46ec-8b5e-c044f7b4a0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11f4aa8-d6db-468b-8b68-99d424cdfb16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53c75c-f5bd-4f9f-b84b-aca739f95f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9473909b-f635-4d19-b134-866623a7f5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d55969-e414-48c0-aa99-8bd5b6633111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0d7dca-e6a5-4b97-970d-795787d5fe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823a0bc7-0006-4d01-b52d-7b78d2ce7a66",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e662c9c0-b153-4688-9302-8c5d8d23fcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2181137-89fa-48c5-991e-f5e88009a7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86534df-71d2-49b9-963b-5ce272aa129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdac3ac3-3958-4d66-9438-bdee1f2375fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00669d3-55a7-4b68-9989-b29d3bda2bd4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cfbeca-61d4-4e4d-a928-449acac62d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209aff3f-9e43-44c2-8628-2d1efc87b5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59335656-5c13-4f21-9b71-5972d405ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b96f820-457e-41f5-9447-b4b4e9b979b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6263bcb-4f0b-4243-9828-f0e3b2fa3a30",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc69aa43-20d3-48f9-b562-cf2d5d2b44e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1750de-42f4-4a0e-80ed-18727948dcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e692d5-3ebd-4907-9501-aa53e140bede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98c9c94-18c6-429e-b066-800223359227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1894c524-9310-4a4a-9169-ad98d8e3e3a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f062e5-e732-419c-8991-0fe937302da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1be1ed2-20a1-4aea-9069-33afbf9b620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90fe812-9331-4c99-b96c-2244749fc6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0963c98-3fbb-4b56-82cd-76564dbc807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ed3fdc-fb98-450f-b428-e9f1cd63fd5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e203d0-5fb8-4784-8058-afd944bf9330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9856a6a-3e33-4acf-8eb8-32e8f7800e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7edf44-2681-4550-a83d-79c08f0d300f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13c8996-5a70-49e0-9bcb-415b270f3602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d19c8a-cf2f-443f-b8bb-531fa334d6b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41d7600-b28c-476d-9614-4bf9a05a8f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b92e56-ba67-4a41-832c-2059ae00a94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61ad65c-d7a0-4c54-b706-98b2d2e6da28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "138a402f-f165-42c1-93c4-1c6c2c391919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2783d130-8ed8-42d1-920d-bce44b69dacf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fab843d-c271-4e86-a359-f65c664a8ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b674cff-7c3e-41f6-ae10-72d9d214901c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7c0d68-6f4d-4bdd-9a31-07d4cc0edbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4014ea-ecf6-4e0b-9667-70c82d8d2230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f64b381-bfe6-42e6-8f1e-2a27163fcab3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cae53e-2682-4eaf-a917-358df5ea8905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afef09a-22b0-4ab4-ab57-aa2b81274957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d353f664-174e-467d-84b9-679e9b3b8cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eed04b0-948c-4479-8c35-7f34d04ef061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47531a77-ae85-443c-9bf7-728ce6ad2476",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8ed623-6f60-4cef-8d14-5799c35bd418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec472b77-3d95-4dea-9fd3-a9d345764e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad599122-fef8-4844-bce8-7fab1d633a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f93fcf-16c8-4aef-94be-1e4eb460e53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cae8e5-ff21-48b0-8254-100993d63e95",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f3227b-1045-448b-976b-38c50fe4a662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73c805a-c33a-48a2-a7ca-5bb08e9441d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af736c1f-129c-4c6d-9469-f7f4c526ad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "442f33a5-a1e3-41e2-bdb3-f390ec42598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd72bd27-a3cd-40ec-87bd-0cae13bf3f12",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0a5d78-a9c2-4395-94c3-3d26b2a9e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfb4652-8f13-44dd-8cfb-e2599115bcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c85503-cf4f-418f-945b-6ebb98b47e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59533615-7680-44d1-a219-619ce0d5243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac5b51-b4b9-4795-ad6e-c41faea02dfc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f7598d-7ac3-472f-82f2-475abea249d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5097e6fb-560f-4178-a10d-3d836127f489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c52a3b-4012-4426-a5dc-3e6b88a58574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "265e1b5d-3e39-43cd-ba59-3dd77c634c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bb575d-e51a-4cc3-a116-6f6268f23a1f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa46f29-8773-46b3-bc72-7dc9e9a81b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e1bb56-0d0d-449c-b97e-b4600c33b1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb8ce25-2ee9-4d26-aa3d-3912231d57ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beaca655-c2d9-4a43-99d1-13316da74e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cead5e2-2f3d-4a57-abe7-c958e6301183",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d3615-ce5e-4af7-b623-2b1d29f6b6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd23df1-3ca1-4674-990c-ea376e652392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632d984c-e739-4784-ab22-6f0302fbd8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1af6ab-6d1d-4388-ad8d-22752c001294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad1ba62-6385-4d4f-a952-e3eccdf0b694",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800900d9-3e99-4fff-9a8b-9a4fd47e2799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71055442-3f4a-4a13-99a5-01a88536b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5171fa1-e6f1-4602-ba5b-7bdfe2698e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d434fef5-ac8f-47b1-8e29-07e96e6c02d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98d540f-c3bc-4e75-91c7-24ff5c545986",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42384254-0bc1-462f-a763-a83b85aca114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04edeb72-cec0-419d-86fb-c2e66a996f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf378af-9cf3-49c3-b3bf-035c6ee89cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc805ba2-8e90-45ad-a2eb-92add1b653b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883b93a5-f9e7-4b6f-a25d-3eb3d1559a84",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c14315d-e80e-457a-97bb-b90c55d646f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cf12c5-7a37-46e9-a281-d55c1dc762f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfa1701-4c9e-433e-9f11-ed72218f8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f01f20b-d2cc-441e-b253-39e545248dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e66501-1974-4489-9c83-3ffc420e7db9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee0278e-3e18-450a-a797-356c6b9d9f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c586ef-eecc-42a6-8632-d6414c7a126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983c3c7-9356-4f9c-84d5-e6fc81c4051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98568948-1546-4904-92a8-137400532b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104461e6-ef67-4c89-aa81-6d434ef53f1d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f898d6a5-f9da-4676-852d-55d6aab98eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c2e7ec-1bac-47e3-99a5-4dd93b9b7dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2177487f-4fe2-45e3-b0bb-69d59172e66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ee1547-6b90-45ef-a696-31b7e4cb6465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ef5268-43c1-4692-ad1a-70953c8bfc80",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb386c9e-906e-49bb-8115-f6b323c26418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9613cc-118f-437a-8744-4e8b83618224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d71ca7-2c35-4de5-9626-7bab0e2079b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da3dc47-e1e7-45c1-bab8-c8c178a67384"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20d45986-0301-4d28-aeb8-90a94f86856b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d93664c-3eb5-4110-9c0d-cc4faf0edbe8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360aa4ef-3a89-46fc-b2e2-929b54313a28",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9139da81-5286-4fc0-81ad-b2b41444a35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fe2b39-c480-4ea5-a359-c50e6dbd8597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94b9ef3a-6ee6-4558-a0fb-b8805d759763"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6eafdbeb-a1d0-4675-bebe-660349c1393a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a38a0bf0-a018-4f71-bae1-1b5e9fb25505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99df4f8a-9354-4965-a8f9-365e3d70aa5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dfd2480-61b9-4c07-9b09-423249296812"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79426f6e-3543-4b04-8345-4f8b5ed8d5b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fca62a7-a87f-40a4-bb9c-ea7150ab805c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d96d140f-4db6-45cc-8f0b-6b85bd532735",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff00eaa7-65f7-4e18-8880-dd2c8ae073ce"
            }
          }
        ]
      },
      {
        "id": "05a44597-eadb-468e-ac57-07f2158e2620",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c7a9671-e16e-4874-b181-aa5c57d5de0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b85713d-4439-4507-b2f7-79b81e9fcd0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2987f28d-19f0-45f6-a80b-9e64916b9c05",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84a2267-2bf3-4d8e-9499-b955eb01ba08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a987e6ec-847b-4a59-b76f-dbe9226a525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefe0abd-c979-4b2a-9e5d-761759881f12",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303bce55-6896-4994-9506-553ac6dd18a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5896b45a-4999-43e6-9407-7083c3bef567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fefc7af-5d3d-48b8-9b28-343ec0b9d1a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1668fd-3baa-4ad2-9921-3ff5550038d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b458560-4663-43b4-ac4d-542e1000e754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f9e381-4f45-4783-9d24-2588121a490c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586391d3-35e8-43b0-86da-033a07037f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee25ec12-dcbf-4b84-8e3e-e71722c568c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9377c0-656a-418c-a05a-4f3ff7de3b2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56e7696-28ce-4b68-8b00-f4ba5529e0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f8709f-be26-48bf-be44-a5cee151d352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106088b7-f9b3-494f-a223-ebe456ea6453",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce07d8f-65a2-42c9-86ad-cfaf5b6b326c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb232b1a-42c0-4fd5-a709-23d4fcb1e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646ae9d1-443b-4913-b6fd-90bf743f9e48",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a34b0d-b68e-407b-a3dc-0393926b67be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18803083-f508-4063-be4a-07deba72a033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca2e7a2-c856-4faf-ba4b-e465ed6f5109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f0f55a-fe3c-496b-b7be-c15396e62d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc1fb60-1a57-47d9-ad5b-5f8261618560",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0731185b-cc15-4027-a478-02a3057dc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0877e5-b73d-442b-a508-3c0b180a4bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e73957-196d-4f68-a281-a2ed380934ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42df82e-57c1-4426-b19f-3b936a15abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313a8aca-8f88-4baa-b47c-cf85f2d72b6d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1a6a0a-e5e9-43f2-a9d1-ff243bbba2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a2f1ff-6d15-41cf-a934-01266403e20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23eec7-9114-4028-acee-fb7361575950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065c37ce-4d7e-4236-a249-7bf54c58f03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13cf1c5-6135-4563-9f2e-770c65bb3cb3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f3c952-1e11-44ad-a92c-fc0c9537ba95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845d258b-2485-4849-8e3d-db57c708b17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a0a625-fb7b-45e4-bfd7-82569e06a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd45ce2e-bb1d-46bc-8766-248fe4871710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b94ca62-2d0b-41bb-8319-8325f3fda365",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9243fac-2e67-48e0-9409-5bea9d17f6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8d1f46-77db-4758-be1f-1616c851b145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a3e7f3-2890-40d4-a27a-81e3bb953069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cbb6a9-d74d-46b3-b085-8155cc2bd6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4b1940-d92f-40de-807a-6da3cb5d47e8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa70938-8371-43d6-ac4f-3ac76303b9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e98a76-cc9d-42e0-92fe-c86a45f45817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3097bc-0a02-47a9-a00c-17ab49eb6e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a5609f-1105-4df3-8709-b7962ba62bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bbcb59-1fd2-453f-b61b-a40e9e800e02",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ce086-2a15-4438-961c-a14a748ecd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b538c69-f9df-4520-9b98-a9224a4c8db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d2dcd-a42e-4a88-bb06-75348542ad66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980bab75-839a-4a97-8d88-1d2f51022518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e31e77-185c-4662-ae9b-03607f206483",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c795f4-8123-4fc4-8e5c-bb5d5e4f79e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd71a75-6607-4dfb-8b6b-98cc4a9078d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2b235e-ffbd-4d89-87fe-44973c7e1eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfe0394-7701-4b39-8a30-d2d349b6e4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011e3865-ebd6-4d0a-8594-cce26caf1f4b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cae19a-57bf-48ca-afae-da1358398c42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d183726e-e650-4906-a918-4c2014e06157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b368d6b-3622-47c1-9f90-e905b2ef2e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db132d3d-5082-429b-8fa9-8d53864802e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184fe4df-719c-410e-b7f4-f2e4a45e8758",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818fa32b-a24f-43b9-b45d-599ece712049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d404baf7-4d33-4279-825e-8f7762c6d179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ef0b9-21cc-4a22-a1c7-543e0f2341ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72240d5-89c9-41e3-bfb1-ee53b0178e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a358b6f3-df15-4481-8df9-b0502ee8efa3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e8c40a-3bc6-4bb4-91a1-b4c4f86f6678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb46349-4afe-4e41-8e26-9696cc989514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2597e05f-8c76-41ee-ae90-fd91d6589144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8cbc5-c378-4854-85af-ad17fec43549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2a4ddd-fd4f-45e9-b092-cbcbb72153b6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f8867f-4853-4bd5-af76-44f320875fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91104c1c-c928-4b33-a67b-4c0b098f73cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6588348f-aad1-4c57-b925-3c1dfe42ae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d3d89b-a8b9-4669-9c48-a2ac795e559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fcb6cf-99c7-425f-9e4e-9e663e7eef4f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105fa638-0129-448b-9172-a6c8b8dc7ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3a0b47-0bb4-40a9-93a3-2bc7397cc969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9703df-4817-4e9b-a1b6-68efb26a464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b73131-7266-4c56-9519-a13e71f2c8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f2bd9c-d9cb-4856-80b8-039b7b306c6b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806fe9c-3387-406d-abc1-25bd9cf687a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647fb5d3-21cd-4d9f-92b7-b998bcc054d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea44c6e-5039-4fed-beca-fadcf6d01938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15248282-2726-4abc-bab9-9d8bebc62c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa876ad2-f4f9-4e37-bca5-607a45f942dc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0256495c-91ac-40c9-b16c-595ef9d7d633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b590dae6-bcd7-4312-9c3e-00e646a4ec8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b62d4f-ff53-497c-aa0f-fd3c4d93fde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97939591-ea18-4eb1-8af5-90358e7fab3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ee740-4de5-4caa-a554-b9f1f0dffc2c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c05142-135b-4a3d-aea2-fbb9198a1c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ece3e9c-2529-44db-ad7f-09c89b420fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c320b473-2cbf-4654-aa7d-84e570622be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83112b0d-ef53-44f8-a09e-dcfac65bbcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ea121b-f086-440e-bea0-6a27996637c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410e8e27-8347-41eb-97d5-b2242daf3d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2804375-a2bd-4431-a6cf-df99e1861f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a27f29a-6ce0-47cc-a912-4d1cec9f2c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdb99c1-ce44-4b6c-a2d7-10b90ad1c1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe4efb2-736a-4b0c-abfe-aef562e2c195",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12d25ea-b1d7-41f7-8119-40b2083c07f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40650eb3-e9a1-402f-9bd6-98d03f029862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de78e6bc-974b-491e-8a19-33fe387bdee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1531350e-4a01-4186-8295-26932e6014a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892b8a0b-31cd-4d25-917c-fa3ebf40e4e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40205acd-b68e-4312-9668-d0a71e1d76e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d80351-b6c3-4319-9aef-cd6f61e511b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5e1ce9-c043-44f5-90da-e9221ef3d606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b66551-75c0-46fc-9535-c5e12b31bc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc03d7f-0915-475d-9f43-7578021714f3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ce80d3-2c5b-4e42-9f7d-08c8490e6e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0263308-dc30-412a-933a-1077929f00a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99d4a3f-dfc5-4922-9bc2-81be627d79d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2e5d6f-a89f-4607-8b09-50d0224f8f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e18c0c-ec55-4439-92a4-ea1d8c4006b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07ae421-e0be-4e2d-85d4-81f1e672054c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe899122-4392-4539-95fa-c4232582bc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f76010-fa0a-4398-a425-2fb973f9751f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ed6204-05ad-4145-9245-ba7931b0c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acace62-6b55-4904-bab9-5076d914b7d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77be91cd-aa6c-4650-9783-52639f4fa3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22486e62-c975-42f3-9324-4c355eae45d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79323d4-0298-4c8f-9bee-11da96ed95ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c0f8cb-0428-4498-80c3-2d9a25ea9580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c650237-1e68-4db6-b694-8971d39bd334",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45b14bb-1752-459e-adfa-9e009c68c4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8724940-19df-4f27-a1d9-a472d313c9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f14c42-996d-4086-90dd-2f6083537fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b587a54-0e30-401a-8cae-130327e3f94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8d66b-f023-40a7-925b-7a722281e19e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca7954e-8732-4c93-93cc-653592271544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe0cb9d-0d7c-4ed9-94b7-a6cb563a6e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e366cfef-2f8d-46b8-8b55-08f4de5f3ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454d49d7-b155-44f9-844d-908e1d8b7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67ce3a0-d131-4346-ba15-d676bde5143e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbe4b62-698e-45c6-a54a-15d6e4cc9b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1011317-5274-4c33-9cd7-af0dee0d4ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20934373-6c72-4868-bf42-bf4b5929e59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c014634-9ced-4613-ad19-e4cc52328dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb25050c-8185-433d-8d85-7b683f68d706",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb020691-6e33-49c9-a66f-652057442d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3c576f-0ac9-4b6d-b134-9689f62c0dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e918b5-4fd8-427a-901c-3104e9131f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a39adc6-a301-4b3e-8ba1-74518804db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cde8981-75c6-4b76-b6de-84a91ff91ff9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ee0715-998c-49e7-8b2c-7be4dbeb3116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9bb0b08-22c1-45c3-9214-82d588dbb120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a774677-be04-41e4-b045-35fe62f601db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdd8802-811f-4b2c-a935-7277c35bdb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f8e46-1a0d-4607-9953-851779ca3892",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b0cd42-5246-4e2a-a729-d42558faddf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a93d8ef7-32f7-4085-a630-35ec6a6d5d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f610930-a634-44d8-8d79-c500337a558e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ab8382-9c36-4035-943d-937be6eb3724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa1fd48-c863-44de-8830-931d03ace577",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0dd6ee-8a4e-4449-9651-21230aaaff0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af32b50-ec84-4d9d-8b13-a6d4de88f412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f34b2-448b-43ec-9d9e-c5ce2932af97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a4dd96-4492-49ff-a77d-1c40a48d61d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eef215-1e14-4ff8-972e-32369e115cea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead27eb4-a32a-4258-a587-4a7268411fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e9789b-919a-4d1f-89e0-9eaa09c21d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653ac43e-21e9-43d6-82fb-775e95f33787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1c7c45-00ac-4ee0-9819-022119a8a7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fed46d-e9e1-423a-9f45-87f0db6c34fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d073c377-7632-41e9-a8e1-a8e0a1a9c85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6d77a7-eed5-49d4-9a7c-7a7b7dd97002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c71df-4a07-4833-a491-12bb3c2122e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0a85df-209e-47d6-8d5f-9712404cdd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b32b75b-20e5-435c-aa15-cb10daf8c84a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1635ec-3e2a-4398-8c70-a8b4f9f1a39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2ba22d-164a-4392-bd8c-a38eb21ae598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeba90dc-a56e-4028-88e3-c046db0257aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04cca39-f45f-4eeb-b958-cb4c0c776bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77663887-8e1f-4ff4-af84-31c32e8917fc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efdf3c6-5a94-4672-9829-8c996f00c5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41efccea-ac75-46b5-8b09-eecc371c3901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc83c8a-b2d1-4e79-9a96-5868b03adbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94c68fc-1f1a-4023-837a-336bc2eded19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a442f4f6-0188-4cbd-a2d6-5dabdbf640cb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b822933-36af-4f73-b046-55c58d372348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37539212-a21f-4dad-b316-8590033ae92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9137f0d2-8ca3-4e5a-aa6e-2c4914d699f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed5f9a6-b306-401e-b1ca-7c46f8a6707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a0f51-6369-4c36-9d01-c12a7db1dac2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543e8d1c-9d19-431b-900c-9e1f583c8019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627e12ec-09f2-49cd-836c-814d0c7228d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26af685-4fdf-4d2f-be33-993edae3f05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ec134a-4c4b-435d-b6f5-b9ac523fd814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845eed5-1cd3-41fc-aac2-b61c357f5836",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a12442a-fa22-4204-8a3d-4ef45b433a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b160ed6-9a54-448f-b8a0-7f3c4855417e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf9b24-fba9-478a-ae5e-980c65b9354a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0352f7-37f6-4b43-8899-a262f18dbe31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48a8f7d-3234-400e-80aa-9610606cb2b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d5f9c-1697-497f-b488-ebd815412cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb96b99-df44-4df4-9c24-817b9dece5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba26d03a-d574-4153-89a1-cdbb82aff554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811ed18e-573b-4aeb-a3b7-faf994d342d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ce004b-07d3-4682-b9ed-a092cb568b89",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca61f3c7-0f7c-494a-b4a1-ff771f415a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c142d73b-f19d-4b0d-93eb-67e3ba5b47e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08dac1b-9a2b-4f81-9c9c-8d7763f424ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feadb34-6fbe-4253-95b2-fac76c208ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67087fb0-845a-448c-a19a-46be34fd3a45",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411ab041-9f04-4fe8-9190-e8b6ffa3a9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36acedae-4ce5-4d6e-ac89-25fc388fbf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ee066-34a1-4381-b361-2b3c32775855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a60434-b68f-4203-a39c-b7755ebf2dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a102dc7-f492-4a06-ac40-4b0471ae76af",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165393da-828a-46d3-88bb-9c32082c62b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e48bed-fef4-48ac-bee1-79d0c18ed094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea758bc-613d-41d3-9b82-e686ac6725aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93162d0-ace7-41c8-b098-75995dc27cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f07ba2d-aa51-42ef-9366-c1a00eb29286",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4366beab-3f3a-409d-bf0e-38a042f1e3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b460162-3e76-4bd1-be54-ced6689ead93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7383656e-7d0a-467e-85ee-9cd931a036cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449cb7ed-1e82-4c5a-827c-08d9d404c4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82540251-946f-4508-96d5-89c8f0cff426",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c250614c-1706-444a-87a4-fded1b8aabcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa95d0f-02c6-4a16-abc6-566a714524ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0ac0d-74d7-412b-9203-5c8c4833da3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c742dde-5ac3-4aad-8dd2-9eadcf07aa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc15f5-90a4-4db6-b4fb-bf9a6660a9a3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1186222-965c-48e5-9813-c3e6e027e18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490beec3-4766-44ab-bd2b-ef1474bad3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a4b438-d432-4e18-b11e-c5e67ab5c25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cd5198-e583-49cc-a5a0-5d6b615b0629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270eec40-46c4-43b6-8c8e-bdf3a7799fb2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d94300-c761-4a12-ac2e-40873570a8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ea54f6-6395-45f1-86e6-f71dfe364b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf459365-688d-4cdb-a674-70841c7ebd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db87d80-d422-493f-96f6-0b4bf55590eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd225f4-1c4b-4359-b318-9b90cfeaad30",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f7e235-3676-450e-a758-74a630e49fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc5a274-e954-4611-a54a-1324ee4a898d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618ab33f-3d52-4c34-9a87-d9341c18f455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52caf96d-0d1a-41fe-812d-ce909a7eb75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76879d5c-216f-440b-9e2c-9b55c50ef323",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa60330b-14cb-4ad9-87bc-134f784ddf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fcd6f3-abca-43d7-a259-c726f52d68b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1f188-562f-402f-b1b8-5dc3fc1be025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aed111-24b4-468f-9063-9063905ae801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e4bc60-6a64-4301-95d5-d90ea5eca784",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ab444d-e193-4e9e-9218-0711043c86c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527a4320-52f7-4c21-9bdd-d6d2f91a498a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad90e7-9b3c-401f-91f9-52c238ceb466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5bd990-3e03-4104-bcab-239544300e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce5b592-72a6-4441-8068-7fb7286b2eab",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb55b30e-c58c-49e3-8dda-f997c24be9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df6770b-80c4-454c-8ea4-ff7c1b3e2ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985e5a17-b329-47ff-a2c4-90791fe7cb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47b4d4a-0c10-44c6-af85-791160aa2d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1955590c-6dcb-4519-a23f-111b65f3f379",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dba4933-bc01-4c8f-b182-cb4e0ff0e589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "face96ab-542a-41ae-acce-1a6e57fbdf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2564b-83b6-44a7-90cb-fdd70fa4b6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d670e5-9c65-4492-9d1e-72f1238d04ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98cea6a-7935-4c88-87c3-ce3931464508",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c14c5b-5693-4a94-8acd-9c5fd50817bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a370c6-bf4d-46aa-8954-ef99d1ef0c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd7370-ea92-4d1b-a756-1e57e9fc98f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80123658-cfae-444a-91b3-5c6258663462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ae260b-c1a7-4b17-83bd-1a79e5393770",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3554e076-8d88-4e45-a009-c2fb0b2344e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5664d75-f022-4114-b145-6a26b22329f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b858a6-6585-4376-bb66-0dcf2d2e1df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30ee812-c3a2-408a-a353-13dc59dc5d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd117565-b61e-4f20-a9d1-edaa4fedb18e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4779526-7429-4ca6-ba69-5f9d69c2aa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1988415-8d62-4b8e-b46a-83c3deb9b356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f674cab4-633f-4d10-8bb5-eb9042b33b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff066a4-dd5a-47a6-a83f-b682c18acd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c0cf1f-c4e8-4642-9313-5c3e9161004b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f387bb0-b786-48f6-8c70-dec1b7ec084b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1facf4d-1952-493c-a4c3-0763ed652635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb50e8b-59ea-4838-a7c6-7d31467f03d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc4ef84-446e-427f-8981-9861cce05325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b05ad75-4575-448b-8962-91a60b451fc9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fc4903-3534-4ef6-b5ad-3e3016e7c911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11a50bf-53e7-4aa8-8de0-03c399f0c918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd047b2-12ec-4aff-a89b-d25f098af1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f70412-bed7-4f16-a1bb-ee5d06e0ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25480bdb-26d3-4175-9e6a-f76eedca8646",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4555ab-27a3-4bf1-b2ad-7d32b706d624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa3a4e2-d713-4aab-9846-abbe2452b62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5e5964-57eb-46de-a244-22654aa12e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0458c128-6668-4591-9935-511b2cfa5446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4335a3-8d3a-4c25-ac15-57f2536a3080",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87908da-ae97-4260-aca2-58b5c2f799b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890787c6-04a0-4f39-82b5-fac0378d3889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6638a3-1823-45af-a4e6-6abe0ba9e3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b773b65-a1a1-4c68-830d-f1859b5d712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad44573d-792f-48e3-b7d2-2171d0a3cc35",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ad309b-4173-4130-9798-d22b23d3b60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ff47cc-f9b1-4f35-a789-76d6a0735959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15961b3e-a02a-4bf6-9fe8-686bf16282ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2d7106-8b47-474d-b2e7-e1bc578e1286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170ef5ac-29cf-4875-94ca-60d64ba34afc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7d00f-d7b2-48df-86b8-3b5ee47c84b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fe2a16-6dfc-49e9-8aa6-fdcb93627c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275a6b74-ca93-4be8-bbc5-0625f94e0910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87725d45-97e9-42f6-a792-fcf0fcb7dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcf9f3f-765b-4bf1-81c6-1ef58acc50b7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cced8d85-f92e-4b4e-80a7-cb24750ee5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5d87753-11b7-4f56-a210-110713dd20e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc14760-587d-4aab-be0a-76b2dabec8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32b2c0b-b2dc-4f6c-9200-84a12c4e9404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193f6630-55f0-42db-b7de-d40cf89e9b5e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c4a9d-bd8f-47ab-853f-d2afb2ee3ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c28353-7de2-4e30-9ee9-fcffb610319a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9eb30-26dd-49d7-a08e-95bca6917598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05649ffd-9549-4ab9-acfc-42e4344071dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32196ea9-4360-487c-bc83-2b01c718611d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61870604-9276-4e78-a5ab-9581ffa8bbc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967d4cc5-02a4-4bdc-823f-075ae2ed869d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d9c38-cb07-49af-9936-e92d72bff149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a77511-3c30-42f7-9c7c-0960f9a1ddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8012a0d-7d6a-4196-988b-4809fb40031f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fe4a7e-303a-46af-9360-0ed02d0c1907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0114e5b6-6ea7-4f32-8bbe-afb21c578a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b954441-4b85-4f61-86ae-525d3bbaacc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d834d7f7-a863-4ed3-9411-7dfaaa4422db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c096fa-a7e8-42ce-8fef-866ef4a648d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98be6525-c8be-41f0-b982-e59cfa147766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3be89c4-6fc0-445f-a089-423d94193939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33421584-6566-4d5c-8302-9495d2631ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7be3dbb-0e6a-43c4-b858-1d5d0c727a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad030291-b904-4fdb-a185-c7c4c0c9ca7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f83409e-d5ef-4528-b90f-0a881d9f0054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f039259-2fcf-4202-a59f-83b267a0973a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581918d-9b50-4631-b42d-d8ecd26f6f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1a212c-0b31-4e4f-bcad-a07846d40f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6086e14e-59a9-4c76-a7f2-81458896e992",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0622b0-d3fe-49c1-b6ca-e9ecfbcf0694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20513d6-cd82-49b0-94e5-598af1a02f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73b3ffc-6c02-49a8-a493-f0295fa1eb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b490ec-a152-41c7-a197-fa853ff6528c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d7089-ada9-4d89-9c2b-63d01dbbef2e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e690da50-ad26-480b-bb34-eb2fb2593987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7893f4f-352f-4b6c-8bd8-780d9360be92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32bead0-888e-4986-a8df-c87b1a430df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9936d119-48e5-4718-bb40-ef1abe918466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb09a523-47b6-4343-85ef-101e575fabb3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6d8fa4-ed34-45d0-b88c-6e69b02fd13e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a4cae4-b92e-4652-827a-4ddbac908b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79fe7b8-c842-49c5-a858-04747ce5a3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8b95a4-1bf4-44e3-aea8-04833976eeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d2964-c598-4d9b-8247-aeca6c10909e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7741c1-0600-4378-885a-cef2b93a2695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393427a3-8c05-4c6d-9d91-9005d7bf5afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a340e57a-0f0a-43da-a122-628ba71ae02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96af3e6f-922e-4257-be39-93828cf216fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe91cb6-1ccc-4e91-a8bc-440d8e25abb2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b73e8b4-d8b2-42b0-aec9-ab6841bc276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4939ae1-b60f-4ed8-8966-86f8276a501b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdece660-524b-4903-93be-6b711ab19591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2373979a-83e1-4a46-9e5b-208c35d3e58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652139cb-e228-4765-8113-21cf0ac13880",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f6a0f3-cc54-4451-b225-65601494e30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa0f387-0b71-4a8c-9640-188f2ddc381d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a176baff-29bd-4d8e-93d6-d4eef88490c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97bb042-7e2b-47f0-b46d-b15f3a043229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853e17ab-3489-4f23-b611-45cd60e36b2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaf76c9-70ea-4a22-bb0c-17b05f48e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8de454b-b9f2-4bdd-91b3-400e832419c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b50bd5-fc5c-46b3-bd22-d2ffe8831a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b35af1-ca6b-4648-9606-edf75179b1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a92765-561d-428b-b5a3-ed794f356dee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7773b8-050e-44ad-9be9-3366a5805a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90eb0554-ff4b-4b11-9d82-6f4f295322ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c67ab36-d4b6-426d-8a03-be9089ea441f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c324f1-cc8c-4c0a-a5c8-f7c3cd923ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd4c03d-74df-422a-9645-57698f2575bf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b104a-e5e4-4f30-b198-24588ac03cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b675ab-f3d2-4c85-970d-38cf0c6f6123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf76528-4805-4401-a076-98a5177b4018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f6dfa2-463a-49d7-aa7a-32d2108a88fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3598e403-b8b6-47e4-8961-16672c6bde7c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8ad9ca-1b44-4426-b5a2-f6c1711aaeff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38dcc13-93f6-4290-a053-2fa9f0dcc8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca3d827-aa47-40c2-903a-21ac150421b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a37973d-a982-49f1-862e-f44b48132381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890d9dbc-be14-4892-87b2-50dcb4b5d35c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705233e0-f2a4-41f1-90db-d63b1ba19bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1483e9-6e90-47cf-8e1a-65b7d89c2958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4cedd-d5bd-42e9-9ed6-c12f778f5ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8436d1-5a3c-41c7-8443-7d38047ad526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10555fb-7ab4-467c-b490-ec1e30764ae9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67f8c89-9929-41b1-ba0f-b1b30c99adfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260b788f-07bf-4ca0-9840-1227d8857761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407cd462-ab03-4c5e-8137-f2910b863175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7c4f7d-1677-4fa1-b82a-cbeddca0d52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d7d3e-4d13-43f0-a351-e347ce72b9a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed41f7-1550-4f9d-b055-0330685469ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c8c8e98-bb76-4d9b-a837-a572f5830946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d63263-26e5-44e5-ae9f-39d81e6f0f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528d1ac9-8c36-4450-9c5d-aafbe8d87e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5384ea62-1efb-4a3a-aec0-e8b582b988f5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d22c282-ba21-4904-8248-c25399100409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3861ce0-b8b7-4d37-adc4-9658a74a68b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d1d7e-a370-4bab-982c-ebe6b564ed99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef657ed6-9b93-4462-81f6-0ec2bcf92058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7d3895-7f2a-4c40-a198-ba412da4f61e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cad149-2da0-418e-8c70-202ed986c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8379be5a-aff0-4992-b61d-74d88b06ce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615632fa-74b6-41ec-8a21-b35fc71646d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6ddfe2-a714-4b7a-ab94-4d93d898cfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b0d56-1726-4330-ae8c-bd6579d2220b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac7f1c-2417-419b-a6f5-3cf853308c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8027b560-dafc-459d-a514-404ce92805a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee7849b-a2ff-4993-8ca3-f343056b2d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f8aa4f-34fb-4cd7-9bd3-e6b34f55e85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75ec6e-45f9-471c-b090-60dd6a5e3d4a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c17797-05c5-469e-803d-434abb7b7f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682f2f58-1cf0-4bba-acd7-299657572d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb282b4b-ab90-41f5-8ca1-2dccd1c36d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d57a686-15af-46d6-a2b1-c7cd0bcf1173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa33c25-9a1b-4202-8a8b-d514d2f60923",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883de313-5d85-4fc9-ab53-0a000d55b339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ef861e-9170-4fe0-a4a1-292dc3592cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f429471d-ec6f-4411-869b-d9cef5284924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2259d154-1911-44b8-be0f-fc738b75e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accb8b28-6580-4005-a161-273cb8951e25",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d993c6-6fb4-4806-848f-8f8941e128d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09145048-046a-4e13-ad23-f514be54bc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43a0ed6-1cf6-4a91-93df-0670347e0cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554acb36-4194-4866-a21f-2c8e61aff971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e001845-5d4e-4829-9092-d8f490952ba4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3525a3-84a8-4862-a2d6-683f983e4562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e7b839-a451-4b18-b358-4907667730bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fdff23-415a-4dd7-b292-211c0a3f57c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cff5e01-bece-4bbf-88e8-c92b56d947fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf9edd9-9879-45fa-a738-9e4ae752ead2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432bd3e8-6ddf-457c-8e96-3cffd3d39115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8103954-2ee5-40ab-a169-026d0aad6127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f62cb-b372-41ca-8697-1a392aef212f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1325443-67b9-4415-bb1f-1b26bf243636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbd7984-06f0-4f5e-8b4d-96cf44c83137",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9b9f04-791f-4ec7-85b6-0d2d390419dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8794e571-d8bd-46a6-b67f-84ed8a99c84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8629ab7-0c54-4162-98be-f7a29a98410c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322fea54-5365-44ae-82d1-6b79cb82f6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e1476-4a95-43ba-8fb9-b3c1b8f4d572",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df7b47d-24e6-4080-a0c5-15749fdeda93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be67fe94-1e1d-43c4-a4a3-727850fcb6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a4526f-8064-4276-a07e-202fbb9ae43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a752e92-03f6-4c27-b114-05ab72f9058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22f739f-dd75-4af5-a148-a04c9cc0ba76",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47704c4-5381-4db7-9092-4e51361564c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12f770d-92c8-4285-a42a-4f917775ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a920c-c25d-4a2c-b30b-da4551064f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d7b3c9-1ce0-4a0c-a95c-c625122d31e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141b23d7-d5a9-4472-9408-16c2f841547a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93cabe6-ccd3-44d6-b437-eab572593088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e7078a-b488-403f-b1ef-2c6b18c1694e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b2ec95-7a53-43e7-b393-cd48db996871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283c0f58-cd67-434a-ac1f-f8f8106eaa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824055de-679c-4727-a70a-e962c8956de5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db055719-d8e6-4798-9984-ffb4b5ece546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51aaf512-ac9a-40d6-b3f7-00862b14db79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0539493b-60ec-4000-8890-76d468df80d8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89452ae-e567-44d6-9c0e-c0070d486f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf71840-9375-4db8-b7cf-b4e6cb639094",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9b33bb-e614-40ab-8f54-1abab608bebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9905ef27-f1c8-4cea-9ad9-21188e40fc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392632f9-63b0-4ffd-a8e4-ca6ca911e44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e39dd7-b54d-4eda-be74-34edd4b22804"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55ff2899-182d-43ed-98e2-55161b343042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1e600cc-c6f4-4ab2-a8ae-57f52149b992"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7d3837-6c68-425a-bb30-fece9aafde19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "198a7914-0966-4716-a997-378f44ec01f7"
                    }
                  }
                ]
              },
              {
                "id": "46813fed-a290-4eaf-8b69-94275e670bf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26176b10-7aa2-4093-8b39-23c35027ff08",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c177f38-da2c-455b-ae18-4f83875ab247",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e9014152-762f-4b33-a6cb-5eeffab6cdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857a74ce-0153-481e-84f3-19e1dba2ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a10c3404-535d-477b-9ff3-2912b381afa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68ef45dd-38c0-4b31-97d3-6d8d36f9ed3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58908510-0596-48f5-b72e-f1192ee96ec2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fe1628f-ed4d-40c6-84be-e057c48c8004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c34695a-dba9-41a5-9848-9d6b30225346"
                    }
                  }
                ]
              },
              {
                "id": "f4707ce2-6897-4767-9095-26f7da13841e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2fd703e4-ef69-40da-aa1b-cb26923bafad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba7909d-5ab4-4fc2-bfef-61c01557fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c1cd2d63-9e45-4fac-be05-4cb21d926666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cf2757-06be-4ca1-b625-6fa25d054851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db03339a-5ada-45d5-b1ca-9399f4caf0dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6678132-bc4b-4628-bdd1-32f291bf64ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea12be94-3200-41ef-a656-15b9399390c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8919b686-25a9-4814-8004-45f0f9916228",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15eea763-7d84-4daa-b8ff-e8bc278e5d80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f6c31a-bbf5-422f-a600-0be093054c91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41568f07-ad06-41f1-94d3-4ac6231cabbd"
                    }
                  }
                ]
              },
              {
                "id": "7893ced7-988b-4c7f-9ec6-95322b2c83c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fa05d1-77c9-4d73-b2a3-27bd105e3aaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aebe021d-29a0-4461-b341-792f9639c3ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91934387-d307-49a2-b7c2-609d3ef3a1a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c10dc6a5-8c07-4f0c-8cb7-b15315685225"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "455028cb-28e5-444c-a749-136f9ae84423",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd78fc5c-3cd7-4fa4-a92e-852934f121e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38dc6433-3aa3-4576-93c0-b79a67ebd31a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78cfd5f0-8231-4b01-bba3-4d8b26e6f962"
            }
          }
        ]
      },
      {
        "id": "c272c597-e671-4010-b645-3b811b264065",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "635850b9-fe08-41d5-b795-7ac8fc4bc3db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f51535eb-cd6d-4bbe-8f77-8187f9c316d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a84c6dc-be5f-451c-961e-f46218f83bc8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f1949e-b37a-4560-a529-6a69fe3c9df9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43d61d77-6300-4163-9b94-ba559161d2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef8efce-2e54-43d1-b1fe-14436742124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ac9b911-aebe-4b91-bdec-14ac1d1a3aa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "937fa0da-0d92-45ca-a147-39182c16b654",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "182b3811-b8b5-4be6-9e91-317eac9c858f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34f0f24d-7c5a-4ec5-a5f6-6129b8fe37b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da07391a-af5b-4fcd-8848-e417894c88e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eaef358-ee3a-4c31-88e9-467e1c0e1f66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11b43722-10a8-44b1-9f42-89371c1602f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dd32372-9455-45db-9588-49d38e1eaf90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67fca67c-c59f-4eee-b4bb-b9fbdda11bd3"
            }
          }
        ]
      },
      {
        "id": "af2e1351-e176-4a84-827c-7a54307012c2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eb707c21-83b2-4998-b8ba-3264491741d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4edce3cd-e427-4b45-ab4a-9e67e2d8e965",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c97d5e44-70e4-4bc8-9b59-878e0e7dea0e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d4dc03-06bc-46e6-80d4-fb0d83ddbdca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b125433-0026-4df7-a82f-7451cf62f08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9efe47e-2e54-4f93-a107-e0c9a0b698a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8fdbf71-9b76-4770-8f9c-b5851cc5c7a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6781eede-3cfe-4934-a8cc-815ca839a684",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a867bfb-8d7a-447c-8469-00536a87ebd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc4eb4f6-2f38-47b9-90b9-54732c2e9ccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aa93ca2-55e3-48bd-9524-35defe30cc5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf322269-6ad7-4b6f-b416-7ff7fc169bbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86527c15-a61c-44c4-b78f-83c5cad47fb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad4ab969-18a5-4ec2-b067-0e17606e71b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3f2fa7b-0d8c-4c97-90c6-fc2998dbdf4f"
            }
          }
        ]
      },
      {
        "id": "c4be11f3-f502-40a1-b9ae-141954c09634",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ef6d4a24-c3f9-4f80-bde1-1ae74ab6c21a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e88db787-86ef-4da6-b47d-ebaed0266f4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b81c940d-0b74-4f50-9852-bcdd108317a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c01cc-b0a7-4b37-b815-5087a7277ebc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9941b7d7-6c02-4293-8cb5-f8e8cb4cba35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf84fb0f-7932-4771-8dcf-2efc561e4ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be2619f9-c4b3-488d-87fc-665b23bd8740"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7752b2d-ebf6-442a-ad96-ae216eaead9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4487016f-ccb7-4b88-880d-2537f301608e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baec41f0-9a7f-4493-a7f1-1f503139aaae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8dd825c-d239-4ab0-ac9a-8fc7beb6fdbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b4341fc-771e-466b-a878-488b80365be4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e565d45-932d-42b4-9063-d27febfc2bdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425c804e-d489-421b-856d-253013e8073b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "189d53da-9ef4-417c-88dd-a8bc2098b2ea"
            }
          }
        ]
      },
      {
        "id": "f2974c34-8d90-4cdd-b37b-a2bfea6acbb4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34607129-6bb5-4415-91a1-5cd7d2b6761f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf628a0-f0ba-441d-b000-39df78c29235",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2139206d-2535-4e7b-8ead-efd28f4bde7f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd9e92a2-9286-4d60-acec-74db091d1285",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5a72fd5-0af6-4a9c-80bd-9da915617679",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.17894736842105,
      "responseMin": 6,
      "responseMax": 3025,
      "responseSd": 351.39555296632045,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705451801060,
      "completed": 1705451841554
    },
    "executions": [
      {
        "id": "6d0319c3-af52-4da8-9f1d-f18af1e57a16",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a00cf2c5-072b-4d9c-a2ed-3a95af73cdb2",
          "httpRequestId": "73cb9dbd-d339-4d02-b6bc-9510802e5d97"
        },
        "item": {
          "id": "6d0319c3-af52-4da8-9f1d-f18af1e57a16",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09c09e60-ee6a-4433-b143-61a40c5328dd",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "3b7ca657-57df-4ffa-b19e-7db104675f25",
        "cursor": {
          "ref": "74aa49e4-92c1-4afb-ac9b-348623a252b5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2fb5532e-a5a4-422c-9bfb-38abb941af26"
        },
        "item": {
          "id": "3b7ca657-57df-4ffa-b19e-7db104675f25",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "315ef5e9-cee3-478a-b3b5-99862757389e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fa7f6dce-4d6e-4397-a7f0-0222a6aec73c",
        "cursor": {
          "ref": "cb7635c1-e6d7-4f1b-af98-2f62c493ab89",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "01758307-bfd3-47d0-bc18-c9bc661f6db5"
        },
        "item": {
          "id": "fa7f6dce-4d6e-4397-a7f0-0222a6aec73c",
          "name": "did_json"
        },
        "response": {
          "id": "c1dcd49d-1006-445d-966b-145b7d45ddb5",
          "status": "OK",
          "code": 200,
          "responseTime": 572,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd8240e-80ce-4f70-b095-b038e13bd897",
        "cursor": {
          "ref": "06af3db0-c612-466d-8380-f2cc8d8d1c0c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ea9fd45-2722-4d25-8274-b8a53c8fa38e"
        },
        "item": {
          "id": "efd8240e-80ce-4f70-b095-b038e13bd897",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6169fb5-b1cd-46a3-9943-35213d97e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd8240e-80ce-4f70-b095-b038e13bd897",
        "cursor": {
          "ref": "06af3db0-c612-466d-8380-f2cc8d8d1c0c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2ea9fd45-2722-4d25-8274-b8a53c8fa38e"
        },
        "item": {
          "id": "efd8240e-80ce-4f70-b095-b038e13bd897",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6169fb5-b1cd-46a3-9943-35213d97e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f32e96-6fe4-4144-9a1a-87cf940ae6e7",
        "cursor": {
          "ref": "65f6b4c0-0e19-42be-a9d6-c19ccf0c196f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "86aa57db-867b-4633-988b-cea802ff8a6a"
        },
        "item": {
          "id": "83f32e96-6fe4-4144-9a1a-87cf940ae6e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "51fccc95-0dbb-4c91-b0ac-5802d4a3eef5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e66b183-bcf7-4b86-8d47-ecb8864ee518",
        "cursor": {
          "ref": "3ea72c89-fbb5-44e3-b17a-ef98926f7cda",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1d18fd4d-38d4-4dba-be16-4ae2358e9a22"
        },
        "item": {
          "id": "7e66b183-bcf7-4b86-8d47-ecb8864ee518",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "65c27ddf-dd06-41eb-bc35-4cbb656b5e05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4b4672-88bb-4de5-8f29-5d798d6fc41f",
        "cursor": {
          "ref": "2ca8d254-893b-4570-8cc8-9e615b90733a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "87ebbd21-3607-4dc5-8de0-e800863e1db5"
        },
        "item": {
          "id": "0e4b4672-88bb-4de5-8f29-5d798d6fc41f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f7d223db-5a79-4b2f-aa5e-77552e699716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2f1e3f-9483-4ccd-96e0-ad01e7bb48d6",
        "cursor": {
          "ref": "2a4ebf8b-d1ec-4adb-8904-da76a3ec5212",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a3f2b9b-7ee2-43d4-9bef-1a4a4c167b0d"
        },
        "item": {
          "id": "1c2f1e3f-9483-4ccd-96e0-ad01e7bb48d6",
          "name": "identifiers"
        },
        "response": {
          "id": "15d5976b-e3d5-46b2-b256-6168ebe7d897",
          "status": "OK",
          "code": 200,
          "responseTime": 330,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61108fe7-450c-4a77-a006-7846ee238f92",
        "cursor": {
          "ref": "8e214912-8aab-44bc-bfa6-ca58ee62fcc2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4c540674-163e-4d34-a071-6cdea4e27c1a"
        },
        "item": {
          "id": "61108fe7-450c-4a77-a006-7846ee238f92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "378f9f7b-ac5c-4ef7-b662-f0f1978aa117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dce336-a274-488a-9fa4-22a6873a3178",
        "cursor": {
          "ref": "bfcea177-519e-4e3f-8937-2edae2af7b98",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e4381043-b296-4233-abcc-37e301962b51"
        },
        "item": {
          "id": "87dce336-a274-488a-9fa4-22a6873a3178",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0fa59482-22f4-43e4-9895-8ac0abc66b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d001b428-8fe7-41b7-9299-1782f31b07f9",
        "cursor": {
          "ref": "a42179e9-dc5d-449d-aa0c-fd5a109b08b5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c23fbf00-550d-4ee7-8d62-1c49fecdfae0"
        },
        "item": {
          "id": "d001b428-8fe7-41b7-9299-1782f31b07f9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8143e886-2338-4b87-9a53-acecf2c6caca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201c4abb-d6b5-41fd-8b90-244f9beceb2f",
        "cursor": {
          "ref": "2019197a-91ad-4651-84e5-773776af07b1",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a0983ca0-81fb-4c65-8024-bdfb223f8ab6"
        },
        "item": {
          "id": "201c4abb-d6b5-41fd-8b90-244f9beceb2f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b67e335-b648-46e8-a9e7-d3c55fd743dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344a4df5-4e1c-4047-9e54-3e412c228f75",
        "cursor": {
          "ref": "b24eed52-b0f9-4ffe-9d87-06f234014423",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0b93dd6-0742-4f1e-8a73-3560becf82bc"
        },
        "item": {
          "id": "344a4df5-4e1c-4047-9e54-3e412c228f75",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a235b06-d3c7-4c9d-8a0c-e2a5513c186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca8c38-ac48-4e3c-9dc5-11dd140ed821",
        "cursor": {
          "ref": "4619e378-6639-4b7d-8e63-f9addae205ad",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a975137-559a-402f-9e04-d79b9d722cb0"
        },
        "item": {
          "id": "a6ca8c38-ac48-4e3c-9dc5-11dd140ed821",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d6339770-28cf-4a01-bf47-9699b9ccecf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0f7552-cd87-46af-921f-4a8c26804021",
        "cursor": {
          "ref": "ce372011-bdb5-4268-84c7-f4d27eb88a7b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a609099-ed50-43d7-ab00-08000c3f69f6"
        },
        "item": {
          "id": "ea0f7552-cd87-46af-921f-4a8c26804021",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8b6fb482-c5dd-4653-91c6-c0152466d2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcbb55b-bd29-430a-a362-7bd97f8b9a87",
        "cursor": {
          "ref": "a697f7c6-3bb2-4d45-86e4-6e005544d62e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6efa4c45-8911-4b2f-8919-b7fce56359c3"
        },
        "item": {
          "id": "7bcbb55b-bd29-430a-a362-7bd97f8b9a87",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a4e72fb-951d-4f12-b9c6-d6c0e49aab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b14df0-ab2a-4784-bce9-7e691eee49c8",
        "cursor": {
          "ref": "fb0ea72e-728b-4cf3-b13e-7f4756b289bd",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "03492056-2a7a-4fbb-826d-a9c2915129d3"
        },
        "item": {
          "id": "a5b14df0-ab2a-4784-bce9-7e691eee49c8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ebbdddd-91e4-4058-b0b3-eecd51ffa9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb7204c-69e0-4c9b-b137-f55ad8498f66",
        "cursor": {
          "ref": "3edebebf-2edb-46eb-8700-336db7210d44",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7083cb8d-ad1a-438b-a4ee-b72193081789"
        },
        "item": {
          "id": "bbb7204c-69e0-4c9b-b137-f55ad8498f66",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0bdb3e2e-0569-4735-a76b-4f1b2cb65180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f14b967-55b9-48d2-9a9f-e19027eaff4c",
        "cursor": {
          "ref": "5783869e-a2ab-4710-a0ff-9d8a4b2eafd7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89cd535f-ae75-4ddb-95a5-5861dc35e560"
        },
        "item": {
          "id": "9f14b967-55b9-48d2-9a9f-e19027eaff4c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7e95a79e-61d4-4693-90a9-22f458e98b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69448eac-f292-46dc-a1ce-80aab40dc9ae",
        "cursor": {
          "ref": "5d37119f-4d69-4879-9bba-ca5b630c7f56",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bd8d530a-ec3f-430d-89c9-f6c0bbd96d2d"
        },
        "item": {
          "id": "69448eac-f292-46dc-a1ce-80aab40dc9ae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "49d28c34-5fd6-4472-93f8-b45ec7710037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de08854-e1c5-4cd9-8e91-04f0e0ce99e2",
        "cursor": {
          "ref": "4eceeacf-903f-4a78-bf1a-b60858ee65c0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "48a3d6f0-313b-408e-829e-1aa924187cb2"
        },
        "item": {
          "id": "8de08854-e1c5-4cd9-8e91-04f0e0ce99e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89c36a91-b1c8-4749-9d54-e33e6784cda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6bc44-74b6-4f28-a440-f820a0b0631a",
        "cursor": {
          "ref": "7e6b7d2b-6181-4717-ab4d-2ddcb58166c1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f7871420-8084-49c0-b020-335de31262a8"
        },
        "item": {
          "id": "38a6bc44-74b6-4f28-a440-f820a0b0631a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "226d0df2-687c-45c7-9b4a-8fdd5b81a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be0a189-7001-4f9e-9eb1-07ef8f501ca4",
        "cursor": {
          "ref": "9a643cc6-9531-4f30-b0d7-9e0abb26448c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cde08981-a2fb-4f8d-a92b-f79d0b83ad13"
        },
        "item": {
          "id": "3be0a189-7001-4f9e-9eb1-07ef8f501ca4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5a26670a-0aa8-4f90-8e2f-232a108dbb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a9ee6c-2299-4a11-ad15-1eb9eccb43d1",
        "cursor": {
          "ref": "a16fac1e-d09e-4eab-997f-a766d088de0a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "43fcbdcd-2774-4672-9dd7-1968d709e43c"
        },
        "item": {
          "id": "19a9ee6c-2299-4a11-ad15-1eb9eccb43d1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ab20ca23-386b-4d5a-83b7-1a36356f59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a952aeda-9f34-4597-a6d5-62cd733c8783",
        "cursor": {
          "ref": "81e1a3e7-55c4-4e68-b9e2-81d07862c961",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2214da39-6595-4a98-95c9-25fecaff5c0f"
        },
        "item": {
          "id": "a952aeda-9f34-4597-a6d5-62cd733c8783",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c59e90cd-95c2-45e2-9886-f0bcb115b36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d19741f-e6cf-4a56-b76d-a25c46429a15",
        "cursor": {
          "ref": "65e93025-9323-4984-9710-dd4c5c665631",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "42597807-3b54-49d4-931b-4226e1dcce7d"
        },
        "item": {
          "id": "7d19741f-e6cf-4a56-b76d-a25c46429a15",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2af718ae-74c5-4f34-b63c-10eb979d67b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f93ef8-3a33-415f-9676-46d8e1da44ce",
        "cursor": {
          "ref": "91967ac7-2065-439a-b03e-669a51422604",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "544ae9c0-861b-4d71-8b67-403b839039b0"
        },
        "item": {
          "id": "95f93ef8-3a33-415f-9676-46d8e1da44ce",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3ca63dd2-35f0-4134-9bce-1ec759fc47a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77ecfff-2448-448f-86a7-2cf70fe6163e",
        "cursor": {
          "ref": "c761fa48-3759-4c8f-8ad7-7eb23b36bfb5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2910cee2-ecb4-4d51-9ce2-430214b78c95"
        },
        "item": {
          "id": "e77ecfff-2448-448f-86a7-2cf70fe6163e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "227f2121-7d9e-43bd-8701-3f6268001d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4beb05-f264-494f-8aac-ee2396cc73a0",
        "cursor": {
          "ref": "303c1bf8-fcaa-49ff-8766-774ce1178bea",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5f1e644a-def1-450f-b029-2f06538c9a58"
        },
        "item": {
          "id": "4a4beb05-f264-494f-8aac-ee2396cc73a0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ff27a326-7535-4d2c-864f-f528915a8f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aa5a7a-5817-43f7-8ea9-ab2e903368aa",
        "cursor": {
          "ref": "529a18ad-8543-44a0-9d2a-4b797f1493f4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bea1ba9f-9689-479b-a551-32e633ece329"
        },
        "item": {
          "id": "51aa5a7a-5817-43f7-8ea9-ab2e903368aa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1015a0e8-1abc-495d-841b-c0041e2da5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892e2db-63f9-43f2-94d5-ff17db43b48d",
        "cursor": {
          "ref": "d9ca9dc9-f0a6-48ec-b893-7645e80f39b9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c49fee20-284b-4477-bc40-81a36e85c969"
        },
        "item": {
          "id": "1892e2db-63f9-43f2-94d5-ff17db43b48d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "42fbd69c-a681-4824-9f53-3a22aa17ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c618cbd-9e90-4c08-8125-beea3f7d39f4",
        "cursor": {
          "ref": "d1ad9d29-2177-4bcb-a991-6107e74fbe38",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d043a6d3-03ec-4ed3-a795-9aa4ee21f0db"
        },
        "item": {
          "id": "5c618cbd-9e90-4c08-8125-beea3f7d39f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "85089060-b6e5-4202-af29-6191bd95eda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996b025a-9be2-4417-a185-eb3589b0d1e2",
        "cursor": {
          "ref": "99d5f4fd-3d09-4638-a6b9-cd24d223aacd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "efe5714c-ef28-487f-a786-47a3047d572e"
        },
        "item": {
          "id": "996b025a-9be2-4417-a185-eb3589b0d1e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0566a828-e63b-4ba5-84d0-23b47bb3a47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342b5a84-06b5-4691-852d-de495cdf05b5",
        "cursor": {
          "ref": "dbff43f3-4eb6-4b23-9e7e-a5d6a8b02997",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7149ad80-2613-44ba-a6b1-dc3fa6ca90d7"
        },
        "item": {
          "id": "342b5a84-06b5-4691-852d-de495cdf05b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0504265a-f352-4cbd-849c-3d78bc985439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b06794-fdba-4a5d-97ee-dc7b3374e59b",
        "cursor": {
          "ref": "5adb3248-2237-4ecb-9494-e37e8b8c730f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "31923b88-3c79-40b3-b0a8-647a4cf28fa7"
        },
        "item": {
          "id": "c9b06794-fdba-4a5d-97ee-dc7b3374e59b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "96a5c1d6-2e2c-4a8e-9d09-bf461508c1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b61404e-c224-4f7e-bf09-3aa324370a9a",
        "cursor": {
          "ref": "151911a2-245f-45fe-a2ba-792793f90e34",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "24287c5c-5e29-434c-98f6-e8d91149e092"
        },
        "item": {
          "id": "5b61404e-c224-4f7e-bf09-3aa324370a9a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "20595d1f-fb38-41de-8692-1840847cdd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399931d0-0f21-4aeb-9f65-ef0664bba5fc",
        "cursor": {
          "ref": "5fb21fca-1087-4a5c-babd-4a9605a1c8c3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "20937fc0-fb44-47e4-adee-5a38d68fcdc7"
        },
        "item": {
          "id": "399931d0-0f21-4aeb-9f65-ef0664bba5fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "32b81bcb-6974-4ea5-bd7c-ce586d169ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a3483-7ef0-4e66-90ef-b0e40f1aa0fb",
        "cursor": {
          "ref": "2ea7a08e-fe98-4c5e-94fe-656d0cebc28c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8ddba085-0b1b-44a1-b477-9e80fe39b3ad"
        },
        "item": {
          "id": "bd4a3483-7ef0-4e66-90ef-b0e40f1aa0fb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "664c847a-db26-44c5-93e1-509965c5f9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4268b7-59f3-4d34-8d41-62d5533cd269",
        "cursor": {
          "ref": "2e6ee014-204d-4ce5-9d57-cdb93e7826df",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a7c9173-3131-4189-8d1d-4f3e0e2c0dcc"
        },
        "item": {
          "id": "7a4268b7-59f3-4d34-8d41-62d5533cd269",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0fe3b695-0907-4816-b398-27f2c2db7a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ee036b-07c0-40bc-8193-30a883dc396a",
        "cursor": {
          "ref": "fe2ff10c-4c30-4a4e-916d-3976dd20e6c5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cb7c33c2-5e3c-432a-b993-d6d5aace684f"
        },
        "item": {
          "id": "62ee036b-07c0-40bc-8193-30a883dc396a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "36e74ee3-97bf-4cd8-bd14-96186086fa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dc5856-f4a3-4af4-bfaa-eae55b41d9ae",
        "cursor": {
          "ref": "2dd79a2a-7cb7-4689-982f-2ac59c62f21f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "745ea50f-f8eb-4632-ae0d-cbf161fb943c"
        },
        "item": {
          "id": "23dc5856-f4a3-4af4-bfaa-eae55b41d9ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ff58b9b6-b009-43f5-b40f-3bf57d43cf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de15714-abea-434c-b37d-d25e220ae85f",
        "cursor": {
          "ref": "090605bd-1160-4de7-812d-994b526ab666",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a3269701-8aca-439b-b660-124f29902d76"
        },
        "item": {
          "id": "7de15714-abea-434c-b37d-d25e220ae85f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "986ed4e6-c4bd-4840-b7eb-8c9729e4296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b8fe7a-9852-4f81-b23d-13ad8628eb48",
        "cursor": {
          "ref": "8f20cc0a-c2b4-4cd3-b076-df189f093572",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0d4d338d-1aa1-4672-85d9-bc3baeb46647"
        },
        "item": {
          "id": "e1b8fe7a-9852-4f81-b23d-13ad8628eb48",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fb721d02-16ba-4c87-b48f-1186ab037503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29851f9-8397-4018-801b-77b32eda0a48",
        "cursor": {
          "ref": "daebd363-dc7e-4c0a-bf86-563e22c95eb6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b416f314-e488-4a96-a382-eaf5641c0185"
        },
        "item": {
          "id": "b29851f9-8397-4018-801b-77b32eda0a48",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e1cdcc67-1eb2-45c6-9c1d-c2ee7ad04488",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 320,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964da32c-3996-4dab-9930-f40c173b0d6f",
        "cursor": {
          "ref": "5931483a-b0f2-4a37-a524-9f71721b941b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8268f6b-d5f0-4f8f-bb5a-48cb5db7739a"
        },
        "item": {
          "id": "964da32c-3996-4dab-9930-f40c173b0d6f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b000e71d-badd-4a92-a295-bed7aebefd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fefe55-be7e-4ff9-8840-1389eceaa640",
        "cursor": {
          "ref": "e1be1433-8eda-4b23-91eb-2d4c5d89873d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce7c66a7-1ec2-49d7-88eb-02e6059b540b"
        },
        "item": {
          "id": "16fefe55-be7e-4ff9-8840-1389eceaa640",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "46170556-2afa-481d-9fac-1ee70f7f2c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718b2b60-38f1-4ece-b032-a147f194cb37",
        "cursor": {
          "ref": "35351ffd-bfe8-4dbf-87bb-576864c6edad",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fe87e895-166a-4d0a-bc4d-881588d66086"
        },
        "item": {
          "id": "718b2b60-38f1-4ece-b032-a147f194cb37",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf2398b2-978a-42d3-9545-7352c9e72360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08b0f53-165d-4df8-8876-3f5170dc8272",
        "cursor": {
          "ref": "50e13dfc-4756-4e17-9067-debf876927c0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8682f680-60c7-49a0-8311-a33c426e665c"
        },
        "item": {
          "id": "f08b0f53-165d-4df8-8876-3f5170dc8272",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "83ac49c7-2cb0-433c-a92e-be1d5a68debf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6868a-9cc3-49fa-a55c-20da153f28ff",
        "cursor": {
          "ref": "c052d144-1bb0-439c-a40f-b3c9baa51dfd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d1e09d15-9e87-461b-954d-737971e4952a"
        },
        "item": {
          "id": "79b6868a-9cc3-49fa-a55c-20da153f28ff",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "722c9ef7-c322-4ac3-bd13-aa6aab5abcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7dbf78-72ea-4107-a77c-ddd39c80160d",
        "cursor": {
          "ref": "20632230-c5f9-48e6-b3a6-46940b9915d0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "478ac47a-ffa5-4537-a3a3-a5c8c1822a0b"
        },
        "item": {
          "id": "8f7dbf78-72ea-4107-a77c-ddd39c80160d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9ab2f959-f476-482d-9027-ec3873097740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b91921-7852-4626-960b-834a5d1e3121",
        "cursor": {
          "ref": "318dff05-1c87-4f01-be74-c30d2715d171",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "94076d72-2bd4-4a81-9990-8c2609fdbcdc"
        },
        "item": {
          "id": "74b91921-7852-4626-960b-834a5d1e3121",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1b5ed070-84aa-46f1-846d-768850e16464",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 352,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5073ba-7c78-4632-a923-4b835fa7995c",
        "cursor": {
          "ref": "ab9377ec-4b7b-42ce-88b4-8e9bb313d8c5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "91d7b837-a1a9-4afc-ae3e-e731a196fc7b"
        },
        "item": {
          "id": "ea5073ba-7c78-4632-a923-4b835fa7995c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8e369b7a-675f-4ad9-b549-2aa0353f8f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a34282b-5601-4371-b33a-ffd89dec5243",
        "cursor": {
          "ref": "5f22a038-7765-4901-8366-12516e265fdb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f706c4fd-ae0f-4a27-a0c6-827c5c6e22d6"
        },
        "item": {
          "id": "5a34282b-5601-4371-b33a-ffd89dec5243",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "08497495-f7a4-45dc-ad0b-d7f81bd4e0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5abf15-02e0-46e1-977e-7b6605bdde4f",
        "cursor": {
          "ref": "e4aa5230-b64f-4842-97bb-19de7940964b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6e93b71d-2ff2-4e73-b91a-be7b3f2ee6ef"
        },
        "item": {
          "id": "3a5abf15-02e0-46e1-977e-7b6605bdde4f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a45019ac-0601-4f0b-ad96-313527425712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf179b-3c73-4ad7-b782-d75045db3a4d",
        "cursor": {
          "ref": "537057d1-4b79-4d65-81b3-b73d90bd31cf",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1f1b1244-df86-4905-b9b6-8c48c90fa2d0"
        },
        "item": {
          "id": "27bf179b-3c73-4ad7-b782-d75045db3a4d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2289da91-9dd6-4dde-8320-e2332b75fa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f1bf0c-989c-4147-93bb-ba09e8e3d704",
        "cursor": {
          "ref": "a964fd6c-f7ef-4da2-87a2-bc6bffa23093",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "29435d2c-311c-4733-bb5a-0ce26af3d5ee"
        },
        "item": {
          "id": "e0f1bf0c-989c-4147-93bb-ba09e8e3d704",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a37c01de-f401-40c1-9ad5-59910eca8ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feddc07a-fe29-4adc-947a-cde000b69529",
        "cursor": {
          "ref": "e7a31ad6-11fc-4832-b393-cef842ba30e6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "79f9ddf5-b3dc-4624-a751-907f26a726dd"
        },
        "item": {
          "id": "feddc07a-fe29-4adc-947a-cde000b69529",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa80b3a0-32c7-4782-afe9-091f4932c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0139883-73f4-4ef0-9387-4b65882e83a5",
        "cursor": {
          "ref": "6ca57279-a2c0-4c26-805d-2513833c655b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98d5fec7-30b4-4db8-ad8f-a93ef6454723"
        },
        "item": {
          "id": "d0139883-73f4-4ef0-9387-4b65882e83a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4a3bef28-84ba-43d6-ab64-5ef1d75b23f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5a1e0d-ba53-409b-8d40-3225189ef068",
        "cursor": {
          "ref": "f35311b1-7788-499f-9c6e-f415d72c4149",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9edf495f-7bc1-44c3-a591-28b23c8da090"
        },
        "item": {
          "id": "cc5a1e0d-ba53-409b-8d40-3225189ef068",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "75d25b43-ea3d-4a7f-95b1-5bac78814566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce21b197-8d00-4660-816f-9e522142750a",
        "cursor": {
          "ref": "adfbff8e-8542-4982-a8e2-b6293b1458c9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9701c27a-015c-4b80-bc12-cc19a6da6113"
        },
        "item": {
          "id": "ce21b197-8d00-4660-816f-9e522142750a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5d7acabc-a261-4b0a-94ef-9574b6b9f46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3abe0c-658d-40fd-a991-84d544adfe47",
        "cursor": {
          "ref": "9aafde5b-c110-4f72-b266-33c4871b143e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "30d28599-ac8d-4855-ad60-dc797f1b399b"
        },
        "item": {
          "id": "ac3abe0c-658d-40fd-a991-84d544adfe47",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce2c9a15-28e5-466c-912d-bceb211dd943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c6a3e2-ea14-43ca-bc99-e837c7e566ac",
        "cursor": {
          "ref": "47da910b-2ff0-4a6c-a3e7-dd4abce6bb73",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "65967a14-21b1-4d2f-91b1-bdf9735cd229"
        },
        "item": {
          "id": "93c6a3e2-ea14-43ca-bc99-e837c7e566ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ff9ce47a-af85-49a2-a1ec-b1f7a167087d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1427bb8-6db5-442b-860b-97c518c9aa34",
        "cursor": {
          "ref": "fca9b369-cd65-4235-bb8c-07033ffc39ef",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1fbe4864-0220-4b5d-8752-4be60800aa40"
        },
        "item": {
          "id": "a1427bb8-6db5-442b-860b-97c518c9aa34",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea18cf85-2939-4bcb-b216-f7e188fd671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623cdc55-e6d9-46ae-bd8d-a5fdb4b4a0b4",
        "cursor": {
          "ref": "dc5fc091-cb6d-4951-8364-548859c01dd4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f8a8749-9686-48cc-ac67-e4696a37568f"
        },
        "item": {
          "id": "623cdc55-e6d9-46ae-bd8d-a5fdb4b4a0b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1417a5b3-e22e-4f9c-9f25-4b9dfc101ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325ec3fe-d6de-43bf-886e-98f0ef500bd7",
        "cursor": {
          "ref": "f47187ca-8990-471f-b40b-1323b9b1d22b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f7ad51b5-4207-48e1-9d34-22cc5dea2f0f"
        },
        "item": {
          "id": "325ec3fe-d6de-43bf-886e-98f0ef500bd7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "244be163-910f-47fe-8cc2-1a3292515c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10468a6-6c30-402d-bee6-e9fd3caec7f3",
        "cursor": {
          "ref": "fc57e057-e6e8-41bd-bc30-8bcabed08710",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4914f68e-3b17-4eb4-9d37-dd0c110e07a5"
        },
        "item": {
          "id": "e10468a6-6c30-402d-bee6-e9fd3caec7f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "382312ea-db9d-4fa5-9c15-1d152f7f181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d598dc-00fe-4d7b-be22-feecc824735d",
        "cursor": {
          "ref": "65541343-2a47-46d4-811f-b76780358198",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1ef8c21f-f267-4c77-8802-44e1a575364e"
        },
        "item": {
          "id": "f8d598dc-00fe-4d7b-be22-feecc824735d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6d163c4d-e0ad-4701-9ade-adbb33e69a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bc2af8-5160-4e98-8c0a-2426b6b3845d",
        "cursor": {
          "ref": "929c5f04-3eb3-4c6a-b472-b459cf0e6bf5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2a954f9b-7535-44e0-aca1-0a0e17247015"
        },
        "item": {
          "id": "43bc2af8-5160-4e98-8c0a-2426b6b3845d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60de39eb-53d6-4075-ab77-28c67a15927b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac25c5-d73c-4bc9-8584-e9206ac59d56",
        "cursor": {
          "ref": "23ea2097-baab-4b4c-bcb9-2bbd6456c99f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b9244bdd-dea4-4362-a896-fc7f47eebe72"
        },
        "item": {
          "id": "a8ac25c5-d73c-4bc9-8584-e9206ac59d56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "20ffcb52-b058-43ce-9334-eacc14ffcc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062bb36c-aba8-4923-a6a0-91c7936637ac",
        "cursor": {
          "ref": "78be6bc8-7e1b-4e64-822c-36d98cef6b49",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b563d238-a7e8-4c59-9398-69eba3d847df"
        },
        "item": {
          "id": "062bb36c-aba8-4923-a6a0-91c7936637ac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1a706258-eb4c-4dce-9a35-c153e7b6eba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b0016d-aad0-4015-94d9-258e781b1727",
        "cursor": {
          "ref": "b6157374-226d-4557-b426-f6f22d44b973",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0bde24a4-77ed-4d0a-b8dd-aae6b129488f"
        },
        "item": {
          "id": "96b0016d-aad0-4015-94d9-258e781b1727",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5839ea68-7a5a-4106-9bb1-d46adea9ee6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278ed399-523b-46e7-b5a9-b5295fd09b68",
        "cursor": {
          "ref": "b934a4ef-0a39-4fc1-b1cb-1e624e9f0407",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "59e10bea-12d1-450a-9aa8-2babb04e7247"
        },
        "item": {
          "id": "278ed399-523b-46e7-b5a9-b5295fd09b68",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1b92960d-3447-4843-a617-43f1617e7eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e5e0b-9e7d-4a6a-ab67-5ee0b547ba07",
        "cursor": {
          "ref": "6c6b5161-8134-48eb-a013-178799b401ec",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "51a573fd-72ca-4440-8edc-1976e01800b6"
        },
        "item": {
          "id": "962e5e0b-9e7d-4a6a-ab67-5ee0b547ba07",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fce79c54-97a3-4fb6-b447-02105b6b9026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2898a2-d98b-453d-bc9c-0f35503a182f",
        "cursor": {
          "ref": "b8db74e3-4618-4343-86de-94aeb448e13d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aea019fe-c03a-46b8-9333-25234979a0ce"
        },
        "item": {
          "id": "8a2898a2-d98b-453d-bc9c-0f35503a182f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd8c44aa-d5d6-4e2a-8689-4d1a405d9d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76ecd9d-2647-43d3-9837-1c0b3167f69e",
        "cursor": {
          "ref": "d1724aac-a1ee-4423-8910-c1c5e36c1dc2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "19abcb75-880b-458a-b4cc-de9f2cf32b5f"
        },
        "item": {
          "id": "d76ecd9d-2647-43d3-9837-1c0b3167f69e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b5688d9e-ebe2-4c58-b7d4-f5da86cb357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232a19b8-2e6d-4d1b-9074-5b6c15aac32c",
        "cursor": {
          "ref": "dad6eb65-caa2-490d-858f-544e970e33dc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a0ac2fb1-1104-4423-8d67-99832935a565"
        },
        "item": {
          "id": "232a19b8-2e6d-4d1b-9074-5b6c15aac32c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7b7589cf-fa16-46c1-8920-274fb266414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8af3f3-58a5-4676-97ac-f780605c931e",
        "cursor": {
          "ref": "72554c2a-781c-4d53-8d08-d1a8709d7d3f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5c95243e-e3cc-4b16-b220-f071f50a22d8"
        },
        "item": {
          "id": "2e8af3f3-58a5-4676-97ac-f780605c931e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2cc2d050-06f7-494b-89c5-36a476a990d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92484758-1ddc-412e-8460-09fa00baedaa",
        "cursor": {
          "ref": "5ff9f32a-c3d0-4280-b6b7-fefa20727f13",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6b647e09-2ed0-4a94-9df0-9a8a32ff13e5"
        },
        "item": {
          "id": "92484758-1ddc-412e-8460-09fa00baedaa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1d8d6aac-c3e5-4134-a666-450d56893a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0824f2a9-b2ff-42ce-80b6-51670c1f5981",
        "cursor": {
          "ref": "5cf85b69-867e-4b78-87e6-fbedaac2a3c3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "13a7b010-9b34-46f0-8196-f2a1b93db3ec"
        },
        "item": {
          "id": "0824f2a9-b2ff-42ce-80b6-51670c1f5981",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "280ab4b4-8d1e-482b-9ee1-9effca402c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ef923-f0cb-487e-8546-00ec1ea9f969",
        "cursor": {
          "ref": "3546bb82-1e16-491a-8fc3-d02237c26224",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "98c34a65-ced8-4150-bba2-789007a6fa9a"
        },
        "item": {
          "id": "554ef923-f0cb-487e-8546-00ec1ea9f969",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cbd6992b-5d59-4fbc-bdcf-c8714b1c4779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c437e-ab6c-459e-9797-83cf565b3f39",
        "cursor": {
          "ref": "e8e606e6-ae61-481c-b974-6ab8827a8a40",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b8e515af-cb99-4ba8-bde0-575944b60adb"
        },
        "item": {
          "id": "a83c437e-ab6c-459e-9797-83cf565b3f39",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fda8e230-61a6-4842-aba2-d68d9bb5f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7618897-6200-41b4-928a-8daa0fbda5dc",
        "cursor": {
          "ref": "6e2afba3-f38f-4b65-9e90-286e5bf54050",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "81a7aa07-2ad1-45a4-b904-4528805feb32"
        },
        "item": {
          "id": "e7618897-6200-41b4-928a-8daa0fbda5dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f2c61e7d-5283-4c05-b9b8-d468e2044c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e6bc3-d9d9-4bbd-8cd1-a146d50c0327",
        "cursor": {
          "ref": "2d164d2b-4a23-4dc0-b734-488bebb80c34",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "795fab93-57ea-4865-ae56-3af4d03472fc"
        },
        "item": {
          "id": "687e6bc3-d9d9-4bbd-8cd1-a146d50c0327",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "86e0b969-fc5f-4263-a5da-9067dc5a363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e0f966-8ea5-4693-af95-ce98aa5100b7",
        "cursor": {
          "ref": "10cf702c-db8c-4f0e-a53c-f255b32e3166",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "929002a8-dce2-417f-a912-5e7e284fa024"
        },
        "item": {
          "id": "98e0f966-8ea5-4693-af95-ce98aa5100b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "41e20e03-72db-4d4f-8ac4-46be4d7f465a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d042e073-36de-43a1-ac4e-1bc9b7e714eb",
        "cursor": {
          "ref": "4cf8dbb9-cb6e-4b5b-945c-09c9fe3cafdc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "28e5747d-704c-4b0d-a0c7-f79ecf4a26d2"
        },
        "item": {
          "id": "d042e073-36de-43a1-ac4e-1bc9b7e714eb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "16b6b4b9-be68-4284-af8c-4d845978b7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494470d0-8ecd-4ec1-8f64-deb807ec029b",
        "cursor": {
          "ref": "1c1b563e-56cc-4fc9-8368-9851762672fe",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2527d122-42ad-4b94-950f-12c95300b848"
        },
        "item": {
          "id": "494470d0-8ecd-4ec1-8f64-deb807ec029b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "020ffc46-625d-4827-9108-c065a454aa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61d66da-b901-4964-bacb-4e527fd1adf8",
        "cursor": {
          "ref": "445fddda-29fc-41f2-a78a-8e8828606ef3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e9057846-7cca-4c12-85b4-aa2f1365216c"
        },
        "item": {
          "id": "b61d66da-b901-4964-bacb-4e527fd1adf8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bb8beb20-6f32-4058-8363-27e2683aea64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e6f49d-7ec1-423d-b588-cf8b5d5f3e53",
        "cursor": {
          "ref": "88927760-8f2b-4dda-82ea-50a959c1e6bd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b192758b-6201-451f-82bc-c1bc0c38d757"
        },
        "item": {
          "id": "71e6f49d-7ec1-423d-b588-cf8b5d5f3e53",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "37608861-a972-4a32-acb4-36ba0b9f2a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870e7d22-baee-468e-ab0f-618ffafe427c",
        "cursor": {
          "ref": "09204397-202e-41c8-9294-f711037a8808",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "998f95cd-1d78-469e-a798-66992a1e9476"
        },
        "item": {
          "id": "870e7d22-baee-468e-ab0f-618ffafe427c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a626daa6-ad17-4296-a241-a48c30c26352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32549f6-8dee-409f-af36-75721fc9a0d9",
        "cursor": {
          "ref": "d6647d3a-0c3b-4e73-be35-a3907d3733fc",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ce1ff3d2-fdf7-4082-ba9b-22a3f329246d"
        },
        "item": {
          "id": "e32549f6-8dee-409f-af36-75721fc9a0d9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37646a98-9a2f-405b-96f4-267211a9809a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4780063-daf2-4f0b-9c37-209f11c02ef5",
        "cursor": {
          "ref": "5fe3acb5-4bd9-4c86-bed8-39d4d31753a5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8c72bdf5-ad6e-437c-8de2-d2a8cb4135c6"
        },
        "item": {
          "id": "a4780063-daf2-4f0b-9c37-209f11c02ef5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2897f5e6-7c3c-4e78-bcea-24bdbb6b6368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d8a87-f244-427a-88de-a2e1e20d819a",
        "cursor": {
          "ref": "0bf162af-0df6-4374-932b-dcbf78b72c71",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "86d78721-33dd-468f-8d85-d3f6f88395cb"
        },
        "item": {
          "id": "8c8d8a87-f244-427a-88de-a2e1e20d819a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f27bfd9e-a6b8-470d-b8bf-b8f75a842330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543ec53d-e7bc-4261-94fe-e7d59e95f008",
        "cursor": {
          "ref": "c6e98d8e-1cdd-43d8-bf99-9f84bf75442b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eb04da2e-87a4-4957-8e7a-74f98ff596bd"
        },
        "item": {
          "id": "543ec53d-e7bc-4261-94fe-e7d59e95f008",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1660dc49-cdff-4477-b8f8-0ed740d135e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e541d75e-fc3e-4dd8-a849-bdb64cdd59cf",
        "cursor": {
          "ref": "154f0fc8-f505-46b8-ba71-a78ba8229a97",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d4e6b78f-24a0-4e7d-9881-79016023ba1b"
        },
        "item": {
          "id": "e541d75e-fc3e-4dd8-a849-bdb64cdd59cf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3722aa19-523c-404a-9dc1-86c7b41dda0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b58a93c-131d-421a-8143-3f7081b1df7a",
        "cursor": {
          "ref": "a78ab204-52aa-4a84-a6d3-10513722741c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "df20a5ec-592c-41d8-99a1-89cd9d26bc53"
        },
        "item": {
          "id": "4b58a93c-131d-421a-8143-3f7081b1df7a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6bda2464-a6fe-4e51-a919-f3c684711cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43faa79-c104-4702-b84d-7ec2bfab0283",
        "cursor": {
          "ref": "ca25d91a-168c-4476-ad97-2592f5f98636",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fcff4c9b-5af4-4927-984f-e1a4003dac23"
        },
        "item": {
          "id": "b43faa79-c104-4702-b84d-7ec2bfab0283",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "968609b2-8e86-445c-82a5-ba69c37e5555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40076fdc-8b7e-4fae-96e6-80afcb31dce3",
        "cursor": {
          "ref": "24e8469a-e04a-45eb-9474-56b61601e928",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ed9aa149-caa1-41f7-add6-a5b74b08b981"
        },
        "item": {
          "id": "40076fdc-8b7e-4fae-96e6-80afcb31dce3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "255df292-8878-4f68-870d-0aacdc596219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1da7b5f-648e-4401-ab6e-017faaf2c1e1",
        "cursor": {
          "ref": "68bc75a9-493d-4638-b0a6-5777211a5901",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ee68e1cd-49b6-40a9-9523-eb5166059d82"
        },
        "item": {
          "id": "b1da7b5f-648e-4401-ab6e-017faaf2c1e1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "41034dd2-528c-43f0-bdfe-899cc3f0afc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9493b11c-6f67-41cb-bc68-d275ed400f5e",
        "cursor": {
          "ref": "0ef5a84e-6d34-4016-a968-df18e2982af6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "80cf8f67-52af-4380-8cbb-87f40e2c9eff"
        },
        "item": {
          "id": "9493b11c-6f67-41cb-bc68-d275ed400f5e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d47587a6-2152-4b98-989e-7b25d33e0d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf17cf9-d0ac-45c1-8bef-729a0fb56731",
        "cursor": {
          "ref": "1fbf499a-e8b8-481f-9bbf-24c3dccc1003",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "885df617-d2a6-42ea-aa44-eeb6dd55feca"
        },
        "item": {
          "id": "7cf17cf9-d0ac-45c1-8bef-729a0fb56731",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f37e632d-a9d5-4de5-a606-fc6881239c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffabca7-2c40-4e4f-b5f9-f83fe4856057",
        "cursor": {
          "ref": "41290b27-9809-4c73-8090-8cb1a0932cb1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b3894a7b-6a92-49b3-8a42-a28b459d0a9d"
        },
        "item": {
          "id": "8ffabca7-2c40-4e4f-b5f9-f83fe4856057",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "933a77f7-8a78-4d95-a035-b63cdcb77c1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afe488d-1b87-4459-a029-d830356808fa",
        "cursor": {
          "ref": "c6113fa3-63fc-4b5e-91f0-deb068b5767a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7d5133cf-15c0-4af4-acb0-cb794e91cbbd"
        },
        "item": {
          "id": "5afe488d-1b87-4459-a029-d830356808fa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "54649c25-4cee-427a-b713-818fec005a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "47fd809e-3721-4167-bc97-ca92f0e12b27",
        "cursor": {
          "ref": "d095a028-0246-40fa-9fb7-223500d903b6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9457850c-f98b-404b-956a-359558dbdf6b"
        },
        "item": {
          "id": "47fd809e-3721-4167-bc97-ca92f0e12b27",
          "name": "credentials_issue"
        },
        "response": {
          "id": "83cfa5e9-6a05-4ca5-b92b-5090a99310fb",
          "status": "Created",
          "code": 201,
          "responseTime": 3025,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d3b5d2-f2f3-4360-ba73-f37032c4ada1",
        "cursor": {
          "ref": "58e6df30-4d16-4af8-b825-b80041cfb660",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4036277a-b705-4a0f-b228-6631e6d7b98d"
        },
        "item": {
          "id": "46d3b5d2-f2f3-4360-ba73-f37032c4ada1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f37ffa4-10d2-4207-a1bb-52f705069ca6",
          "status": "Created",
          "code": 201,
          "responseTime": 2238,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d955fd-9b93-4d50-bc9f-c4d59dd6fcca",
        "cursor": {
          "ref": "738bf9e9-7372-4b2e-b039-7070e82e9ea4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "51ae8c7d-4475-4a1a-9366-bb67b6d36637"
        },
        "item": {
          "id": "b0d955fd-9b93-4d50-bc9f-c4d59dd6fcca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b5f8175b-c475-4482-ba92-1cb6bd866107",
          "status": "Created",
          "code": 201,
          "responseTime": 2839,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bf1e7a-fe71-43a4-85cc-87cb0250791f",
        "cursor": {
          "ref": "adff418f-c8ec-461a-929e-a448f7bcee0e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9979358c-fbf2-40ec-ba7f-f03210fab0ff"
        },
        "item": {
          "id": "86bf1e7a-fe71-43a4-85cc-87cb0250791f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8860a00e-ba2e-472b-925c-0bbf4e2e4603",
          "status": "Created",
          "code": 201,
          "responseTime": 2228,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0421bc90-602f-441e-b56a-b42a8ccb324e",
        "cursor": {
          "ref": "25282368-d9f2-4b20-84d8-2905a85e2a99",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dba2fa89-5e22-4a8d-a6d9-9aef44e4a956"
        },
        "item": {
          "id": "0421bc90-602f-441e-b56a-b42a8ccb324e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41376948-4dbf-457a-b799-03a4e091c4d1",
          "status": "Created",
          "code": 201,
          "responseTime": 2265,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b043f60-0617-41b7-92ee-42c92e10786a",
        "cursor": {
          "ref": "4d6365f7-4964-4a23-971d-7cf8033117eb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b79b3e30-770c-4614-a84d-ba3038976524"
        },
        "item": {
          "id": "3b043f60-0617-41b7-92ee-42c92e10786a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a4b7fe74-72ca-4c2e-906d-41b41018b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7c946def-3d3b-4d38-afe6-6bb625d78644",
        "cursor": {
          "ref": "730ac62b-f1ec-46b2-a7d3-e257453f4d6a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "260c8d18-5d8a-47bf-8e3c-a1942b14686b"
        },
        "item": {
          "id": "7c946def-3d3b-4d38-afe6-6bb625d78644",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5154eac9-fd78-4bb4-a11d-3b86a5d5cd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb3c2b0-509a-45a2-b794-49ce7a9b44e9",
        "cursor": {
          "ref": "2428db91-bead-4c80-b000-569d529958b8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e8db9316-f6df-4859-a514-01d8bc332ab6"
        },
        "item": {
          "id": "3eb3c2b0-509a-45a2-b794-49ce7a9b44e9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f6e000c-7562-4843-ae83-04505a7c1298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c896267-719a-4f61-921a-d51d801cf08a",
        "cursor": {
          "ref": "2e72fbb8-9d5c-4dff-a00e-3aadb3e6a0d7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f75bd8a3-bab1-42a6-b05e-031dc10410bf"
        },
        "item": {
          "id": "1c896267-719a-4f61-921a-d51d801cf08a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c437b32-f24a-429b-bb4c-bdc28080c4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a018f239-f58a-4209-b228-d2c0de856d1d",
        "cursor": {
          "ref": "142802dd-0031-441a-8048-14eeaa11534e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c415d70c-797c-4cd0-b5b2-980e361c32cb"
        },
        "item": {
          "id": "a018f239-f58a-4209-b228-d2c0de856d1d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c8ee4ed2-5625-4101-8e1e-63d120427786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a352c480-c94c-46b3-93f3-b2a55d096167",
        "cursor": {
          "ref": "27aeea21-6ce5-4036-9c60-dbc0d4137e51",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f17acf62-2dc3-476d-a5c6-b6f1ffffa48e"
        },
        "item": {
          "id": "a352c480-c94c-46b3-93f3-b2a55d096167",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bcb28f54-06ae-4d6b-961b-8be904f6897d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab84aa7-3b96-4efb-88ee-8c16faff8306",
        "cursor": {
          "ref": "46bf574c-a483-4b39-b31c-df8ca605246b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dc883a86-5e19-4404-93cb-816774363cdc"
        },
        "item": {
          "id": "4ab84aa7-3b96-4efb-88ee-8c16faff8306",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0eef710-05dd-47b6-8bdc-ec3bf85ac225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51cde12-bcc5-434d-9a52-beb5b469fbc0",
        "cursor": {
          "ref": "ce667e7c-acbe-485d-9b0e-ee0a9beff487",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2548d600-f64f-4462-b78b-e39129ab5363"
        },
        "item": {
          "id": "f51cde12-bcc5-434d-9a52-beb5b469fbc0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ed78de2-4056-464d-b42f-0a8b78c74c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a395141-c9d1-4875-997c-6f3274ffd710",
        "cursor": {
          "ref": "b4e88bc9-6b0f-4fd1-ae2a-e3c34b38ef55",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "717d17ce-3176-4ef6-bcf3-88e51dfead8d"
        },
        "item": {
          "id": "4a395141-c9d1-4875-997c-6f3274ffd710",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f28b137-602a-4a2c-ab87-98a62ad140fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa52594d-1753-4981-b386-d8aca3508bff",
        "cursor": {
          "ref": "a2311bc4-0ccc-4ba0-afa3-94e17f3694fd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5104c71-4596-4217-9f6c-d7c4b23e0b04"
        },
        "item": {
          "id": "fa52594d-1753-4981-b386-d8aca3508bff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "838f7f8d-9760-4b9a-8e27-26eed12bf132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d1987-4444-4d29-a8e2-3bf462199e7b",
        "cursor": {
          "ref": "45f8e7f4-9bcd-4020-baff-6d369f46e05d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2f103bd0-ee65-421d-a556-44c67201b28c"
        },
        "item": {
          "id": "255d1987-4444-4d29-a8e2-3bf462199e7b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "92cda976-0a48-441c-8a90-5bdf85bd8cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ed890f-5f32-4fa0-a9c0-4186e2c10f52",
        "cursor": {
          "ref": "e91f6175-c9bf-49ca-80d8-34e318ea8d06",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "79ffa0e5-d019-4292-8f0f-6a5249f14f00"
        },
        "item": {
          "id": "f3ed890f-5f32-4fa0-a9c0-4186e2c10f52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02c9781c-42a9-40ea-ba8e-bac724f23535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9588ebdf-746b-42b6-8fd9-3a67a968cf48",
        "cursor": {
          "ref": "66bb9bff-741f-4ec7-a59d-e025b8acda6b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "007ce448-dfb7-416f-abc9-d87699d76475"
        },
        "item": {
          "id": "9588ebdf-746b-42b6-8fd9-3a67a968cf48",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c02adae9-8b57-4dd3-9127-18d5a2ec5d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1f91a8-f755-4d3d-aeb9-4ff5350297aa",
        "cursor": {
          "ref": "959c115f-4b98-4532-bfe0-e4d8c0fa1af7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4554d420-95a0-4ea7-9e4e-336726a216cf"
        },
        "item": {
          "id": "5d1f91a8-f755-4d3d-aeb9-4ff5350297aa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a657610a-7790-4254-a3b7-f82d201ae898",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 122,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8812a560-8d1d-4176-9627-a72a1d3cc981",
        "cursor": {
          "ref": "636c5f99-bca5-4c11-a4d6-fb402f8d6e6d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "487aac4c-587b-4aa3-ac83-ef502be31e3d"
        },
        "item": {
          "id": "8812a560-8d1d-4176-9627-a72a1d3cc981",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33ad455d-118e-4e9c-93f0-21d2dabca4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd667bab-c0dd-4b55-9cf4-995d8e43f2d6",
        "cursor": {
          "ref": "ae6b5bc5-0615-43bc-ad74-5a29b2b0008a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "93bfe860-7cc3-44d7-8cba-d6c0ef78229f"
        },
        "item": {
          "id": "cd667bab-c0dd-4b55-9cf4-995d8e43f2d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3a97f360-b71f-4309-ae21-eb04f75257be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ef9ef-8237-4ffa-bb1c-cc3f32a7413e",
        "cursor": {
          "ref": "47d49185-ffc6-4258-adfe-c5c6578b89a2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5dce9cfc-cd95-4156-b941-ce7a038ef170"
        },
        "item": {
          "id": "337ef9ef-8237-4ffa-bb1c-cc3f32a7413e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "89e8e332-45fd-4f23-b872-47848979dccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a054f76-623b-489a-82c6-f30c55a14079",
        "cursor": {
          "ref": "78910cf7-3306-4b3e-b5be-9c650a442905",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b71dee75-0c62-4320-8af8-5425b5aa49ce"
        },
        "item": {
          "id": "7a054f76-623b-489a-82c6-f30c55a14079",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f6e7e2cf-910a-49a1-8a8f-c565e67d42f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c63041-1506-4f4b-96fd-6310fe38b0a5",
        "cursor": {
          "ref": "48900abb-a6e2-44cc-8cef-8f1b45cf4a8e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "72dad20e-083a-48c4-91be-057cf1fe9cc0"
        },
        "item": {
          "id": "31c63041-1506-4f4b-96fd-6310fe38b0a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4fabc693-6815-4905-9176-571ff906fbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8e1dab-1202-49c9-9d53-ed2354a8abde",
        "cursor": {
          "ref": "ea5d946b-859d-43af-9dbc-5abec6e34de3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0615d889-0dcc-4521-a0ef-e1c0a3f84250"
        },
        "item": {
          "id": "ee8e1dab-1202-49c9-9d53-ed2354a8abde",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f7b33f3-d81b-4d59-b264-487e968a0f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e06b1d-ade6-4f20-bb5e-577f32664076",
        "cursor": {
          "ref": "7ddaa884-68a6-4403-a222-d502baebea53",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fb87e6f8-5902-4ed8-97fa-4d384fe5b9fe"
        },
        "item": {
          "id": "85e06b1d-ade6-4f20-bb5e-577f32664076",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7b658786-aec5-47ad-8f15-46ba36b5dfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d805436-3e69-476b-ac44-78f811c1bc74",
        "cursor": {
          "ref": "3d2bf3fc-90d8-4b8e-b3e5-34b8ce4b82bf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4d34dcfa-e203-45ed-b7b8-096f82bc8a21"
        },
        "item": {
          "id": "4d805436-3e69-476b-ac44-78f811c1bc74",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "490e23c4-39c7-4866-83d7-507052de8fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9a1d31-7897-4d7e-a303-e2d605189d03",
        "cursor": {
          "ref": "3f7edcd6-76d4-4880-9083-378b6d15a3a8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fa15f335-9093-45a1-b07f-92936728d746"
        },
        "item": {
          "id": "9f9a1d31-7897-4d7e-a303-e2d605189d03",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a8df189-8e2b-472e-9305-27a381d4e590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664c160-8793-4be2-9f13-c42e5f1902b6",
        "cursor": {
          "ref": "fb5b268f-3b35-4152-be2b-d14449a217ee",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "26ae7832-ba4c-4324-bc28-791114aa0e7d"
        },
        "item": {
          "id": "b664c160-8793-4be2-9f13-c42e5f1902b6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "37626731-cdcc-472d-99e9-469328d7b8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8734d6-0df3-413e-b83c-a36dec076360",
        "cursor": {
          "ref": "b8b03458-5772-44e3-9899-4592648f622a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b3c3c853-c5e3-4a9e-ba55-eea0391cd8d3"
        },
        "item": {
          "id": "6e8734d6-0df3-413e-b83c-a36dec076360",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a3a2305b-f492-4963-8c36-2b06218fbc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93887b9b-b647-46fd-a272-5ee398817d04",
        "cursor": {
          "ref": "c94b0670-efe5-4fa7-955b-565b456ff4f8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8e0cc163-4dbd-4e58-a944-443ec20b015e"
        },
        "item": {
          "id": "93887b9b-b647-46fd-a272-5ee398817d04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "859d6bab-a681-429d-9d9e-b11a8d302423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69d5f15-0d13-4e6a-b6a2-3ee90ce72e99",
        "cursor": {
          "ref": "ab6bdbdb-bd69-4dd0-afc2-e57e88463744",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3af2ba6f-ca8f-469e-9e0a-095a89046da0"
        },
        "item": {
          "id": "c69d5f15-0d13-4e6a-b6a2-3ee90ce72e99",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb95e967-cc31-4ab2-9ddb-f37998894781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73e5148-47ce-4202-b63f-ee0f10cc8305",
        "cursor": {
          "ref": "29061bc8-f225-4e85-875a-c56809aa1480",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "444ef727-1fb0-4f6b-a298-d4933c26af71"
        },
        "item": {
          "id": "e73e5148-47ce-4202-b63f-ee0f10cc8305",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb9052b8-a8e6-433e-8a2a-8ad44e658878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836f49a0-f2e0-4476-bee7-0cf78661d4be",
        "cursor": {
          "ref": "6df39c7b-301b-4c33-bb98-2c718380a4b0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f623cb28-0027-4a86-8573-9d3815b50dd8"
        },
        "item": {
          "id": "836f49a0-f2e0-4476-bee7-0cf78661d4be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea4eaae8-cc09-4939-b84c-5d67b4b68abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99daca2c-994c-4a6c-b704-475690983a90",
        "cursor": {
          "ref": "933602fe-508c-4299-b5c4-bb834e37bd55",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c852997e-b618-4c8f-95f1-4cf8e2dec473"
        },
        "item": {
          "id": "99daca2c-994c-4a6c-b704-475690983a90",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b92acde-a5bd-4a78-bd66-f13327bf9913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef96f429-cfb9-4c33-9897-a58401a367a8",
        "cursor": {
          "ref": "b88d4715-3916-4f88-8112-96e41b55884f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "51391acd-a4ff-40aa-be0f-fbf04f8139aa"
        },
        "item": {
          "id": "ef96f429-cfb9-4c33-9897-a58401a367a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c66e9d6-a8d1-4196-af4b-a267fb9585f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ae3983-50f5-44b7-8105-c83f1275fb8d",
        "cursor": {
          "ref": "4f7a6b47-59ed-4935-8970-1dff00491ab2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "931fdbbf-f165-4b5d-b40f-3289c3f23250"
        },
        "item": {
          "id": "49ae3983-50f5-44b7-8105-c83f1275fb8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f3fea6cc-dc50-44e7-b9ef-6965ab232cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89269e55-c288-4107-b6ca-c5d92c82f887",
        "cursor": {
          "ref": "e26e7bc4-179d-4e2c-b979-93a1fbf459b0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "347edaee-735d-41a5-8ae5-ff6fffb4fee1"
        },
        "item": {
          "id": "89269e55-c288-4107-b6ca-c5d92c82f887",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "16c7fe7e-37e6-48d5-bd2a-9297f47cc598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7f47b-3b79-4506-924c-2183f79a3ffd",
        "cursor": {
          "ref": "81adc504-572e-4dd3-976b-876eadc1bc7c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc24955b-103f-4611-bcc6-63388e5fbc2a"
        },
        "item": {
          "id": "43e7f47b-3b79-4506-924c-2183f79a3ffd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8c4c585-360e-46a2-a665-1f0e392a09d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8872ca8-04a1-4712-8cd4-3288ca8c01d6",
        "cursor": {
          "ref": "4b67b4b5-48eb-4292-b453-65e044cc4b0d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "478574dd-4233-4370-a2ad-9f588ad41142"
        },
        "item": {
          "id": "f8872ca8-04a1-4712-8cd4-3288ca8c01d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5c75755-3061-4236-890a-bfdcda429470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e62e9fb-e331-4657-9508-c9f033fb4b5e",
        "cursor": {
          "ref": "edb4da63-3589-4689-b706-4c245b8bab2b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7e588200-a388-4648-9f2f-d98cec7fe429"
        },
        "item": {
          "id": "3e62e9fb-e331-4657-9508-c9f033fb4b5e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8b7cb387-3879-40f7-9fb9-1b9fb2ccc8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa597404-0f8c-4778-815d-39cfc2aa715f",
        "cursor": {
          "ref": "548172d5-22a1-4f8b-b45f-229e9374e2ef",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d423fe74-3e28-4a6e-9654-3a26f65028fb"
        },
        "item": {
          "id": "fa597404-0f8c-4778-815d-39cfc2aa715f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2984fba0-9b19-46d9-9b93-ae61affc5d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0aeda2-7f5d-42a0-a886-dbdb5ab79644",
        "cursor": {
          "ref": "a6712111-eaac-4870-8ddf-2760b09e7d76",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bdf9c9a7-339d-436b-828d-0c0c0e32428f"
        },
        "item": {
          "id": "de0aeda2-7f5d-42a0-a886-dbdb5ab79644",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46a86d24-ebd5-475a-8c78-05d684de0973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d65db5a-61f3-4341-808f-aed349243180",
        "cursor": {
          "ref": "58276e8a-3e68-4695-8873-87586fe04ac4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5cf5d4f8-8c2e-405c-ba4a-566d7263b817"
        },
        "item": {
          "id": "0d65db5a-61f3-4341-808f-aed349243180",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f3a653d-d0a8-4a16-89aa-9e69f70aefdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206e426e-fe30-4c31-b3a1-264035056a21",
        "cursor": {
          "ref": "c8c156e4-c1f8-4cfc-be22-b8ffea3683fb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5d276d7f-f191-40dc-88ce-bf428a9e4812"
        },
        "item": {
          "id": "206e426e-fe30-4c31-b3a1-264035056a21",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39175cb2-49ab-4f2a-8313-d0dafdf0e9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a47ce-a1b5-4ca8-85fa-139e6f741de4",
        "cursor": {
          "ref": "a83c11e5-1430-4606-8f03-8ffc2cad7431",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b70c5ee-03d6-470d-9fbb-24c5873419b2"
        },
        "item": {
          "id": "543a47ce-a1b5-4ca8-85fa-139e6f741de4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "26f8b9e9-674b-4e66-8d7e-f706c435cc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac1769-d42b-477b-97ce-6f13ce77597a",
        "cursor": {
          "ref": "eb9185e4-a3c2-4c7f-9e57-329a1f2b2de7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0bf1c816-331c-4b98-bba7-dd36f90e4fd9"
        },
        "item": {
          "id": "ecac1769-d42b-477b-97ce-6f13ce77597a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "476c61e4-0cdb-4007-abb9-5bce86ec5353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3793286-c609-423b-a62e-76cbdc411ad9",
        "cursor": {
          "ref": "8c4721be-275f-4410-a4f1-dd05bb3b6ebc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c5c4ae38-d68f-4f81-b2de-7b5ae5a9839f"
        },
        "item": {
          "id": "c3793286-c609-423b-a62e-76cbdc411ad9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "26358a39-4b30-415b-9954-659e981c7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f8d0b3-bf66-4e3e-bdcd-21d4b8658112",
        "cursor": {
          "ref": "31b52e86-170f-486a-839f-013e822a2eeb",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "129d3a57-0660-47a4-809d-679e9ab7ced0"
        },
        "item": {
          "id": "08f8d0b3-bf66-4e3e-bdcd-21d4b8658112",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9fb1500-06d0-48bc-bbb3-6b3e2de09fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc714f5d-69bf-4a59-acdc-ecfcb6334fb4",
        "cursor": {
          "ref": "0fb33dde-8943-44c3-8600-81b3a9718d66",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "702ad107-375e-4762-b62f-f14c68251993"
        },
        "item": {
          "id": "fc714f5d-69bf-4a59-acdc-ecfcb6334fb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "618f5dc1-b705-45ab-a4bf-772a03074805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa4d169-afa6-44b3-a797-07d6f2d66479",
        "cursor": {
          "ref": "5db5cde7-7cef-4ff3-ae08-47e2cba4db68",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10945a7b-7148-49b5-95c2-43ea6061ee7e"
        },
        "item": {
          "id": "9fa4d169-afa6-44b3-a797-07d6f2d66479",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65a929eb-4c44-4cdb-9916-9acfbfae5c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5106bd48-2c62-41cf-bf0e-7b1ed5c66f11",
        "cursor": {
          "ref": "0b845015-95f1-4b09-976f-3bc8a4d41990",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "403ff8ea-ee88-4544-9933-ecc2e0e5bcae"
        },
        "item": {
          "id": "5106bd48-2c62-41cf-bf0e-7b1ed5c66f11",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "580954c1-7279-4cc0-8933-7d54d449f80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f39dc1-49b2-4b77-97a3-612ca59b1cb9",
        "cursor": {
          "ref": "a259fcd4-51b2-4e09-a38e-010559e58a2d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "573f9366-a2a1-493b-a9f6-3cf956a6c63c"
        },
        "item": {
          "id": "e1f39dc1-49b2-4b77-97a3-612ca59b1cb9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e769333e-a9ef-495f-9957-d674ec46b1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc434552-032b-4d98-a5b6-faec2affbca8",
        "cursor": {
          "ref": "94f59d1b-e3a7-4657-8273-35d7aafbba07",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a1335f51-ccf8-4acb-b92d-20492da53730"
        },
        "item": {
          "id": "bc434552-032b-4d98-a5b6-faec2affbca8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "195ac880-5523-4a51-86b0-65567c5f0488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b367e760-0df3-43bd-a939-338c762913c5",
        "cursor": {
          "ref": "8f3fe4e5-30a1-494b-8c3b-06ec3dd63098",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb906788-7ff9-4716-8e4f-d31c74e491f1"
        },
        "item": {
          "id": "b367e760-0df3-43bd-a939-338c762913c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "886c022a-b286-4bc4-b534-6d7bc568eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11f4aa8-d6db-468b-8b68-99d424cdfb16",
        "cursor": {
          "ref": "c0b3e7ce-26c5-4525-9618-621ac22678ce",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ff624d47-e3cf-4cfd-9fb5-f3acb0ca1f82"
        },
        "item": {
          "id": "d11f4aa8-d6db-468b-8b68-99d424cdfb16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d4677195-188d-4e31-97e3-1b90ef6fb32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823a0bc7-0006-4d01-b52d-7b78d2ce7a66",
        "cursor": {
          "ref": "aea75ae9-a814-4f75-b7cf-ffe4c8a96ad2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2746b867-cdec-4aa8-94b7-7faf9ae20d89"
        },
        "item": {
          "id": "823a0bc7-0006-4d01-b52d-7b78d2ce7a66",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a405d03a-55a6-4db4-90be-1acb43e6b88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00669d3-55a7-4b68-9989-b29d3bda2bd4",
        "cursor": {
          "ref": "0140d735-179a-41ea-8b14-e21236b43a40",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0fb243c5-dcdb-4806-b9e6-69808f101b51"
        },
        "item": {
          "id": "f00669d3-55a7-4b68-9989-b29d3bda2bd4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "67966a30-67d4-4db6-a4e3-e1df1fc7c4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6263bcb-4f0b-4243-9828-f0e3b2fa3a30",
        "cursor": {
          "ref": "d4882792-816c-4091-80bd-5b81f225a72e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f32ffd2d-fd14-4a14-b610-40ff7f7a7283"
        },
        "item": {
          "id": "a6263bcb-4f0b-4243-9828-f0e3b2fa3a30",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6767e631-f2b0-4d3c-b798-09a31424fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1894c524-9310-4a4a-9169-ad98d8e3e3a1",
        "cursor": {
          "ref": "ca91d501-fc34-4faa-9c4f-7cd2874c9c2a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b45876b6-3655-427a-b82f-e23b3987ece1"
        },
        "item": {
          "id": "1894c524-9310-4a4a-9169-ad98d8e3e3a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ede929f9-ab71-478e-b71a-602bb162de82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed3fdc-fb98-450f-b428-e9f1cd63fd5f",
        "cursor": {
          "ref": "8f9a870e-7c75-470e-99a7-bd52c8e3d4ea",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "30249700-3cdb-4488-8964-62e5b28b1f9c"
        },
        "item": {
          "id": "31ed3fdc-fb98-450f-b428-e9f1cd63fd5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "20122517-aa3c-442d-a992-6b3ff7cafbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d19c8a-cf2f-443f-b8bb-531fa334d6b0",
        "cursor": {
          "ref": "ea80cd94-5c8d-4d20-aac1-5b42cdffbf06",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "75a98fa8-da05-4d84-bdf6-1bd507799f72"
        },
        "item": {
          "id": "f0d19c8a-cf2f-443f-b8bb-531fa334d6b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "19d771ac-2ccc-4977-b126-e7ee18b366ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2783d130-8ed8-42d1-920d-bce44b69dacf",
        "cursor": {
          "ref": "284b005d-2432-487b-adf0-7f08b0a567a9",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6909e44-ce34-4297-bb51-2424aba576c8"
        },
        "item": {
          "id": "2783d130-8ed8-42d1-920d-bce44b69dacf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5863daa7-8e3a-47a1-a384-8216110f6dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f64b381-bfe6-42e6-8f1e-2a27163fcab3",
        "cursor": {
          "ref": "f6b76471-3e74-48ef-9045-c1b77acd96d4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "04ac328e-c7ca-411d-ad54-f3e4f586a53d"
        },
        "item": {
          "id": "2f64b381-bfe6-42e6-8f1e-2a27163fcab3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "783dfb5b-a1dc-4055-b0ae-bbb000ad58ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47531a77-ae85-443c-9bf7-728ce6ad2476",
        "cursor": {
          "ref": "3caa4e66-eb87-4659-88ab-0c59df8fe4c2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "68dbc9aa-923b-4c25-aac7-0c3a50f03d96"
        },
        "item": {
          "id": "47531a77-ae85-443c-9bf7-728ce6ad2476",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "663e2fe2-afac-4842-a14d-345acd1df0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cae8e5-ff21-48b0-8254-100993d63e95",
        "cursor": {
          "ref": "828a70d0-386b-4dbd-9d5b-5d76da953d2f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "03c98232-38ad-4461-884e-3bbabd238d51"
        },
        "item": {
          "id": "f8cae8e5-ff21-48b0-8254-100993d63e95",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3cb1422-eaa6-41f8-8717-30a772acf815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd72bd27-a3cd-40ec-87bd-0cae13bf3f12",
        "cursor": {
          "ref": "2adf6771-8bbd-4f6b-9092-1a31c6a927d0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee2df9c5-7cc4-42c5-b049-852d3da1dbee"
        },
        "item": {
          "id": "dd72bd27-a3cd-40ec-87bd-0cae13bf3f12",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a294cba6-77e9-40a3-b402-030a06431c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac5b51-b4b9-4795-ad6e-c41faea02dfc",
        "cursor": {
          "ref": "35a660f9-20c0-4049-9bec-2ca76876a8bc",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ef42ee9c-1418-405f-aece-d471cc7c5a51"
        },
        "item": {
          "id": "f8ac5b51-b4b9-4795-ad6e-c41faea02dfc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "38fc44a1-6623-4937-ba3c-603c1e4892d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bb575d-e51a-4cc3-a116-6f6268f23a1f",
        "cursor": {
          "ref": "ffc7924e-4e35-41c3-9268-dd9ea3635565",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4bf3cb87-032c-4a10-b1b1-052cee60e5a2"
        },
        "item": {
          "id": "84bb575d-e51a-4cc3-a116-6f6268f23a1f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "690a4653-3892-4f1b-b8fc-9b3e24633f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cead5e2-2f3d-4a57-abe7-c958e6301183",
        "cursor": {
          "ref": "ce948ad4-4f2d-4e5e-ad0a-87383626cddb",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b37d8254-d370-4a16-a084-709073d0ff11"
        },
        "item": {
          "id": "6cead5e2-2f3d-4a57-abe7-c958e6301183",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5cc0d5dc-b808-4ad5-aebf-02220157ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad1ba62-6385-4d4f-a952-e3eccdf0b694",
        "cursor": {
          "ref": "680d4562-1100-44df-9948-80f2da9366bf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1e228dcb-b306-45e4-9265-9eb670ccb54f"
        },
        "item": {
          "id": "4ad1ba62-6385-4d4f-a952-e3eccdf0b694",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9f729195-d5bd-440f-8362-d8dc5b0e6214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98d540f-c3bc-4e75-91c7-24ff5c545986",
        "cursor": {
          "ref": "9bb6e7b4-b2a8-4a5c-891f-9928d01014fe",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3e772070-b8aa-425a-ae98-8b77205e76f5"
        },
        "item": {
          "id": "a98d540f-c3bc-4e75-91c7-24ff5c545986",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2ab59bdc-9a60-4c17-bafc-c96f169412e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883b93a5-f9e7-4b6f-a25d-3eb3d1559a84",
        "cursor": {
          "ref": "75901d3f-1971-4189-871e-a76c6948b208",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ade0fad-4ad8-4ba1-bcbe-80d471aa614e"
        },
        "item": {
          "id": "883b93a5-f9e7-4b6f-a25d-3eb3d1559a84",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4adca778-32b0-4660-8491-b42534150675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e66501-1974-4489-9c83-3ffc420e7db9",
        "cursor": {
          "ref": "fdbe9458-8e74-420d-ad09-4152b4c387bd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "797d84d5-0637-4f66-9122-8c051a9f8a6c"
        },
        "item": {
          "id": "11e66501-1974-4489-9c83-3ffc420e7db9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4b273e04-6105-4c60-856b-e5d2d4f6a943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104461e6-ef67-4c89-aa81-6d434ef53f1d",
        "cursor": {
          "ref": "e36cf7df-5caa-45d8-b5cf-3558a46c57f8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "820b4401-6a24-430a-aec1-779f2671d0bc"
        },
        "item": {
          "id": "104461e6-ef67-4c89-aa81-6d434ef53f1d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9b5b0454-473e-400d-b3ce-a15ef2d55903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef5268-43c1-4692-ad1a-70953c8bfc80",
        "cursor": {
          "ref": "afb5019c-1500-4209-872b-eaf0a5e02194",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ebda11d-9d26-4906-8b5e-0193c44f707c"
        },
        "item": {
          "id": "37ef5268-43c1-4692-ad1a-70953c8bfc80",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "875b634a-0d04-47ca-9e95-830393d4c3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93664c-3eb5-4110-9c0d-cc4faf0edbe8",
        "cursor": {
          "ref": "e28fe9a6-6d9d-4362-b6bf-decaf60381dd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f535cf3a-1a7e-498f-93bd-34169604f92c"
        },
        "item": {
          "id": "8d93664c-3eb5-4110-9c0d-cc4faf0edbe8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b36b758a-fe06-482b-94bb-ba7fa263b3e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2987f28d-19f0-45f6-a80b-9e64916b9c05",
        "cursor": {
          "ref": "08ae90e0-cf7e-4206-aa5f-0489cf34cd8d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "73550d44-2255-4c9a-b1ae-cbd58d7251eb"
        },
        "item": {
          "id": "2987f28d-19f0-45f6-a80b-9e64916b9c05",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1c392a14-3e37-435e-bb7c-2e43ee238557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefe0abd-c979-4b2a-9e5d-761759881f12",
        "cursor": {
          "ref": "6884a45f-37e6-4c57-b466-d32e5577ffea",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6bc43e10-d824-41a3-aa92-25b7dd160c64"
        },
        "item": {
          "id": "fefe0abd-c979-4b2a-9e5d-761759881f12",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e12797b-a17f-4247-9981-0d14305ca4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fefc7af-5d3d-48b8-9b28-343ec0b9d1a1",
        "cursor": {
          "ref": "ef07288d-6a58-4b9f-892f-a8ad658b1788",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c06e240-58bb-4395-b71a-a8eaeb440a5f"
        },
        "item": {
          "id": "8fefc7af-5d3d-48b8-9b28-343ec0b9d1a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b16369c7-9aae-4fd0-9528-e4fbeb4828fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f9e381-4f45-4783-9d24-2588121a490c",
        "cursor": {
          "ref": "84172ebf-cc5c-43fb-bd71-368c613dcd96",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "47006eca-d73d-48c1-877c-6bc0f9d58d47"
        },
        "item": {
          "id": "e6f9e381-4f45-4783-9d24-2588121a490c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "16241def-6fe8-4477-8a69-e4149a4c6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9377c0-656a-418c-a05a-4f3ff7de3b2b",
        "cursor": {
          "ref": "9f1dbf1a-9c0a-41f5-a008-e994aed44db5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2ca1ce41-7c13-4dbb-b649-8cc5d93546db"
        },
        "item": {
          "id": "5b9377c0-656a-418c-a05a-4f3ff7de3b2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7a0db34-1de9-4a0e-9d56-c9608b52f4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106088b7-f9b3-494f-a223-ebe456ea6453",
        "cursor": {
          "ref": "f28f4b5d-9f30-41b2-84c2-48bd374375a8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b672f4df-bcaf-447f-9d98-f406439d7966"
        },
        "item": {
          "id": "106088b7-f9b3-494f-a223-ebe456ea6453",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e93dfdba-6313-4b6e-8b37-cc5eefede811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646ae9d1-443b-4913-b6fd-90bf743f9e48",
        "cursor": {
          "ref": "09461536-3159-494b-aaa6-d44b65e4f54f",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0c3a0e6d-02bc-4ad6-85b9-40d207cb7d82"
        },
        "item": {
          "id": "646ae9d1-443b-4913-b6fd-90bf743f9e48",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dadadf91-f79a-4625-9674-cacc29ba1dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc1fb60-1a57-47d9-ad5b-5f8261618560",
        "cursor": {
          "ref": "b085fbef-04c3-414a-bf61-6f0d83e9123c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a9b3cfa-0ec0-4255-bb8a-d6829c2e7fb1"
        },
        "item": {
          "id": "1fc1fb60-1a57-47d9-ad5b-5f8261618560",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6772e6db-8c2f-41dd-ad31-5bba973cdea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a8aca-8f88-4baa-b47c-cf85f2d72b6d",
        "cursor": {
          "ref": "4a8efb5c-5a3c-44c9-9ca9-af563ce1fc17",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "596199ec-99bf-48c5-9c5b-81bade6d9f0c"
        },
        "item": {
          "id": "313a8aca-8f88-4baa-b47c-cf85f2d72b6d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f04aad7-5264-4d34-a8d4-6042fedd0393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13cf1c5-6135-4563-9f2e-770c65bb3cb3",
        "cursor": {
          "ref": "96ec8886-71bc-4a8f-b222-3901f4407d5e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8838b5b6-1f7e-4d0e-9e6f-1ea8a0288f50"
        },
        "item": {
          "id": "f13cf1c5-6135-4563-9f2e-770c65bb3cb3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5bda79ab-cc0b-48d2-b74a-eee53eb2394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b94ca62-2d0b-41bb-8319-8325f3fda365",
        "cursor": {
          "ref": "12a958e2-3003-44b3-ba38-5f2c4cee8473",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b3738f6-1941-43a4-8f0c-711d5c28386f"
        },
        "item": {
          "id": "9b94ca62-2d0b-41bb-8319-8325f3fda365",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fc96d945-a53f-472a-b412-465d2ebdcd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4b1940-d92f-40de-807a-6da3cb5d47e8",
        "cursor": {
          "ref": "ba7ebd4d-9e5b-4ec6-901b-a67f3fe4bada",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0382fc2a-0128-4513-9629-4946b820df27"
        },
        "item": {
          "id": "ee4b1940-d92f-40de-807a-6da3cb5d47e8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dbccac79-3e93-4821-85da-91187cf94b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bbcb59-1fd2-453f-b61b-a40e9e800e02",
        "cursor": {
          "ref": "88f3e829-c2f8-426c-a0d1-9bf0f62bf00d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ec3c3aac-d58e-4972-84f7-cc8a26e66a71"
        },
        "item": {
          "id": "d6bbcb59-1fd2-453f-b61b-a40e9e800e02",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9d270065-b22e-4704-b173-bc6ca2430bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e31e77-185c-4662-ae9b-03607f206483",
        "cursor": {
          "ref": "5006dedf-1e44-429b-ac24-cbf839c640b3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8c582046-ed8b-4520-a785-de02df70e75c"
        },
        "item": {
          "id": "30e31e77-185c-4662-ae9b-03607f206483",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f3f9c27f-4b4b-4ba9-a825-b1050c086ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011e3865-ebd6-4d0a-8594-cce26caf1f4b",
        "cursor": {
          "ref": "ddbbe5bc-fe62-4027-8abf-35e630721692",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4cd9e9f6-b7c2-41e4-a73c-30d986ea396d"
        },
        "item": {
          "id": "011e3865-ebd6-4d0a-8594-cce26caf1f4b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7422bc57-94b1-4cbc-89a0-1409b620562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184fe4df-719c-410e-b7f4-f2e4a45e8758",
        "cursor": {
          "ref": "ad105d5a-4dd2-42d3-abeb-a8f04ecc0ce2",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "efaab10f-c9ee-436e-af2d-c9bd68afca00"
        },
        "item": {
          "id": "184fe4df-719c-410e-b7f4-f2e4a45e8758",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b0a47ce8-71de-487f-a1b1-5da3b7869491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a358b6f3-df15-4481-8df9-b0502ee8efa3",
        "cursor": {
          "ref": "3b328252-e143-4a85-a57d-937b53609736",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a547ceb-8417-48a5-b6b4-9c48ebea6bdd"
        },
        "item": {
          "id": "a358b6f3-df15-4481-8df9-b0502ee8efa3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "556a975c-85e6-46c2-a065-5b0622e8b676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2a4ddd-fd4f-45e9-b092-cbcbb72153b6",
        "cursor": {
          "ref": "f67c1590-fcc3-423a-8abf-4e50f9310a98",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "45e9ca39-74be-4b46-b9b4-d5df08545894"
        },
        "item": {
          "id": "db2a4ddd-fd4f-45e9-b092-cbcbb72153b6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "356ac6bf-cb64-4750-87bc-d5d6f1e3df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fcb6cf-99c7-425f-9e4e-9e663e7eef4f",
        "cursor": {
          "ref": "6e98ef67-57d0-46bb-912b-c75b9a4455cd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "351a5a31-d398-4db9-8d20-41088fad4acb"
        },
        "item": {
          "id": "d4fcb6cf-99c7-425f-9e4e-9e663e7eef4f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f00bbbf8-4321-4e4f-bd26-638db43aa60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f2bd9c-d9cb-4856-80b8-039b7b306c6b",
        "cursor": {
          "ref": "f4442a92-f5e0-454a-9204-cfbb8a594181",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d7fc7953-f6fc-4737-bf22-18b0eeea4a0d"
        },
        "item": {
          "id": "d1f2bd9c-d9cb-4856-80b8-039b7b306c6b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea41af4e-f3d4-496f-88c9-f313293da8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa876ad2-f4f9-4e37-bca5-607a45f942dc",
        "cursor": {
          "ref": "9834ffd0-4d22-4452-b2b3-81065b0ecf3c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5a9bdeb4-c7f4-41a7-9310-93feed7227d0"
        },
        "item": {
          "id": "fa876ad2-f4f9-4e37-bca5-607a45f942dc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "00aeb988-a862-486a-8bf3-4636e7467aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ee740-4de5-4caa-a554-b9f1f0dffc2c",
        "cursor": {
          "ref": "85b8aaa0-2789-47f1-948f-02a5aaa4ec73",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c301973-c3d9-4aaf-8336-fb947569e8c9"
        },
        "item": {
          "id": "db0ee740-4de5-4caa-a554-b9f1f0dffc2c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "971d3d61-0fb9-4362-bf22-7123992d5497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ea121b-f086-440e-bea0-6a27996637c5",
        "cursor": {
          "ref": "50a258b9-88c2-40f0-afb6-a5a499d07b52",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f4dc9d11-de2e-4294-a65a-66c2e6160783"
        },
        "item": {
          "id": "06ea121b-f086-440e-bea0-6a27996637c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8667237-3aef-403f-8707-e85fa22d70db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe4efb2-736a-4b0c-abfe-aef562e2c195",
        "cursor": {
          "ref": "061018bd-26c7-4073-a4d9-2e575318cd71",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ecea83f8-3b90-471e-abe7-88a68bb82048"
        },
        "item": {
          "id": "abe4efb2-736a-4b0c-abfe-aef562e2c195",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f6cd8f9c-2ee1-46ef-8cda-ab0165df106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892b8a0b-31cd-4d25-917c-fa3ebf40e4e8",
        "cursor": {
          "ref": "db64e989-7b0c-4ac6-9366-0d081318073e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1097e9e4-453d-4f4e-bcf6-e09d55d55ebb"
        },
        "item": {
          "id": "892b8a0b-31cd-4d25-917c-fa3ebf40e4e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48806b3b-1e35-445b-b49a-4e6bd2b599c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc03d7f-0915-475d-9f43-7578021714f3",
        "cursor": {
          "ref": "6db5b321-8b12-4259-a607-7418f64136fb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "17bf7ba5-ab9e-4533-8bd8-4439357f6d96"
        },
        "item": {
          "id": "5fc03d7f-0915-475d-9f43-7578021714f3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3d475c8f-2f37-4d4b-a8f8-910d00945f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e18c0c-ec55-4439-92a4-ea1d8c4006b2",
        "cursor": {
          "ref": "6b54880e-6315-4c4d-bce0-5e462a613451",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a66d0d13-4c8b-4bae-8d50-da1ec4417486"
        },
        "item": {
          "id": "24e18c0c-ec55-4439-92a4-ea1d8c4006b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e224f67a-3f3c-44ae-baa3-ceefb56ed87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acace62-6b55-4904-bab9-5076d914b7d1",
        "cursor": {
          "ref": "9460277e-7236-4bc1-abb7-40990b1f0252",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99432e67-dc6c-4e87-afae-878e07d883b0"
        },
        "item": {
          "id": "9acace62-6b55-4904-bab9-5076d914b7d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d250cadf-66a6-45a2-9a86-97e274cacb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c650237-1e68-4db6-b694-8971d39bd334",
        "cursor": {
          "ref": "d379588a-3ba0-475b-a0ef-ffe3b58a2ee0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4560f81c-34e0-4718-b757-635da4af7b9b"
        },
        "item": {
          "id": "6c650237-1e68-4db6-b694-8971d39bd334",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9d59fa27-a8e5-4fd2-b28c-b16b5f098925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8d66b-f023-40a7-925b-7a722281e19e",
        "cursor": {
          "ref": "dcb11a91-4e7f-4185-9a25-cf95e33686e8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56311191-c5dd-49b0-8d2b-5839815a47e6"
        },
        "item": {
          "id": "42d8d66b-f023-40a7-925b-7a722281e19e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d9065827-5815-4f88-80b1-3863b0e1c193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67ce3a0-d131-4346-ba15-d676bde5143e",
        "cursor": {
          "ref": "0f3076b6-2b28-40bf-85bc-491810f2ac5f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1954e41c-fcf2-43d5-b145-72bd2e5d9f16"
        },
        "item": {
          "id": "a67ce3a0-d131-4346-ba15-d676bde5143e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "17d2d653-105f-4570-a80e-ed313303929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb25050c-8185-433d-8d85-7b683f68d706",
        "cursor": {
          "ref": "73ef249f-be1f-4a14-854a-a80828ffbb68",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2fd5294-d88d-4c24-8fde-57ab688b16b7"
        },
        "item": {
          "id": "fb25050c-8185-433d-8d85-7b683f68d706",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "73d9eb39-b1af-4061-baeb-9f721953b091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cde8981-75c6-4b76-b6de-84a91ff91ff9",
        "cursor": {
          "ref": "e6bdc4bc-cf47-4e7f-9053-c76e7322f344",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c84933b8-dbbb-451b-97f6-14431f7e5728"
        },
        "item": {
          "id": "4cde8981-75c6-4b76-b6de-84a91ff91ff9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "02c0dcff-7c80-4546-a401-32e98764f8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f8e46-1a0d-4607-9953-851779ca3892",
        "cursor": {
          "ref": "f87c271e-48e1-43af-a34b-d7bf464c3168",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a73eac8f-0203-4db0-ac06-cf0e24cd34a5"
        },
        "item": {
          "id": "6b4f8e46-1a0d-4607-9953-851779ca3892",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7f11c3e7-c86c-4c99-a66a-3325da6bc6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa1fd48-c863-44de-8830-931d03ace577",
        "cursor": {
          "ref": "9deaf885-c0c3-4af8-8980-e056f8ea55dc",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9275f6fd-4329-461b-b468-cf0db6a268dd"
        },
        "item": {
          "id": "faa1fd48-c863-44de-8830-931d03ace577",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a9f6e4b4-86cc-4fb3-9360-234c852bbe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eef215-1e14-4ff8-972e-32369e115cea",
        "cursor": {
          "ref": "3e106335-7d67-4d4d-8f91-28a1e204b2cb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c71e7fa8-e53f-4a5a-830f-06f06e6e7edd"
        },
        "item": {
          "id": "d5eef215-1e14-4ff8-972e-32369e115cea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f781c8db-1e92-40a7-8a63-21c9eed403a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fed46d-e9e1-423a-9f45-87f0db6c34fb",
        "cursor": {
          "ref": "b5bf55b1-695c-4fac-8325-050fb7672b71",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "06c2c32b-6c72-49d8-b1a8-f8a85a556f7c"
        },
        "item": {
          "id": "a1fed46d-e9e1-423a-9f45-87f0db6c34fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "70b039ee-f2c3-456d-9051-dd2b45c1c502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b32b75b-20e5-435c-aa15-cb10daf8c84a",
        "cursor": {
          "ref": "51c78cd1-0ed8-4e6d-a076-d66bb0541d06",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0647bafd-233c-49b2-8299-ccf0356df126"
        },
        "item": {
          "id": "0b32b75b-20e5-435c-aa15-cb10daf8c84a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "835c81f2-c72c-4dce-a726-61e8d89a37b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77663887-8e1f-4ff4-af84-31c32e8917fc",
        "cursor": {
          "ref": "215886ca-0426-4256-8a66-110548a9e169",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8009a1bc-6a6b-4223-a1d1-de47584b1f0e"
        },
        "item": {
          "id": "77663887-8e1f-4ff4-af84-31c32e8917fc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4fd209cc-056f-4bc6-80f7-e52442b5fdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a442f4f6-0188-4cbd-a2d6-5dabdbf640cb",
        "cursor": {
          "ref": "72032057-a537-4d74-9a5a-3d0b55637fac",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ee0c5eab-b141-4153-a202-179b1d3d7dc7"
        },
        "item": {
          "id": "a442f4f6-0188-4cbd-a2d6-5dabdbf640cb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a8b1579b-5a37-49d5-94de-188329922a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a0f51-6369-4c36-9d01-c12a7db1dac2",
        "cursor": {
          "ref": "19108dfa-c32d-4590-87b1-4c68d481c135",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55b1f8ee-2fe8-4cc9-8319-16c7a7ca9f2d"
        },
        "item": {
          "id": "cd1a0f51-6369-4c36-9d01-c12a7db1dac2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "453babe0-9aa9-4d36-8271-4fe4e9a13b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845eed5-1cd3-41fc-aac2-b61c357f5836",
        "cursor": {
          "ref": "5e2795c9-31cf-40ac-9ae1-9a43288ed8bf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cb51ed35-798a-4fb7-851b-9c80dbf7b961"
        },
        "item": {
          "id": "7845eed5-1cd3-41fc-aac2-b61c357f5836",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7191da1f-4f88-47f9-b8f3-551c34647f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48a8f7d-3234-400e-80aa-9610606cb2b3",
        "cursor": {
          "ref": "de16bed4-fc8b-4f6f-9082-1823ea1581db",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4183de42-e855-4e5f-96ae-82e4e8193319"
        },
        "item": {
          "id": "f48a8f7d-3234-400e-80aa-9610606cb2b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c757ac5-12ad-4076-a224-23d907e31b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ce004b-07d3-4682-b9ed-a092cb568b89",
        "cursor": {
          "ref": "6252b1ab-b506-4144-8639-aa8ef52fc60a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd19f45d-2bbd-40d9-8b3f-3ff1e285484b"
        },
        "item": {
          "id": "a6ce004b-07d3-4682-b9ed-a092cb568b89",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "acc02f87-196d-453a-a48f-566df9a8c86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67087fb0-845a-448c-a19a-46be34fd3a45",
        "cursor": {
          "ref": "a4af46f2-bf3a-41eb-ad52-5cbf5a4af278",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f795b137-c952-4947-924d-0404b4189628"
        },
        "item": {
          "id": "67087fb0-845a-448c-a19a-46be34fd3a45",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28a9b48d-01cd-49e5-8ba4-4e3f27be2c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a102dc7-f492-4a06-ac40-4b0471ae76af",
        "cursor": {
          "ref": "472e91ea-b27d-43bd-97b4-f40e53644b8c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2f634faa-a651-44b6-8b60-6fd5912ccfd9"
        },
        "item": {
          "id": "0a102dc7-f492-4a06-ac40-4b0471ae76af",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "683675fb-6ef7-4f92-85ad-e2f6ed57ba95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f07ba2d-aa51-42ef-9366-c1a00eb29286",
        "cursor": {
          "ref": "96e17875-2690-4784-bd9c-1817e0a95ab7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b3401f24-694d-41c5-b15a-63a989550064"
        },
        "item": {
          "id": "0f07ba2d-aa51-42ef-9366-c1a00eb29286",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5283e7eb-0a18-4afa-9a0c-a4186fa0b1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82540251-946f-4508-96d5-89c8f0cff426",
        "cursor": {
          "ref": "3289503f-556d-462c-bfc1-552b45dfecd0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8d3a3b7b-6676-457e-b352-803b25815ead"
        },
        "item": {
          "id": "82540251-946f-4508-96d5-89c8f0cff426",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a7943ff3-caa4-45c1-84a5-e9878c706186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc15f5-90a4-4db6-b4fb-bf9a6660a9a3",
        "cursor": {
          "ref": "8a778ab3-c16d-4c32-85f7-bccfe6909888",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b786369f-bd52-4b1d-b2c1-0304700af0ca"
        },
        "item": {
          "id": "24fc15f5-90a4-4db6-b4fb-bf9a6660a9a3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "67a208b5-22f6-481a-9ce9-5b432fd3f99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270eec40-46c4-43b6-8c8e-bdf3a7799fb2",
        "cursor": {
          "ref": "5b048e59-ba0d-46a3-863d-11d2ed056ab8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ed0f3648-930e-4f1c-a00f-bb6ac79b1a95"
        },
        "item": {
          "id": "270eec40-46c4-43b6-8c8e-bdf3a7799fb2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "504156ac-2a10-4721-961b-a0d82a43b1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd225f4-1c4b-4359-b318-9b90cfeaad30",
        "cursor": {
          "ref": "e5e3c761-046e-49ba-85f0-d78237ee901b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "da2be090-5412-440f-b68d-95dfa3a0e09a"
        },
        "item": {
          "id": "7fd225f4-1c4b-4359-b318-9b90cfeaad30",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d101384f-c778-4fc0-8110-527407e382f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76879d5c-216f-440b-9e2c-9b55c50ef323",
        "cursor": {
          "ref": "6ffdbbc4-cadd-418d-8526-60a66be67d8f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62427e8c-e2d2-4fcb-a546-db6ed35fcb05"
        },
        "item": {
          "id": "76879d5c-216f-440b-9e2c-9b55c50ef323",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d00e8cbe-0136-470d-800f-f76c192f8321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e4bc60-6a64-4301-95d5-d90ea5eca784",
        "cursor": {
          "ref": "86321081-959e-4aaa-94c2-e44ddfc54f24",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "294bc0b5-5e1b-4b30-83b5-6905b98fa6a7"
        },
        "item": {
          "id": "a5e4bc60-6a64-4301-95d5-d90ea5eca784",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bbea426a-2dd8-4a45-bd85-bfd836332076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce5b592-72a6-4441-8068-7fb7286b2eab",
        "cursor": {
          "ref": "25503652-1fcd-44f9-9fb5-0acf19156f7b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fadccdfa-ab5b-41d4-8933-d699a8c42d4e"
        },
        "item": {
          "id": "1ce5b592-72a6-4441-8068-7fb7286b2eab",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44f6ba19-92b9-4751-bc80-3d3820d900e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1955590c-6dcb-4519-a23f-111b65f3f379",
        "cursor": {
          "ref": "7a2622b8-089c-4ce9-97ac-4086ca9b045f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "de1c6077-cc0b-4080-8a8b-950b52650bde"
        },
        "item": {
          "id": "1955590c-6dcb-4519-a23f-111b65f3f379",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "31fa3672-5835-49f7-859f-3c5a647db0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98cea6a-7935-4c88-87c3-ce3931464508",
        "cursor": {
          "ref": "7fbc8be4-66a2-4dc2-b2a0-bc7566debd19",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f9bf2e13-8975-4dbf-82fd-6e9d32e65ce4"
        },
        "item": {
          "id": "e98cea6a-7935-4c88-87c3-ce3931464508",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "768c6370-7886-40b9-9cd8-a9d873187b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ae260b-c1a7-4b17-83bd-1a79e5393770",
        "cursor": {
          "ref": "5b1dd992-a22f-4b26-b4a1-c0d016676f17",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "574747f8-bf39-41bb-8e0e-97e51c629f05"
        },
        "item": {
          "id": "a3ae260b-c1a7-4b17-83bd-1a79e5393770",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e9b8db27-78b7-4c23-bc8d-f4b129f54221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd117565-b61e-4f20-a9d1-edaa4fedb18e",
        "cursor": {
          "ref": "73cfdf45-7ee1-436c-910d-f3dc52beccb2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6e6d17d7-352d-4f67-ae2d-ae8fd463179d"
        },
        "item": {
          "id": "fd117565-b61e-4f20-a9d1-edaa4fedb18e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2da6c0df-dd3b-4620-a134-dffdc365bc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c0cf1f-c4e8-4642-9313-5c3e9161004b",
        "cursor": {
          "ref": "1aedcd6e-d880-4794-ac65-497b3c55bfa0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d8d613e5-bfa8-4396-95ac-a5c960614cd0"
        },
        "item": {
          "id": "64c0cf1f-c4e8-4642-9313-5c3e9161004b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d2def40a-b64a-4638-9b29-aa87c1292efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b05ad75-4575-448b-8962-91a60b451fc9",
        "cursor": {
          "ref": "5702bf17-d039-437a-9f0e-146a97727e58",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8061a95b-f574-4f37-b9f1-ac78fa6a84f5"
        },
        "item": {
          "id": "5b05ad75-4575-448b-8962-91a60b451fc9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "006a30c6-4ad3-4b67-b4fd-05d268e4edbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25480bdb-26d3-4175-9e6a-f76eedca8646",
        "cursor": {
          "ref": "f2ff22af-248f-4977-bfbb-9756d816a3f6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b72e693c-522a-49d4-976c-fd913e9eac3a"
        },
        "item": {
          "id": "25480bdb-26d3-4175-9e6a-f76eedca8646",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8e889cf2-7958-460b-95b6-7d8a8f2b7d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4335a3-8d3a-4c25-ac15-57f2536a3080",
        "cursor": {
          "ref": "cb22ac67-c71c-46d2-bd18-17675f1c2da5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9a914ad3-63c9-418a-b791-8672b01268cd"
        },
        "item": {
          "id": "ff4335a3-8d3a-4c25-ac15-57f2536a3080",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "146507b6-4401-415c-95b7-d88dc09e27bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad44573d-792f-48e3-b7d2-2171d0a3cc35",
        "cursor": {
          "ref": "be806782-620c-4743-9aae-6077aae83ace",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15036c57-1dfa-4530-9517-a72e188e9fce"
        },
        "item": {
          "id": "ad44573d-792f-48e3-b7d2-2171d0a3cc35",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d7ade2e-3861-4c7a-8e75-ea43fc26c991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170ef5ac-29cf-4875-94ca-60d64ba34afc",
        "cursor": {
          "ref": "9519c7f3-7e65-41fd-a873-104dc117aefd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "17ca6f95-9cad-4a0e-acf2-7eeb96c51449"
        },
        "item": {
          "id": "170ef5ac-29cf-4875-94ca-60d64ba34afc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "704c4e38-c0c3-4828-8be4-ee18c44c5fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcf9f3f-765b-4bf1-81c6-1ef58acc50b7",
        "cursor": {
          "ref": "97c1d30d-3782-4a94-bfc4-44126d0b9669",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "106490c2-ee78-46a2-a9a9-330e71fdeacb"
        },
        "item": {
          "id": "1fcf9f3f-765b-4bf1-81c6-1ef58acc50b7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27cd76fe-ffc1-4fc5-81d0-d7dfbbf03b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f6630-55f0-42db-b7de-d40cf89e9b5e",
        "cursor": {
          "ref": "e5051d59-13f9-4310-8f65-515a9390c4c2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d98f0306-a457-474e-bef2-636ae4b140b5"
        },
        "item": {
          "id": "193f6630-55f0-42db-b7de-d40cf89e9b5e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b12ed88d-0101-470b-a27a-8221f266c74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32196ea9-4360-487c-bc83-2b01c718611d",
        "cursor": {
          "ref": "e93f2036-8efa-4ffd-b41a-4ddd1d8c313a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ea7241a-42f6-4993-ac63-d445f7c31cf9"
        },
        "item": {
          "id": "32196ea9-4360-487c-bc83-2b01c718611d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a94ece9f-3dcc-4cb1-9547-62e176c691fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8012a0d-7d6a-4196-988b-4809fb40031f",
        "cursor": {
          "ref": "fb253140-ddc3-41ad-a652-6b64d6142919",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "01f3cfc4-de9a-444c-9dd7-c341f8d1de7b"
        },
        "item": {
          "id": "f8012a0d-7d6a-4196-988b-4809fb40031f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f55aa36e-81c3-4592-ad28-6c6523a0d2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c096fa-a7e8-42ce-8fef-866ef4a648d2",
        "cursor": {
          "ref": "60199634-5b59-40bf-a908-35a10262ff6c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd2020cf-7be0-44c9-b14e-fcaa1fd2bedb"
        },
        "item": {
          "id": "f6c096fa-a7e8-42ce-8fef-866ef4a648d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "12aea1bc-f9a5-40b2-a76e-561c8a4210f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad030291-b904-4fdb-a185-c7c4c0c9ca7f",
        "cursor": {
          "ref": "c7f12fa8-64fb-483a-ba3f-e2e429a4418a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85e480ca-2fdb-4048-a9f8-a900ab66ab1f"
        },
        "item": {
          "id": "ad030291-b904-4fdb-a185-c7c4c0c9ca7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6181495d-9116-45af-98dc-6edd00d58228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6086e14e-59a9-4c76-a7f2-81458896e992",
        "cursor": {
          "ref": "1666b9f7-4ca8-4028-a522-2126446b273d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "518372c6-3ef2-47c9-8e8e-86256d16412f"
        },
        "item": {
          "id": "6086e14e-59a9-4c76-a7f2-81458896e992",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d0c3e37-5478-4768-a66d-7f8e5104c1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d7089-ada9-4d89-9c2b-63d01dbbef2e",
        "cursor": {
          "ref": "27fd5b2a-fb1f-48b1-afd7-0d519c1a5007",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b4817bc3-bffa-4dfb-8f93-4593948972b0"
        },
        "item": {
          "id": "7d7d7089-ada9-4d89-9c2b-63d01dbbef2e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "65814748-4986-4f43-aef1-8ff5b5e3651e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb09a523-47b6-4343-85ef-101e575fabb3",
        "cursor": {
          "ref": "da1a5f7f-2262-4d8b-a996-80b59275a694",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8a39f8d6-67d7-4a83-b32f-9abc5ac2803e"
        },
        "item": {
          "id": "eb09a523-47b6-4343-85ef-101e575fabb3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f18c51c7-5918-4887-b0dd-e58b9d24b9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d2964-c598-4d9b-8247-aeca6c10909e",
        "cursor": {
          "ref": "d359895d-625b-4cd0-9650-0d2f76c4cee9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b6e862d7-575a-46e5-8545-4128441b892b"
        },
        "item": {
          "id": "407d2964-c598-4d9b-8247-aeca6c10909e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3cf7fc19-39cb-415f-9097-1f84d6d3a13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe91cb6-1ccc-4e91-a8bc-440d8e25abb2",
        "cursor": {
          "ref": "f2b5d4ed-01f0-496e-9356-767d32ff35df",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6b8accfa-29a1-4247-9f2f-e1cee6ff49e2"
        },
        "item": {
          "id": "dbe91cb6-1ccc-4e91-a8bc-440d8e25abb2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dd8f1306-7b27-425b-b1d4-e44dbb3d1ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652139cb-e228-4765-8113-21cf0ac13880",
        "cursor": {
          "ref": "60f45e9f-61f3-40dd-8539-6b0eaf88e6a1",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a37c0bf6-7b48-44fb-af37-95de33dd6658"
        },
        "item": {
          "id": "652139cb-e228-4765-8113-21cf0ac13880",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8e8e249c-f5b8-4af5-8ec6-0e68075cd65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853e17ab-3489-4f23-b611-45cd60e36b2c",
        "cursor": {
          "ref": "20d38c63-96b8-487c-a397-445b926df615",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "17a72dcc-275e-4847-8aef-3fb2bb5c4456"
        },
        "item": {
          "id": "853e17ab-3489-4f23-b611-45cd60e36b2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "20fcc3a7-9307-4146-9d91-1107e9d3bd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a92765-561d-428b-b5a3-ed794f356dee",
        "cursor": {
          "ref": "6af2b891-9685-4203-b0f3-48a091b4c95b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4a976653-3a4f-43db-a9c1-c25b18fe023e"
        },
        "item": {
          "id": "d2a92765-561d-428b-b5a3-ed794f356dee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dcaa3caf-30e8-4f9c-bf33-ce653c5b9732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd4c03d-74df-422a-9645-57698f2575bf",
        "cursor": {
          "ref": "aa963b1d-a98b-4e7d-ac84-11ab1fd07c0d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7c8adad6-8bdc-4034-8e70-cdfd7c38be45"
        },
        "item": {
          "id": "4bd4c03d-74df-422a-9645-57698f2575bf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1e6aa1fb-4d4b-440f-b2bf-5fe90652e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3598e403-b8b6-47e4-8961-16672c6bde7c",
        "cursor": {
          "ref": "c409110d-5d25-421d-919f-d73c0dedd7a4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d080861-4f93-479d-ba30-74822a5154d7"
        },
        "item": {
          "id": "3598e403-b8b6-47e4-8961-16672c6bde7c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d756ce08-6a0d-4688-b64e-1b137f202428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890d9dbc-be14-4892-87b2-50dcb4b5d35c",
        "cursor": {
          "ref": "3a5e97b3-7426-4d1b-8965-7a7eab01294e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f3daeb03-b4a7-426f-b0a4-d87147038918"
        },
        "item": {
          "id": "890d9dbc-be14-4892-87b2-50dcb4b5d35c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6d76a8e-6152-48cd-980c-533d6f785b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10555fb-7ab4-467c-b490-ec1e30764ae9",
        "cursor": {
          "ref": "9bc86c0a-0956-4159-8ce4-1ae2b70437f2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "23e60dd3-11d0-4a44-ba85-fcef7504915e"
        },
        "item": {
          "id": "b10555fb-7ab4-467c-b490-ec1e30764ae9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "edb3e9af-0b2e-4429-950f-ca0040bcb575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d7d3e-4d13-43f0-a351-e347ce72b9a6",
        "cursor": {
          "ref": "5d9445e9-67df-4220-b7cf-57a31fc883de",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "649e977a-3a65-4b5b-afdd-e4ca7ca8be61"
        },
        "item": {
          "id": "381d7d3e-4d13-43f0-a351-e347ce72b9a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "378e2c6c-f32a-471a-88b6-5fb8a4d06d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5384ea62-1efb-4a3a-aec0-e8b582b988f5",
        "cursor": {
          "ref": "9cded9da-601d-45c9-9157-454b22a9d189",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9d616775-cf7e-462e-8a5e-75ad2fc8268a"
        },
        "item": {
          "id": "5384ea62-1efb-4a3a-aec0-e8b582b988f5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cbff1faf-eb5d-41eb-823a-0a1276f43711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7d3895-7f2a-4c40-a198-ba412da4f61e",
        "cursor": {
          "ref": "86adb138-c3e3-4c22-81d3-bd5c549aa23b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f71c5daa-d5a6-4b90-8863-6dc6bb214015"
        },
        "item": {
          "id": "0f7d3895-7f2a-4c40-a198-ba412da4f61e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "299e5ced-39f9-4bbb-90c4-d9d05817eb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b0d56-1726-4330-ae8c-bd6579d2220b",
        "cursor": {
          "ref": "a7f9ee2d-8e13-4ffd-a5dc-7b0ca4037753",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "845c5272-3b61-4543-82f1-e4b6518f4db9"
        },
        "item": {
          "id": "531b0d56-1726-4330-ae8c-bd6579d2220b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b1d3282f-2f51-4059-a6d0-77c9ef04ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75ec6e-45f9-471c-b090-60dd6a5e3d4a",
        "cursor": {
          "ref": "b566990d-7e4b-4ea7-9ae5-c3bb06dffcf1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4a73607a-7c00-40a0-8511-5ff772c0ae65"
        },
        "item": {
          "id": "5d75ec6e-45f9-471c-b090-60dd6a5e3d4a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a4478cd-f374-4235-8a5b-570f025f33d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa33c25-9a1b-4202-8a8b-d514d2f60923",
        "cursor": {
          "ref": "521a89a3-640b-403c-8dfd-d4b58d547ea9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "710e306e-17bc-4bf7-abe1-ce5ebcd5b2b7"
        },
        "item": {
          "id": "bfa33c25-9a1b-4202-8a8b-d514d2f60923",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e45807f-2d8b-414f-9694-e7e61887e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accb8b28-6580-4005-a161-273cb8951e25",
        "cursor": {
          "ref": "5daa8f96-b668-4dcc-98fe-561f75440fdc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "15d6e411-182a-43db-b53a-22d10f205a36"
        },
        "item": {
          "id": "accb8b28-6580-4005-a161-273cb8951e25",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e257a6e-aad1-44bd-b089-fc366f15c1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e001845-5d4e-4829-9092-d8f490952ba4",
        "cursor": {
          "ref": "364fc796-0f5d-45ee-8fae-1725689b4fc9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b95c0fcf-4adc-4121-8083-18224eb71deb"
        },
        "item": {
          "id": "4e001845-5d4e-4829-9092-d8f490952ba4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85de1e3e-7f0a-4ed9-9b7e-add59085ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf9edd9-9879-45fa-a738-9e4ae752ead2",
        "cursor": {
          "ref": "6a8f0c5c-ed40-4644-8f65-4f366467f271",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8fa0c096-cdf6-4b92-8361-d100d33899ff"
        },
        "item": {
          "id": "dbf9edd9-9879-45fa-a738-9e4ae752ead2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c9b0bf72-20b6-49cb-affe-659ad0d9de9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbd7984-06f0-4f5e-8b4d-96cf44c83137",
        "cursor": {
          "ref": "cc99e84b-f034-4d58-ba94-3baaaa82c37d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c598edfd-de41-44f9-b266-31dc0847fbe7"
        },
        "item": {
          "id": "9dbd7984-06f0-4f5e-8b4d-96cf44c83137",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3f5dcc7d-6988-49af-b9d6-4727d1c2f6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e1476-4a95-43ba-8fb9-b3c1b8f4d572",
        "cursor": {
          "ref": "3a511879-e7d7-4125-919f-267d9300d4ed",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "92329b34-fe9b-4923-813c-bab320ef6b31"
        },
        "item": {
          "id": "d66e1476-4a95-43ba-8fb9-b3c1b8f4d572",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d10f63cf-d3b6-4db3-a5cb-3f18efb00323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22f739f-dd75-4af5-a148-a04c9cc0ba76",
        "cursor": {
          "ref": "fc687cfd-7db6-42a8-a3a9-852eb60e09b2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2e843636-e623-43fb-8f30-686a5c670178"
        },
        "item": {
          "id": "c22f739f-dd75-4af5-a148-a04c9cc0ba76",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3a0b2ce3-9857-4363-ac3c-50df6fa0d39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141b23d7-d5a9-4472-9408-16c2f841547a",
        "cursor": {
          "ref": "3f7229b3-167e-438e-9ccf-8e68fd54de1b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "85d57030-d928-46a1-8f5e-d67deec90d99"
        },
        "item": {
          "id": "141b23d7-d5a9-4472-9408-16c2f841547a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a4ebf8cd-bcbd-4c0a-afc9-b38e9aa468d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824055de-679c-4727-a70a-e962c8956de5",
        "cursor": {
          "ref": "0a4ef290-a36a-4200-8e34-dde05f318ad9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d1eacc44-1c16-4023-8875-58466f1f3d9a"
        },
        "item": {
          "id": "824055de-679c-4727-a70a-e962c8956de5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "026b0876-1fed-4355-8be1-9dd1eb266ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf71840-9375-4db8-b7cf-b4e6cb639094",
        "cursor": {
          "ref": "d074bf58-5867-4bc9-8e0e-6d392fce8f23",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "16a3b19e-aba5-4cf6-97da-e6761933728e"
        },
        "item": {
          "id": "eaf71840-9375-4db8-b7cf-b4e6cb639094",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "39dc29be-9194-4093-9604-01b796545cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26176b10-7aa2-4093-8b39-23c35027ff08",
        "cursor": {
          "ref": "cefef83b-9f1d-41da-a3bb-3f4339f72aaa",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "11383cd2-da7e-4c85-ae86-a355ee5bab17"
        },
        "item": {
          "id": "26176b10-7aa2-4093-8b39-23c35027ff08",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "492504a3-9d56-4ee6-9be4-b609717d4efd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd703e4-ef69-40da-aa1b-cb26923bafad",
        "cursor": {
          "ref": "3b9d5061-bca5-45c2-9f13-159a92d5e42f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f586dc60-7a48-41b2-a5ed-09d62f742ca2"
        },
        "item": {
          "id": "2fd703e4-ef69-40da-aa1b-cb26923bafad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4047dfb6-e9b8-44e1-ad68-a59ca866f8f0",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea12be94-3200-41ef-a656-15b9399390c1",
        "cursor": {
          "ref": "c16b37ab-e8f6-4027-bdee-f1209b939d81",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a8ce7825-b37c-4655-afc6-194872fd431b"
        },
        "item": {
          "id": "ea12be94-3200-41ef-a656-15b9399390c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8c0d205c-d5cf-4ba1-abfa-5e00e7c43f89",
          "status": "OK",
          "code": 200,
          "responseTime": 1470,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7893ced7-988b-4c7f-9ec6-95322b2c83c7",
        "cursor": {
          "ref": "4f4c3ee6-856b-424c-bd4d-2848c434f445",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4bf59495-f76a-43f5-a997-af1343791ec1"
        },
        "item": {
          "id": "7893ced7-988b-4c7f-9ec6-95322b2c83c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6afc398e-2d4b-4099-aa2b-a4b24e349126",
          "status": "OK",
          "code": 200,
          "responseTime": 1477,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a84c6dc-be5f-451c-961e-f46218f83bc8",
        "cursor": {
          "ref": "fc00d593-1482-4efb-a54f-bd17d54952ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f09c815b-70e5-479b-9ca0-f6816ff0dda6"
        },
        "item": {
          "id": "5a84c6dc-be5f-451c-961e-f46218f83bc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc43134e-0199-4019-8b9d-8d15d1706b8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a84c6dc-be5f-451c-961e-f46218f83bc8",
        "cursor": {
          "ref": "fc00d593-1482-4efb-a54f-bd17d54952ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f09c815b-70e5-479b-9ca0-f6816ff0dda6"
        },
        "item": {
          "id": "5a84c6dc-be5f-451c-961e-f46218f83bc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc43134e-0199-4019-8b9d-8d15d1706b8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97d5e44-70e4-4bc8-9b59-878e0e7dea0e",
        "cursor": {
          "ref": "9e35de34-9812-43c5-9552-f9b206cddaf3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1662943b-26d8-4ba5-b6c2-d4a271cb4d79"
        },
        "item": {
          "id": "c97d5e44-70e4-4bc8-9b59-878e0e7dea0e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0bf8b84c-022b-4015-889e-e1963d99f1bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81c940d-0b74-4f50-9852-bcdd108317a8",
        "cursor": {
          "ref": "c578864c-7885-48b5-b493-da945ff3a0cd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "42ef2187-6305-4477-9137-5902cc3603a9"
        },
        "item": {
          "id": "b81c940d-0b74-4f50-9852-bcdd108317a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f67c0998-9145-4866-bf9c-eedbfa0790ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}