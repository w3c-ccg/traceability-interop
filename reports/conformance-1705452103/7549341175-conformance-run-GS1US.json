{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "edb18c26-6c5c-4b23-a58b-7fa79dc7796b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ad554487-1f7c-4311-b7e2-e3a5e9f45fd2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3316b579-1bef-4cb8-9f12-52672591b24e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4405b256-aa9e-42b5-bc13-825834f6d824"
                }
              }
            ]
          },
          {
            "id": "258d7c39-7233-40ed-8ee4-6e008230ae5b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2df940e3-73f9-477f-8203-094c6156eef2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f547cf98-088d-4023-90f2-dd3d4e4fcde1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98aeff3c-e908-40e3-ad96-c427074c8f64",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "019dd17d-2218-49c6-a172-5e11e3c6052f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6633aed0-cdb7-454c-91ab-6461d981c241",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16484cac-ba1a-4f83-8085-f7d28a36d9e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04a82993-b49c-4bde-b070-e805af008972"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4028b192-5b4a-4ca2-95d7-5697784b9754",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c77e53f8-0cdf-4c66-a595-4ba593a8f77c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1bf64bf-c626-4fcb-813e-84cced43d7e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be7dfee5-4e22-428c-8035-08b8b58e757b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f64cd77-01a3-447c-85db-6cba7f1e1782",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d7a292d-31c7-471b-88c0-e6a3cb5c00e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a619635f-3b38-489a-ba61-5ab568114d5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb998cff-818c-4d8e-9ec0-0906f8ace28c"
            }
          }
        ]
      },
      {
        "id": "d03223ef-21e4-4b6b-8373-959957d5df90",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "54d5ad2d-8df8-40e7-a65a-f1d65f084bfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dc9568a-eddf-4058-b2bc-90b414ba9c54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f718f762-df6c-4daa-85ff-8fdf18820b6c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99abe4c-795c-4fcd-80d6-d39c7de02863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c1f97b3-1e19-404e-9101-831c4bc9dd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe40d5fc-151a-4035-b2e3-63e1ddd65998",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c70c9ea-df45-407f-b468-271bc3a3dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a508b6d1-0d2b-4b66-b0e8-1f882ba9d523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ec17ca-ca6d-42d3-9b20-6cedcb70f75e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edfe87f-9e6a-4b0a-9219-2ac3cefffe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e21108b-5308-4639-8857-f1374f2e91c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "408b3c7e-54d3-4277-a3cd-35aedc8f3a52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6295e308-eb81-424e-a3b8-489f0930b784",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0dc4fa-2f75-4b28-80cc-20e0e7819dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ea895c6-0bbb-41a5-ac5c-4d1e77ab7fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f859e16d-5317-4cb5-a485-daa0d3dd7999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdf245d-e7b9-4304-8d34-50df16498cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74c69113-fa31-4003-b6d3-b4422b7e8b93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7523e06d-865c-4141-a082-443cfdc7287f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3021a3c4-8dac-46dc-954a-bf8f94b503c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb2d914d-df87-40df-93fc-9b137b9fbbac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fa58a6a-3296-4702-93cd-85284eaf47fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e3240dd7-162c-4eae-93bc-ec90af49b751"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d28b3da4-1d4d-4242-9658-bc716acb2b6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3880edc2-c098-40fc-bd6d-b729158e3cb7"
            }
          }
        ]
      },
      {
        "id": "be9b7e79-5fa4-4a97-bbe3-2fc83963cfdb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b5817449-d114-4532-96a7-441ab75b3297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c0e5a06-2e8d-4f3b-8ad4-2a6001f65a67",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0fcc4daf-b3a8-4a3a-86a8-cbd959332ff5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc136b-74d5-4b63-85c4-8f9bc70d609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e960c97-1648-440f-aad0-ebd1486b496f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df189df-316c-4d40-9272-371710aa3a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29cc8ff-c8ab-4ec9-98ee-609f84a420bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efe493a-bb89-4377-a09f-328fac4f445c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cef720-8c1b-484b-825a-7dec4b7df1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1faf05-c943-4c27-a593-da602d99326f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9177f02f-803f-4ffd-8022-6810b8a27d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b88df8e-7af2-4770-b4ef-7bfa78539597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59087d2b-e6b9-4f8e-bf08-16d9ff7eaf5f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4345ec2e-21d8-4bf3-90dc-eeaa5d9818fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa2d01f-52f9-4d3b-b0dd-61eb9d391dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c877259-e23d-4368-ae72-1e163a76e001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b1cfd7-1820-4f07-a48e-ea93756285f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be171dda-088e-45d0-90b8-bc1f98b079ed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4554c73-1416-422d-8c59-901a99766013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e097f184-1ee8-481c-a11e-efadd99ba102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4293689a-2fba-4e12-a80a-352e19db79db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6aa7da9-87cf-4310-bb39-e6fb3dafa67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da13437c-9a77-48fb-9e50-3c261b806520",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cb20b6-c488-4da0-92f9-e05472215fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b44567-b1f4-4b57-bb91-9f41a3f29907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ee68ad-b1a3-4d9d-8210-792858ab97b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ccb2ed8-4bbe-4c07-a3ae-d09bd7a0c4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457902cb-f6af-4c0d-906b-b190fc6cf57e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e36d85-76ad-4bce-a12a-051c13eae250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ce7894-ea46-481b-8424-b5f926f23536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0394719-b33c-4d5a-9600-657da34453ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e74026c-6c32-4ddd-852f-c2cf3057663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e161c5-86c4-44f4-829c-1c1b25f4e5c3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d84a945-cdb8-4120-957b-3bac6e03ffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69695ade-32f2-4bbb-b1a1-f07436b2f729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d8b07d-c855-459a-a9d8-205e7cec87b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57c1474c-51fd-4758-85a3-c521a613660b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767203bf-5105-4432-935c-956df6c364a6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8738f8d0-85b8-4ead-97f8-7081ba2ae0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fe160e-9cca-49ff-92b7-45f80f9b43cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20888da8-b986-427d-80da-210946120947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7f01735-756f-4493-abe2-0d95f8bd51c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f1f16a-cc6c-44b1-af9a-b86163548b43",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e802b77-dccd-4d29-ab46-bb3950d08e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc639247-ba5e-4c3e-a6b6-76671e3d5de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2940f4c-d02b-4de5-b61a-00163a8402d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b65e2386-afc9-46b0-8661-d1d5b8ea5a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b4154-341c-445c-acd9-8c9d63a3c83e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77497ccc-a9b7-4ff5-863e-2f72d00a0cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a716ce-0ab1-4bb1-a4c9-839e38ce8cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fd7523-634a-49c3-bd20-bf7289db303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69348980-544e-45b5-98f2-769f60297e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3adc94d-9349-477b-8dc5-ef2a743e55f4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04c7b61-c506-4522-891a-11835c3beab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab678ab-b67e-43a7-8c31-0ece09ae8f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331b51f7-9922-4e2d-9899-b3658af297db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94960191-d2b0-4332-8700-58dec2c3bf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c247d44-797f-4b83-87e2-dbb79518aecd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee244434-2bed-48bd-969e-b45141cc08a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01aab8b-2a56-46dc-a962-d073db5eeda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6105f7c-58bf-4161-96ea-240c0807ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d10dc8a6-113a-448f-8d6b-9ed8666822af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afbb20d-983c-4cc8-a37a-cf10e40855b7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61877b0-9ff7-45f9-9ed9-56625da4a74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476f4a09-2f58-4844-b2c4-4fa8de95724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5637f51-5123-42e5-9951-896317fbcb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef8f515-df6f-45e3-86a4-9426099c7383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfc9820-8b11-4aa7-bd17-52e051ad0455",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a58deb-d4f9-41cd-ab9e-32b65282b46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75743ca0-2bbf-4a39-b10f-b4ca011f595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254973aa-e782-4399-8ced-e962fc88b553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30065175-194b-4511-afda-208fb305d34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ce0da6-2465-44df-b12e-763534d19120",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bdd920-c33d-4ad6-91b2-985da567ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47b2b93-a2dc-4b57-9392-6c04dc2cb647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4c3f9-9471-442d-a7bf-d2ee509dd166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a484c707-6645-4b88-8973-9862f51a6aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb523d6c-ee4e-4f94-aaf4-8b7de315dfd8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eac41f-ce0d-48c7-bd95-0a8be8b82ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778eb07e-a58a-4cc4-a089-945fcd2b2407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c651bedf-6385-4eac-834a-c69feefc55bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73eebb3c-522c-41c6-aebb-2979563e7838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec84730f-4bdd-45e9-a694-411f839a70ee",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315243b6-78c1-4f15-9aa5-8c49b4a373cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc06abf-0fcc-4bdd-8c8a-035aef93674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17a4550-e095-4649-984a-d6b5a8b60e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1538780a-6c05-44e3-8008-d950fac8a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be870d25-8d34-4205-86fa-d20b426b57a3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53b372-35d5-4a51-92fb-cbd95b14ef83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81969b8-368f-4e90-b342-2ec2b02e78b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c966b2-5f73-445c-96ff-ee26841d3aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "27af979a-dbbb-4f42-8bf2-cbe98a6fb5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7746caea-3d2f-4bfd-9cf6-ee22d462e576",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbed68-a53a-43f7-a3d0-9f4787bf8c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced05e82-f883-457e-996d-99abd93ae67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a30c3-c4a1-4d87-acd5-731f1cc624d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d68d93-6ff8-40a5-9480-62fe4b2dc08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585511f7-ae4d-4f42-aae5-6663014c65fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba474324-770b-40c2-8df8-98629aa42bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5eb461-32ac-45d9-90d3-5243268cb5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0669c9bf-985a-4ef8-ae25-b6789f4caa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "997f02ee-1512-445d-b4a3-bddc6b483cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3ed391-028f-4bc5-af00-5e414abba4a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce856c2-549c-4349-87bb-a8aec03f6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3889692f-31e3-4fa5-b110-c53f20ded020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c02df7-746e-4bb4-91bf-60e5e0a6bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "918a3316-d9fa-4624-9ad5-0006fc22dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30d0b76-81a9-4496-b999-2de413e853b3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810a855f-d576-4310-9392-5cb8a3855584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f145747-f632-47f5-b718-aaaf62c228b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0a26c5-35d6-4827-851d-35930dfa5ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74966e3f-a4d6-442d-8347-bc9ac7e516d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cda4e0-e0bb-4188-b0c7-b3d90e04c48d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad0f1bc-eb60-4717-9111-25aec4574536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728ece4c-413a-4945-bd37-ca9637f7af78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d973fdf-6235-46c8-b7ca-92c8082d76f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7caaeb19-54ac-4b85-a4cf-2a8857fbbccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94be33be-e4e1-4cf6-a89c-c455125cf386",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eb7803-b1bf-4811-b1ce-ce6ed5901d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec2016a-57e8-4cd8-87fd-4a19f7455846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bf7b11-dd01-4c12-9397-c4ce0895a08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5214b2b-fa41-4546-9c5d-c7954cf03b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c187bf60-23f4-4f65-afe2-ce47684e2fb0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36a129b-9de9-4135-b616-640662edaf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c107d8-ea89-4bb7-bb22-3bf7cb97cd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f19c3fd-d41d-4c01-a6ae-91d1defca2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1651a4b4-231b-4756-8d9b-e41af58e314e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d7a46c-405a-4b37-8c68-57b88ff2116a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e71dfdd-dac2-4f3a-9958-aa6b1a0d5c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bffccf-24f3-4310-afa8-43b0b6fe18a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f622ff5f-a57a-4653-a281-df69061658cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cfdd32-7a17-408a-8bbe-17e97778695b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2017d55-1f92-48d7-8df2-accc2d525ec0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b3eb5-44bd-4e3d-878e-097e5370dae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba72790a-4315-479d-b42f-aa8969e9090e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36487ea1-ecd4-4089-a83d-332957ae5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f1bfc6-2cf2-4973-880d-d8e37267718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c044eced-9687-4d87-8bac-50863e4f3ea5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b78fbb-59e9-45e0-aebf-0910d273b14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c746364c-37c7-4ffd-9423-d5afa3c7896c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971319e4-e06d-4dd9-b02b-52ce26f92708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e89d18-a531-4f56-a5db-aec0b8fcad53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9b6d09-e3a9-4f4e-85e6-2f246a231b27",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab191eb-ca55-46c3-baef-3e295d16c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13502610-a774-409e-aeed-69940acf9206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a31463-1072-4af8-ae22-3e720a12616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56970b6-b4cd-46f8-a944-8273ee095d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478108f-c3bd-470f-ae56-b3b0cc3bf1c1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a49c78-dfa2-4cf4-bc74-5d0dfd0cb6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de8c88d-69a9-45e0-8002-30beac6ba12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbba92b-c6d2-42c5-af18-2b11a5b6262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5f341f-4cdc-4f89-a2af-0ef45384f1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9d8380-e7ed-481c-9c28-3eee40ef8bee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e0e21a-b3aa-49d2-8800-24dbcfd53931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217afb59-63cc-4cb1-9edd-f26e270de08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5a9f1a-f159-427b-8fd4-a922870693a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdb7bcf-ed49-45a4-82f4-e27f72f961ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a161db0b-99d4-4930-9b94-6376b1111c86",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63822efe-6701-4261-b30f-8a17284d4b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baae41e-b5b4-40e7-b54e-9a0c172a408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c2403-f53d-4bf1-800b-adc5e778defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46691eaa-33a3-4245-83db-af9ff19c8bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee7ba7a-e07e-4797-a343-3736a6cbef82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf9d6c-7718-415b-8b62-84ad8e7a2665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7757eb2d-d423-4867-949a-62419ab88935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef33d305-7628-4237-a44c-ca1b9113333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1bfbfd-5f89-4439-9172-36db218c8bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c53b14-12f2-4229-94ea-34c0c8d6fbeb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499c67d2-1b7f-49ca-ac91-fc7deadda5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3682412d-adc1-484c-a40d-9179668cfc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a5101-b6ef-4301-9c77-ca4d805f876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee09ebad-c364-4af4-9804-322f8cb81c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36068193-84dd-40a2-b34e-f8909e502ff7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43749c9-0c89-46eb-957e-14b94a3dbe8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78960968-84cf-4acd-b7c2-d59256b37337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a11a2c-c639-41c8-ae11-4c55b5048a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "45ec6da3-b07f-44ec-b882-6e1b3ec1cec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8a9cb1-91e5-42c3-b079-e5a7349671b5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c71243c-2313-49b1-bff0-06b9833b6ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a99e37a-de98-4f72-8bbf-47af4993e8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e7c548-9d00-4b4b-872f-63d131c5ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7aa64d-e89d-4036-98ce-99dbe8ef0712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dcea2c-638b-4f68-b761-7141a8b289ac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba84731e-bb02-4cab-aa56-24061ee3326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23d537b-4a49-42e8-aff8-c5991cdb8a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b95a6-e6ec-46ce-a8fa-b6a269aa5fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc74d0c-3f69-43a4-a3f6-a770cd0a7726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca66838c-a48c-4773-ad2f-c87dce35159a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a55e8d4-d567-4090-93b6-da80e2a010b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901d0bec-3e84-4b6f-8c15-0fdc5cfe54eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950564fc-ae17-4a05-8024-390d91f2c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3025717-0228-4352-a6d9-a7ac997fe17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0e3a16-17f9-4342-b563-8dde18713a65",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b8e2f-ab26-4c71-95e5-8e8dfd242cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16137be5-0059-42a5-accd-c214b9d17d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f611ec-8c4c-495b-8477-956db5949b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b16522-a37c-491a-8dfd-17d3e788c10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58f7eb6-2258-4984-9365-305f1e13c9ce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09c54e-a6ba-4316-b90d-c1ac32e19e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fc2fea-116c-4650-a473-b6640af47362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025501a5-6870-4e56-8b64-c2ba4b4644fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f1f8f-6277-477c-8bca-24fe5ef4fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3748f411-6baf-40ac-a7eb-9a2cda0ff9d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f2c83c-c906-4b45-89a0-cd8422204e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2450a8-8e80-45a6-a05d-14d690a02369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a45dfb4-f942-4afe-8dd1-6edec70de4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7a4176-1c07-4a96-afc3-60e62d86583d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf80975-c9e9-4e97-8f63-5d06db1923cb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0e50c6-50dd-497d-b1db-69c7ea43cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b33694-dcc0-4143-8eed-1aa027a44092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc12c20-4a8a-4ab5-b6a5-6947d2108ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7894607f-7b22-4da0-ae9e-49c72d3cfa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c75770-f62d-4a70-b923-23e7c2cf75dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a865e4e-dde6-45e5-b84e-ccded9aa2dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9074dd2e-933e-4d47-85d3-3b6f4fe97abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afecb17-f35e-4b70-a327-c047668a213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ccde58-8d2a-4cf7-836b-5fe1689f048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4affe75d-f930-4a04-9094-ae17608e29d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4bb7aa-e7ab-42ec-94af-7a7c076cebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2787198e-3b0c-468e-9f34-0991671f4a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ae6c60-e34c-47c0-9dc7-15a986e184e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2a23f1-b68f-4f9d-aef3-3091bb98b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf28b19-6816-4081-8bdb-8d9da057b913",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e11cb8-fbbb-4f2d-ae06-5172750858cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8ae434-e62c-4e41-b78b-dce67ff92276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e8d86-96c1-4aed-9e4e-c9641e0d2b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "022ef7f1-0ee9-4b20-9ec6-537027cfe0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471c7fc4-b743-4c29-bbde-8d6ae9dbd9d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda39f71-cdcf-4363-83e3-7c1a9e454944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0079e0-fefd-4549-9fc3-43f52e4ad72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b89116c-833e-42f9-944a-043788c2c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fc32e3-f1de-4f9e-8db9-26715c213dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8f47af-1418-4317-949b-66c65accd952",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c368f359-318b-4240-91dd-0001d28affe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5c6c4d-9c97-463d-8e7c-d6697bb7e921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5275c4f2-b4c1-41ae-beca-e0efd0a7fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65bd4a6a-a4a3-43f9-9890-b663014342df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea93f4f6-8a09-4669-8ed8-a743a5544f21",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f8cd7a-cd3f-4a6f-97d4-ae28ecbe5fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbfc1cc-3f1b-456a-9e21-634172314508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c98386-ecc4-4028-8062-cd9b58677e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c4d75c-b13d-4ab7-85fd-950c75fbc591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d630ad72-a3ec-4748-8461-1c252f6dfaa8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618cf8c1-1189-4881-8e67-9bd3944407e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da978e78-252e-4335-b99c-e498f20e9458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3998409-61b5-49d9-bb94-d15ab8bd7374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2ed0eb-8376-46c4-b300-80613c6558e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404879ed-d8d8-4b4c-9883-faa49b437da6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5237c2-bae5-4bc0-9bab-5dbdf0999c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2753daa-928e-4780-9421-e16627b8682f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48132ef5-0a0e-4169-94ad-6f5a709d980c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5aa4532-c768-4b87-ba70-171962b2c036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48350a5a-2797-4376-9cbd-4e9e22e29a5e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d164de8-cf50-4829-87e1-b7f9c4560afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a5a2ff-62bc-4022-bc72-e403d40fd881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d26529-a1ce-4169-afbf-b01175a5a3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "588db16e-e68c-420e-9801-e0bbf1e5cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b2ee89-5dbc-457c-8ba1-c5f429e7631c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522a087-a925-4624-aba4-eb25f4669352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0159e5-8c1b-44be-b44d-1be6f29a50b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858cd044-47fb-4649-bb3f-78ed14e02acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5dad14-2221-4f0c-ae43-e3cd3516dbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e7643e-aa21-462b-85d9-fce0305f54e1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b07b27-06a3-4cd0-9a49-08d7b75f4216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0b17d7-a794-4f40-8bc8-b33305c158bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abcb868-8e5d-451b-88fe-81ddc94ad86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c90b62b-dbd6-49f4-a95e-46b68daa1731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada34d3-24bc-457c-b4e4-92289a0dd6ce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707ccebd-5c37-4ee0-8604-412b7631b51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca87738-5fea-4c6a-bf3c-3663d0806d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a94af44-0ac9-4487-b33a-c2a7096e15a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57af5d24-135a-4270-a39c-ec35f3864135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72fdbe1-950b-4807-9d7e-e4cce9c58135",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f208d-e365-4e37-96f8-13fd2c9a14c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea21496-645a-4f6b-9f85-9c998260670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b364b0-7f38-4485-a43f-09ac7b884362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3895214d-9b0e-4a90-a55d-47b1f91f84d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b252290c-6ee2-4798-afd1-dc7927fd1a21",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea8b4f4-358d-4542-89bf-17589f4480e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0057b1be-9873-4692-b840-ddd05e36eedd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da0e399-0d18-40ad-b96e-8780a4a3440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d3614907-d67d-4869-8b36-21b5111baa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0667beb0-efa1-4dc5-a96c-c99e44d1c2fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd293daa-5ef8-4ddc-bbdc-c4811c1998b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886f7796-eaf2-403d-b026-4c83233a6d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3645136f-2850-4e86-8813-0928fbf989f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "badd9f4c-5f98-41fa-8d67-a2d907d8c808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68036739-ab5b-4488-8fd7-94e9e663a8ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9ed79-9787-401d-8a7f-6122a7b6b3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9688c19-3ce4-4905-bc46-2620f0fad2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56245510-08db-4736-9975-0d43cc21d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "575e0df8-04e7-4ae9-b362-ae5e1ea69a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50626b5-4ba6-4b7e-873b-98f96b923020",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3953f683-8d62-4226-8aa2-fdcb902d4bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3a4474-a8f7-4ab7-9a38-55049edb7b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f0f03b-e51a-40ae-b9f1-a6144aa2357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51bd20c8-aa55-42ac-afb6-7d62ce03b4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3c865-1085-404c-bbae-2557e9979a62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777951e9-39f5-4332-8026-e62d10e20aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114aabb4-3906-46f9-8f73-3fcf5b999cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330e45a2-03f3-4fe4-8111-061e7fa1e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9169fd-edf6-467f-9fcf-bf95d4de8436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5e96ab-20ad-401a-b4ed-852b02253372",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd4cb8-23f0-4bfa-87b8-520feefb6a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0ad5c9-f145-44ce-b964-e33a60edc11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d406841d-2b36-43ee-acba-fbc20f797ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b72bd676-4373-46cd-b6a6-25282aa252ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ee0a8e-9e61-4cbe-831f-202d8b23ceee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a19b746-d6a2-43ad-bf65-077940365a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3bf2a9-d022-4bc5-9bdc-dd9f4b33c227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af93a722-10e2-4e99-abcc-15885d261bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4de532-588b-45c0-b9d8-3e6316533998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0837f276-0cff-4401-a583-59bdb447fa8a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af30197-9ed6-4736-8594-26acb063e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa9c0ba-46ac-4a82-93f8-998a2fd70a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a0930-0074-4ed6-9d78-2b5d4d7e5c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec015aaa-63b9-43d9-988e-b8c0074428b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51560e0-1a20-4bb3-a3e0-054ceaa90afd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b34b51-a2d2-474f-a6c9-f0e529f78ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f63dae-4561-4826-98e0-915b04f1f02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d33f5a2-06ac-4ecd-9a40-dda6b6def95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f85e99db-5aa3-42e2-9741-410a7101eb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c8d335-f4e0-438a-9129-d5ecb42de8b3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6a740d-7cb0-48c1-8d1c-b664259e1d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e784c44b-ec08-436d-b160-d1680af004a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc40d29d-3604-432d-9ac5-ad63405e44a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a2bcf5-d9f9-4426-8530-05ddd2f6f194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68620e06-eade-4f5b-ae97-adfd98aae62e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073fd6a-6786-44a5-b4f8-e4e7be0b2c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ecb9af-f9c8-4ef6-aefc-3d105127b6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d7ab19-d96e-46d9-82fc-534386aa22b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67755a51-d225-4d1c-8f0b-70bba9504ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81912ca3-a55e-436f-b6a2-aeb5ef0c58e9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1eddbc-80ac-46d1-8d4d-399d4dc2bc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd6d497-4d35-421d-b9de-b454afc454a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a163cf7-3edd-44db-87bd-1bdf0d3fd181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b8df59-5cb5-4df7-a859-9f5867e5dcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b1422b-6251-410d-8fa3-0dc7df9fa960",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9706b1-359d-4abe-8cda-ac37e7c54253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b393d53-2b3b-4eb3-a2b3-43b84009e676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e667c363-8dbf-4ec8-9b85-74368a17cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39caf32a-035c-403c-8f20-93d8bf208410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e4c49-d983-4abc-a50b-dd7feae70a74",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b30f14-2647-4834-8f4a-127cdda9d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8724dad-2184-47b7-813d-ec372f6acbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec0ecc-f24d-4d6c-9dae-33124bb97895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e494ee17-b7e7-4c97-8d39-006ebd385b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566201a-c249-496f-b09b-c3c5edbbdfef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6e4afd-3843-4d99-a90e-4c93abb5c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ab894d-5ca9-4ed4-88c6-1d54529507d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f7b834-eaf9-4461-b1ad-26c28e6fd965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "108d4670-8475-43fa-af9c-512c64d987eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53a2b01-b022-44cb-a9ca-b532fc9106c0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75534eaf-7b06-4ee4-befc-9f5d069466e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1034f1e8-7f3e-43b6-ac43-b809c53ca534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c96e3-e965-44d7-867b-6384de309dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50bbaefc-b79d-4594-a9ee-a6c9f038ef6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94d25dd-c1d7-4114-b3d9-160ddff05075",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7945f478-c178-4df6-a542-2014257bd137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a01cd49-0dc0-406d-b812-6e9cbd36ab39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8295435d-dcf7-469b-a319-f528025f432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0723b24-8f4b-440a-a3b7-206ab47db5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a40f7-a43e-4e10-b5aa-307f227ec822",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310fe997-8e6a-4026-822e-9c96e4852246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae778c2-f888-4951-a325-d636d57a457d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a91946-44f7-4bab-8051-fe34c9f33295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15294be-481c-44f6-b486-a09a4b9c50d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c485df-2671-47f9-be70-1cf7735286a5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9840f3-1f3d-48a2-b52b-2bda1ae88a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854a23dd-fa8a-4494-b801-2dd0a432fbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86d13dd-4a90-4cf1-a6ef-4b2267a0e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6f419a-7ace-4124-ad57-0eaf20cf6638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a079316-c3f9-4ef0-bf06-80b4b023f142",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886b1bd7-7f9f-4aac-b810-75e597e578f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fda2e0-063f-47a5-8a33-566466caf2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d5af0-f24f-4a12-ba5c-489f8d57d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e03dd0-9c04-47eb-8b5b-b2d7e4c8a524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520c794f-1e6b-4648-891f-95d173c2e00d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5a0da8-169b-44ae-9b71-306e3946b1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88443c0-c018-4d89-9d74-6c40a6defc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad504b21-23d5-48b0-9c98-bead9a3c9e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a612a07-dd08-4f34-8be7-5d42b55575ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccac356f-0aa5-494b-8ed9-e38c145a34c5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d531577-a7d1-4920-869f-fb1c74c6ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc42f48-c19c-4373-9f42-05d24fcf22e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160f65fb-4878-48c8-9009-f913e0512c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2de3e0-be25-4999-b5cb-42e9b9e497ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32334d8-7f36-4347-9559-b360acf04f08",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b936438-e7fa-460b-b86f-98e47d9d6bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb9bbbe-ce34-4b52-b953-272fae7f7dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103b4bde-9a03-463f-9113-f8f075fcf05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9857467-d310-4ab7-a3f2-4ad59433688b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01103f0b-4e7a-4462-a6a4-94621d767a2b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e83b8-1bd1-45ec-bc0f-9161840c2d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3024ed-927e-475c-b86d-8cc5fd742211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e3728-7594-4861-b5b6-9aaf9442d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dc5e81-ed92-4a6e-ba05-bdb8c41d778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64688103-eab3-4203-a99b-c09742fdb7e9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4276d-3a65-4dee-9aff-f5278367da97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd8e7de-131c-4d45-ac23-d4a4e6b11190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be567bc9-a168-41d0-a986-ae872a0f69f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f48541c7-2f11-4fd3-9a9c-e0c7f7b021a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccf4a39-5f76-4ef8-8630-31e6304ab86d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e84fb7-553a-47eb-8cfb-10016204f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc1fec7-ed5d-4bb7-8f8e-3b463a8a92a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385e27b-ab91-4e65-a24a-e0adb8b6b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da283d08-95af-4469-90b5-dacc2810cf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3aae44-c9be-47d5-a420-8eddfdfc5d38",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3198ba9a-a2df-4085-861e-a9dad4fb3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5839f41c-a2ef-407f-8f0a-b9bcbffb73df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b1abe-3879-4d8d-a5a7-352cfdb4f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab58be7c-ca5b-4c03-bca9-91cf18ff5b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e19f6a6-15c5-488f-8dc4-30c5e649a116",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341f993e-3e3d-43aa-b765-608c751771af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586e9d4c-cea8-4c87-a782-53c53fac068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d902c98-0bab-4b6d-81a3-5ea7d6da30f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dc3e1d-8e70-4df9-8c0a-3e09f5be4cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aa1eb8-0c38-48e3-b01f-04c81e14709d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503dec4a-dbc5-4798-8cdb-fd1224190534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ed3943-61df-4d47-8f52-c61e96a6af92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6a460c-dd73-42fb-923f-c532edcaacb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e07aa2-cb83-436d-b593-6233b56b0e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e839e4-b911-4294-b9e5-a447b3ab2b36",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3845974d-cf5f-4708-8887-21634ec99f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b981b192-b7a8-47e0-98e6-e0c2bce20156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf15793-5a7b-480d-bd5b-8f5c7aa219ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dfa383-9502-4de7-9270-861bac31da79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732aee05-b68c-42b7-ac1e-7c6a9c409daa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839fc0f1-298c-491d-a267-84fa0a6577c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4223df-cdf1-443d-9b98-96ef380783df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7a1414-a517-4641-aa50-12c194c4e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7c25f8-535d-4f61-9418-c383aa96979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd78b2b-52a6-4044-a907-e1b69ba5e04c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549d5332-5bc4-42b8-8045-9e6a68fb4201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00aa7705-ceb4-49fd-8730-3cbb4cde97e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0424aadc-e741-44ca-a095-e5e3c7b0d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb8a438-4500-49b1-a1ac-7f398a7e0346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e061a4f9-42ba-4697-9d28-97d3b17a81b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ff9295-99b3-4479-b6b0-347a6b85af3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce040e91-ff09-4347-8df6-9728015128d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b51451c-d0ee-4378-b553-56808e92726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5549eb51-3b9f-4595-89c5-b7a87274ac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a787b979-c71a-4911-bc26-3fb9ffbf1150",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae87792-26d9-4b83-8e52-9aa563487377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3c5fb4-658a-4eed-98ba-2c36f007cf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d42ad9-4d90-45dc-a1f2-23da111b0d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6440944b-5a2f-4697-93cd-2f660f119875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f974b264-d256-425b-8e48-23bc819564d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056174f4-1cc1-4618-a435-29ede81dd201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e2e68-f007-4d31-a7fc-46028eb1b22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf6ce69-b10c-4a16-9379-600c3e8f8c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "716a08f0-a515-45d2-90af-450271bf1126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca836f-79f6-4198-a8e1-ab6af189cec5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5468f61-bf49-4e84-96bd-c93130a7d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bd5a69-805f-4a50-992f-563638fa6404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13070c3c-8628-4efd-9ac2-0bb754b26a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6feecc0-79a1-4ab2-8ce2-709281ac1a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2173f61-78bb-472b-88bd-41c315d5b578",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4581c7ca-db7c-4833-a6b2-6823a318d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fdf74d68-c808-49ab-96fc-d7da5daad8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e71ccb-95a1-4b3a-9a4d-0bfc17de79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb26033f-11c1-4002-8026-bf034be53f6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aed69899-6582-426f-b280-6a0a24a64c8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a5e744e-7d46-4a9f-8023-8dde897ec68e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91047233-79e3-4c4f-9102-71851b9dba55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcc435b-7319-457e-ac84-a6c68780042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5927f8db-87ae-4d99-aa11-e76d9d4f3318",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0430fe80-a7e7-4191-9162-88fbb97d7bef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e871828b-befe-4e66-8a86-95a3ca6444c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "102fae28-7198-4b74-8b5b-7bd5c9e639a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8715de1b-466c-4abf-80f1-b16e674f31c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30d6a5e4-a18e-402a-bb46-e1bc88b2ce56"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "029b4106-63f6-4357-88ca-0f7e097f47f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1383485b-9c55-44bc-a9f4-e1ffc85be525"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a30ee70e-acd4-484e-9732-472774a312b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e14f6301-c223-4cf4-bbe9-2acbe943c209"
                }
              }
            ]
          },
          {
            "id": "641e9b1d-824f-4013-ae62-c0cc1b7a4d21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f89422cb-a815-4d10-9cc7-353b6391ab8a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6ae7d368-9105-4fa3-89cf-477abe1a433f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a558c1-19b3-4d2d-b339-1136ce3db779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6897a4a4-d65a-45ec-a63c-704574de0366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77a17cf-84b5-4292-841f-9b3384af561e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d390319-bc73-4427-98f3-4e22a3dcb410"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af96a17e-7ba4-4f16-9997-60eb5425325e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc56dd4-7700-49bd-9ef2-89264ca45b6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07cf32ab-a6fa-4581-8b26-c7b6a7d45802"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2767a731-c121-4589-b610-24f43400e44c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f7685c2-e051-464b-a43e-339ba89f37e9"
                    }
                  }
                ]
              },
              {
                "id": "0bc664a4-01e8-4854-acad-d301a7dda895",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "101bae04-51b5-44d0-ad14-5be4b1a89680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fa010a2-7838-4f92-8736-fcdc5ed3fc1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42d3ca3-0b4c-44aa-b932-882a5c26b378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79c74cb6-525f-42df-a4ba-36d50ac91bbe"
                    }
                  }
                ]
              },
              {
                "id": "5b47b9de-53d8-4e05-a96a-fa11121643f8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd1fe6e6-dc76-4c2b-9ba7-33d1c7ee5741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e82399ff-7747-4ac5-bc22-1e229e9348ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18640077-b654-4043-a7e7-4ee84f5a09b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d43b798b-e2b1-4c9b-9bd8-ce145506ce4c"
                    }
                  }
                ]
              },
              {
                "id": "c4aceba7-4274-4e06-80dc-6837df889223",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bef51a83-e4d0-4ad5-b5f0-a3e47fe60860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9185d40-a9ee-4cfd-9d78-3cc243dbe8fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f97627-20a3-4c47-8d34-677eaf5261ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "055626b7-f5a2-49a6-9cd4-fb42fb9386ad"
                    }
                  }
                ]
              },
              {
                "id": "35788ff9-05d0-43dc-a524-c919864f2f39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0623c316-1019-498c-9286-228f274edad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c614b23e-8f58-46ba-97a6-2acd1a25e276"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdbdf54c-a0d5-43e0-8799-a8faf5d18283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "58a523c7-241a-4be7-86a9-f29aed824638"
                    }
                  }
                ]
              },
              {
                "id": "ca9fe7cb-f0ee-4736-a1ca-5db4a482b790",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "977df410-735d-4c0b-a299-1a7dfe794ff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26072d17-6aef-47f7-a690-da2777fd55f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c859118-36b0-421e-ba39-1b440eba5160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f33fd324-46a7-4bf5-8a2d-d35c88b1ba06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2ae262a-920c-4499-9e37-cfcea08e29b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3b05d1a-d3dd-4a98-a0f6-722104a94d6a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "892b96e1-1328-4f58-97b9-615e5a623b90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6324923e-e621-42af-8d98-2876e1a080f0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cbda194-6bbd-4ba8-8492-925c1b8daced",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f8d5fc5d-ff74-426e-b921-17a847dc1b10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0df71ea-91a6-4289-89a6-b7d634d60f84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6bd7677-8eb9-4f52-aa06-8408d92ff76f"
            }
          }
        ]
      },
      {
        "id": "8af781c5-2270-4ef0-87c6-5795628ea1c9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4d844241-567b-41e2-bb10-b18d849e1962",
            "name": "Negative Testing",
            "item": [
              {
                "id": "599f23c1-bec6-4878-a4d3-0f1598d5f752",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e56548e2-c4d4-4bd3-b16c-0c3332e814fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ea8e0-9f22-4de3-ba84-9ae66d0267b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d41cb94-cd04-4b3e-88ef-6bce46742ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cab1cd-1af4-4c08-bc6f-25dd74a85721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "748fc90c-a008-4edd-9d67-33653a02902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461b6ed7-2161-43a9-b87a-7819b46f471c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca9165-90b0-444e-94d5-a6c43a0e7f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b521d56-5130-4ce4-961b-c39293b6b778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d89639-59c5-45a3-8c16-412251602acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "716e5abf-132b-47c7-9ecd-2a26f61a2c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b240d07-5b23-4cfa-8362-ddf15df0bc34",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d54fb1-0011-477c-8427-6e761f74a5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda57cd0-862c-48ae-b3d7-6879667aa104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5555fa0-c795-4034-84a1-c0c31a33d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fac52b-1ec1-4b9b-b9c9-592e9303235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177bf67-3806-4fe3-8501-f64057553cd6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b67c59-a00d-4116-a38c-f2c2446b5982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a2db27-cb25-4d70-920d-f9ee56c42be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59002032-9ff6-41b5-a749-f0d9869dae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f7b35d-ad05-407a-80b3-b1b635e9024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b801735-41fd-4b53-92e8-aaf149a2b8a7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d15ccc-3770-41a8-9ef6-32f274938ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495585f3-f94d-404b-81d5-b3469915b6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5cd622-bd02-468e-ad22-7982e7275038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "420557a9-c779-420f-8fe8-17d46944f66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067f8626-6db4-4ef0-8965-48271170ef23",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c71cbb-602a-49ef-8012-96cb22b37ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb90924-5206-4ffa-96b1-706dd3cda167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285142cf-7df9-49a2-998c-5f631eb46b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff57fefa-3cde-4bf7-bd63-c139778d1977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5a2fbb-40f9-41f3-9783-8ad85360669b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c882d0c7-7179-448b-9512-915315b96ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a48db89-4ad7-4895-accf-102d4cabf5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4769ab-5a9b-4708-baf1-a05add4fedd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd9ecea-b0c8-436d-8774-1a01c9e4cd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b794e-a7cb-4da7-9468-8c91013d97d7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aa7a54-a967-4a26-b18e-0e5c0ec3dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d845c41-2824-42b4-ab2c-909f6cb18410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada7d14d-876f-44d1-a6db-ee9a3051d89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ceb2c0-7b01-4b33-8d39-e7fc35d9111c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d2300c-f6ff-4b2c-b44b-313ba9a43243",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d8fb08-037c-4acc-a0c7-00ba08002061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01568c9a-d00a-4b63-9c36-8fc5265cdb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f191b0-d4ce-493d-8dcb-3f26f08245c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1079890-1745-496b-a7a1-62031ef5d4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fee285-bf8b-4f85-ad8a-50c7404d4341",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30837e-c8c9-46dd-b876-fa8d6e2b4b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93936685-a0b1-4915-a545-c7ac1e1fe7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb446526-eaef-4e2d-a993-329d7b3d361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04726ac4-a503-4090-b3fb-6e970bc8c4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ef9231-a19e-469d-a441-f026836113d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eea45f6-a13d-409e-ada3-2d7f46818b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c728165-0e80-43f9-a06e-bb8ae6aec5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc43dee1-8b43-4419-a15d-d02c8fe6ce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ebda181b-66ff-4c52-b1ea-49367de2f7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771fb014-d493-41d6-9b97-b7fb7c6e2f92",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18561b31-ba67-4ae0-83fe-c36d11dd4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f552ef5c-ce96-4706-90af-29b99c17aa9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5bd93-4d2d-4e78-98ba-1b5cb6b479c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "488a3925-df8e-4a6a-ad92-98394a83a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef47f9ad-4b2d-47b8-b12a-ed52b4219967",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b6569-53cc-4614-8c71-88913b114675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607178b-51fa-492f-89fc-d7e2c1904aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6020fe9a-50d9-4c65-ad2b-057844b76f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eee8907-d294-4bfb-b907-0a48b54af1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d230d5c-f606-45df-bc77-467faa22041b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4b0691-3e4e-4350-98ae-14c870edf533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef67bd1-316f-4855-b097-ed143bf720b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef03ff5-8192-4b02-8bde-df35bd139056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d641a71-ee46-47b2-a029-f6f8209bc7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b4aab2-3035-443d-a4e7-07d2f90b482c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5b41ff-6943-40a3-9805-9ca140ac1452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4adf1c8-9e5b-4d5c-831d-69c39fcf6763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e20f6b-1cb7-4f60-83df-5a192fd96bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a952d2-8208-4a19-add4-d30bf51c7b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5887d90e-bbdd-48dd-9235-597fd5768804",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3213b1e-60c0-40f9-9484-fd2aee28abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fce300-d884-4afd-9fcd-c736f65dc818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8362bfa5-9746-46f9-82dc-90c0c82938ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d32ab6-7e2c-4842-854c-2f191d3ca561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7d7960-e6a3-463d-9d9c-204db4bd7e7e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd324a6-baa2-482c-b65f-73480d684f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8eb1943-9c0d-4634-9ca7-5d621603bcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4426e75a-3c6d-48c2-8374-44413c974b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19dadb56-ec15-4462-92c8-54e408a035fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb67d57c-b76c-4a9a-97d0-bff50066a9e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea3adf2-cfa8-4aac-bde3-fd6368f706bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1192f6-9f9a-42ee-a991-c8d6806106b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23c7634-0caa-4044-9426-30782254d68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e871941-6037-4285-9ca4-b3f716ac13dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5884c3-5e71-4412-8c4b-61d85665fd14",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1219b4a1-cd9a-4656-899e-080741ccb13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28ea099-5078-4e4c-8e5a-a42c3c9116ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928b11b2-1a06-453e-a732-7c236375d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f6157d-6607-4f21-aa20-0090929ba971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1fb175-91f7-47a0-982c-a02cff44876e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f17531f-61af-477c-98a1-a27ff1e78b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfa4266-e708-48e9-a7c4-6dd2a5250157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cb99fa-4dea-4bb0-9ebe-4aa58fdac8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2775d935-1d16-4559-94f5-e5552ece6ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9dec90-ca4e-4bfd-aa15-9d9b1e01f420",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7a416b-3a86-45a7-94b3-e84025395ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da36036-bd1d-4089-aa96-5cf91ba50422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c230e99b-344b-43ea-9a29-3a1b977ba4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1149ef6-ebe4-42cf-a6c9-75b7809077bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627908be-337d-415b-a9fd-2fc5ae9dc717",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a836269-1beb-4243-b422-196ba40ab953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786252fe-4907-48e3-a0ef-2827a02687ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac73c02d-e354-446c-8c5e-4193071bb13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c083b09e-af6f-46fc-b2b3-e7ab083e4690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e3fa7d-aff8-4a5d-927d-d53f8c23c8f4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7816a47-9091-4064-bbeb-9c029dbf0c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c797465d-5466-44af-9ae7-e1014b83cba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec6e41e-7fc5-48fa-bfe4-f79e96d6069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8998a2ce-ef80-4f2a-be75-6bf1f26a4af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab89921-e578-4879-b1e7-180518f293a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352364ac-e4ad-4636-9b94-54aa20fadfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3777d997-f0c1-404c-ad4b-1c69243e147b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a68a55b-3f73-40cd-9ed7-6fe2532bea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab837e5-28e5-4a0d-94b9-05ec12a3170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f66ea7-2467-4668-a703-e4b0afb0e867",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532d610c-1116-4989-8259-6dc218dd3022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fd3b7a-15d0-4305-9024-c88878367861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c9ae9c-e51d-4a49-a36a-a033e789c391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d616c3ef-635d-49b0-a191-20b89dcffdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4befa8c7-afc4-4349-b2f1-2ccdc46ff512",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d91082-9b1d-4ec7-ac9b-5fc3131673cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef515f28-7e29-4627-bb42-349a77223986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae5c600-95ca-4dcd-884d-71445c560955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af0571e-d669-4483-a63d-eba6cea56c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8dece5-075e-4ec4-ae9a-82761da3d677",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eddb54-1fbf-4726-b977-35d54c343aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7246dda4-a1fb-4760-bfb3-26c3786bebe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb97ad3-422b-4351-973f-46696e5343c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0726a63-c819-44bc-a4f4-8497e03e87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a48945-e3e5-4425-91c8-9bb6f813d77e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f385e36-0843-4d5d-83d1-7302c433e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a935b44-c908-46ec-95de-e71bfa851171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f98d9-d934-4dee-b51a-012fb3441d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5339d7d4-b71e-4f28-bbb0-5194262194a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace3e5af-ebce-4d1c-8165-9980a1a15e83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60eb466-63fe-4176-b889-8979fbc6d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c5b9f3-d0eb-4022-a34c-db6b8ad06e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f25b41-601d-491e-be6f-8ffb0e17c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5655a7f3-0e0e-4ca1-b7a8-93fffa6098b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c513e771-db74-45f2-ae4c-74cc790a65d4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a3427c-58c2-464c-84e9-e23e1bb73b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5212d5c-8d44-481c-93d7-cc95dcc034bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a074fab5-30c6-4a28-bec7-e4b32a94d5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408fcef8-d7c6-417e-aff2-3d78f233577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574d63b6-d5d7-4d76-83ba-3b2aa12fb642",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b782bf7-a1b0-418b-89f3-ec3ea39d350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d9f6e-1187-4c90-8e48-33d4e3aafb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330aafe9-65f2-4060-9d6e-81e8f81d0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c12069a-b072-400c-8995-57608b039d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba738eff-0ac3-4e1a-a23a-145f77a5b335",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f0cab-f35f-406b-bb35-8efe6879722e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9c5f18-da9a-4bf3-adc0-5a5d33d73ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64d5e70-046e-434a-b945-d59fab24d6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdac723e-db1e-4306-a2ee-bd5e62942b77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19908890-827b-4693-a923-2efb1bd4328b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "018fa3d7-66b2-4930-acb8-fd9f7d3985d7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49852a-b140-45f0-b6e0-e5ed4565122e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "875bf2c8-71ed-4505-8a10-f872dcc82515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b1b7e-f573-4971-9c27-a4e0e458f2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3880666-aa41-4e70-b57c-88efb1acfb6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fa27b32-2080-436a-a863-407d795e8dd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42e0352-27b7-40e9-8580-e07651b43f4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39886b0c-3262-448d-809b-8a3c25eebf5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2934fcd-e3ac-4c09-946d-a6996a5bab3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d2ad761-f62b-4aab-a84e-c4371cc9d4a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d69f46c7-0f17-4ac1-a301-f80f04f7d306"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ff39544-c7b0-4ba6-854f-5c81868b01a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04bcdd8a-824c-4058-8821-0d52dfbcaddc"
            }
          }
        ]
      },
      {
        "id": "dc578ccf-9361-4a6e-859a-7cb3811c98f6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9d71ce37-8393-4c4b-bcc6-4beb26b6af64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9ef2988-b0fe-4cda-a282-c9eacf6bc4c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7267c29-5d5e-49b4-83ce-843ff6264d03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f761fb-6496-4252-ba2a-e6c9cba21dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a8bdf6-d0cc-4f19-9da3-218dff877d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c18034-a8c1-4d7c-bed2-96a25d824a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6b437a-8dbd-4b0e-8e16-cc950e1eb3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9009eb14-dd77-49bf-b773-d1777fad7378",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f4eb5a-8558-4603-82ec-51366f292f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf57cb7b-aae4-4f00-8d25-efa8e712f2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62161ae1-cad1-447d-b6c4-884c11aad57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e8ac63-dff1-4c52-9cac-0dceb1f2efa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c13a285-29d8-4a85-98a5-c698a6c80b04",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd882bf-f95f-4bd4-950e-edbd390481a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db5f7b7-b174-4b54-9e8b-a7761c898f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd6500c-f41b-4750-8c35-9253913fd18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "579b3e99-7c1c-44ff-945b-a9a0575221e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b115aea-63ca-4730-8952-aa786bdc146a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86972f-2e63-4f72-8869-ab4d35ec637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7842ea-a1d5-41c6-8825-379b2098d582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa8ea0e-96b9-4a36-9077-bd96b2ce75f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "391d0e78-e849-426e-b912-acea793c4718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee441af1-4a81-4005-864f-f96aef9ec945",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e409fd-b339-4b7d-be27-b7da4b899db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ca3d7a-1d75-4fd9-b6b0-7e844002a343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db31d9-9d0b-42be-82b6-41731b92a356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "957d6a5a-3543-4dd4-b90b-8514910f4149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7b8e31-ce15-4c89-bb6e-8a805bb83027",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e4a2a-2a20-4607-8408-c8dded875f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f4f31a-5d2e-421a-aea6-5bdd5ba4e0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf57843-4eb7-46a4-82ce-75159ce961cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1013cbd5-06aa-41cf-a878-0204798e1f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8577ed7d-e433-4876-959a-8c791d913d28",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29d136c-396c-4178-9a29-9e64e4ebb909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc74189-85ee-4030-b237-466a733e7080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc9fc9c-1946-4b08-b291-77e80a12c344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56454ae4-a84f-477f-aaf2-16fb85bce373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7d93c-7cbb-43d0-9ee2-47c7572ed3de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8d8011-49fc-4d69-bffe-90771b426c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d81f09-d13a-4883-a484-75cf0bfff57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dc3875-cfdf-47b6-a38a-ba0a892c16cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e7d646-25d8-41a9-a60a-8cead5d81cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19f921d-4767-466d-8a30-bc3e735c4046",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceff814-ec3e-461c-9d77-cee2a2e0c822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e51af7-4409-479d-953d-fa14af8dd834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6658aaf5-6cf0-496d-ac8f-44336ed7f791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5016c877-a787-46a5-bdb5-dc02a437f9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef9cb42-2f9e-4e7f-86ec-e6d33b79b780",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bac709a-0ecd-41a5-926d-5d6cc5491d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fbe0b3-f3fe-49d7-a624-54de03798bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819cdfba-57d2-4beb-819d-ead7a4572d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cef579-6a5a-4541-a4ea-5fbb4a6b0eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56be5550-7254-40bb-ac7b-cf779e0229db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a42877d-0bfc-426d-88cf-57c736192db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd71067-1888-49ff-aaaa-62391becb20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e2d264-e4e7-43df-a2aa-67903121dd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a08e2845-dfe4-4970-b286-37129e60f73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a16be5-92a5-4fdd-ab8e-50ace41284b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431695d-bbd0-4539-9759-714f43fc922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d213631c-fde1-47f1-bf67-f25f03a6a07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87c4d1-509e-44c6-9126-fcdaa91d22e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c1a76f-4cfa-4e29-be16-33becdb95b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a332f6-955f-4686-81b1-80a836c2145c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a162aab7-7266-43a9-8675-9b2432217020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4ba876-4caf-4dd6-8036-06d8c36e2e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07598e08-f107-4392-bb3a-4fcdc28300c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "083e8bd3-e212-4982-b71c-31a34d85ff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783fbf48-ed05-477f-af6d-15680c3d57e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3d504-9d1b-4128-a6c4-42c510086548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44c93f1-61f2-4e33-a877-ac39408d3898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b161879-de82-4ee8-a60b-a218b5064081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b21c7e-ed07-414a-a639-73a4d804cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06684da7-b43e-4f8f-9685-616c7cd84b17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0089f7a3-4b8c-48c5-bd14-f902ecd3b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79410e7-9490-47f8-8a2f-ae92a78cc9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bc6ebc-4199-4940-a052-1df54f14d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51eeffd5-a528-40e5-848f-a33012d4c0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2f3b96-ea4e-4ac3-95c9-98cefdc14146",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ac9062-8a87-4e58-b1a6-d132de419445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140d3611-99a6-4f52-b186-e95130237e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c8e5f-e041-4d94-9ce6-d8b18101cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ee68a6-568d-4a1a-a46e-9e2cefb88576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe56be70-c9cd-4a58-bdb4-2ffb5b0bb09f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cde8b1-2d39-4624-82b6-303e48638422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4018766-5870-4503-97be-37026cf7d6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40165c05-eb56-4763-8c67-08000dbd63b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6411f06a-cba4-4459-badd-9e80380b020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59a8733-6017-49c5-b6e9-30298db5be3f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31be627e-39b5-44a9-9a62-5e99468721a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331f3f7c-20e9-4d26-933c-ec3851564b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e5a7b1-11a8-4460-9ffd-b8695048672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb283b7-b6b9-4e8f-93cd-66107cab55a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5630139e-b447-4df0-acac-fbddf0e59c43",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86610916-118d-4f93-9930-57b62e65bc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78abd8c0-60f5-4dca-86bf-12f4d21d2338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72310ad9-f400-4006-8aee-a87511839c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ede30b3-5118-4592-95b2-d3244fdf517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de3cbdf-7796-4f28-b566-ab36d6a0953e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edd46de-65be-47fc-82b8-52bfb29628a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcea44df-f28b-4176-8cd1-082750f21e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e592985e-f961-4a00-843a-946c3f4ffc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ed3e3e-e110-4587-8169-b78c86155507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d32c00-5441-404e-9522-a2d5c9435079",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf1d744-53ec-4caa-89f7-84982c659157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa0429b-f906-44f2-a026-f9192bbc83f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59c06d2-bf74-4a2d-9da2-8fff4263f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637e13d8-b090-4c13-a97b-f9aa1bbf12c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2168bd3-eac1-4bda-bf64-51eb02e25a10",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff703b8f-1449-4b4e-9dd7-787f24435ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95069a1-5647-41e9-9bf5-4d74ad39ddff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1780b4-ba8e-4256-997a-76f7a9be2152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa11aca-e265-4d3d-aa52-40c40cf4a9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bb101f-a8a3-45e0-a434-95d6b756d90d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebfbb06-0386-4575-b443-4abc410deb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72814116-8b6e-41ab-8501-3b9a6ad7311d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64f649d-2efa-48c7-b1a9-bf3e7b867df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ad0fb7-aa83-4178-8900-bb3363281774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5f3ef-d1d7-42dc-b299-e37328b38493",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7bc700-d669-4822-be8e-b9873a98d7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d9fdbb-9023-42ef-8227-4c4235c31cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7322e7c1-db2d-4301-b354-2ebf86247a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15835ad-695e-4113-80c7-9797b02cd2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fbd4ad-a835-49fe-aae4-9cc6c16e9ccb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f03a9d-a7be-4f01-b284-adc1b1e8699a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf2d2f0-5979-46ec-b332-8bcaa15ed911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a2848d-913d-415b-bfa8-18253a1f76d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f3b9a2-e708-4844-8057-892c795241e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa1fba-8a77-4f64-bf35-d8a05c6c5e13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13965796-7292-43a4-82fd-e2de752173fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59480e03-2b11-4151-9845-f9601a66c5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ae87b6-c63d-445b-9a3d-06e6e508b0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63abb8b1-7a28-4c9d-899d-361e6ccfcbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f1b32d-9871-4142-8e3e-1725dab7dc90",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf8951b-8388-4b4f-b2f3-97b724c2a7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67464fbe-0c6d-43b4-9b6d-654ae33c6c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f4f869-9d82-4179-acff-c5f2f7129903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddf0585-eb2e-4a5f-9e97-ad763705a222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc0745f-9c84-4e78-9206-3baa9748b63a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd6c630-3e06-4479-9d1e-dcc4d5261f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7567b2b2-b074-4cba-84ed-24bcee36c759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed49d644-4878-453a-9746-29477cae416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6e9a31-2dd0-4721-8af0-f7bbcc8165fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8883e639-1bfe-44dd-abf4-e7f2f8f2503f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745a7579-3a78-4b6a-9765-34fbec10fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5070f-1802-4416-a6a5-773d71f22bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fecff4-07d6-489b-a01c-38c83f2f5ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1509e21a-9621-464a-a45d-a475f3a4ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22477d12-fb74-41fe-b3cd-fc1d1aa7135d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761ae829-58cf-4f5d-8f6d-e0b105a88552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b4702a-df69-428d-bbd7-86d9f0adc606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfbb87d-f69b-4dfc-a683-a247a4647ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2bc294-25f5-4ce1-acd7-e3ca8b2810a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3372ae0b-d573-467f-a9d1-d6e13c97b0e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4678b4c-5166-47ce-b3a2-b282f9e415f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7e107a-59ac-4982-b660-ce0fc7f77bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb48844-e3f9-4429-8e10-ca91893b1dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b45092-ffbc-4759-9b84-8842c7d4f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdf2c5c-9e94-40b0-98ca-6519078eae1b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a048021-e203-4058-b317-65728ecff287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a309c1-0479-45ee-8e1d-24fe9d810796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c312b2f-3cd2-4b70-9c73-879372ca44bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2ea410-bcd1-4e06-a2c3-89151287c893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771e0d8b-e9fe-4f8b-bd31-b4f3bf432bdb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab7fd6a-d8e0-4b00-92ca-8a89abfadd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982ecb15-b9e6-4229-ae09-09a0c796f097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c48fb12-d974-4dc6-8839-5eaf2c0997cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "257b3fc7-833f-4ecc-b7c3-eab86049548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66bc2df-0801-4a2f-9157-bf5b7b585541",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa691b1-f738-46d4-9390-6ccce3f8e3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60ab9cf-a992-4892-87a1-06ed95e93490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f1c188-382f-4f0d-b6a0-6e5604676370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de680485-fdd9-425a-91ad-84f93484d4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccda22d-7468-4e69-baca-dfb83be27e4d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab62097-3049-41af-a071-df2021942fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f303735-c8b0-4acf-b2f6-4dbb58bf3dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13d1335-441e-4e12-b0bf-fb364cf014dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e15785-4af8-491f-b3ff-e0dcfad67a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859d81b0-b2e0-4ffc-b667-4629320f8d04",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9834bf27-c9c8-4512-99be-f03e4d17e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca09d2-4003-4d3b-b361-ca83830d3ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a834d15-dc3f-4d58-823a-13e04ae341fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c739950b-f3e1-49b3-adc0-10bf7b3b6476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47abfdb-4c10-4c49-b479-e9e447c5b77b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299b817-ca68-4ced-b784-4b51881ee192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f72db06-b8b3-4164-a81c-fbebda7d1b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2f90b6-1eaf-438f-af4e-5b5690a2f180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa08d4e-c235-4875-a8a7-2f2a4bd1a031"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb8e6a73-6c2e-4bef-ad4b-fb27af3fdf24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8053a146-dae2-47a0-ae43-f5e69e1c8c21",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416ce5f9-9d26-4943-961b-8c8135d34535",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d45d1d72-6b91-48e9-9956-aa43d5c849a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66202c58-f8e5-493b-97fe-9097aad30b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2f3856c-225d-48bb-a0c3-02e2874aeb35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283aa848-afed-4aa4-a4d3-3f852ee2de3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "992bd4f0-ec4f-4690-a01c-eda70a727cdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ff7f439-0597-439d-b3bd-2a5a894e7815",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbf42b54-b229-4f1b-ace4-2ad0220f647a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef0323c4-a3b8-40f4-afd5-395d78f91407",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ed2dbdd-436c-4b8c-8ace-89aac0336d9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8eda566-b615-4e0d-8f0b-e03d4afd2d8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0816278-e2d0-458e-9463-593602b360a7"
            }
          }
        ]
      },
      {
        "id": "b3b3e750-95bb-4c01-8d52-9c0a08ca2fdc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "287e74eb-64f5-4e54-a938-4430fb61bf5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d57da7a-5129-42d0-b9ec-981dd251903d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fae4d7dd-29bc-4e2e-aa86-90b983df119c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba11022-fcfc-4870-bea4-2c7e24dd0e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8727c4ba-2606-4239-96f8-e499f965da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efec1a2-3218-490d-919a-855ad05fb151",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd51f88-b6b1-4ad3-8387-bdcd5a1ff3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b59e0a-88c3-4286-a887-aad432f21b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3960b57c-8dd0-4053-9ba1-bb04095da164",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75bf8f8-1b78-4c0c-a9f3-d2d4010f70cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b3904e-97fd-4b25-91a9-e12f805c4aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4ba92f-80b5-4807-ad9c-1a7beb14f88b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838cc5a6-a07d-478b-bcad-613e45e26a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815246ca-46b1-4663-b7ec-9f34c00f6601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5690f9d-35ee-4e99-8df5-f201a78554a8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1849edb9-108e-4d8a-ade4-49a84386f5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978e9de2-b14a-4d16-a9c2-4b7f57d1a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f00228f-4281-456a-a18a-c225fd3c110f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1edfda4-74d4-4010-a58b-2c9273768195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f2a4c0-5b47-41db-99c3-cbd3101a2a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44c82f1-4cc4-46f1-b48d-644ffda1884c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3336acbd-ed42-4e40-b34c-680f57828a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486311db-5d71-40a6-ae22-949fb35ff57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73613aa-84e4-439e-a3e3-3871649b2d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7aebc33-07ce-4996-b9b5-31f53efa920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2effdf-8d55-4633-a837-f4a3d9ec71e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14863b4a-4d39-4ce9-b83a-cc352d7a5bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "907e50b8-2a8c-45b7-8a00-5dc3f4259e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c4036-4cd4-4bbd-8c28-f3fac07d0d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87c8b88-2465-4b5a-82e0-167b325bbfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5dda2-a3dc-4e0d-8a86-8553971e222f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49e54b7-9b27-4576-b352-cdce56b02635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cbbc5b-374a-4564-afa7-9f9c99cb8237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4bb584-ec44-4c62-8286-cfbcab7adb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8279639-51a1-41dc-9e65-4df21ba1107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536258bf-60bd-483b-ad64-9bb886ba58b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b051af86-8616-4fd2-9b26-45fe923c1d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb55845c-c274-410d-8783-49e08aacd428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea566b6-9b04-45bd-80b9-5f1f6b39dcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c749647-2d57-44af-85b0-663e8b0f26ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6363f09-3585-41dd-be29-98ca17f58b4c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b308b-39d5-4f77-a06c-68093551e2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b39cd0-62b8-41ee-a9f2-90a8856e2008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a1f2e-eb28-4446-b55d-01797e83b766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe138b-0953-4062-b728-8c7ca2cfac73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a77798-0bd8-459f-a8e9-26bff31caece",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c21ad8-ed5e-484a-b803-29b8af6c93e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cc2c1e-e50e-458a-bcec-c5a1fa3bae4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db08efb-57ec-467d-b813-deea2d124ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8173b29-4382-469a-9e2d-39c6255f3048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba859198-9dc7-4164-8632-1dfa1a38f9e1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdaf8db-7d77-4fa5-b812-551d55ca1941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67268aed-5595-4f4f-9521-9c90bd18d606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ea0b4e-3744-4aa6-aabf-8faf3c6a37fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed89dac-8d9b-4ca1-bb45-254935aa28fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3751a523-f48d-446f-b976-511564998a1e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4c1f59-18a9-4169-827d-d8c5f6739127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6aae2b-4f49-42b4-acda-3bfa640e6142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79ebfaf-72a3-4a78-a881-6fbbd360fffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4a7248-c216-45a8-a4ff-b8981ad95cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8104d60-a189-44d8-b998-ecabc6e8ecdd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5952ea8-518f-4d84-857d-0d28586bd470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f375ce-2ae0-4d8c-a8ca-947a0a536681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9305e2db-2148-4f08-932e-8e93b80be2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662feb8b-d05d-477e-85a2-1c2255ae3dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9822abd4-26e7-4f58-957d-94e9d61270a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208d0708-2dbe-4509-9b58-f7901283a61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b1ed44-4271-4854-ad0e-ce8eefbab5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1474143-2f16-4597-9828-f1f4f5ad5258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e1f17a-0117-4e1a-942a-0ef6bcf3c075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3af57ae-86ab-42c2-9023-afa87a03dbce",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bf3996-73a0-4854-b22d-7f6b7a45d938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90590ba-b111-4d68-a025-639d2af40a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3087b9-7251-4a08-bed1-993ba57fcf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439de87d-7c44-4713-94d7-63b8501933d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d065e485-ae58-427a-a200-3a26954fa80c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e113b40-e02e-4c07-8108-cb01bda19c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8b55e2-a7fe-4ef7-a3a9-d7a17a6f5e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87818dbe-3814-4897-8285-2f045c7e4af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ab54f0-9365-4230-b408-eea0da287987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fbcacb-381d-4507-98fb-fa138f88728c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a738d1a2-c359-4628-bccf-9c89a813dbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77122c9b-4995-4a5c-9149-268a5fab22e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db2d133-50e1-42ec-9804-359fa0f9bf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa975ef5-df28-42f1-b162-854ef9c46aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5f9464-4775-43d5-a8f2-0470d118302d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86fd673-b329-4507-aef9-f279a8aa9743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fffd53-c43c-465d-a83d-46a427486099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeccdae8-de9c-4b63-ad06-a7e61593c619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f840f44-958f-490b-855a-93c0c0c30c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4169b0c3-ea9a-4311-82f6-77933bf80cd5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb19099-3f3f-4d78-9aa0-d73242568040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7867df6b-8731-4752-9ee8-991f7b1cef7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfffafb-e589-4cb2-a51b-9032b780b64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3645f4-e01b-4744-8106-e93e920c142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385ea0dd-1650-4220-8d89-870928d023e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917fa6ec-3467-4fba-923b-4419405f32bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f593531b-5f74-4044-81c3-c02fa000c8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a635a5a-9d58-441b-906a-d810fcfd00f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bc5e9d-1d61-4fed-b11b-433ce7cc5477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dafe785-1ff3-49e5-a2f0-625ba78b219a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5b0bf2-2a2f-411d-bce6-e7d29fb17eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b7bf3d-77f2-470d-882a-c6ab55767248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d8bff7-6c5a-4c84-bd13-7832d578185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf95324b-2dea-412e-9ffa-7a8998e1b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d00f73-b92a-4db5-ba2e-2444a1bf6723",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb113b2-ad39-40eb-a625-6a877fea0194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c116f3d-e18d-4d6a-b399-6bf742640008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea4c26c-0e25-4a8b-b71c-f903952f2782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88df8cf-95c0-469d-b6ec-315040015ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbe994d-323a-4b18-8b8d-fd0b57e15d05",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab5929e-29f5-4386-996d-f25672c69f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb3ddda-aee0-45e5-b975-c0489fb66a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc1c95-c4ea-49cb-8cb4-a0e80feaa112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3454e92-4f68-4bd3-8019-8b4f86f6264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1190b64-311a-4586-931a-8f46490f07fe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ba368e-e958-43f9-a50e-f06902d9c562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fc1504-fd60-4130-a39f-62a57d5c9142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff2a4e4-2056-4a40-b542-ea37d7afa4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d50ece-4c75-4daf-a166-da62165e7bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8591ad-5df6-42e2-8aa9-9374c643f28c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b694f38-7cf2-4ace-9f5c-66b28813fbde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cdb358d-f2f7-4d19-94ab-f31f33c50a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353f785-dd46-4f97-a021-a238690f5394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebede6f-a08b-413b-8e0f-60f1b2effbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417953b1-0e83-4766-aaab-5f0897999561",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc7ef06-5104-4d2d-bae4-0cc43b3918bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc9cab2-af49-474d-b2f9-57932c97dc2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9563c52-dce6-4180-a6d2-ed0fcf5d498a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2cb84d-90bf-4e91-a461-b9069ca26795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bbdea1-302a-44c4-a028-30928036d673",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12435415-89b8-4867-9877-b88eb300ea91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c013d777-37b3-4d2d-8d69-707cef4eb77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5eab64-d70a-4870-a3eb-c43af0359bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9070af-aadf-4815-8a4b-d09392888673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbe206f-1ed3-48bd-9e94-2539b39b9828",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7749e1af-a54f-46f9-ac48-3aee1c6a562d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fc9189-0297-44f7-8a8a-0c973951f12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af72b54f-8a58-414e-9d69-0f05ba462028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17aa215-3818-43b3-a136-c98ca185bc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9153a8c-8a10-4993-b8a5-98b932a3f1f4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5985eaa5-998e-47d3-b202-035f0809a939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7ede0e-7b78-48c2-9fa5-7fdba713a0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669f5c55-2dd7-4cea-af1b-3267c7fe9465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb024727-1ef5-4dd8-9c0a-8253bc293f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b76b07a-23bd-424c-bd9c-757fc9d9d14e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a5f12b-7c68-4868-a277-dc78c3db7694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebb538f-1a68-42cc-a539-a2762fbe382f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e045ffaf-feea-4b48-8ac4-880e8aa2c9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956e5417-63fe-411c-99d2-99b5c73d6538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460b25a-9235-4a81-ae58-c76ca15d3118",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14520105-bdb6-4bdc-b955-c9bc9b619639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1327ab3d-2d49-474d-ad42-cd4585ecd149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41defa0-0ea3-45b5-bffa-ce0bd70a0686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f21fd2f-24c9-43db-a5cb-1781ca5ff6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6af42c-ed39-4059-a660-b74f134f6a50",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4a00f4-7146-47b3-a917-eba3bffb97ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9cf3861-3417-4232-b8ac-ca39827ccb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9a0ad4-2e44-4335-b042-646c6c22a3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ecad33-643d-4a89-9a70-f0b06bbb1a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b090604-eeb0-4949-8145-488b0d56580f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbf538b-bfb3-44e5-b96a-2525d28e6100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06a4fc9-5dd4-480f-a96c-4843772558d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7f57a4-b8d4-4d5e-919c-fc49ac4aa1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95460896-0e4e-429c-9051-94a580de091e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f4ed59-70bc-492c-857d-53397954f97b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afa1ca2-7ee0-4705-9429-dee05f1362a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb9aaf7-e449-4c8d-8d28-d5cee9b91b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d69e949-c71c-4f99-99a7-49fd2ba971ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d009510-dda3-4622-84d7-63bb9c9045ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6912339-af98-4f8c-b70e-691304738a6d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2798bd7-0061-41c8-8829-86488c5cf8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b90d6b-249f-4d90-a316-c266fd88823b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8737eaf3-a3c3-4b1e-81ca-b3395efc1cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d2a839-ebef-4901-9518-d3db90890a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cfa2e0-0f0a-46fd-b46b-7a2ce4c65d2e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b1d605-7552-480a-88b8-1d15b931b507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb959c43-f4e5-45a6-8e0b-174f8ea08e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50edcb8e-f66b-4907-8c8c-f7c338c50254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8827e3cb-642b-432e-b66d-b5ee6b3dbeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd3b337-ccfe-41f3-bda5-75aef3bed224",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14435294-b004-4f4d-b31e-cbafae21eea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3184c3aa-4da2-4d83-af67-d172bb2833f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db04b1cd-fb66-4bc3-b850-58a5c8a88071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08694c0-ac14-4f23-b252-a28349625bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac62862-7efe-4130-9b67-9498b36e1c50",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25864ee-eff0-4423-8261-6180e6130f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f426e9e-c5fa-4813-919d-d5795d4984c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c301ef7-e009-43b1-9bfa-01bb0a53092d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb292b9-2541-452d-baec-5425d4fdc76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22437e66-8e5a-4465-8f99-25685b6c9893",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea49a47-401a-4e12-9de9-99692f962473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9225db5f-769b-4b6e-bb3a-4738f363a263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a310705-f601-43f5-b929-427c7997345f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2361e98f-e175-4c62-9124-22c031abeee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f7ec2-417e-47d9-901b-4fe1bf5d9584",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15e0557-1dce-47fc-9a2a-fb945bdb1868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2e9757-8d53-4620-8c97-06d911f9effc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262d65f6-771d-4dfe-980b-6fcd54926467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e7b5c3-5765-408d-83a2-a40d1614c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d920f-6435-4baa-9094-0ce87cb80be7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0653676-ee17-4d1d-a55f-0c1b89f9c10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e44fae-66cc-4b58-a8bf-26dfe42d9437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d81b6c2-306c-49b9-bf71-f50ca24df789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f08e56-46db-4847-9f19-63b9bfd84cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3866c-5e29-43bf-a7ec-5fe065db91de",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00661561-817d-4c1f-83c2-99796426441f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42ddb87-96d0-426a-b310-de07b2cdc12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2906dd-f178-4cfd-aa40-c1268baecc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534f3c3f-5339-4c1c-aea4-de977b0e5d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac8cc79-1609-4e55-b6f7-9ce048f04913",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69b12f3-36e9-48da-85b6-2ae5121e7b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4248c9-7544-4590-b6db-60d711634c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762bbbe-950c-4538-a207-65afed07ec4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeebecc0-473f-4370-9520-19a16f101c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f8568-868c-438f-a682-5f1a4ecdfc18",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05615ab-0955-4d93-a8c3-943ae80b13d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b198810d-9f16-4227-ba01-8d9dd42d2215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd84d86c-9185-4b3c-b928-933db5f74161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ac07f0-72aa-4da5-abab-a8c0a6b2f8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455779b2-582f-4477-b342-69eb2b1521fc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f735b3be-c7d0-44bf-9604-14c069a195cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ffbea6-87c1-42a4-adf3-f62b8bcddc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b82ca-55d9-4138-be54-8bcedf07015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dd2614-bd12-448f-8e18-576f0ec96309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e5c0ad-9d3d-4c01-859a-590d296a2f08",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ca84d0-781e-469d-9820-5cd7d536b2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185da883-5838-40a1-8152-e211bd5fa78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3873b3-9616-4985-b044-a16f6ad1ecdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9e5998-da1b-4078-9294-40e615e863f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49e0864-cbed-4a5d-b532-ca285ce6ffe4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d51b4d4-efe8-4835-8b79-42857f8ca5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82f5324-bd18-4bb7-8e19-d24185b67c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67ce6dc-0f7f-4fae-8602-b52b4d62b037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e815d0f-ee0a-4e73-a8ed-7c678c37a6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bb9e33-a803-4008-b419-670af25749cb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e309992a-3a0e-43ca-a4da-c800cbd36908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a02d6e5-3207-49bd-9a40-3273a4dd0195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef1e07-29a8-4886-89c9-77a9ba811b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27af0d8-c614-4eb3-ab9b-1f0cd85beae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce3a014-1a68-4b0e-b31a-69974f17ba57",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6c7980-b1d7-4dca-9e29-f89ab1941648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1468756-20ef-460c-9d58-cb243a16198b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9498d632-237c-497d-a42f-1f11997e933e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1245b321-6444-41de-b581-e45b74cc023d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc4071e-b118-43ba-b8b8-7b43de8298a3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46c57a7-b0e8-47eb-97cf-7a866e7eebd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5a728a-ad67-4d3d-875e-4a8839c155ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983ef30c-b163-4155-9204-6cf898232aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e23aed9-adbf-4314-bf7c-53512f49d0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f565fe2d-ca28-4dbd-ae2b-d693c929e8ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89a6317-316c-4aed-a087-893d1d9984a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9762ff90-90ce-4505-a20a-ad7acd67f506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da69673d-b5ee-4621-8947-1889375dc6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cefb875-89ad-4c70-b7aa-4d027f4ad390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0308b0b1-1f54-460a-a40e-561e03f83a12",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1698916a-f116-455a-a266-d2004bad3663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dcc605-882e-4093-97e2-75ce10c62a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceeee3cd-f71a-42ee-9d20-01c5bc2f4b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab51df5-9c53-44e1-abc3-89d90c5d3baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63125eeb-0e82-4351-928b-ce6670666eb5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ee4d1f-5f83-476f-a461-3cdd43c55b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e76766e-134d-40ad-b881-5fcb68dd907f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8f1baf-9f13-4eed-b24e-8977feab05b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993ef2f5-0a4c-4281-8cf2-c69b875901b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92033dd-c040-4049-9d26-3c6c18af0781",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7ab030-86c6-4199-bb6c-c31b652d9217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61222b15-5986-4615-8e19-3659e76084a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756785f6-88a7-4599-8412-e5344ff1dcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2949d0-0283-4c73-b9e2-05202e494a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243be852-8453-4f1e-a506-9daa76d66095",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803d612a-078e-4308-bbd8-85b8e687ef2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb49e077-e121-4661-b96e-c01ab1aa8fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32e439a-73ce-4a06-b503-60be94ac489c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabfc1c5-c3dd-484c-8425-cd4a8baa3a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152e1a27-b0e1-42d2-8edc-279b81e788db",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2cf065-627f-46d3-b6ba-29a3194619d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670b9757-d5e6-4736-ace4-a3b04a316cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4d8ffa-f6fa-415c-97dc-d8ac72659e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d84426d-b8a6-46ce-8bfb-85ed90ee3138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaff02e-11e2-4e91-a246-735f671edc10",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605aa700-b548-41a2-8196-a9dcee6fc83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d126aa7-eb9b-40c4-a4dd-86d8c586e597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f167b-d12d-403c-ac06-093778169578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901df2f9-b418-41c0-b1a1-eaf5d57ef9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d353ea8-2137-4de8-92f0-89175a54c50e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f66a026-3300-4c7f-98eb-8eaad3120bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d97ddea-9d15-407b-9343-86d72dbd933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24cfde9-534a-4cb5-a1ab-ca792b51f6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bcb16b-31cc-4225-a3f1-9597d2181611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e638326-d1ba-46b1-8640-cb2bed23cc42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1befa63d-d244-4d9b-a7c2-bc631b7d3ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0281fa2-bdd5-4f42-a6d1-39f689bd9fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105736b6-f9e9-4a8c-b15e-0fcc90296c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7996a6-b4be-4dcb-916c-31232e4cf4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e623c673-e85e-4444-b64d-03d83577f3a7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5c5cbc-7119-4e8b-9026-83a1dbc27c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3c5f8f-c468-4ca1-b3ba-5d4ecb25f37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9b516d-9864-4e36-a222-eae80792ed84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33186b96-fe31-462d-8d97-efbfb34fe965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346d9563-ae7c-4211-afbd-78142068ac11",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b72e30-ecc7-42f9-b9ca-e1ae6b096f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b58a76-83f1-453c-bdce-4e9381e6f6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505fc07-58d7-44bf-8962-73d13a2d1669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26274d0e-5888-4bb3-b996-60a8663c6a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f1d0d7-e0ea-4bde-9d47-fc991a8e03a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedd7f63-8176-40bf-bfff-71ca4ed127cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41df825b-bad2-4529-8d23-5ef8b0468a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82141941-79c4-4e5e-9de4-af3f3b3849a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba98c6c-8857-40a3-af09-42f9f3be26d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ed366a-410e-4e3b-90df-ee3cf9e5a7cf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a7a946-d05f-44a5-ba00-58f0bd452f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62b05fd-21f4-44de-83b6-d312517219b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf62da5-b993-4f5c-914a-09b1ed652fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2fc49a-e419-46e3-bde4-1cab0d679b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc336005-d6a5-47e3-ab5c-49f57ba39358",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010277d-c5ad-45aa-9305-641fcdca5b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af4c6af-fff2-4dd4-9172-0a9841630c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a18e4ea-e373-4c5d-b05a-13c26ad2741d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c160c5-016c-41e4-8d99-0af23287fe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4397b8-f0ea-4535-b5eb-76099de42a81",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbfbfb9-0086-4b7f-a6a3-f32d0e469b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242ee8b2-40cd-47a3-a1fc-6d6a591ce3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2aea43-405a-4af3-9087-e1c3ca16f275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b105d0d-af9e-4e51-8f4b-066b3d93e09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd23ef03-3095-4788-8311-6b0bb755e0a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f363035-6ace-426e-a0a3-aee272e752c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48323ddf-1aea-4eea-92d1-728e785d51b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a445cdba-bb15-4856-9b24-bd6bf26aac4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a20088c-ef57-464d-b914-f925f473e674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f19b4d5-5bca-4dd3-b552-4cbd507b908b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed070bba-a543-4b4c-9fc4-f543d6ec1679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85831df-7e8f-4208-a1ee-62bd4a87a6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c8babf-e81b-4a21-b847-f3a25523f4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52241ab7-4205-491a-a3ba-d6a8b4011f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a3167-b5f5-4773-96d7-5fc5c4dbbe7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c881ea-364b-43c3-9756-c14bd4db9d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdd6663-ff9b-4e45-bb50-85d5692cce5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388ff74-26a8-4517-b1f0-a496198205e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398313de-0a26-42ed-9067-21bb816e5d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2599ee41-5bad-44ad-9824-15da5dffdbc1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9778438c-cdaf-48a4-b04b-5b17bddd13d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ea47a0-4ee0-475e-b0c6-99443f49161c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7fd23b-db38-4846-9c8b-ffeee6c2ee29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc50f45c-90cf-4649-97bc-179441220063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c489590-33e1-4246-b43e-ebd856ed4694",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec9616e-bb14-4477-b9bd-41858f72025b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9bc225-2f21-4d7f-8445-21490354fd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3d6c6a-44c9-41b2-b4fe-e1f2c91c7e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6c251a-afd5-4216-a827-b89650eaef30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6de2e7-4b80-4e4b-ba94-7f019c05c4e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99299bb8-f778-4022-880a-83c70bf9169e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb0cf5f3-e6bd-4684-82ac-fa334ab81e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d049117a-e434-4b41-a6f1-540a8e82a329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139fe79c-fd68-4a7d-bf71-7fa6a569ade8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb172a95-c609-4399-88d7-0e42006d072f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f0e93-3b78-4172-8559-1c670c4840b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe85a81-e8a1-4ad7-8d35-0f486bac16c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a39555a-d9fa-4fba-9bc4-076c62ab61a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c3916f-88f5-4ace-bf16-85e41ca01237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368367b3-1b47-4063-976f-416a233815af",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55970d65-6a0e-4c71-9a31-fe764876e0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf130fb3-2a98-487e-a34e-e83521dfce8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8361f4-4ec0-4bf6-97d3-28ec27efad8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b241ebf5-3c86-42ae-840a-e6efdf0219e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce819e1-fecd-455f-ba03-b999fe575d6c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ba4db-3a83-44a9-a2e1-7b859bc5456a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54849cfc-696b-4f11-a1f6-e3def04dc838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4bbef-ab2b-42fc-bb58-71e6c6823fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcaf514d-556b-4adb-ab6a-265b79731f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4771ec-1031-4003-a993-1173ef3051a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc9e8f-d424-4df1-9c9a-4080c45f9de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ccd0ce-6f85-4064-ab83-a9ec93618f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb466e-8f3c-4354-9eb8-e70da43b051a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fc1fbb-02ec-4060-a3bf-61bf15e9c2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5240f593-7386-4172-9c97-9fd826d7e35b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6662461d-261c-46e5-a6e0-fe4a5d72ec90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d313ad3-6039-4d2e-9b4d-2ed76cdce9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdabc003-b05e-4692-8e45-fcfb7e6925b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7823551-218e-49e5-a590-2e6fc9c1652e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3e4fdc-c792-432a-a26c-32e9c853544a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5828d-ce8f-464f-96dc-3d5cd1ac0602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9e6506-2b81-425a-a5fd-2a62db3900f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40686ea1-c794-4cb7-8e3a-7fba6fd0fc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb98a21-4ef7-49a0-b429-bfb8c152f681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1684987-c75e-4f3a-9be4-6b0f943d54d0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66d4ad-1fab-4d54-8290-6cc08d6a62b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b9dbb2-f83c-45cd-bcec-792744bdb789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ab2e6-45c5-4d11-a398-4a77c2cdaa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993d82d4-3e4e-4ff5-9cd7-2b85e9102994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeba061-0790-427e-b0be-2fc275742528",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc7d994-898c-4360-8c32-2dbc3cc4ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c7c816-dc28-4b86-a3cb-461452008fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6194d53b-735b-4710-8ad4-7f60a92f5ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021743b5-e4cd-4f06-a6a7-38862d4ca8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fed717b-2b99-4c7e-aefc-fd279ae97a1f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efca031f-d210-409b-a691-4d5a165f42ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bf4b39-abea-4a00-9f41-be891a0fd725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fcfed5-619a-430f-8dd2-1bf0addbfa3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae89c69-e807-4672-89a6-5fedbc3f9289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddf742b-d8b2-46bc-9dae-0b01c6acb4da",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee42b0bd-cf20-405e-91e9-b5953760b737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4308db-7653-4d7c-9da1-01358857341e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc0770a-3aaf-4e89-ab19-848b21a3fd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b410c0-7027-439a-a358-307023d9a3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0fc614-2845-4ac8-a56a-cf8e3665e39d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9356d0ef-7750-4537-967e-13e7718475f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a15a39a-4081-41ef-81af-f6ad2dc71e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8ac633-4391-4d69-97bd-619a2f171de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15aebdc-f3f4-4ff5-b5df-3975e09bec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0442b1e1-ddc4-490c-bb9f-1fee67471cfc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a894a31-d558-4a75-96b4-b213da5eba1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23687ba5-2f78-470f-8f2b-3924149fc8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7682f84e-731b-45cc-986f-f739edcffbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca47b3e4-1260-4569-a053-e33a55c1f1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9448b53-858f-44eb-83b6-488263b1a265",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4db1337-2f0f-4d48-9bc3-45074f208064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbe48d4-e7fd-473a-8d19-2f35b96ecaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc89139-d362-439d-a8e9-4b2439e3f68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325133dc-b090-44e5-b6fd-da1f0dd11ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573f986a-2b01-4bf8-b85b-f89637f24f99",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdae75b-abb9-46f9-8bb2-8e6fd4d8df89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2a35bd-43d8-4205-805c-eabc130c0ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a3215c-3009-4c3b-a6f2-169631a1b7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578e1584-4a36-4b13-9288-075fc37ba19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c33c4c-ddb4-43ab-987e-701e2dc74bca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d5949-156a-4cf8-a0a7-93b9f2525409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ebbea5-c8cb-48cd-a793-8628ea90f5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe89338-8e11-4747-a3d9-7e395ad2a835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9900586-f093-4c90-a91e-61f0de80d678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0441d6-5957-4648-b413-dbfbdac1f2e1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ef4f7-d2a9-4417-a1f3-243e3f34b269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7826a0d-2e38-4af6-9aa7-2a5aabe594aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c88e30-68e4-4257-a231-106f677ebadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff92984c-8cb5-4988-a539-9ae6669a7fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407459f8-ecc7-4641-95ee-ed0babb5ae6b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5704e9-a8a6-41ff-9108-69de1ddda28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa93e8ab-dd48-4bc2-8d65-dd663249a58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ab41e5-4198-4d29-b114-893df7b44c44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9be25f9-8af9-4142-bd48-55bf4ce96754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a012f0-35a5-46cd-8380-bba59d09325f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63b6fe2-5d2f-4acf-977c-3cb0b15acae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a11e80-64d6-4e1a-9bd3-ca4b9a49a731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53150c86-c7c8-4e15-a70f-ebc234014aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc60eed-fd65-4974-9559-a2e8bbeec396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94e1ded-95d3-4f52-ae2d-74245dceb498",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e4ff48-b5e8-4b34-ae89-64f2bb8f73e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33858d2b-64be-4caa-837b-f348bfbe3a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1723c670-1e2b-40b6-bf1f-9bf54e3bdb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f15023-bc72-4f8e-9a95-d371bc215b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb4eee6-3ed4-458d-9fb3-ebcb8fce1b50",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceca230-5cdb-4262-948f-bde1c7bb309b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17801115-71c3-407d-8ec0-be2473b6fc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06728cc5-228d-4424-bbff-6ec879896e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b3242f-b47b-438b-8031-4c5ebd8a4e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3a5acf-c6a9-4a95-9137-97afa43326de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5536c5c2-33c8-4391-830f-6b8872618809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c210c1-f0e8-434f-b34a-9e27bbec496c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a36607-2536-4484-bffc-e57a21358a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23350e5-9116-4532-9abf-0c7ce32cce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a484767b-35a7-4970-a3c4-e73baa89d668",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6bc30d-a1d1-4e3c-ad1b-66938db2b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3f02e0-d000-4bab-9bb3-cebe7010a44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7677611e-b1b6-45d2-9ea2-898b7977145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ac45da-3056-4c36-a9f1-031a6695f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a6d01-cb48-4dc9-b130-37b505e641f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b502019a-18f7-48cc-9328-e99c2bca7c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194a87c2-13a0-407c-9516-e944833df6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbedaf8-94f2-4973-8d2b-399b1a52c6f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce828149-7984-459e-8e27-420f6b125817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb0d072-d2b8-48a8-a78d-77cdeb38b3ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ddb3f-077d-4826-baa2-32ff74669f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9962ad-fcb4-4848-9233-60cbe8db41c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c1c2f6-43c5-43ca-b23c-74394150e25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08563cb2-ca1a-4db5-a853-72a4e5709123"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da10a92b-d333-4da8-94df-38f0c5bda3ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016cc826-33c2-4190-8934-8c38801996c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6b8ecdc-d56c-48d8-91d6-c81cf21f289c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "359690a1-6c2b-4d0a-93a5-c848d234b7ee"
                    }
                  }
                ]
              },
              {
                "id": "9cdd9298-363b-48f8-89e5-0aecf673711c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27bc7399-b275-40a0-bdb8-5bbc4db51499",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ced64-02e7-4218-b060-84c9b6c92a97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "38634164-8cc0-4222-a527-88ca731112f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4daa99a-c941-4c96-a483-4c058b0c02e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb20cae0-8483-4f33-9918-9e9fbe5f76ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b9f0653-7e11-4887-ae82-0d339315b20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c9d6aa-8f67-4da8-89db-5a27af0169ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d1afcc6-aa38-44f0-afed-3b232b9bb13c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd51042d-d294-4490-8c82-7b2f68c68ff7"
                    }
                  }
                ]
              },
              {
                "id": "546593ac-fba2-46f0-89f2-e51788c3f9be",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f21df79-63e3-44c8-927f-53e9ab930957",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c271f37d-0e4f-41ff-ae28-e7ced35a3cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c8d5e79c-199b-431a-92c5-a7b0543d7175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64efeee7-37ca-458a-9b40-805fba369b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6138a2ef-26be-4f26-bfd8-04078268305b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7367f768-ef7e-4ef6-a7ae-639cb0cf9ced",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbafe852-f7b9-4fcb-a86e-c74bf37c044c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6e322e4-b57f-4235-833c-d66a7cdd89cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8bf81882-bb68-4b87-88a1-edf15c6df1ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f062559-4204-41c6-b5d7-18ff6ae1d8ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb2214a3-6562-4269-a3d0-5c00bf536c21"
                    }
                  }
                ]
              },
              {
                "id": "6961dd50-064f-43de-993f-9a239c1b7ba0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98818761-f1d2-46d2-ba97-6cabe4828343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9785c394-be38-423a-8f2f-e860d1dd85b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bacd1be-33b5-4352-9707-9c73f4a7cb2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cbe25bd-52a8-48b3-8599-ecbaaf455b88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28b5819e-ce16-4f45-90f5-478520cebbc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bcf4c1b4-1c08-449a-ab96-ab61dca6f3a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43b7126d-b7bd-4548-97fd-240bfedd0cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbd2f855-fad1-49e3-bd6e-f8214787125d"
            }
          }
        ]
      },
      {
        "id": "29eca916-9b16-4fcc-b932-e18bc1167b9c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "554fcf46-e4ca-41b3-b45b-ee7162856d78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02f5d2e9-be9f-487f-a874-b7a38b98e708",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd4d5374-fbc2-445e-b446-e8d467300139",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00490252-a93f-4796-9e8d-364d70c05095",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0c2e976d-a9f0-460e-8e26-ec77d1aff776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1d6bdb-3183-4d9e-ad16-60d61273883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "587c7360-c578-4532-af43-adaec3af9cc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ae7edc1-076c-426e-91a4-8a7c3e65b0d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23079261-c3b1-4ca9-9cf4-5fabc5fda4fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea11aa0-127b-44b0-b7a5-7cd43621a0fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e13668d7-46bb-45c4-b979-018ff544e90d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "568e46df-2652-4532-a13a-4403aa75b52c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39c6e4cb-1290-4a7c-b812-ada05558663a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdab6188-37f5-4088-a998-0c2d22a85ec5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16041a3e-f6cf-4979-b75c-65af36c914a6"
            }
          }
        ]
      },
      {
        "id": "32592387-f696-4bb2-adc8-1bb7e2c365bd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed8c30d9-8b7c-4eef-8738-47a2b1ef4dd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "638b5aa3-e733-43fe-89fd-4e6b9bc95e8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48f970a4-654e-48b3-bc9b-fdc5d9b69ee9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e047006-2fad-45f7-8c88-3d08711d23c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dbef56b-6508-4344-abaa-dcf0ee165c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bf4855-0904-4717-9a7a-fd3cec76f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18b286e5-cf7e-41ba-b4c9-25a31c692fc2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "641c728e-c4c0-4ccb-9092-8034a4f30169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f2265e0-175e-4858-8ae8-4f9953396566"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b6a7210-89e3-4855-9343-dc42f92303b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798dd6a0-33d5-4f61-be9b-a3757d51af83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfbc8d12-6446-4d2f-9541-293166d1deea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cf7dec2-d86d-4590-af8a-8dd2c0506d04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1152fd1-ea66-4d37-9d24-dbdd792bc2e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cd720d8-87a4-4503-abc7-f2af1415ae91"
            }
          }
        ]
      },
      {
        "id": "319c19e0-eb70-4fae-90c3-d69b5dbf6716",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "029f7c44-4745-432d-bdaf-400220912e70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b4abfce-56c9-42bb-93c9-04598a549902",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f19706c3-7c4b-4d66-87f6-bd5b1b672ec4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c52a2-553c-482c-ac59-cefc3912114f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1924862e-1bf6-4bb9-b9d2-7e0607dab2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fee14af-b18a-4745-8ea7-536bbaab6cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4737ad01-c7b8-4093-b4cf-aed58c84d178"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59ee5029-f904-4cdd-af2e-463385bbabf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8adb26f-6d46-4f4c-9a3b-cfdc7e12b155"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9c3fe9-2233-43a8-813a-4ad40c20ae8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee34aee0-b36d-4257-ad3f-eda816dae434"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "becd255a-c9ff-4314-b315-fea0a955d128",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1e336f4-4b0b-4b7d-bf25-e4ab54c69744"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6906e1d4-849d-4b0c-924d-ff672f2ba4e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d016108-7f39-48e7-be53-c14cb31ef908"
            }
          }
        ]
      },
      {
        "id": "f4e120bf-7767-4f45-8bca-9f443abe3e16",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6b57911-63ef-410d-8131-d49eb4a2404b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffd7c26e-20e7-4e07-9b1d-7e30952ba5c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "34163a2a-b429-44dd-892f-3ec7206d1a7f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5079dea-cb08-437f-b567-2b9047dc408a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "489269d7-96bb-4baa-b2e8-8fce7a1b5e94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.4245614035088,
      "responseMin": 10,
      "responseMax": 11019,
      "responseSd": 827.6902328178097,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705451800922,
      "completed": 1705451846544
    },
    "executions": [
      {
        "id": "ad554487-1f7c-4311-b7e2-e3a5e9f45fd2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3023b1e8-d9f0-4696-a644-7a2933e95160",
          "httpRequestId": "fea829c4-b356-46ce-868b-d662129c1d97"
        },
        "item": {
          "id": "ad554487-1f7c-4311-b7e2-e3a5e9f45fd2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "849c108d-7fbd-4672-b704-1a765d93da5a",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "258d7c39-7233-40ed-8ee4-6e008230ae5b",
        "cursor": {
          "ref": "cdcfe6e4-6d14-476c-a395-217e586d6d8d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66b46bc3-a7d1-4926-b8e8-f82adad9d871"
        },
        "item": {
          "id": "258d7c39-7233-40ed-8ee4-6e008230ae5b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b9467cf0-97ef-4b8e-bb25-006be0792027",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6633aed0-cdb7-454c-91ab-6461d981c241",
        "cursor": {
          "ref": "cb399546-4601-45a2-8357-d94fb0d18d56",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e3437fa9-7a9d-4333-b0a5-c247533f41dc"
        },
        "item": {
          "id": "6633aed0-cdb7-454c-91ab-6461d981c241",
          "name": "did_json"
        },
        "response": {
          "id": "88a54d86-c479-42fc-925a-9180549073df",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f718f762-df6c-4daa-85ff-8fdf18820b6c",
        "cursor": {
          "ref": "0d89c7e3-b9ca-49b8-8d28-d759575e854a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cd0c3d7-3d69-4f7d-b7c9-8e06e1ca0442"
        },
        "item": {
          "id": "f718f762-df6c-4daa-85ff-8fdf18820b6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a8e1456-23ca-48fb-991a-362561ebc28b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 637,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f718f762-df6c-4daa-85ff-8fdf18820b6c",
        "cursor": {
          "ref": "0d89c7e3-b9ca-49b8-8d28-d759575e854a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cd0c3d7-3d69-4f7d-b7c9-8e06e1ca0442"
        },
        "item": {
          "id": "f718f762-df6c-4daa-85ff-8fdf18820b6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a8e1456-23ca-48fb-991a-362561ebc28b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 637,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe40d5fc-151a-4035-b2e3-63e1ddd65998",
        "cursor": {
          "ref": "265c3186-d8f0-4642-934c-848f8e66fad8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "97b9deed-8c61-46dd-9dcd-2e6589e19dfe"
        },
        "item": {
          "id": "fe40d5fc-151a-4035-b2e3-63e1ddd65998",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "57af4a4e-4881-4da8-9c49-565ea3a79f49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ec17ca-ca6d-42d3-9b20-6cedcb70f75e",
        "cursor": {
          "ref": "8ac82b25-0259-4fa4-8597-5dd659304f34",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39ec4262-1560-461a-8914-115bc763d7a2"
        },
        "item": {
          "id": "82ec17ca-ca6d-42d3-9b20-6cedcb70f75e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5be8ddbd-6725-4006-a6ab-1a0a0ed0fc9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6295e308-eb81-424e-a3b8-489f0930b784",
        "cursor": {
          "ref": "a9d02a72-8a19-41f9-ade2-a0f100291b47",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fbea96ab-e81d-4ee5-85fd-36dae3cc0a01"
        },
        "item": {
          "id": "6295e308-eb81-424e-a3b8-489f0930b784",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0b1c2802-0b22-4e7b-a5e4-b0a58ba682a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7523e06d-865c-4141-a082-443cfdc7287f",
        "cursor": {
          "ref": "b1bd22ae-4ff7-47e6-bc26-768a40a457a4",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98d7b99a-e9c0-4bd4-90b7-2996516fa357"
        },
        "item": {
          "id": "7523e06d-865c-4141-a082-443cfdc7287f",
          "name": "identifiers"
        },
        "response": {
          "id": "79211bf9-f474-42f9-9493-424833b79038",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcc4daf-b3a8-4a3a-86a8-cbd959332ff5",
        "cursor": {
          "ref": "28cf412a-0d26-45d2-8cd1-ee136403deef",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1de1a38e-874d-4804-8a86-0284172a231a"
        },
        "item": {
          "id": "0fcc4daf-b3a8-4a3a-86a8-cbd959332ff5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ae30555f-2f8d-426e-a31b-0d41d858ac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efe493a-bb89-4377-a09f-328fac4f445c",
        "cursor": {
          "ref": "e9c97017-20ea-4fd0-b6ec-6a0e5d526776",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4f070d59-0a6b-409d-b6da-4b3d8178c68d"
        },
        "item": {
          "id": "8efe493a-bb89-4377-a09f-328fac4f445c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9113fc87-0ced-49c4-932a-7008d25b58f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59087d2b-e6b9-4f8e-bf08-16d9ff7eaf5f",
        "cursor": {
          "ref": "0854c783-8eea-4ed6-9c7f-753fbb60e92f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0ba2aa62-953c-41f6-83dd-f27d9bd9ccb5"
        },
        "item": {
          "id": "59087d2b-e6b9-4f8e-bf08-16d9ff7eaf5f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3b529041-2c83-4738-8a79-a9d80f164ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be171dda-088e-45d0-90b8-bc1f98b079ed",
        "cursor": {
          "ref": "26a019af-4e3f-46b8-a33f-2b81465cc534",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "27b181bc-28bf-45eb-8ab5-9e083c664dbc"
        },
        "item": {
          "id": "be171dda-088e-45d0-90b8-bc1f98b079ed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f8d68a2e-6673-40d4-ac07-f46b7dae21c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da13437c-9a77-48fb-9e50-3c261b806520",
        "cursor": {
          "ref": "066baa02-45ee-4ca8-b6ba-be0f773798dc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "891bde46-2c17-40c2-bbb2-2d8ceb647fa5"
        },
        "item": {
          "id": "da13437c-9a77-48fb-9e50-3c261b806520",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c13e841e-4cf2-4dd5-b2fc-814c01f46063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457902cb-f6af-4c0d-906b-b190fc6cf57e",
        "cursor": {
          "ref": "1a340a61-878f-4b55-bb10-9ef72a98c525",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b899c719-e5e8-40ed-b5c3-fcbd9347d88d"
        },
        "item": {
          "id": "457902cb-f6af-4c0d-906b-b190fc6cf57e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "576e7e49-0b95-46c1-9b07-9eee4d346a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e161c5-86c4-44f4-829c-1c1b25f4e5c3",
        "cursor": {
          "ref": "ac94d543-7c08-4410-bfac-d70752294d5a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7dd98b8b-880d-4d6b-b2eb-07c0e9988bcb"
        },
        "item": {
          "id": "50e161c5-86c4-44f4-829c-1c1b25f4e5c3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "08f26203-233f-4d5e-82c6-aa5c2f253cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767203bf-5105-4432-935c-956df6c364a6",
        "cursor": {
          "ref": "f113db3f-8139-4c38-a753-9f5b48e8b4b6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ce2fcc4c-0898-45f5-9eab-08af5dffb47d"
        },
        "item": {
          "id": "767203bf-5105-4432-935c-956df6c364a6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5da3e62f-8b79-455b-8d86-41b1aab25d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f1f16a-cc6c-44b1-af9a-b86163548b43",
        "cursor": {
          "ref": "e4ef6a0e-63f5-4680-ba8b-05249343587f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c1181ddd-2988-42b1-aea0-933cc02f4175"
        },
        "item": {
          "id": "c7f1f16a-cc6c-44b1-af9a-b86163548b43",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "719d20bf-46c0-4dcb-96bc-f4c5959d8194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b4154-341c-445c-acd9-8c9d63a3c83e",
        "cursor": {
          "ref": "4aabb2e2-94c0-42c2-b043-a09fd4210d29",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2989e944-f795-4a98-bdb6-5435e511d41b"
        },
        "item": {
          "id": "e28b4154-341c-445c-acd9-8c9d63a3c83e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5502bcaa-296d-48e6-b548-06c3705fea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3adc94d-9349-477b-8dc5-ef2a743e55f4",
        "cursor": {
          "ref": "50cea05a-b570-4933-a3be-4ad09c3b264d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c2d9b1c6-c91d-4ad0-840c-f5528b9a51f5"
        },
        "item": {
          "id": "e3adc94d-9349-477b-8dc5-ef2a743e55f4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c0d0142e-dec2-4df2-a934-81f8cace2a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c247d44-797f-4b83-87e2-dbb79518aecd",
        "cursor": {
          "ref": "5eaf60ce-ba74-415f-83ee-51a529fcb6f0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2da18fc9-2d05-47a6-8b41-cc4acf78943c"
        },
        "item": {
          "id": "4c247d44-797f-4b83-87e2-dbb79518aecd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9673a2ea-c302-4c4c-8b51-221e718f7f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afbb20d-983c-4cc8-a37a-cf10e40855b7",
        "cursor": {
          "ref": "bc809215-2a1a-4536-83fb-2965acb6d006",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d3f2d0b-f43b-4cb5-8079-20de69c9b8a8"
        },
        "item": {
          "id": "7afbb20d-983c-4cc8-a37a-cf10e40855b7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cc627b6f-c508-4a30-8e4a-ce1b85fece6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfc9820-8b11-4aa7-bd17-52e051ad0455",
        "cursor": {
          "ref": "1634e4b0-1cf7-48e0-81da-391537544353",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d529fdc7-5b3b-49c9-af13-d0424621d0ba"
        },
        "item": {
          "id": "abfc9820-8b11-4aa7-bd17-52e051ad0455",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "10f171bf-6f13-4c2b-8a2d-e6d6828a48fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ce0da6-2465-44df-b12e-763534d19120",
        "cursor": {
          "ref": "49dab557-1ba5-4e5b-a636-12092a605e96",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e533cac-177d-4deb-80a2-f21af9e9f1e6"
        },
        "item": {
          "id": "e5ce0da6-2465-44df-b12e-763534d19120",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6feb7d27-34a9-46f4-b2da-aaf79c44d40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb523d6c-ee4e-4f94-aaf4-8b7de315dfd8",
        "cursor": {
          "ref": "20c8cb3b-2b0d-45fe-8d0e-3b2a09295ece",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0ab46515-05fa-4285-add3-1afac80511ba"
        },
        "item": {
          "id": "bb523d6c-ee4e-4f94-aaf4-8b7de315dfd8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7dea76aa-9a81-41e3-8c82-79dfa9602672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec84730f-4bdd-45e9-a694-411f839a70ee",
        "cursor": {
          "ref": "1452a31d-8f85-4fe3-89f1-b29f2ce38ceb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "014e23f6-f9ce-4725-9722-121a9ecb10fe"
        },
        "item": {
          "id": "ec84730f-4bdd-45e9-a694-411f839a70ee",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6b6bd8cd-e9aa-4f49-912b-7e055fe3af09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be870d25-8d34-4205-86fa-d20b426b57a3",
        "cursor": {
          "ref": "953513d2-e0ae-461c-93b4-ce18b876fa98",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4bc4cdc-e781-4286-8ead-fbc309b74745"
        },
        "item": {
          "id": "be870d25-8d34-4205-86fa-d20b426b57a3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a1329b89-021e-43f7-a9f8-53a2351af329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7746caea-3d2f-4bfd-9cf6-ee22d462e576",
        "cursor": {
          "ref": "c3f55fd5-99a4-405b-8066-6035c350cfca",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0ada6665-6323-403d-a90f-4afe3454fefe"
        },
        "item": {
          "id": "7746caea-3d2f-4bfd-9cf6-ee22d462e576",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aee58dad-74dd-4439-aaad-30427fe67b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585511f7-ae4d-4f42-aae5-6663014c65fe",
        "cursor": {
          "ref": "c30cd0ba-2b8f-40a9-a82e-12b7e7bc8054",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0a7cc87f-f7c6-4b69-9f26-58f4261ee43a"
        },
        "item": {
          "id": "585511f7-ae4d-4f42-aae5-6663014c65fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4f3adf5e-453d-4faf-812e-357c34b394a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3ed391-028f-4bc5-af00-5e414abba4a5",
        "cursor": {
          "ref": "2a77bea9-e59f-4a5d-93bc-eb734432a74e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05044f87-18f7-49c8-9a47-3ce5761e692e"
        },
        "item": {
          "id": "7e3ed391-028f-4bc5-af00-5e414abba4a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f7ad2539-9ef7-46a0-bac3-1394df92a3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30d0b76-81a9-4496-b999-2de413e853b3",
        "cursor": {
          "ref": "d72f5ffc-d037-4e78-afb9-2e46c1ae54ad",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "26da951a-c01c-404e-9e6c-ceff248636dd"
        },
        "item": {
          "id": "b30d0b76-81a9-4496-b999-2de413e853b3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7c497b45-49fe-4c5f-957c-7e9ebb248eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cda4e0-e0bb-4188-b0c7-b3d90e04c48d",
        "cursor": {
          "ref": "dd39ddb6-c34b-4d8a-b9dd-9c11dcf6d80a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2b1aa845-4be0-4faf-8d03-9f417ea50665"
        },
        "item": {
          "id": "c2cda4e0-e0bb-4188-b0c7-b3d90e04c48d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc71ba49-7fdd-4b7f-acec-a8064b0cdef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94be33be-e4e1-4cf6-a89c-c455125cf386",
        "cursor": {
          "ref": "c77c6f2a-cb1d-4259-b9e0-b47b22a12086",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "76edb02b-a867-480c-b3ab-5b2fd5054f71"
        },
        "item": {
          "id": "94be33be-e4e1-4cf6-a89c-c455125cf386",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ad5c1e0-bb33-4ec8-b92f-d57adec27ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187bf60-23f4-4f65-afe2-ce47684e2fb0",
        "cursor": {
          "ref": "aae42052-a40e-4c34-9ab4-5bcc98489f85",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "70856a9e-4cc2-4c4f-a5e2-dc36fe71a5d3"
        },
        "item": {
          "id": "c187bf60-23f4-4f65-afe2-ce47684e2fb0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3c91e754-c004-4c07-b3d4-2c7a2bbbc61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d7a46c-405a-4b37-8c68-57b88ff2116a",
        "cursor": {
          "ref": "e1de5ffb-dd43-40a0-9bd6-12d19bdb325f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08d6ab3a-fee7-4ee3-91ef-d099ec86cd1a"
        },
        "item": {
          "id": "74d7a46c-405a-4b37-8c68-57b88ff2116a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9fa328fb-65a7-4dc0-9b12-e9bb0f6eaa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2017d55-1f92-48d7-8df2-accc2d525ec0",
        "cursor": {
          "ref": "4bf4b7da-15b6-4281-aeca-003e8d41f5e9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "076740b0-569c-4ddb-99a5-4c96ee25dbb6"
        },
        "item": {
          "id": "d2017d55-1f92-48d7-8df2-accc2d525ec0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4e5d9e08-a61e-4c92-a859-e456a7ae17cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c044eced-9687-4d87-8bac-50863e4f3ea5",
        "cursor": {
          "ref": "8cd90dac-39e9-497a-b13a-8acc699e7601",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bf0524e0-59ae-47a2-b758-4c468bd89d74"
        },
        "item": {
          "id": "c044eced-9687-4d87-8bac-50863e4f3ea5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a5c74c1-4862-41bf-8143-91f83eaafb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9b6d09-e3a9-4f4e-85e6-2f246a231b27",
        "cursor": {
          "ref": "868f0b79-2eae-4941-afc5-7be3a31cff43",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4edeb85e-8b6f-4b6e-b5ad-ba7d691a993e"
        },
        "item": {
          "id": "7c9b6d09-e3a9-4f4e-85e6-2f246a231b27",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2b3a36fd-2dca-4e24-89e0-4a1a83bb9ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478108f-c3bd-470f-ae56-b3b0cc3bf1c1",
        "cursor": {
          "ref": "2967754a-e356-4430-b861-91b9d3045aa4",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e9439c96-4109-4e72-9ee5-77a6544b1e08"
        },
        "item": {
          "id": "5478108f-c3bd-470f-ae56-b3b0cc3bf1c1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6eec3b63-db85-4961-b4a6-80f6d608af34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9d8380-e7ed-481c-9c28-3eee40ef8bee",
        "cursor": {
          "ref": "b6759553-a955-4e9e-b25b-9884020acbed",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "32358dfe-3a79-425f-9fe6-683d60853e74"
        },
        "item": {
          "id": "1c9d8380-e7ed-481c-9c28-3eee40ef8bee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f69f3cb1-1ca3-4b93-a205-3342d43ab2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a161db0b-99d4-4930-9b94-6376b1111c86",
        "cursor": {
          "ref": "8f440a0a-679d-4fdb-b1d7-52597c08fd61",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3700644c-14b6-4aaf-a3ab-71125180c7b0"
        },
        "item": {
          "id": "a161db0b-99d4-4930-9b94-6376b1111c86",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ad92e60-7da9-4ea5-b6c4-c8cc3754f47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee7ba7a-e07e-4797-a343-3736a6cbef82",
        "cursor": {
          "ref": "63586ad3-ae9f-487c-86cc-9f0826a0ba4e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e8c418f8-f849-40a8-bd1c-8eefa59befec"
        },
        "item": {
          "id": "2ee7ba7a-e07e-4797-a343-3736a6cbef82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6a599ee-3e7a-4fd4-9beb-8b81cffd3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c53b14-12f2-4229-94ea-34c0c8d6fbeb",
        "cursor": {
          "ref": "23a32c1d-2a89-41db-8175-30648abb5a2a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0515ef8c-134e-4475-b296-2ba7a4004605"
        },
        "item": {
          "id": "79c53b14-12f2-4229-94ea-34c0c8d6fbeb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c81401db-7937-4988-8000-36e845aa261e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36068193-84dd-40a2-b34e-f8909e502ff7",
        "cursor": {
          "ref": "2b2355e7-d1aa-4944-a83e-6dc73924506c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b8a4877d-f07f-4b25-9abb-fe1816b5dd73"
        },
        "item": {
          "id": "36068193-84dd-40a2-b34e-f8909e502ff7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65f816a0-7fe0-438a-9948-04a164c659b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8a9cb1-91e5-42c3-b079-e5a7349671b5",
        "cursor": {
          "ref": "ae5d8ddf-70be-4385-aa44-2d4b46d940d5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "62876962-1e4f-4a72-b92e-8df58c49dc00"
        },
        "item": {
          "id": "8d8a9cb1-91e5-42c3-b079-e5a7349671b5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3645902-c2b1-4bd3-8898-9e2bba8a1094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dcea2c-638b-4f68-b761-7141a8b289ac",
        "cursor": {
          "ref": "5432eb0e-7ccc-452c-bc0e-dc295331d797",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "25b60d3c-4672-42db-95c2-f3337484050a"
        },
        "item": {
          "id": "37dcea2c-638b-4f68-b761-7141a8b289ac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "008791e8-5ecd-4f8b-bb25-df71674c0b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca66838c-a48c-4773-ad2f-c87dce35159a",
        "cursor": {
          "ref": "c68ecc15-2a02-4c71-a791-de7e74317e3d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "55917842-da1e-4349-b8d5-0c912a2eef64"
        },
        "item": {
          "id": "ca66838c-a48c-4773-ad2f-c87dce35159a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e6a52b5-563d-43b3-bfe8-40988e84b345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0e3a16-17f9-4342-b563-8dde18713a65",
        "cursor": {
          "ref": "8926eaf4-d586-466e-98b0-072213975a53",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56a7b7c4-ea8d-497b-8301-86f3598a6c24"
        },
        "item": {
          "id": "8f0e3a16-17f9-4342-b563-8dde18713a65",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d4921700-bea4-4dca-b350-a6a12f337577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58f7eb6-2258-4984-9365-305f1e13c9ce",
        "cursor": {
          "ref": "307bc567-0dc4-4b6a-9c7b-6d6e56c6e4ed",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "422b825e-f09e-44d7-a0f3-f4f053ddff5e"
        },
        "item": {
          "id": "a58f7eb6-2258-4984-9365-305f1e13c9ce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ebb2e51d-b96a-4cb4-99df-939797dfaab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748f411-6baf-40ac-a7eb-9a2cda0ff9d9",
        "cursor": {
          "ref": "7495bae3-b802-4862-8fbb-d083b15529d8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1186d346-a186-4748-8ef2-c05a6b956154"
        },
        "item": {
          "id": "3748f411-6baf-40ac-a7eb-9a2cda0ff9d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "816cd020-2f26-4c41-855b-be50c577af94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf80975-c9e9-4e97-8f63-5d06db1923cb",
        "cursor": {
          "ref": "2e563872-9f86-4807-bc5f-26da791c7aee",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e361fcf6-821f-47d0-a0fd-883fe69f7353"
        },
        "item": {
          "id": "ddf80975-c9e9-4e97-8f63-5d06db1923cb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "66504e6b-9273-47d6-ac66-90ad0b708f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c75770-f62d-4a70-b923-23e7c2cf75dd",
        "cursor": {
          "ref": "01e7a72b-ac74-4ad9-a44a-ef5a4d00f95d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a438306-2542-47be-a1e0-a96c7a554ec1"
        },
        "item": {
          "id": "d1c75770-f62d-4a70-b923-23e7c2cf75dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a57e6c0d-5eb0-4295-9e37-ea07daeb214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4affe75d-f930-4a04-9094-ae17608e29d7",
        "cursor": {
          "ref": "c704aa83-2221-4c49-a1df-37e9a470e185",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9fcf148-25ad-428b-a644-e797ec97724b"
        },
        "item": {
          "id": "4affe75d-f930-4a04-9094-ae17608e29d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "79fae40c-9341-4b8d-9861-9c1373b1e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf28b19-6816-4081-8bdb-8d9da057b913",
        "cursor": {
          "ref": "866ee590-cd3b-4d91-86bf-ddc271c39d58",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ed9e015d-2978-49fc-93ef-798647efea04"
        },
        "item": {
          "id": "3cf28b19-6816-4081-8bdb-8d9da057b913",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cadde296-7ed5-4b08-a1f2-42b2c4ea851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c7fc4-b743-4c29-bbde-8d6ae9dbd9d8",
        "cursor": {
          "ref": "748b82fd-28ef-4ea0-951a-7dc2779640ef",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5a39058-f848-4d7d-8b74-14dca383ae45"
        },
        "item": {
          "id": "471c7fc4-b743-4c29-bbde-8d6ae9dbd9d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e9487918-1cdc-4f67-96bb-cfb593b35c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8f47af-1418-4317-949b-66c65accd952",
        "cursor": {
          "ref": "748197f6-71a8-4be3-a820-b2acbc1b6e3c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5988dad1-e217-4227-b804-f371026a1aca"
        },
        "item": {
          "id": "8e8f47af-1418-4317-949b-66c65accd952",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a099a4e-32fb-4f1d-be8f-38da66776d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea93f4f6-8a09-4669-8ed8-a743a5544f21",
        "cursor": {
          "ref": "019ee37f-ffee-465f-a629-b5ef540ab728",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a58c5a4-c03d-4a67-bcdb-b27361543d5c"
        },
        "item": {
          "id": "ea93f4f6-8a09-4669-8ed8-a743a5544f21",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fbe4042e-5576-4297-bda8-3aabf83829e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d630ad72-a3ec-4748-8461-1c252f6dfaa8",
        "cursor": {
          "ref": "4a96ea72-c5dd-415b-8e41-95b20ad83499",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8eace312-a8bd-479f-8dca-4fa68c7e252b"
        },
        "item": {
          "id": "d630ad72-a3ec-4748-8461-1c252f6dfaa8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1bc801b6-8b9e-420e-9103-53c60eba2983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404879ed-d8d8-4b4c-9883-faa49b437da6",
        "cursor": {
          "ref": "f36c5347-c749-4de9-907f-e97c85de293b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aa36c435-16b0-450e-a937-49b6736b181d"
        },
        "item": {
          "id": "404879ed-d8d8-4b4c-9883-faa49b437da6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e1edaf86-14ae-4bae-816d-ef49e7cf1322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48350a5a-2797-4376-9cbd-4e9e22e29a5e",
        "cursor": {
          "ref": "6c597172-7cfe-408e-ba61-930230f4d4b2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9200e295-68f5-4102-80bc-2a79e6fbfdf5"
        },
        "item": {
          "id": "48350a5a-2797-4376-9cbd-4e9e22e29a5e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "71794402-feaf-4918-9d23-73b72960b012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b2ee89-5dbc-457c-8ba1-c5f429e7631c",
        "cursor": {
          "ref": "0679ed45-b4b2-433e-8ed1-bdd7d6d4bd51",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0b09c4af-9e68-425b-921b-6c6926dc5a54"
        },
        "item": {
          "id": "53b2ee89-5dbc-457c-8ba1-c5f429e7631c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a6410c82-ea09-457f-8dce-728a57c4ea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e7643e-aa21-462b-85d9-fce0305f54e1",
        "cursor": {
          "ref": "082492fb-6fb0-4e23-9239-f18f5a097847",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5f64d495-1f13-4c91-935f-e88737f80d17"
        },
        "item": {
          "id": "61e7643e-aa21-462b-85d9-fce0305f54e1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "16174a3f-03f4-44a4-b6ed-8f1d1aecbd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada34d3-24bc-457c-b4e4-92289a0dd6ce",
        "cursor": {
          "ref": "44b3209d-32dc-4f53-8d06-5557bb2b69f7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "17f4f8c3-1854-414e-950c-eee41111353d"
        },
        "item": {
          "id": "1ada34d3-24bc-457c-b4e4-92289a0dd6ce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "74bf157c-25a9-433b-9388-b28e8b3e1a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72fdbe1-950b-4807-9d7e-e4cce9c58135",
        "cursor": {
          "ref": "7499f397-0401-41d1-85a3-3cfb4a113287",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "95973390-faf2-41bd-ba85-3c28715467bb"
        },
        "item": {
          "id": "a72fdbe1-950b-4807-9d7e-e4cce9c58135",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e2b2a0cd-0ff3-4f3c-986c-1a2ae0461c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b252290c-6ee2-4798-afd1-dc7927fd1a21",
        "cursor": {
          "ref": "071b271e-4fe8-4329-b50f-8ec28407a1fb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "458ef482-073f-4d3e-a575-f428d86910fa"
        },
        "item": {
          "id": "b252290c-6ee2-4798-afd1-dc7927fd1a21",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c7ba66df-6b5b-4b03-8d89-40a60b11d35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0667beb0-efa1-4dc5-a96c-c99e44d1c2fb",
        "cursor": {
          "ref": "43bf3113-303c-4ef5-8ce7-06dcd04c2d75",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "38286f0b-c78b-4d17-83df-164be8f57604"
        },
        "item": {
          "id": "0667beb0-efa1-4dc5-a96c-c99e44d1c2fb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0b91ebdf-28d6-427b-873c-c32a16b010ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68036739-ab5b-4488-8fd7-94e9e663a8ab",
        "cursor": {
          "ref": "66865fa0-35a9-4ae9-accf-0ba9965d5c58",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dff692b9-bab3-4abd-9433-b1330743b497"
        },
        "item": {
          "id": "68036739-ab5b-4488-8fd7-94e9e663a8ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "94a80213-14d0-4e24-a373-894ac847e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50626b5-4ba6-4b7e-873b-98f96b923020",
        "cursor": {
          "ref": "62ecbd06-32ef-4479-b2e2-aee65f850d86",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9e8df5a9-6c7d-4501-a093-ab86ccdd9004"
        },
        "item": {
          "id": "a50626b5-4ba6-4b7e-873b-98f96b923020",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bd692197-6e68-4d53-9759-34cbd6163570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3c865-1085-404c-bbae-2557e9979a62",
        "cursor": {
          "ref": "9a6bbba5-7c6d-4756-ab0e-6ad2b53e571f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3dcec953-ab9f-4cbb-9fa2-4badece0a124"
        },
        "item": {
          "id": "5fc3c865-1085-404c-bbae-2557e9979a62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "71adf4df-3449-4182-9b73-a7048e1a3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5e96ab-20ad-401a-b4ed-852b02253372",
        "cursor": {
          "ref": "7b3b655b-3e41-4e03-bacf-25a0c41a724f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f57f7e1e-88b8-48db-9ef1-524fdec3be2b"
        },
        "item": {
          "id": "1c5e96ab-20ad-401a-b4ed-852b02253372",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5940dad3-96f5-4dda-a45b-3e7bf7928eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ee0a8e-9e61-4cbe-831f-202d8b23ceee",
        "cursor": {
          "ref": "27eb91f6-fece-4d13-bc01-8f30638d12d8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f4244ddd-4fe4-4c53-beb2-cbe95e5e9708"
        },
        "item": {
          "id": "c3ee0a8e-9e61-4cbe-831f-202d8b23ceee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "efab54a8-d6f4-456d-89f3-1638c01416c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0837f276-0cff-4401-a583-59bdb447fa8a",
        "cursor": {
          "ref": "24f63f04-78ae-46d4-833b-fc770aba1453",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "de5679fc-e32b-4ba1-beb4-1e340fb2b373"
        },
        "item": {
          "id": "0837f276-0cff-4401-a583-59bdb447fa8a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35dbd1e3-1950-48cd-bdaa-324f5bd4240c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51560e0-1a20-4bb3-a3e0-054ceaa90afd",
        "cursor": {
          "ref": "292cce5e-7ee5-434f-ba03-76ebbf74492c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2b5897b8-6740-4721-ab02-a507fdd78ffe"
        },
        "item": {
          "id": "b51560e0-1a20-4bb3-a3e0-054ceaa90afd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "98024622-a1a6-4f00-8efa-bb9eebc7c8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c8d335-f4e0-438a-9129-d5ecb42de8b3",
        "cursor": {
          "ref": "75eebf50-5b9e-4b2c-97be-2a5670e340a7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dcc3ff24-6fe4-4fdc-bcef-0b867efaf2bd"
        },
        "item": {
          "id": "51c8d335-f4e0-438a-9129-d5ecb42de8b3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4bcff859-caee-42f1-ab9c-cbf64a70b1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68620e06-eade-4f5b-ae97-adfd98aae62e",
        "cursor": {
          "ref": "03763cad-2972-4dd4-ba73-bcb983ab5051",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "128ea5dc-20e4-4481-9bbc-77895d9411ce"
        },
        "item": {
          "id": "68620e06-eade-4f5b-ae97-adfd98aae62e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c7138750-e231-4575-901c-627f52a75a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81912ca3-a55e-436f-b6a2-aeb5ef0c58e9",
        "cursor": {
          "ref": "b9198560-353e-4369-9ee1-6085baaea67f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "caf01acd-121a-4ef8-b8ac-25876a68fe7a"
        },
        "item": {
          "id": "81912ca3-a55e-436f-b6a2-aeb5ef0c58e9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a2879298-c457-4584-9dcb-0ff4e63b8f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b1422b-6251-410d-8fa3-0dc7df9fa960",
        "cursor": {
          "ref": "3ea8cfb0-8970-4641-89f7-75ffe5714051",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cf3682c3-4d2b-4aa8-8410-0b8e53dbfd06"
        },
        "item": {
          "id": "64b1422b-6251-410d-8fa3-0dc7df9fa960",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8027c676-f820-4dd9-88b8-c21d0517f090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e4c49-d983-4abc-a50b-dd7feae70a74",
        "cursor": {
          "ref": "85ed32b8-dd1a-4f9f-a0ef-dfc3a0d7809e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "65df6e7d-b7c5-4653-a4f4-8d5720ff5186"
        },
        "item": {
          "id": "653e4c49-d983-4abc-a50b-dd7feae70a74",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8a432757-ed2e-4586-b041-92dc91b727fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566201a-c249-496f-b09b-c3c5edbbdfef",
        "cursor": {
          "ref": "28a9caa0-0c29-4218-b58c-39ccec202aba",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a485094d-0c93-49dd-a161-c155cde3f4d3"
        },
        "item": {
          "id": "5566201a-c249-496f-b09b-c3c5edbbdfef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fa164392-8439-43d9-a43b-b0a29a646db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53a2b01-b022-44cb-a9ca-b532fc9106c0",
        "cursor": {
          "ref": "a5957c5d-ac12-4e42-87b2-42938c3f8b7a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "de6a820d-aa68-4ff6-b894-06a5299963ac"
        },
        "item": {
          "id": "e53a2b01-b022-44cb-a9ca-b532fc9106c0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7ba35f71-b422-4850-8770-717c126d543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94d25dd-c1d7-4114-b3d9-160ddff05075",
        "cursor": {
          "ref": "784a8e88-10a1-4e44-9e6c-96477433be62",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4fb92e87-72ac-459c-bbb6-ac0f0e1666c1"
        },
        "item": {
          "id": "e94d25dd-c1d7-4114-b3d9-160ddff05075",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f4f979d6-c39f-44f4-a98a-1404a3613ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a40f7-a43e-4e10-b5aa-307f227ec822",
        "cursor": {
          "ref": "55808409-6418-429c-97a6-0bcb9062db06",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cb4fe296-f31f-4fdd-a586-90034488f8ab"
        },
        "item": {
          "id": "751a40f7-a43e-4e10-b5aa-307f227ec822",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a19064f6-abd6-4646-8c13-5dffbe2b215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c485df-2671-47f9-be70-1cf7735286a5",
        "cursor": {
          "ref": "e8985f92-6cb7-453f-ad75-2bcac48b6d6b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e8605656-681d-4a4a-b2c7-38f5a2c14bd6"
        },
        "item": {
          "id": "09c485df-2671-47f9-be70-1cf7735286a5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "27ae849a-e0d0-435d-a01d-3441065eb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a079316-c3f9-4ef0-bf06-80b4b023f142",
        "cursor": {
          "ref": "5d965614-c96b-46ba-a6df-3150afc91805",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9a1ed377-f29d-477d-9e4d-93cefc87e618"
        },
        "item": {
          "id": "5a079316-c3f9-4ef0-bf06-80b4b023f142",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a2629d9f-19ea-4a32-b051-4e0c4385cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520c794f-1e6b-4648-891f-95d173c2e00d",
        "cursor": {
          "ref": "eb83e26d-aacd-4659-8c66-ac147f8a2cf5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ed4801c9-871d-4055-aae8-8a31012ac738"
        },
        "item": {
          "id": "520c794f-1e6b-4648-891f-95d173c2e00d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4bd7f751-9635-4503-a7d3-4d1b1c5d8fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccac356f-0aa5-494b-8ed9-e38c145a34c5",
        "cursor": {
          "ref": "e1c11c48-25de-405e-b8cd-42a9bf1eaf02",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8009c338-993b-4692-af7b-c6b6925c662d"
        },
        "item": {
          "id": "ccac356f-0aa5-494b-8ed9-e38c145a34c5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e27b03d-819f-4cdb-943d-7a29c954e1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32334d8-7f36-4347-9559-b360acf04f08",
        "cursor": {
          "ref": "ca4a0787-b445-4a66-8ca8-fd991d4fff89",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8e126ce3-2e85-4ee1-b187-07bbc8d8dd28"
        },
        "item": {
          "id": "d32334d8-7f36-4347-9559-b360acf04f08",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2b5a6c97-2433-457d-a887-7a893086a50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01103f0b-4e7a-4462-a6a4-94621d767a2b",
        "cursor": {
          "ref": "6fa1ebb2-ea2f-4064-aa08-9380bc8a2f1b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "58969a38-3052-4b51-a1fd-722a6c6dab5c"
        },
        "item": {
          "id": "01103f0b-4e7a-4462-a6a4-94621d767a2b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "182e6cdd-a34b-4dba-a6cb-3a0b6dd1baa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64688103-eab3-4203-a99b-c09742fdb7e9",
        "cursor": {
          "ref": "c7513b3d-57b2-4373-9159-5079b2ef896b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8f60866c-a489-4672-a545-4b7dfa1a0c34"
        },
        "item": {
          "id": "64688103-eab3-4203-a99b-c09742fdb7e9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dc7c56d5-e17a-4fa2-8069-6d1ca859a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccf4a39-5f76-4ef8-8630-31e6304ab86d",
        "cursor": {
          "ref": "0d15f20a-7349-4c01-942e-07c135e2641c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "104b7571-cc35-4f97-9e2d-0069903eb316"
        },
        "item": {
          "id": "3ccf4a39-5f76-4ef8-8630-31e6304ab86d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4cacc172-d54c-418b-a8cd-c4c1c6f81d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3aae44-c9be-47d5-a420-8eddfdfc5d38",
        "cursor": {
          "ref": "e4880725-6717-4c6a-997e-0b97b857dd08",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ff85fa8b-86dc-4cb4-8b30-4db117994015"
        },
        "item": {
          "id": "4d3aae44-c9be-47d5-a420-8eddfdfc5d38",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ad8b72c5-8ba3-461b-8268-7dbf302f7c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e19f6a6-15c5-488f-8dc4-30c5e649a116",
        "cursor": {
          "ref": "7bb97cca-5573-4b79-bd06-c0bf08be5cdd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7911fe61-1465-48b0-8479-bb472ffba5b9"
        },
        "item": {
          "id": "2e19f6a6-15c5-488f-8dc4-30c5e649a116",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c787c750-5a63-4748-92aa-256b6f5147ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aa1eb8-0c38-48e3-b01f-04c81e14709d",
        "cursor": {
          "ref": "c658b4cb-dc37-4ce1-9b1c-d04c907cf91b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "45b47995-54bb-46f3-823d-ef0a43b01116"
        },
        "item": {
          "id": "b9aa1eb8-0c38-48e3-b01f-04c81e14709d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8a4e3718-4575-478f-98cb-bfac410feaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e839e4-b911-4294-b9e5-a447b3ab2b36",
        "cursor": {
          "ref": "cc31daed-c9b2-4187-8c6f-df12333eee6c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c6fead1-e6ac-48f2-a34f-9b075fd7c5d6"
        },
        "item": {
          "id": "13e839e4-b911-4294-b9e5-a447b3ab2b36",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d43d176-5601-4e33-9bd8-9bb5a57e8f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732aee05-b68c-42b7-ac1e-7c6a9c409daa",
        "cursor": {
          "ref": "472b477a-ba74-43aa-afb9-194922397393",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d440265-1add-44d3-9c79-da833b561aef"
        },
        "item": {
          "id": "732aee05-b68c-42b7-ac1e-7c6a9c409daa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9bb7d88b-76c0-478e-a72f-e9ce8f1d049e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd78b2b-52a6-4044-a907-e1b69ba5e04c",
        "cursor": {
          "ref": "0a26da63-c48e-4672-8ebc-8e2e27356999",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ccb5d916-9895-49ba-b2c2-357fb4eabb7a"
        },
        "item": {
          "id": "acd78b2b-52a6-4044-a907-e1b69ba5e04c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "566e5ab9-595e-41ed-8ff9-848a8f521cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e061a4f9-42ba-4697-9d28-97d3b17a81b8",
        "cursor": {
          "ref": "f0ba0bb4-6711-49bb-ace9-6f8afe4f58ee",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d953f5b-bdf5-4509-b15e-dd6ab65b3d98"
        },
        "item": {
          "id": "e061a4f9-42ba-4697-9d28-97d3b17a81b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "06c6db88-9a00-433c-b55c-3a963cd35892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a787b979-c71a-4911-bc26-3fb9ffbf1150",
        "cursor": {
          "ref": "515f1fb0-e85a-4396-9f32-082b19c7c54f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "734df511-0952-448e-a182-6d6d6ed4a315"
        },
        "item": {
          "id": "a787b979-c71a-4911-bc26-3fb9ffbf1150",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1bd7d279-fea8-4af8-9664-25ba3116d65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f974b264-d256-425b-8e48-23bc819564d9",
        "cursor": {
          "ref": "432455a4-d1d8-4818-b0cf-1954a8109784",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c3c78dbf-e623-4ea6-a8ec-a147f0c938df"
        },
        "item": {
          "id": "f974b264-d256-425b-8e48-23bc819564d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e11da810-9929-4b0a-aaf5-df5081086e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca836f-79f6-4198-a8e1-ab6af189cec5",
        "cursor": {
          "ref": "40840bd2-8e49-42c6-8932-65ae3c983901",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bfe4300e-b78d-46f1-ab39-fa056a04c5eb"
        },
        "item": {
          "id": "a0ca836f-79f6-4198-a8e1-ab6af189cec5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dd4f42ea-1427-4f0a-bdf8-4ea78843e546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2173f61-78bb-472b-88bd-41c315d5b578",
        "cursor": {
          "ref": "086c40ba-8314-47fb-9c4d-8b16632d89a8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fb3e0a98-4c66-482a-93bb-ab7a87a994ef"
        },
        "item": {
          "id": "d2173f61-78bb-472b-88bd-41c315d5b578",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a989be53-f196-485b-9002-64f27c3568ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5e744e-7d46-4a9f-8023-8dde897ec68e",
        "cursor": {
          "ref": "6d1f0318-6bcd-4288-9755-e5a061313e95",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7458c65e-55dc-443a-aaba-7e964161b0a3"
        },
        "item": {
          "id": "4a5e744e-7d46-4a9f-8023-8dde897ec68e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b984ebd0-cb9e-454f-a80d-8c5de0cb3c15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae7d368-9105-4fa3-89cf-477abe1a433f",
        "cursor": {
          "ref": "0a37412c-991c-41dd-999a-ce5ce52d77ed",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6b52e406-0aa7-4b08-9599-ff80302c16c9"
        },
        "item": {
          "id": "6ae7d368-9105-4fa3-89cf-477abe1a433f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "266a30d5-5ca3-467d-a8d6-7de1d28ddf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "af96a17e-7ba4-4f16-9997-60eb5425325e",
        "cursor": {
          "ref": "70e4763a-8b64-42c3-b2f8-1dba8117ceb9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "00d6a841-63a8-46a2-adfc-7b8d442d1b3b"
        },
        "item": {
          "id": "af96a17e-7ba4-4f16-9997-60eb5425325e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "855de161-e4eb-4010-a913-fb7a0aa001dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0bc664a4-01e8-4854-acad-d301a7dda895",
        "cursor": {
          "ref": "9e6ce6f0-a6ce-4fb1-837d-e0b0879d628c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9256cd62-c882-4d88-8c78-dcec65e1cc10"
        },
        "item": {
          "id": "0bc664a4-01e8-4854-acad-d301a7dda895",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "70e71bcd-000e-461e-8a71-05b47f6de423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5b47b9de-53d8-4e05-a96a-fa11121643f8",
        "cursor": {
          "ref": "63d4bd8d-1e3e-4327-a784-c440712f9382",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dad1f868-9680-4b39-879a-541d53f3a7de"
        },
        "item": {
          "id": "5b47b9de-53d8-4e05-a96a-fa11121643f8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "333214c1-5129-4285-806e-f5f18df35108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c4aceba7-4274-4e06-80dc-6837df889223",
        "cursor": {
          "ref": "dfc157dd-a432-4348-a324-bab41dcad06e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5d8392f-3b84-4932-b52f-c21eca6ededa"
        },
        "item": {
          "id": "c4aceba7-4274-4e06-80dc-6837df889223",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fe8cb228-19c8-4ddb-bc93-17e8737289bd",
          "status": "Created",
          "code": 201,
          "responseTime": 11019,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35788ff9-05d0-43dc-a524-c919864f2f39",
        "cursor": {
          "ref": "9863c523-e194-4c1b-b357-87bfcd091073",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a3786be-69c0-42c0-8e15-837d311956b9"
        },
        "item": {
          "id": "35788ff9-05d0-43dc-a524-c919864f2f39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1d648803-a0da-4562-a8e7-e4512e11b56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ca9fe7cb-f0ee-4736-a1ca-5db4a482b790",
        "cursor": {
          "ref": "c7e4ed03-6ab2-4f91-bd0d-1e59b4c3aa17",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a3aef379-a42d-4810-8a46-9bbebabe695a"
        },
        "item": {
          "id": "ca9fe7cb-f0ee-4736-a1ca-5db4a482b790",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "66fdd21c-6d26-47c9-8ba2-d92217847095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e56548e2-c4d4-4bd3-b16c-0c3332e814fa",
        "cursor": {
          "ref": "26ecea3d-ec51-4038-8798-647cc796f2ca",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7faf1262-38b8-47be-bd78-9523796db595"
        },
        "item": {
          "id": "e56548e2-c4d4-4bd3-b16c-0c3332e814fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7861e3d6-3b2d-45d3-95da-d906f046da5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461b6ed7-2161-43a9-b87a-7819b46f471c",
        "cursor": {
          "ref": "676bfe14-7c62-4728-bc9d-f323908a2074",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "342d76e4-b187-4746-ac7e-cf37ad66bb87"
        },
        "item": {
          "id": "461b6ed7-2161-43a9-b87a-7819b46f471c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70aa9254-a2f2-4ab7-94df-5f850e0d6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b240d07-5b23-4cfa-8362-ddf15df0bc34",
        "cursor": {
          "ref": "e41973b2-4a0c-40e6-8e1f-1da70009f2b8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c15385d-6231-4312-9865-f8779eed9b38"
        },
        "item": {
          "id": "9b240d07-5b23-4cfa-8362-ddf15df0bc34",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18b48918-7bbd-4c1f-8435-198a5cc9bca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177bf67-3806-4fe3-8501-f64057553cd6",
        "cursor": {
          "ref": "c9457e48-9ed6-46f7-85fb-92e6b4e410dd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b030cc2-9f1a-438b-9f6e-e201004de463"
        },
        "item": {
          "id": "4177bf67-3806-4fe3-8501-f64057553cd6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ffddd56c-5017-4ff7-9364-40b06838e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b801735-41fd-4b53-92e8-aaf149a2b8a7",
        "cursor": {
          "ref": "e47679a7-3ba2-4be9-870c-66bd9f9df660",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5a046b68-3f07-4ca6-84f5-c3acbe51e09c"
        },
        "item": {
          "id": "3b801735-41fd-4b53-92e8-aaf149a2b8a7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "004dbd66-d826-4e1b-bbf2-1a21639551c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067f8626-6db4-4ef0-8965-48271170ef23",
        "cursor": {
          "ref": "1c2b5e2a-9bef-4a3a-aaf2-00a0d377a55b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b02a26eb-e996-47fb-95d8-32994170ed5f"
        },
        "item": {
          "id": "067f8626-6db4-4ef0-8965-48271170ef23",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "453edc14-534b-4b47-a327-fd97423871db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a2fbb-40f9-41f3-9783-8ad85360669b",
        "cursor": {
          "ref": "a57becd1-caa2-4818-9212-3640271891a3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9a09ce03-bbab-4216-bc04-5ee70b961bb3"
        },
        "item": {
          "id": "9e5a2fbb-40f9-41f3-9783-8ad85360669b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c60d895f-77ac-4145-937d-b49721a5a9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b794e-a7cb-4da7-9468-8c91013d97d7",
        "cursor": {
          "ref": "9080662c-476b-4888-8ab3-27a7cc75f036",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "95554a6f-6b6f-4849-8bdc-30af4ec83ad9"
        },
        "item": {
          "id": "424b794e-a7cb-4da7-9468-8c91013d97d7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "86f1426a-e303-4643-b013-35c8f9b34baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d2300c-f6ff-4b2c-b44b-313ba9a43243",
        "cursor": {
          "ref": "d8febe81-e223-460e-9bdf-d8e6b05df34b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2fa2b19f-53af-4b71-bc83-59e6025540bc"
        },
        "item": {
          "id": "10d2300c-f6ff-4b2c-b44b-313ba9a43243",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fd3d1558-47f0-4937-89b8-b3058f4e10c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fee285-bf8b-4f85-ad8a-50c7404d4341",
        "cursor": {
          "ref": "f2521ec7-30b5-4af9-b70e-7306ddbeabd1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ef3101e6-6184-4af8-92ca-c06dac1c63d5"
        },
        "item": {
          "id": "b2fee285-bf8b-4f85-ad8a-50c7404d4341",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62cf92a3-a331-4946-a11b-3fe5c0daa3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ef9231-a19e-469d-a441-f026836113d5",
        "cursor": {
          "ref": "d92a51f6-91ef-4c61-8764-fb11ab6e69d3",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "690047dd-8eb1-46b4-b563-7e8f32d845d3"
        },
        "item": {
          "id": "42ef9231-a19e-469d-a441-f026836113d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b8dd5efc-164d-45b7-884f-5254c605c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771fb014-d493-41d6-9b97-b7fb7c6e2f92",
        "cursor": {
          "ref": "563c82ee-1845-40a9-bfaf-3f722f3f0c5c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1c529e41-130c-4235-8379-c0b4a5e14ac1"
        },
        "item": {
          "id": "771fb014-d493-41d6-9b97-b7fb7c6e2f92",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7470f880-970e-4b80-82c5-6888870e01ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef47f9ad-4b2d-47b8-b12a-ed52b4219967",
        "cursor": {
          "ref": "93cbda5a-5a74-4c56-8c95-39eb4a49d853",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78308b81-0334-4ff9-8684-30221e5dc7b6"
        },
        "item": {
          "id": "ef47f9ad-4b2d-47b8-b12a-ed52b4219967",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7d3da08-273f-48ec-ba78-81972b0367df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d230d5c-f606-45df-bc77-467faa22041b",
        "cursor": {
          "ref": "11225077-167e-4f93-a7fa-0e98edc87c3f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "17ccd7de-c2d7-4e96-97c9-c05e6a8d4e03"
        },
        "item": {
          "id": "3d230d5c-f606-45df-bc77-467faa22041b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e2c2f1a-1651-41ba-a169-0b06b0b5fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b4aab2-3035-443d-a4e7-07d2f90b482c",
        "cursor": {
          "ref": "3881ec20-7a11-48c2-8544-0783c68e4ce8",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e67f4979-84bc-4c34-a96e-0c9fec2ae7d3"
        },
        "item": {
          "id": "32b4aab2-3035-443d-a4e7-07d2f90b482c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecdde676-30f5-41c4-9d07-055b970c7ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5887d90e-bbdd-48dd-9235-597fd5768804",
        "cursor": {
          "ref": "f3f6ab8d-545c-4784-9f24-c10ea1b4856d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bb03ebb4-6c0f-4298-9fb1-0dd4b5542832"
        },
        "item": {
          "id": "5887d90e-bbdd-48dd-9235-597fd5768804",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "222abc77-26ac-4c05-a320-5119bca38e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7d7960-e6a3-463d-9d9c-204db4bd7e7e",
        "cursor": {
          "ref": "b63c7041-7462-4877-a21a-c2c27f72c310",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d560fe6f-d275-44b6-8d34-273e4714f21a"
        },
        "item": {
          "id": "9b7d7960-e6a3-463d-9d9c-204db4bd7e7e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4a51527b-84a1-493d-b59b-0060daa7ab24",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "eb67d57c-b76c-4a9a-97d0-bff50066a9e6",
        "cursor": {
          "ref": "7aef71b7-ca98-40de-b8f6-2c6d9d94d3bc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d26b3819-15a0-4c6c-a460-03085cbcab32"
        },
        "item": {
          "id": "eb67d57c-b76c-4a9a-97d0-bff50066a9e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d5e7be5-b128-4606-929f-4db15254318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5884c3-5e71-4412-8c4b-61d85665fd14",
        "cursor": {
          "ref": "122a5494-954b-4679-8ebc-dc10fbd99eda",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "437884d3-7989-474f-8bd4-af3575076ed0"
        },
        "item": {
          "id": "2c5884c3-5e71-4412-8c4b-61d85665fd14",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6abf0542-68c6-4f1f-9ebf-62a63c753d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1fb175-91f7-47a0-982c-a02cff44876e",
        "cursor": {
          "ref": "9b97dbb1-c107-4910-a73a-11a3cce2e854",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "db57b1a6-e2db-4cee-aa16-091288733188"
        },
        "item": {
          "id": "9e1fb175-91f7-47a0-982c-a02cff44876e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fb37e318-272d-4e58-a52b-185784fb8eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9dec90-ca4e-4bfd-aa15-9d9b1e01f420",
        "cursor": {
          "ref": "1d002e9f-3cd3-466e-b8fc-13d47cf4ca0f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b66780cd-edb4-4232-907a-bcc175c671b5"
        },
        "item": {
          "id": "ad9dec90-ca4e-4bfd-aa15-9d9b1e01f420",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "512acfed-2cea-4869-aef7-c21806039bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627908be-337d-415b-a9fd-2fc5ae9dc717",
        "cursor": {
          "ref": "7695312e-be63-4570-8ff9-73c92e427940",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1f4194ab-a82e-40f8-9a43-e50192426d0d"
        },
        "item": {
          "id": "627908be-337d-415b-a9fd-2fc5ae9dc717",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92ba0cab-5505-4374-9f8b-4d1ef10f99d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e3fa7d-aff8-4a5d-927d-d53f8c23c8f4",
        "cursor": {
          "ref": "bdd55080-5451-4e2e-8f0a-62a211e0f533",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4dfe6c60-69ea-480b-bcf8-725ff95de771"
        },
        "item": {
          "id": "b9e3fa7d-aff8-4a5d-927d-d53f8c23c8f4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a50afe0d-e31d-4912-bc66-cbfb1f3fc91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab89921-e578-4879-b1e7-180518f293a5",
        "cursor": {
          "ref": "976cce2c-8ab1-4981-9415-cbf543a24d92",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bc903a55-d9ae-4bda-bb9c-f81d395545ba"
        },
        "item": {
          "id": "7ab89921-e578-4879-b1e7-180518f293a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "99ebd7b9-d01a-4f11-bb5d-d22295ac70a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f66ea7-2467-4668-a703-e4b0afb0e867",
        "cursor": {
          "ref": "458541d7-282c-401f-ac2c-76db4a70d382",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "48472e14-d17b-4908-8e53-5b1e1037363b"
        },
        "item": {
          "id": "e6f66ea7-2467-4668-a703-e4b0afb0e867",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4ed25210-cc9d-481b-ab5b-ea8722d2c357",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4befa8c7-afc4-4349-b2f1-2ccdc46ff512",
        "cursor": {
          "ref": "fd427adc-1cf9-46f7-afbf-9a93cfb75fdd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8704e545-b800-4517-afb0-6ea1f5c1feb0"
        },
        "item": {
          "id": "4befa8c7-afc4-4349-b2f1-2ccdc46ff512",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6631cce5-3870-4d22-84e9-b383da975e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8dece5-075e-4ec4-ae9a-82761da3d677",
        "cursor": {
          "ref": "73002335-88cc-44fc-b581-0a91214c7223",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ee609a3a-bc11-4188-a431-00d027053326"
        },
        "item": {
          "id": "9b8dece5-075e-4ec4-ae9a-82761da3d677",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "346e7f5f-50dc-484a-8487-16e8f486ed62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a48945-e3e5-4425-91c8-9bb6f813d77e",
        "cursor": {
          "ref": "2fa52db4-5051-4834-bf5d-c4ba8916cddb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a487e103-2fcb-4f00-813b-19b2738f6191"
        },
        "item": {
          "id": "f1a48945-e3e5-4425-91c8-9bb6f813d77e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb8b707f-a7fe-4d1c-8d7b-c1e4f2539618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace3e5af-ebce-4d1c-8165-9980a1a15e83",
        "cursor": {
          "ref": "417c9ab8-bcd7-4b11-a580-9c942582c3a8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b01b9e56-bf7d-46e0-be71-b1f7f9284edc"
        },
        "item": {
          "id": "ace3e5af-ebce-4d1c-8165-9980a1a15e83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "659eca0f-7eab-4bcd-8965-da5594d29700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c513e771-db74-45f2-ae4c-74cc790a65d4",
        "cursor": {
          "ref": "07e9c171-348a-4ab9-b095-1aea361b98b2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "db69a459-96b5-4946-8716-0934af3735d7"
        },
        "item": {
          "id": "c513e771-db74-45f2-ae4c-74cc790a65d4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "affc381c-1795-4a24-8915-803c2211ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574d63b6-d5d7-4d76-83ba-3b2aa12fb642",
        "cursor": {
          "ref": "4328d91c-195a-4323-86c6-60c2761c7f33",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "34497022-4025-4933-a1e1-f28d0963b71e"
        },
        "item": {
          "id": "574d63b6-d5d7-4d76-83ba-3b2aa12fb642",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "acb36113-a6cd-4cd5-9178-96f8ff707329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba738eff-0ac3-4e1a-a23a-145f77a5b335",
        "cursor": {
          "ref": "9c1dffd3-7f23-491a-a913-e39272c4ddca",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a1e18cbb-9f9a-45f9-be8f-911b48d8559b"
        },
        "item": {
          "id": "ba738eff-0ac3-4e1a-a23a-145f77a5b335",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5d0f890-e8ab-4f9d-8ad7-b3121d8bc693",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 99,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "018fa3d7-66b2-4930-acb8-fd9f7d3985d7",
        "cursor": {
          "ref": "4b3ed718-b6c0-4f4d-9ad5-1ff2fb9c36f8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "89dc9a87-d2d2-4a85-9e0e-b3518c1e2ec0"
        },
        "item": {
          "id": "018fa3d7-66b2-4930-acb8-fd9f7d3985d7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fb26f5e-0736-4395-b2a5-26dc784baaf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7267c29-5d5e-49b4-83ce-843ff6264d03",
        "cursor": {
          "ref": "cc31629e-f175-43b4-abdd-40bcbf40dd28",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "444357e7-9680-4e1c-981f-351200690a03"
        },
        "item": {
          "id": "b7267c29-5d5e-49b4-83ce-843ff6264d03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f8fe2b4a-7d3c-493e-ad88-319b1ac4ef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9009eb14-dd77-49bf-b773-d1777fad7378",
        "cursor": {
          "ref": "a16a3d42-df5b-4829-83a4-f7d1e88da467",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd2750b0-3e28-4763-ba75-706510c7c35a"
        },
        "item": {
          "id": "9009eb14-dd77-49bf-b773-d1777fad7378",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a87b5e2e-1caa-47a6-a00b-fceaf03efc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c13a285-29d8-4a85-98a5-c698a6c80b04",
        "cursor": {
          "ref": "f839eb07-9bb5-42d2-85fa-8b42960f02d4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8e8f916e-ee7c-4553-90a8-f05e4bcb0af9"
        },
        "item": {
          "id": "4c13a285-29d8-4a85-98a5-c698a6c80b04",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef77eb3d-0db0-4773-b918-7f9ca689438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b115aea-63ca-4730-8952-aa786bdc146a",
        "cursor": {
          "ref": "086f2412-380b-4def-bb86-28490eb54d7c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6505d8c1-20e2-4495-9c35-353e9bf7483c"
        },
        "item": {
          "id": "8b115aea-63ca-4730-8952-aa786bdc146a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3a9cae7e-24d1-49f0-a2e2-bbbb7a4d32d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee441af1-4a81-4005-864f-f96aef9ec945",
        "cursor": {
          "ref": "03e54480-d2a1-465e-a66c-7017d5d34e19",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f3b06758-2360-4b52-8ffc-f3efdd23183f"
        },
        "item": {
          "id": "ee441af1-4a81-4005-864f-f96aef9ec945",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "35c9facc-e146-44bd-a976-a440eda2b017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7b8e31-ce15-4c89-bb6e-8a805bb83027",
        "cursor": {
          "ref": "1e5622b0-5685-401c-a7cd-334edc1e89eb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "df9eb03f-8365-44ac-ba4f-2a2526141cec"
        },
        "item": {
          "id": "2c7b8e31-ce15-4c89-bb6e-8a805bb83027",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74cb2323-5bc6-4db6-a0c0-f0cb244e3e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8577ed7d-e433-4876-959a-8c791d913d28",
        "cursor": {
          "ref": "1b07e008-d327-42bd-acc7-67f8fb3e3c55",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "399ad1d3-cb6d-402e-a4ee-3eb34b758dbf"
        },
        "item": {
          "id": "8577ed7d-e433-4876-959a-8c791d913d28",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "739bed7d-ca18-468f-b5a1-e982345f0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7d93c-7cbb-43d0-9ee2-47c7572ed3de",
        "cursor": {
          "ref": "84c52564-94d5-4e28-82bd-555f2b414fdc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8ea98982-9ad3-46c7-85bb-6954acbafa96"
        },
        "item": {
          "id": "8bf7d93c-7cbb-43d0-9ee2-47c7572ed3de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6332ef7a-f1ab-4e6a-9ce9-89b508a42826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19f921d-4767-466d-8a30-bc3e735c4046",
        "cursor": {
          "ref": "2c26fdae-6619-457e-a2fa-bb1625675d93",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c15ac00-5a21-4ca2-bb43-895d84369acd"
        },
        "item": {
          "id": "d19f921d-4767-466d-8a30-bc3e735c4046",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5698ad3c-29ea-4f56-b9e2-ba125d5686d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef9cb42-2f9e-4e7f-86ec-e6d33b79b780",
        "cursor": {
          "ref": "88468b4a-1a25-4049-9b47-164c6fa28b88",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7b656120-b184-43f4-b6c6-0adc8c7022a4"
        },
        "item": {
          "id": "0ef9cb42-2f9e-4e7f-86ec-e6d33b79b780",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c3a023eb-e119-4d3a-8a17-2531e941f9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56be5550-7254-40bb-ac7b-cf779e0229db",
        "cursor": {
          "ref": "28d507b9-2b9d-4c70-9a42-3a9ae96f6799",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5fb4e7e7-a5c5-4e1d-bd5f-5b42ce6bfba1"
        },
        "item": {
          "id": "56be5550-7254-40bb-ac7b-cf779e0229db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d44cec0c-716c-4f98-a7a0-63f2ebb4e9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a16be5-92a5-4fdd-ab8e-50ace41284b5",
        "cursor": {
          "ref": "d4f17a81-ce4b-446e-8602-27f8c8fa3bc9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7496c6ca-a9d3-473d-ae22-4f97dfd47da8"
        },
        "item": {
          "id": "82a16be5-92a5-4fdd-ab8e-50ace41284b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d3c44561-e178-45ae-8f32-67efa35d8aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a332f6-955f-4686-81b1-80a836c2145c",
        "cursor": {
          "ref": "b93c0285-567b-4bfe-896c-3b66f0d151f0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fbd71d8f-7937-4f88-9fb3-493a2d9a4448"
        },
        "item": {
          "id": "f6a332f6-955f-4686-81b1-80a836c2145c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "22fb18ed-f408-4df8-8d56-d3050e9bfcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783fbf48-ed05-477f-af6d-15680c3d57e8",
        "cursor": {
          "ref": "69e092cd-7f19-4ab6-be7a-80957bf88a88",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "aacf50ad-25eb-4a2d-bb95-990bdc54eb21"
        },
        "item": {
          "id": "783fbf48-ed05-477f-af6d-15680c3d57e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9c7ec055-96a0-4e8c-9811-404b2c690c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06684da7-b43e-4f8f-9685-616c7cd84b17",
        "cursor": {
          "ref": "6f15b755-89ae-4690-9207-0f4a03d99d1d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ebf8b3c-3dd9-4eff-9d74-0db59f7d6367"
        },
        "item": {
          "id": "06684da7-b43e-4f8f-9685-616c7cd84b17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34289b47-c6dd-40be-a34d-df09ae734dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2f3b96-ea4e-4ac3-95c9-98cefdc14146",
        "cursor": {
          "ref": "4a5c5702-08e9-40b0-b826-adbc38833cfb",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f149165a-555c-461f-a483-54fac08a8c02"
        },
        "item": {
          "id": "ba2f3b96-ea4e-4ac3-95c9-98cefdc14146",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad00f47c-eaa1-469f-b2c8-93c985aa015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe56be70-c9cd-4a58-bdb4-2ffb5b0bb09f",
        "cursor": {
          "ref": "0ebe8b0f-818d-44f5-9c96-db22a73a03c2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "389626d1-db88-4aff-a9d4-c2db695c68ea"
        },
        "item": {
          "id": "fe56be70-c9cd-4a58-bdb4-2ffb5b0bb09f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4f1f9ee0-c42d-40a0-b3fb-82e36bda8936",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "f59a8733-6017-49c5-b6e9-30298db5be3f",
        "cursor": {
          "ref": "62de204d-097a-4f5b-9d23-f78161702f28",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b4777f14-93da-4fb6-9dd5-38c6c21a81ec"
        },
        "item": {
          "id": "f59a8733-6017-49c5-b6e9-30298db5be3f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b69c950f-f005-412a-9355-8446c1217f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5630139e-b447-4df0-acac-fbddf0e59c43",
        "cursor": {
          "ref": "0aa2b1da-b109-4722-94a4-dc9ee0970a17",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "68b6a71d-cebd-4f17-ae04-af5abf1d2582"
        },
        "item": {
          "id": "5630139e-b447-4df0-acac-fbddf0e59c43",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0a59d3fa-028f-459f-baf4-141e038c701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de3cbdf-7796-4f28-b566-ab36d6a0953e",
        "cursor": {
          "ref": "54ec6a60-70b1-4d55-87db-c21ef0b7dcb0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "20458af1-0463-4ade-9972-fbc5e20e2620"
        },
        "item": {
          "id": "6de3cbdf-7796-4f28-b566-ab36d6a0953e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fd15417-bfa5-4df1-aca9-6de3e227c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d32c00-5441-404e-9522-a2d5c9435079",
        "cursor": {
          "ref": "a384b55f-e78a-4f41-92bf-3fec6f53de71",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "62a6922e-f4f9-4102-b55b-f59503680546"
        },
        "item": {
          "id": "55d32c00-5441-404e-9522-a2d5c9435079",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "41f1b410-4ad0-4872-b295-f2edf5a68cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2168bd3-eac1-4bda-bf64-51eb02e25a10",
        "cursor": {
          "ref": "15e805af-0b93-4c30-a096-c2a69028c69f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0b693093-7424-4bc5-accc-0c4ee3032a1b"
        },
        "item": {
          "id": "d2168bd3-eac1-4bda-bf64-51eb02e25a10",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e6bdad6b-0c90-421d-a548-5ea01ae9e3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bb101f-a8a3-45e0-a434-95d6b756d90d",
        "cursor": {
          "ref": "02b47d86-03b2-4e37-b0e3-b87af816150f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8bb21503-9cd5-4605-aaa4-6a63da8ad8f4"
        },
        "item": {
          "id": "d1bb101f-a8a3-45e0-a434-95d6b756d90d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ec425e7-ce8d-4e21-8650-9de63bf5950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5f3ef-d1d7-42dc-b299-e37328b38493",
        "cursor": {
          "ref": "cca31f07-57e1-48c4-a58d-1e1ae076ff45",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "31ea7546-8402-47a5-9d83-5ec464a2374b"
        },
        "item": {
          "id": "ccf5f3ef-d1d7-42dc-b299-e37328b38493",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40e69ec8-3945-43e8-8be6-f8d71ec6e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fbd4ad-a835-49fe-aae4-9cc6c16e9ccb",
        "cursor": {
          "ref": "708e9032-d1b1-437f-b74d-41808395f3af",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e97ef3d5-be1c-4319-a528-e2db5df6b7cd"
        },
        "item": {
          "id": "76fbd4ad-a835-49fe-aae4-9cc6c16e9ccb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18327779-0f06-412f-8b57-2a81a58d11ae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "0faa1fba-8a77-4f64-bf35-d8a05c6c5e13",
        "cursor": {
          "ref": "dd40d8d1-1256-417a-b590-10373c92e0cc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "265e2092-6c62-4b30-917e-24ba1832b34e"
        },
        "item": {
          "id": "0faa1fba-8a77-4f64-bf35-d8a05c6c5e13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cf0c0f45-9bd7-4bb4-8e2f-2e7f7a100550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f1b32d-9871-4142-8e3e-1725dab7dc90",
        "cursor": {
          "ref": "1595339e-84b8-40fb-b24f-9bc786b691b0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e6a1ed24-b9e4-4c5a-87c2-51623259f8b8"
        },
        "item": {
          "id": "b2f1b32d-9871-4142-8e3e-1725dab7dc90",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "402234b6-b910-4cb1-8f6f-32b2fe8ef2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc0745f-9c84-4e78-9206-3baa9748b63a",
        "cursor": {
          "ref": "b8e1d6f1-1a5f-4bc5-b7ab-fe8da9ce91f8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2cce1a40-2e86-4f91-addb-bc170ee5e445"
        },
        "item": {
          "id": "dcc0745f-9c84-4e78-9206-3baa9748b63a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "45a7aa90-1294-4c5e-875d-7a70446a22b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8883e639-1bfe-44dd-abf4-e7f2f8f2503f",
        "cursor": {
          "ref": "76e6bad6-3747-4554-83d9-d20f34af5e8e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eb7dcaca-2225-4320-86a2-ac1bb1bb89c0"
        },
        "item": {
          "id": "8883e639-1bfe-44dd-abf4-e7f2f8f2503f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b264c2f8-0f6a-4ddc-9563-745dc7166bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22477d12-fb74-41fe-b3cd-fc1d1aa7135d",
        "cursor": {
          "ref": "e3cff69e-22a2-4cc1-9e50-bbcb045fea04",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83a9af10-31cb-4a8f-9676-9ac3f6711889"
        },
        "item": {
          "id": "22477d12-fb74-41fe-b3cd-fc1d1aa7135d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2efa55c7-5f8b-4edf-be8d-11f49521587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3372ae0b-d573-467f-a9d1-d6e13c97b0e8",
        "cursor": {
          "ref": "7b33e723-b177-49b9-be76-ff585ba2f1e9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c2b972eb-902a-4913-903a-c91051a25c6f"
        },
        "item": {
          "id": "3372ae0b-d573-467f-a9d1-d6e13c97b0e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de2f5655-41c8-44f4-8293-c7ba292ae389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdf2c5c-9e94-40b0-98ca-6519078eae1b",
        "cursor": {
          "ref": "5ab20c96-b34d-4603-b22e-36ef76f51426",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b75d5335-6e70-4924-97ef-5086c7e95f75"
        },
        "item": {
          "id": "bbdf2c5c-9e94-40b0-98ca-6519078eae1b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c88c9d60-b261-4ada-9b00-2e3da3417a42",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "771e0d8b-e9fe-4f8b-bd31-b4f3bf432bdb",
        "cursor": {
          "ref": "6545f1e7-120f-4227-a821-0beb8ad90617",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "79571633-f37c-45ad-80ff-7ff83d3914eb"
        },
        "item": {
          "id": "771e0d8b-e9fe-4f8b-bd31-b4f3bf432bdb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5c7a2d22-19fe-465a-b45f-1044bc7b3164",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c66bc2df-0801-4a2f-9157-bf5b7b585541",
        "cursor": {
          "ref": "784e2c46-7b7a-4c9f-afbe-084d638fa58e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7e0f8660-90af-45b6-a4bb-5c10663082b8"
        },
        "item": {
          "id": "c66bc2df-0801-4a2f-9157-bf5b7b585541",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "472348e1-1423-44a7-bd51-63ab89111cf5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7ccda22d-7468-4e69-baca-dfb83be27e4d",
        "cursor": {
          "ref": "dbcaf139-c6af-41af-9c56-c42f3dbe6669",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d6249c5e-6b0e-4925-b3ce-397329632add"
        },
        "item": {
          "id": "7ccda22d-7468-4e69-baca-dfb83be27e4d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c3d143b4-d951-48a6-a51d-21b37130a19a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "859d81b0-b2e0-4ffc-b667-4629320f8d04",
        "cursor": {
          "ref": "18202e00-8956-46f4-b3f6-04f47afa4af2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c612611b-063b-4d2f-9b96-980f51c0f6d0"
        },
        "item": {
          "id": "859d81b0-b2e0-4ffc-b667-4629320f8d04",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7b1bc730-8989-4454-ac3c-7ee4ecdfd64d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "b47abfdb-4c10-4c49-b479-e9e447c5b77b",
        "cursor": {
          "ref": "26abbee6-1cd4-40ae-85f9-730042b0d8cf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92d240cf-67a2-4a65-82e5-571095f7a8d9"
        },
        "item": {
          "id": "b47abfdb-4c10-4c49-b479-e9e447c5b77b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d595f552-0cd2-467c-b897-6c1ff939dd05",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "8053a146-dae2-47a0-ae43-f5e69e1c8c21",
        "cursor": {
          "ref": "3d58eecc-ee9a-46f0-a1b9-a8c5a540f385",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "03b9f6ca-1586-4e07-a385-deae58c56364"
        },
        "item": {
          "id": "8053a146-dae2-47a0-ae43-f5e69e1c8c21",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4d625508-08e0-4184-8862-617877ae5554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae4d7dd-29bc-4e2e-aa86-90b983df119c",
        "cursor": {
          "ref": "b07822c5-30d0-4f84-9b89-2891ed35fc27",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f038e36a-89b9-49a2-bb75-27a78e99b0b7"
        },
        "item": {
          "id": "fae4d7dd-29bc-4e2e-aa86-90b983df119c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "83e478ad-5396-4c69-b895-4642a1767ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efec1a2-3218-490d-919a-855ad05fb151",
        "cursor": {
          "ref": "759990a5-d56a-499a-91ff-27853ba40659",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3e988531-e533-417a-8863-decddb1c57e8"
        },
        "item": {
          "id": "7efec1a2-3218-490d-919a-855ad05fb151",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "84e904ab-5bdb-4c37-be8f-2233c79e3a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3960b57c-8dd0-4053-9ba1-bb04095da164",
        "cursor": {
          "ref": "ac7495e6-948e-4908-9405-d4cf989c50ee",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "14ab0c6e-5e4a-445f-85e4-f92b686ee6f5"
        },
        "item": {
          "id": "3960b57c-8dd0-4053-9ba1-bb04095da164",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "310ccd6f-7d5e-4bc4-a60f-f82124ac75f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ba92f-80b5-4807-ad9c-1a7beb14f88b",
        "cursor": {
          "ref": "d075864e-0a9c-47fb-b138-7c1a4b19d48a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad1eb1fc-6a44-40fa-a282-528e4074337d"
        },
        "item": {
          "id": "0a4ba92f-80b5-4807-ad9c-1a7beb14f88b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "55043687-4bb4-41e5-b43c-d4316fc12f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5690f9d-35ee-4e99-8df5-f201a78554a8",
        "cursor": {
          "ref": "d38b6838-e0ed-4202-bd33-487c14e42b71",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "618b1b73-2022-41e8-8b4b-6ac4f60ced2b"
        },
        "item": {
          "id": "a5690f9d-35ee-4e99-8df5-f201a78554a8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0fea4a7d-90f3-40db-92f7-8ef42fa4d52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f00228f-4281-456a-a18a-c225fd3c110f",
        "cursor": {
          "ref": "a31a83a7-603c-4d45-b706-58d9a1b0f89d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "53918266-7a3a-4035-8f57-cc47ac299929"
        },
        "item": {
          "id": "0f00228f-4281-456a-a18a-c225fd3c110f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "13376e31-07cc-4af8-8b82-7b33cbb96c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44c82f1-4cc4-46f1-b48d-644ffda1884c",
        "cursor": {
          "ref": "1458be5a-c49b-4804-88ed-df4c9a0d8a73",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f0f976ab-7eec-4b08-a1d4-4432fd983e1e"
        },
        "item": {
          "id": "a44c82f1-4cc4-46f1-b48d-644ffda1884c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "54f2fcf7-d399-4528-8474-19040b0cef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2effdf-8d55-4633-a837-f4a3d9ec71e1",
        "cursor": {
          "ref": "a9b58321-8b96-4b09-92a7-df358e099d64",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "01cefd8b-34be-45db-8fe2-b6868c7d1ee1"
        },
        "item": {
          "id": "1a2effdf-8d55-4633-a837-f4a3d9ec71e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5d9a5c2f-0751-4000-89a4-fe298fd5a954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5dda2-a3dc-4e0d-8a86-8553971e222f",
        "cursor": {
          "ref": "886898c3-72bc-4fff-97da-74e1fb769dae",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "61ffe2f2-486d-4902-959e-b9a1e93cb466"
        },
        "item": {
          "id": "11c5dda2-a3dc-4e0d-8a86-8553971e222f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3487cfb6-559c-448e-bc3f-cf1006fe70a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536258bf-60bd-483b-ad64-9bb886ba58b0",
        "cursor": {
          "ref": "f66d2aff-3ce7-4d2d-93ff-e03aee7ea8a5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5056bf9f-55e6-4457-a8b8-31559653386e"
        },
        "item": {
          "id": "536258bf-60bd-483b-ad64-9bb886ba58b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b13ee07b-ac5c-4d5c-b501-c674a2c19750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6363f09-3585-41dd-be29-98ca17f58b4c",
        "cursor": {
          "ref": "87b30ac8-bdce-4840-bd9b-0a8d09f6a783",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "346a2bbb-d82c-49f1-ad55-62ea40700f1e"
        },
        "item": {
          "id": "e6363f09-3585-41dd-be29-98ca17f58b4c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed0d2884-548f-4b4f-b1d1-73695923b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a77798-0bd8-459f-a8e9-26bff31caece",
        "cursor": {
          "ref": "93b357be-b152-4a78-871c-0f382fdafed9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "911ccf99-0a44-4a0a-8ea8-38c6bf128f81"
        },
        "item": {
          "id": "d3a77798-0bd8-459f-a8e9-26bff31caece",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4a67053e-ceaa-45f2-87e5-cf4580b08ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba859198-9dc7-4164-8632-1dfa1a38f9e1",
        "cursor": {
          "ref": "628010f7-bd9f-4938-8a79-3a93024e2add",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "22d012f4-7e9c-49d8-83ff-5be15e011edc"
        },
        "item": {
          "id": "ba859198-9dc7-4164-8632-1dfa1a38f9e1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e928e8bd-fe9b-4a8b-be34-8e8d3b614aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3751a523-f48d-446f-b976-511564998a1e",
        "cursor": {
          "ref": "667a8544-8f79-49d6-923c-ee67cb1892e1",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7a4f62dc-6ef3-4cf6-92df-0ca7a0bc0784"
        },
        "item": {
          "id": "3751a523-f48d-446f-b976-511564998a1e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "71f272f5-d686-4524-86b3-1f1daa3983e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8104d60-a189-44d8-b998-ecabc6e8ecdd",
        "cursor": {
          "ref": "35b1596c-ee7b-47e0-912c-48aa229e1fa7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "36ec2f3c-5417-42b2-b3d5-6a5e2119eac8"
        },
        "item": {
          "id": "d8104d60-a189-44d8-b998-ecabc6e8ecdd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46012cf5-8635-495c-b3da-c4601e13735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9822abd4-26e7-4f58-957d-94e9d61270a4",
        "cursor": {
          "ref": "05744a22-d24c-4560-a3c3-a64aa56c4b51",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5f0b22e9-4568-47f4-ab1f-a28b273467a1"
        },
        "item": {
          "id": "9822abd4-26e7-4f58-957d-94e9d61270a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "97e01fdc-250c-48db-8afd-204517021b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3af57ae-86ab-42c2-9023-afa87a03dbce",
        "cursor": {
          "ref": "390173d2-0ef7-4e10-ba63-7d742d1ebb51",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2609e205-327c-4edd-9307-5a403ab19800"
        },
        "item": {
          "id": "c3af57ae-86ab-42c2-9023-afa87a03dbce",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bbf90ae6-930b-49e1-b7fa-2387a87e7a60",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d065e485-ae58-427a-a200-3a26954fa80c",
        "cursor": {
          "ref": "e13a974c-79b4-4d9e-8d0e-4ad3f6c2eca2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "206320c7-a565-479e-84c4-7bfe28ef2f92"
        },
        "item": {
          "id": "d065e485-ae58-427a-a200-3a26954fa80c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "24f843d4-f91a-4885-abee-a56a41df682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fbcacb-381d-4507-98fb-fa138f88728c",
        "cursor": {
          "ref": "5622e436-131c-4c98-b1b7-c04a85aaa8b7",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "28075c9c-fc9b-4e5c-b4de-8beaf4c93819"
        },
        "item": {
          "id": "06fbcacb-381d-4507-98fb-fa138f88728c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5fc2abd8-d72f-4ab6-8164-2f144a85d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5f9464-4775-43d5-a8f2-0470d118302d",
        "cursor": {
          "ref": "2ab4c2e4-3ed1-4cf7-b29e-ba0f10feec68",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fae9df0a-5200-4f52-99be-217fec37d2d3"
        },
        "item": {
          "id": "cf5f9464-4775-43d5-a8f2-0470d118302d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8a6549db-4e3f-4276-8560-96a629beaa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4169b0c3-ea9a-4311-82f6-77933bf80cd5",
        "cursor": {
          "ref": "9e6c2a09-c806-4c9c-a9d4-6cb689432bb9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "258455aa-3826-4c8e-9de8-154427ca2775"
        },
        "item": {
          "id": "4169b0c3-ea9a-4311-82f6-77933bf80cd5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "af519c4f-d8da-4ea6-9ce8-ad1029c067d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385ea0dd-1650-4220-8d89-870928d023e8",
        "cursor": {
          "ref": "82290ad6-15f1-408f-8529-23e77759720d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "72d3f637-b181-4617-8e18-41144d0cd15e"
        },
        "item": {
          "id": "385ea0dd-1650-4220-8d89-870928d023e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ff322e90-0cc0-451d-88ed-49f525f5354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dafe785-1ff3-49e5-a2f0-625ba78b219a",
        "cursor": {
          "ref": "6db43e61-d133-4e3b-8082-a4895ebbb973",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fb50f65f-524c-4c8f-9b50-2c07fb6927bc"
        },
        "item": {
          "id": "6dafe785-1ff3-49e5-a2f0-625ba78b219a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cf43f5c0-7718-4120-82b6-07c7ff0c205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d00f73-b92a-4db5-ba2e-2444a1bf6723",
        "cursor": {
          "ref": "ef62134c-2869-4986-9794-757e07af55bf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e2b57047-820a-4c3a-8325-87ae122f2c59"
        },
        "item": {
          "id": "b8d00f73-b92a-4db5-ba2e-2444a1bf6723",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "48a8ead9-885c-4787-9fff-15ec0227aaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbe994d-323a-4b18-8b8d-fd0b57e15d05",
        "cursor": {
          "ref": "c0ff7077-1c0a-4424-a903-5fba6b58cb48",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "61682475-76a9-4c72-816d-fdc5c799fc64"
        },
        "item": {
          "id": "0fbe994d-323a-4b18-8b8d-fd0b57e15d05",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f0d63e4-ae55-487d-a77f-a1e250d5c8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1190b64-311a-4586-931a-8f46490f07fe",
        "cursor": {
          "ref": "0128c088-15d3-4755-a722-f029c0466c64",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5226be89-cd4d-4d51-a625-07d55a306ff6"
        },
        "item": {
          "id": "f1190b64-311a-4586-931a-8f46490f07fe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e49c9a45-ef18-440b-a8ef-408dc4c273c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8591ad-5df6-42e2-8aa9-9374c643f28c",
        "cursor": {
          "ref": "5ed4a997-3689-417f-b0f9-65b0cd987c8c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aa3f4bba-13fa-40b6-bf46-59da2383bc88"
        },
        "item": {
          "id": "db8591ad-5df6-42e2-8aa9-9374c643f28c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "54ae3051-11ff-4977-a223-ad1f9cd7cbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417953b1-0e83-4766-aaab-5f0897999561",
        "cursor": {
          "ref": "bcf99608-a89d-4ecf-9f85-4dfc5f9d70b5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0fb438b9-2f05-4d64-bca7-f259c71320a8"
        },
        "item": {
          "id": "417953b1-0e83-4766-aaab-5f0897999561",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6aaadec3-c633-4b5b-813f-be21780fbc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bbdea1-302a-44c4-a028-30928036d673",
        "cursor": {
          "ref": "185ff4dc-6668-4cec-aa8d-7d32564e7291",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb79cc0f-89ac-4a4f-901e-4ad2074ebd45"
        },
        "item": {
          "id": "29bbdea1-302a-44c4-a028-30928036d673",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8f1ac240-032d-4a3f-900e-606782d3212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbe206f-1ed3-48bd-9e94-2539b39b9828",
        "cursor": {
          "ref": "5f334f89-8f7b-4bb5-8fbc-d0781f9c1097",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2fd4b208-0e0e-4b6b-9266-72e105bf3097"
        },
        "item": {
          "id": "ccbe206f-1ed3-48bd-9e94-2539b39b9828",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4769e61c-f1a8-4c63-a50f-5d528187728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9153a8c-8a10-4993-b8a5-98b932a3f1f4",
        "cursor": {
          "ref": "5555bda4-5d24-4a99-aa45-959d37c132ff",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e6e4c505-3886-4eee-8379-7bc8aaab83a4"
        },
        "item": {
          "id": "d9153a8c-8a10-4993-b8a5-98b932a3f1f4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5957e21f-e9dd-4764-b3c7-153058c1cffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b76b07a-23bd-424c-bd9c-757fc9d9d14e",
        "cursor": {
          "ref": "05a78f58-d5b0-4154-8258-b71e487f635e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "afe1747a-8e51-4066-815f-91b1e3758636"
        },
        "item": {
          "id": "1b76b07a-23bd-424c-bd9c-757fc9d9d14e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "958ea2ce-9d43-4b8e-a044-5b7f06477778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460b25a-9235-4a81-ae58-c76ca15d3118",
        "cursor": {
          "ref": "9db76ce1-abf0-43ed-866f-1aca7f299155",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2a793557-c1ac-4e9c-80a3-8dc74e0e651a"
        },
        "item": {
          "id": "3460b25a-9235-4a81-ae58-c76ca15d3118",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "76d581e7-7562-4a37-88a8-408ee51e77b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6af42c-ed39-4059-a660-b74f134f6a50",
        "cursor": {
          "ref": "8c4cca7e-a971-4088-9398-3f6b6dc0fb8d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d6473ce7-e28e-4372-a8fd-44826a2b5989"
        },
        "item": {
          "id": "7a6af42c-ed39-4059-a660-b74f134f6a50",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e530ea8a-7e4f-454d-a74e-e329f0d4c4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b090604-eeb0-4949-8145-488b0d56580f",
        "cursor": {
          "ref": "b12f08fa-a6d9-4322-bb97-4a5ca61d397e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4246212e-dcdb-4698-907e-85611457b1da"
        },
        "item": {
          "id": "8b090604-eeb0-4949-8145-488b0d56580f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ea1c58b7-9b4d-44db-a41c-39cae2cfa986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f4ed59-70bc-492c-857d-53397954f97b",
        "cursor": {
          "ref": "e893b3d0-f2cc-4a42-ad7d-509969aa3b20",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "901f7433-7d6b-4e27-b266-66b6b87c56ca"
        },
        "item": {
          "id": "a6f4ed59-70bc-492c-857d-53397954f97b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cd70596d-7e68-45aa-bc62-046d8802a7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6912339-af98-4f8c-b70e-691304738a6d",
        "cursor": {
          "ref": "a973ba0e-c7fc-49a5-8e56-fcee2da7b1f9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75329972-ffaa-4475-a580-ca358c9bf10a"
        },
        "item": {
          "id": "f6912339-af98-4f8c-b70e-691304738a6d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9298e487-ce50-45de-bc9a-d62d19f6ea61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cfa2e0-0f0a-46fd-b46b-7a2ce4c65d2e",
        "cursor": {
          "ref": "77f19149-e191-412c-879c-a4f74c389c95",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c8f4b04-9302-43b2-9953-5c6a19b6cf41"
        },
        "item": {
          "id": "25cfa2e0-0f0a-46fd-b46b-7a2ce4c65d2e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "25975430-ee3b-47fd-85d3-6aa194331b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd3b337-ccfe-41f3-bda5-75aef3bed224",
        "cursor": {
          "ref": "ecf0c55e-ebd4-46b8-bfc3-13522c0baf7f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4386ae57-9d99-492f-98dd-3b1fab06677c"
        },
        "item": {
          "id": "8bd3b337-ccfe-41f3-bda5-75aef3bed224",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "93e8f6d9-8e7e-4b1d-af51-4da377372b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac62862-7efe-4130-9b67-9498b36e1c50",
        "cursor": {
          "ref": "1754ee3b-8d1f-4763-b7f3-e485d3418afa",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "99d98403-4e8b-4b54-8069-3401570d6554"
        },
        "item": {
          "id": "4ac62862-7efe-4130-9b67-9498b36e1c50",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "25c9c282-b93b-4843-bd19-435eaec4b10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22437e66-8e5a-4465-8f99-25685b6c9893",
        "cursor": {
          "ref": "f609d200-fb6a-4295-a74a-19ea214903a4",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3e03541-b28d-41b2-a02e-efbaa93549ba"
        },
        "item": {
          "id": "22437e66-8e5a-4465-8f99-25685b6c9893",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b5b949a-6873-4911-9ba1-8962543e6e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f7ec2-417e-47d9-901b-4fe1bf5d9584",
        "cursor": {
          "ref": "c973c46d-2f8a-4e30-85c6-51e7dea70d00",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "91c24d51-f4ea-41a4-96a8-4b58d78346c4"
        },
        "item": {
          "id": "6f5f7ec2-417e-47d9-901b-4fe1bf5d9584",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2a3d3b7d-3b5f-4b02-9386-0aa86fad0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d920f-6435-4baa-9094-0ce87cb80be7",
        "cursor": {
          "ref": "4f51ceb0-75e6-4a4f-961e-9abb74fac5b8",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "69a7fece-ede1-497d-865a-2504c2029137"
        },
        "item": {
          "id": "cb3d920f-6435-4baa-9094-0ce87cb80be7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d277c78d-e449-4a47-9d78-595f62ddd420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3866c-5e29-43bf-a7ec-5fe065db91de",
        "cursor": {
          "ref": "f96ed9dd-3080-4577-9576-a78686b970b2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58753f3c-416b-4a19-80e8-d67f1cb750f5"
        },
        "item": {
          "id": "39c3866c-5e29-43bf-a7ec-5fe065db91de",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b78d3ae8-cd9c-4145-8cc7-f364155ecdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac8cc79-1609-4e55-b6f7-9ce048f04913",
        "cursor": {
          "ref": "1b35f9b8-809c-479b-9e62-0213296483e2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fb0b7875-d53d-46fa-b3a6-702635df3306"
        },
        "item": {
          "id": "eac8cc79-1609-4e55-b6f7-9ce048f04913",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "50902166-7a48-4780-abfc-c75dceda098a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f8568-868c-438f-a682-5f1a4ecdfc18",
        "cursor": {
          "ref": "b69b75e8-4b61-4987-bac3-5d24774b2a4e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1f272703-bd58-479d-b890-a95111fbb8aa"
        },
        "item": {
          "id": "2a4f8568-868c-438f-a682-5f1a4ecdfc18",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "da5b3bc2-6f7a-4033-948c-d26e79376ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455779b2-582f-4477-b342-69eb2b1521fc",
        "cursor": {
          "ref": "75da76bc-dabf-4b8b-8ac8-cb24786a644a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9302df83-23d3-4498-a220-1e5f396616db"
        },
        "item": {
          "id": "455779b2-582f-4477-b342-69eb2b1521fc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f8714a7-23a2-48a4-aca8-51ba7cbf2f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e5c0ad-9d3d-4c01-859a-590d296a2f08",
        "cursor": {
          "ref": "a022568a-d082-4294-bfbb-0fb160eeade2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1702b23c-53b5-41cf-bf95-73c7fb83db92"
        },
        "item": {
          "id": "10e5c0ad-9d3d-4c01-859a-590d296a2f08",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9a00873d-6f4d-49b7-b3a3-d4d2a8b839c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49e0864-cbed-4a5d-b532-ca285ce6ffe4",
        "cursor": {
          "ref": "61ed1237-5c7b-48ac-9db8-a6deb16b5aea",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d5eecd89-b504-4805-972d-bdef1a4a9f24"
        },
        "item": {
          "id": "d49e0864-cbed-4a5d-b532-ca285ce6ffe4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf7a4d07-391a-4daa-8cf6-a0e603443629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bb9e33-a803-4008-b419-670af25749cb",
        "cursor": {
          "ref": "30105b8d-4b8e-4b8c-92e0-8fc22065ca0f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6c05fda4-d753-4172-8ee4-468ff056be9c"
        },
        "item": {
          "id": "11bb9e33-a803-4008-b419-670af25749cb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fe9c6cf0-2db4-47ba-9367-b04bd01e9572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce3a014-1a68-4b0e-b31a-69974f17ba57",
        "cursor": {
          "ref": "643d9911-4794-45af-9def-5a4024e87bdd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "06181cf3-0c8a-47c3-84bc-e8475d83275d"
        },
        "item": {
          "id": "8ce3a014-1a68-4b0e-b31a-69974f17ba57",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2aafb715-28a3-4216-9e24-c5a5d99b1ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc4071e-b118-43ba-b8b8-7b43de8298a3",
        "cursor": {
          "ref": "dde4df5e-27b5-4d6e-a6b5-63944b237c03",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3468215b-be59-43ef-82f1-11bf480df742"
        },
        "item": {
          "id": "9bc4071e-b118-43ba-b8b8-7b43de8298a3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "76e78657-a58d-4d44-bcd4-be582e4d5760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f565fe2d-ca28-4dbd-ae2b-d693c929e8ca",
        "cursor": {
          "ref": "070746b3-ac7c-4bb7-a647-cdd00f8940ff",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b52340a4-eac9-4d4a-8b8f-4e0d9da7017f"
        },
        "item": {
          "id": "f565fe2d-ca28-4dbd-ae2b-d693c929e8ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6fd46f75-597b-4188-9700-6c38d38d2687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0308b0b1-1f54-460a-a40e-561e03f83a12",
        "cursor": {
          "ref": "99d88e45-c6a5-42e2-9abd-13e70e33f544",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eeaecf92-37b1-45d9-9e45-624fbc16fd04"
        },
        "item": {
          "id": "0308b0b1-1f54-460a-a40e-561e03f83a12",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "97aed503-2774-456b-99a0-df6e83726e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63125eeb-0e82-4351-928b-ce6670666eb5",
        "cursor": {
          "ref": "ee331fad-1744-4089-b9ce-c0e58d2ef795",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0f11e3c9-8873-4fe3-a217-0fc0fc0fc64e"
        },
        "item": {
          "id": "63125eeb-0e82-4351-928b-ce6670666eb5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6cf8c370-989c-4bd2-a5e8-e5afc77e7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92033dd-c040-4049-9d26-3c6c18af0781",
        "cursor": {
          "ref": "dddf0a40-448c-4bb4-ae83-46858d0182a3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "84212eee-cf82-43ff-a7cd-959bc2b69975"
        },
        "item": {
          "id": "a92033dd-c040-4049-9d26-3c6c18af0781",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "69833851-d983-4b80-8a6e-9829ea9949a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243be852-8453-4f1e-a506-9daa76d66095",
        "cursor": {
          "ref": "3beff7dc-1885-456b-9a8c-a17e7217466a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "95f05465-9a8b-4363-a961-931a6c2dd743"
        },
        "item": {
          "id": "243be852-8453-4f1e-a506-9daa76d66095",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "862fdd91-acd8-47d5-9e8f-b0c23883b783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152e1a27-b0e1-42d2-8edc-279b81e788db",
        "cursor": {
          "ref": "c0515e25-f254-40e9-83a6-97d46ef35d73",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4de0247c-aac5-4007-9e95-4078b119019e"
        },
        "item": {
          "id": "152e1a27-b0e1-42d2-8edc-279b81e788db",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3c56ab17-dcef-40bb-8375-59027ad3cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaff02e-11e2-4e91-a246-735f671edc10",
        "cursor": {
          "ref": "004bd9fb-fdda-476c-a807-8b7d6dda6284",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fce51f45-600a-44bd-baac-3cb01054627d"
        },
        "item": {
          "id": "feaff02e-11e2-4e91-a246-735f671edc10",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37d37ddf-5655-4b38-9360-138233e7ee40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d353ea8-2137-4de8-92f0-89175a54c50e",
        "cursor": {
          "ref": "f342ec61-2ef0-4ca9-bed2-18b81e1a4ab5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d465227-6cef-48b1-9210-9fcd5146ff7e"
        },
        "item": {
          "id": "5d353ea8-2137-4de8-92f0-89175a54c50e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "87cf716d-8cf0-45ed-a6a9-e35bb9179a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e638326-d1ba-46b1-8640-cb2bed23cc42",
        "cursor": {
          "ref": "f9edf0f1-e6d2-432f-8547-dbf2f41f349b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "faf3a6d2-9a06-4c1a-8346-9de376e437d2"
        },
        "item": {
          "id": "9e638326-d1ba-46b1-8640-cb2bed23cc42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "847a256c-64d8-4782-a6c6-ea52c7cce815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e623c673-e85e-4444-b64d-03d83577f3a7",
        "cursor": {
          "ref": "6c744372-91d2-4c05-86c7-d13d1826fba7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dad3c9be-348c-48fd-b3a0-72ee0164e108"
        },
        "item": {
          "id": "e623c673-e85e-4444-b64d-03d83577f3a7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b47df5a3-3904-4031-9ad3-f066e97a6493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346d9563-ae7c-4211-afbd-78142068ac11",
        "cursor": {
          "ref": "f8173d0f-c17f-41b4-92a3-5e372d3b8cf4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f6ce7123-c13c-4ef0-a019-95831e171db2"
        },
        "item": {
          "id": "346d9563-ae7c-4211-afbd-78142068ac11",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22d2c914-6a54-4d17-9902-9caed535a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f1d0d7-e0ea-4bde-9d47-fc991a8e03a0",
        "cursor": {
          "ref": "a7bffe1a-7443-4f7a-951e-abb2bb60fe47",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d05c15b7-1c9d-4d49-b011-432f4a1a2149"
        },
        "item": {
          "id": "40f1d0d7-e0ea-4bde-9d47-fc991a8e03a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4513134-df06-48e6-8c5e-7e2912f800e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ed366a-410e-4e3b-90df-ee3cf9e5a7cf",
        "cursor": {
          "ref": "d60218c7-f355-47ee-891e-98b13d00f5cc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a1a586bd-6f3a-4d64-8b2a-2406dee65e81"
        },
        "item": {
          "id": "e1ed366a-410e-4e3b-90df-ee3cf9e5a7cf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5f8b6b0f-fdbf-4213-956d-1685de50908b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc336005-d6a5-47e3-ab5c-49f57ba39358",
        "cursor": {
          "ref": "257b205b-6a8e-4169-a7ce-6199277d510c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "14f953ab-e3b6-4cef-b3a8-f01549006dfb"
        },
        "item": {
          "id": "cc336005-d6a5-47e3-ab5c-49f57ba39358",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bd55baab-9f5b-460c-9e78-f028b6039776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4397b8-f0ea-4535-b5eb-76099de42a81",
        "cursor": {
          "ref": "fa33d737-5eff-46e5-8192-5d33707ccc65",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b8ef3cb-91d1-494f-af96-c7295857fb66"
        },
        "item": {
          "id": "3b4397b8-f0ea-4535-b5eb-76099de42a81",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c647396f-1e73-4890-ac9c-e5948a800629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd23ef03-3095-4788-8311-6b0bb755e0a6",
        "cursor": {
          "ref": "6000d288-2541-4731-8904-b1e6fd3f29e0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "df47e3f9-7c1f-47c3-8d15-37085cc082bc"
        },
        "item": {
          "id": "bd23ef03-3095-4788-8311-6b0bb755e0a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cd57bd57-4e14-492d-ad97-fed36475a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f19b4d5-5bca-4dd3-b552-4cbd507b908b",
        "cursor": {
          "ref": "af19848d-7dc2-4b2c-832a-bd75fc78d462",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cadb68f5-9942-4610-8cb0-77ed94743a0b"
        },
        "item": {
          "id": "8f19b4d5-5bca-4dd3-b552-4cbd507b908b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9ce13c70-27e5-4b88-bf08-382a5c772c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a3167-b5f5-4773-96d7-5fc5c4dbbe7f",
        "cursor": {
          "ref": "16da1573-bbd2-4eac-aa3a-8970ef767ff1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c00bea31-197e-4d0d-8778-d33825aaf9e3"
        },
        "item": {
          "id": "8f7a3167-b5f5-4773-96d7-5fc5c4dbbe7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be0d87f9-0c2e-4e15-8c87-13e2950f0dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2599ee41-5bad-44ad-9824-15da5dffdbc1",
        "cursor": {
          "ref": "86019bbb-008d-47c3-a22b-a56aa4c140a2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed222f20-12b1-4716-a213-5c963fe3b893"
        },
        "item": {
          "id": "2599ee41-5bad-44ad-9824-15da5dffdbc1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3d5d46e-6215-4db2-88ee-6d30de0eb244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c489590-33e1-4246-b43e-ebd856ed4694",
        "cursor": {
          "ref": "3c11fa0a-4202-4864-bf62-aace3e0b47a1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f4b64818-aea2-42e3-900f-a4c8f6e2b51d"
        },
        "item": {
          "id": "4c489590-33e1-4246-b43e-ebd856ed4694",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f4d5bfac-ad1f-4ccd-bd4f-f7e06a1acf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6de2e7-4b80-4e4b-ba94-7f019c05c4e2",
        "cursor": {
          "ref": "3c3c83ff-74c8-4403-9474-9d8f3a6d3958",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e0d461dc-65a7-4d5c-988b-2fc2e03c9489"
        },
        "item": {
          "id": "3e6de2e7-4b80-4e4b-ba94-7f019c05c4e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "67cd2598-6f34-4556-845d-494d030231a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb172a95-c609-4399-88d7-0e42006d072f",
        "cursor": {
          "ref": "ee1cc7ad-16f5-4271-8691-9b8da9d49773",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7bc53e1a-4a81-456b-867a-1a7b70d6c5c4"
        },
        "item": {
          "id": "bb172a95-c609-4399-88d7-0e42006d072f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "88e674fa-fd5a-41a5-9097-abecadd776fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368367b3-1b47-4063-976f-416a233815af",
        "cursor": {
          "ref": "172fca2d-f61d-4945-b175-38d90da3317a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8d03faf5-e441-4046-a083-db1a1db7b4d5"
        },
        "item": {
          "id": "368367b3-1b47-4063-976f-416a233815af",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00c87fd3-ffb0-4fb5-9144-1df202ed5011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce819e1-fecd-455f-ba03-b999fe575d6c",
        "cursor": {
          "ref": "b19c4af1-212e-411a-8a0c-b3ebb0e23a13",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "59408dc6-1083-4a27-ba6d-b728daec4586"
        },
        "item": {
          "id": "3ce819e1-fecd-455f-ba03-b999fe575d6c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9195eebd-d699-44d4-9997-6e89870859e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4771ec-1031-4003-a993-1173ef3051a4",
        "cursor": {
          "ref": "39f376ff-0980-4bfe-a45e-42fa8a5413f3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a2ae9bbc-1ba9-4c2c-a808-3065a83fe3ea"
        },
        "item": {
          "id": "cc4771ec-1031-4003-a993-1173ef3051a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d79d6222-d17d-41ff-8f12-40f9993f6d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5240f593-7386-4172-9c97-9fd826d7e35b",
        "cursor": {
          "ref": "31b3c590-3ddf-4532-9bd1-2e1bbe6197fc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "71b6824f-e736-4a9e-adbf-78ddd2e0f610"
        },
        "item": {
          "id": "5240f593-7386-4172-9c97-9fd826d7e35b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77db3c06-12f8-4f9c-9763-c2081f10d78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3e4fdc-c792-432a-a26c-32e9c853544a",
        "cursor": {
          "ref": "c114c8f0-b6a4-49fe-a427-b0b17c50c90b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ecdb9b8c-0439-41f5-a4cf-729e9545b51b"
        },
        "item": {
          "id": "ff3e4fdc-c792-432a-a26c-32e9c853544a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b6f9e5a-3407-424e-bf19-b494dd5ffa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1684987-c75e-4f3a-9be4-6b0f943d54d0",
        "cursor": {
          "ref": "e1d20292-40d7-426b-82a6-7a248cfca35a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d87731e-1a03-453a-8e61-55c66a2f118a"
        },
        "item": {
          "id": "b1684987-c75e-4f3a-9be4-6b0f943d54d0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bffba0d-0af6-4ce5-86c2-3ac0cef4170d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeba061-0790-427e-b0be-2fc275742528",
        "cursor": {
          "ref": "aa856718-54f9-46e0-99a7-9c44bd63a43e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "91ce5d76-1ac8-450f-bb12-f68ba8dca106"
        },
        "item": {
          "id": "deeba061-0790-427e-b0be-2fc275742528",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a40ea22d-75d1-4c13-a2a5-0e5166fdb6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fed717b-2b99-4c7e-aefc-fd279ae97a1f",
        "cursor": {
          "ref": "cc4e16fb-3ba3-40d7-bf94-53c7ec174437",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "62ee179d-0325-42c5-970e-b4d933c5873b"
        },
        "item": {
          "id": "6fed717b-2b99-4c7e-aefc-fd279ae97a1f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "512a6f52-8b9e-45c8-ba10-6ad7757ccf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddf742b-d8b2-46bc-9dae-0b01c6acb4da",
        "cursor": {
          "ref": "d10748a6-4a70-4f6b-b957-191e803ad81f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "68418637-1c19-4825-88fb-e86a79f9795d"
        },
        "item": {
          "id": "eddf742b-d8b2-46bc-9dae-0b01c6acb4da",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "065f17aa-42ec-4af0-b84e-3c3226d574b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0fc614-2845-4ac8-a56a-cf8e3665e39d",
        "cursor": {
          "ref": "f7581159-903e-452f-9273-3c9eb912355b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d7931ad5-bb23-4649-8894-8598a1c2e756"
        },
        "item": {
          "id": "6d0fc614-2845-4ac8-a56a-cf8e3665e39d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d75a6232-290d-4754-a7d1-1fbdca36e346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0442b1e1-ddc4-490c-bb9f-1fee67471cfc",
        "cursor": {
          "ref": "8c342b76-eb01-4dbe-8e73-397128d6ded9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "838bc003-07be-4ac3-ae9e-4b419591e147"
        },
        "item": {
          "id": "0442b1e1-ddc4-490c-bb9f-1fee67471cfc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f04ef14-be8b-4e5c-bb82-7b6200a8670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9448b53-858f-44eb-83b6-488263b1a265",
        "cursor": {
          "ref": "2e90b59b-2726-415c-8ef3-7535f4f620bc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8fa68cd9-62af-4a89-9072-177a1b73b261"
        },
        "item": {
          "id": "e9448b53-858f-44eb-83b6-488263b1a265",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fb26b26a-9ecb-450e-92ff-a8291d91671f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573f986a-2b01-4bf8-b85b-f89637f24f99",
        "cursor": {
          "ref": "89bd943b-c7b7-41a8-a7ad-8182831cfddb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "15928376-240f-4f88-a4e6-4bba9d87cf9d"
        },
        "item": {
          "id": "573f986a-2b01-4bf8-b85b-f89637f24f99",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7c4e9e93-51d0-4a2c-a945-10abc46f7821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c33c4c-ddb4-43ab-987e-701e2dc74bca",
        "cursor": {
          "ref": "c3705d59-13a5-4375-b8c8-210bd82d4c1b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "91a1ade1-70d9-4a2b-af09-94a8eb4190f0"
        },
        "item": {
          "id": "38c33c4c-ddb4-43ab-987e-701e2dc74bca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6482ae29-abaf-4a67-9fea-7b8ae7bf24f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0441d6-5957-4648-b413-dbfbdac1f2e1",
        "cursor": {
          "ref": "c797512e-8fbd-4d8d-a80d-fd84434e60a1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "aab82106-359e-4a0d-aae5-c6dd68166136"
        },
        "item": {
          "id": "ba0441d6-5957-4648-b413-dbfbdac1f2e1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f9c48cc7-f44e-45c9-9e4b-e2b3b3611512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407459f8-ecc7-4641-95ee-ed0babb5ae6b",
        "cursor": {
          "ref": "e6d994cb-2343-4775-a0da-f527e0ef80fc",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a797a49a-1fb3-4896-b0a4-fcaac5aba0c6"
        },
        "item": {
          "id": "407459f8-ecc7-4641-95ee-ed0babb5ae6b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a4c7e59e-e256-424a-91de-1d9dca4e67bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a012f0-35a5-46cd-8380-bba59d09325f",
        "cursor": {
          "ref": "935ddfa5-5858-4e8c-935c-692195652926",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "765d5d3e-1713-40bf-8934-886028ded896"
        },
        "item": {
          "id": "12a012f0-35a5-46cd-8380-bba59d09325f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "15905dc1-e3a8-403b-9430-f69a73459465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94e1ded-95d3-4f52-ae2d-74245dceb498",
        "cursor": {
          "ref": "647962fb-42c7-4e37-821f-702d2fd23c97",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3524e680-218b-4973-985c-b2417c7189db"
        },
        "item": {
          "id": "a94e1ded-95d3-4f52-ae2d-74245dceb498",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f76e237a-15d4-40c2-81f2-b54265353230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb4eee6-3ed4-458d-9fb3-ebcb8fce1b50",
        "cursor": {
          "ref": "a22b4d61-16a5-45fd-bb11-f2aef95fb2c3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "42265537-7128-4bdd-bbda-0079e9cfeac3"
        },
        "item": {
          "id": "fbb4eee6-3ed4-458d-9fb3-ebcb8fce1b50",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c2f6b5bd-1f6d-46bb-925a-1907f7d9cb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3a5acf-c6a9-4a95-9137-97afa43326de",
        "cursor": {
          "ref": "6abb8883-aa2f-45e2-90aa-a882953c558a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3c3a3b8c-c499-4f66-90a5-a304b37779d3"
        },
        "item": {
          "id": "6c3a5acf-c6a9-4a95-9137-97afa43326de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0780dd9d-a42d-4535-87b8-72b39a1a0ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a484767b-35a7-4970-a3c4-e73baa89d668",
        "cursor": {
          "ref": "54fc76be-ff72-4d0a-9b46-57020fadebc9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5fc9d948-9262-41b0-b919-31f63064cf9d"
        },
        "item": {
          "id": "a484767b-35a7-4970-a3c4-e73baa89d668",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74bb7d13-f355-44ef-afb4-9f011a17d9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a6d01-cb48-4dc9-b130-37b505e641f9",
        "cursor": {
          "ref": "3f3e76da-ad89-4215-bd2a-1a2e6297d762",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f2a86643-3c99-4821-89ab-b501b7545fce"
        },
        "item": {
          "id": "0e9a6d01-cb48-4dc9-b130-37b505e641f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2816d7b8-fc1b-4654-8073-49de418c8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb0d072-d2b8-48a8-a78d-77cdeb38b3ec",
        "cursor": {
          "ref": "c94a751c-c502-4603-a731-4d64dcbf1f54",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b5b0a595-8c8f-451c-9107-e3cc5cb4dfb2"
        },
        "item": {
          "id": "8fb0d072-d2b8-48a8-a78d-77cdeb38b3ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "343164fa-4428-410e-9556-3d9b9cbef925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bc7399-b275-40a0-bdb8-5bbc4db51499",
        "cursor": {
          "ref": "7e29a9db-813c-48b0-ad24-5cde702f63e0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "73f0b97e-7942-4a00-8b19-f51d503c62d3"
        },
        "item": {
          "id": "27bc7399-b275-40a0-bdb8-5bbc4db51499",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d5f7c4d4-5734-492d-88ad-5a32bbc6d4b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f21df79-63e3-44c8-927f-53e9ab930957",
        "cursor": {
          "ref": "6c7c452c-9cf8-49fc-8139-3fd29b40711a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3507e34b-4207-4f23-930e-cda7da023b93"
        },
        "item": {
          "id": "6f21df79-63e3-44c8-927f-53e9ab930957",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4c9093f3-8778-405b-8913-9c8f95b29bf1",
          "status": "OK",
          "code": 200,
          "responseTime": 166,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbafe852-f7b9-4fcb-a86e-c74bf37c044c",
        "cursor": {
          "ref": "546517df-5850-4761-8972-723d85279fa2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "534c4ed2-c73f-406a-aa87-acf901a3bcb4"
        },
        "item": {
          "id": "cbafe852-f7b9-4fcb-a86e-c74bf37c044c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5bd77bbe-4952-445d-b5e7-91861a74ca32",
          "status": "OK",
          "code": 200,
          "responseTime": 7883,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6961dd50-064f-43de-993f-9a239c1b7ba0",
        "cursor": {
          "ref": "e30bb2bf-a3c2-43b6-9e10-4651ec051636",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f38c4598-4bf7-413b-bdb2-048396481bb6"
        },
        "item": {
          "id": "6961dd50-064f-43de-993f-9a239c1b7ba0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7dac4eb1-af68-41a8-8e19-bd594f2d2a02",
          "status": "OK",
          "code": 200,
          "responseTime": 3675,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4d5374-fbc2-445e-b446-e8d467300139",
        "cursor": {
          "ref": "400850b7-7930-49e5-b0fb-0b51ab1aeb08",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43b16f64-2dcd-4b06-8880-e91588733a46"
        },
        "item": {
          "id": "fd4d5374-fbc2-445e-b446-e8d467300139",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00b208be-cfed-4a50-853f-3d8c903d8691",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4d5374-fbc2-445e-b446-e8d467300139",
        "cursor": {
          "ref": "400850b7-7930-49e5-b0fb-0b51ab1aeb08",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43b16f64-2dcd-4b06-8880-e91588733a46"
        },
        "item": {
          "id": "fd4d5374-fbc2-445e-b446-e8d467300139",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00b208be-cfed-4a50-853f-3d8c903d8691",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f970a4-654e-48b3-bc9b-fdc5d9b69ee9",
        "cursor": {
          "ref": "85d7534a-9715-4fe1-a672-db0ad3226f40",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "77e727a1-1bbf-4c82-ba46-c5dd0a493b3c"
        },
        "item": {
          "id": "48f970a4-654e-48b3-bc9b-fdc5d9b69ee9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e730902-e38f-42ef-98df-a65efaa7746f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19706c3-7c4b-4d66-87f6-bd5b1b672ec4",
        "cursor": {
          "ref": "8beb00c9-c8f2-4581-8f4e-8e2504262e2f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "417c1be8-989d-4452-9f16-d28738b9ca14"
        },
        "item": {
          "id": "f19706c3-7c4b-4d66-87f6-bd5b1b672ec4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ade05d99-d662-4314-afbb-289f4c9839b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}