{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d02929f6-2dde-4f7b-806b-cec175a74682",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2952bba5-0020-40ca-a5d3-b0467a585e75",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "633dac46-c057-464b-b9e3-0cc92a3e2fdb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46dbc3cb-2047-46c6-a37f-659e31f40b6e"
                }
              }
            ]
          },
          {
            "id": "c4bcff41-ee5a-4ffa-80c2-86988be56d74",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f079f6d7-a505-43a1-95f6-be7385aac241",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66110199-f6b2-4bcf-9b9e-c7f96ef67c17"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e3cf7742-ebc6-43bc-9c5f-3d86d576b47e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "44ed96d4-9231-4d05-9de5-2ded62f15cf4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b07f890-4c02-4648-a88c-7bb9307afe02",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a31411f9-864e-4dac-b172-a1dab1792eec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6ff52f2-4b56-47a6-95fa-e1f7a6a11aff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d6069eb-d42f-49bf-a26f-5ab19143546d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c367970-e923-46bf-9bb2-87e897ad4432"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ead05f29-fda0-4bc5-a541-c3d6464f931f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d1454c6-2cbb-474f-92e0-4399c50d3acf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "453e9295-26b3-4094-8db8-1def48ba602a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe71dc19-86f5-4ba7-b67e-bad432b1ae21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9799922-ece1-47fa-9164-49f929443c48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04ce5dc1-0145-4ef9-8b44-e49520214f17"
            }
          }
        ]
      },
      {
        "id": "4f8422fd-de91-41af-bafe-b0d429aadbd1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c79c5d5c-b7ca-4390-8224-d72e68caba69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47ee1981-7976-4e8c-98d1-880f6d706985",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50c62d2b-f4f6-457a-ad9e-1fecfde13e85",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4aefc2-ef27-49cb-b7c8-8e32b65bebf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "268ab699-7ba2-4405-8319-5320918b4db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad9595b-fc5c-46fc-bea1-b56c209b0683",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae379c56-caa8-49c4-834d-122bf4bbd9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa9a3c9b-a5f5-4cf4-9d1a-1e771048fdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dabe6d-89f1-4e62-b7f4-db03e67f5002",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74079c-1a3d-418d-8b91-f8352a64170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00aa9302-5c31-4c1e-ad0a-bede9dcb08f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9495a7c-27e1-4a37-8e1f-7945ee4db824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e67cd171-7bdd-4223-b712-f462f90307ef",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acdddb9-8ca2-4560-9b7b-7f4a6533ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bf6f382-8da6-409b-b23c-0063522f8739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9814e72-5adc-44e7-825e-1779c87e8895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4fb5b5-1a74-421e-b13e-de1d96425715"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b1e09181-2d5f-48ed-b2e9-8cb301b148bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac4cec28-d742-4104-8df0-47c4df51420e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b0b5fb-b1eb-40cb-a8b1-aa871d5326ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb138f25-480b-4c31-b93c-740b770fd3ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f0e56e6-0941-4365-9c7f-0fcf343f0abd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d9625c4c-7ed2-498a-ae43-56311c2798b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bad79926-a2fc-4a2e-a410-1e66b590d06a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "546b2568-d5d7-47b7-92d9-dd90a2d1a53a"
            }
          }
        ]
      },
      {
        "id": "b2f134a7-2501-4d4f-a79d-007968ee46b2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "838f5f11-d109-41ca-9697-76096573264a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4a9390b-e828-4bd6-befc-9d326a134f8e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "86ff6d7a-fa01-4555-b0bb-99ecacf30769",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847a4707-11bd-45d9-99df-9800372dd2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d858900-955d-4892-b0c5-520f70308ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0ad1ad-21f2-4029-b92d-f181495795bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5f0a3c5-aa25-44f3-ab03-a25ed330fad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8c99cd-6aff-41b5-9e79-4be83e9054bf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f92eb57-72df-44bc-94de-ab45e538c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8677e5be-75bf-48d3-a357-debe4814d0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2037e778-e475-4258-8343-cfaba6c2840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "501cbb29-f835-4347-aefc-206e56411b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2656aab4-4ea5-48a6-b2d3-3bd78c7fc729",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35bb4bc-9758-4490-ad46-7f088b5e7286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f88ced7-f51e-43f6-8df1-4049f006b067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f443137-12ab-4659-8877-66ebd52dd00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e356a9e-30eb-4024-81b4-a97685ab5a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617c683c-3e5e-4511-9e15-c2f69faa7566",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a5b445-5253-4cf8-94e9-05fcd552ee7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cb8a28-8646-43a8-a588-f1ed9d3048fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741be7f4-40bb-44c8-8038-099fcfa5c1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4db7059-7b7f-4a59-b465-46622cc79292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593d35a3-b352-41b5-8818-c2169b39fd48",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b76f30f-6404-428d-a517-605ee7e57b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41451f4-dadb-4d7e-b019-a41833df9bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8d5bb5-21c9-4e42-9224-59cf8a2cd667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b52aa987-cff6-48e5-af7a-cad3fd195a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4fb08a-8291-4a7c-bbae-3bdd47602096",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a71d82-2d60-4547-89e2-a107d311cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d178d5b7-4ead-41e2-b5b6-d70f262ac709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34da0fe-499e-4973-b796-9ddb97b6139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae01598-feef-4ba7-873d-2e0ae1c39f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef032634-58f6-428f-a7ec-264ca9753bb7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e145847-8b54-41c1-982b-b1831da7a9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87715569-e982-4586-872f-c9b29c68e789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11e0b76-5364-4272-ac27-967c0066fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "310d8b5c-1c78-42ff-9d50-040e6c51c8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b346f551-3263-44a6-ae83-e838af4ce232",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137b3843-e4bd-4a54-b9bd-447ed13a43c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb977010-7248-48c5-8512-e03ee77531e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3e0f1-aba4-432f-86a5-5f72587be984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6802717-7771-427a-9fc0-1a049df56782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d55489-68bb-46a4-90f0-c336a0e01d59",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0733c9c-414f-4f96-8c0b-ff7caac0c056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098cabcf-baae-4e32-b966-b992bcb1a950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff26a215-ed23-45df-b893-084095a953fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90177b78-349a-4785-a834-a2915cbe15d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2dfd87-54a5-4942-84d0-9e64ac4b7c6c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b180a63-68d2-43e5-a5ff-54fecf21b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bade96-7620-4f06-8efa-091d0762c505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6bdb38-a5f7-4dbb-a06c-13250d5a56bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80bae72f-7b1e-4f66-acb1-df568b27b8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f8e39f-214e-4d7d-b72a-f8da39682358",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad18bb1a-7b4c-4341-89f8-78224732dad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb35aae8-ee26-46a0-a309-2ca57fb88d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e023b572-940a-4f3b-9000-3fbd367a12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93612c0d-ded5-442e-8a39-770ba87d2b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a8b29b-c7e4-4006-a2f1-21c3ca524386",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19657c39-bf67-4964-ae98-a1a9100f110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2783f9a-1c3e-4e36-9323-ad5f78854ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3b2700-1367-4841-b894-87755dac0f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6aaec9c-6ac1-42a9-a61e-6579accda756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b9f72b-2e98-4b16-af5b-f9e08ee5e19e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d949b0-c725-426a-872e-e7fca09c87c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cb57ca-af06-43ee-9fdf-3663f1adfa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169d8589-aca5-4f62-a651-50ede1d3061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c92e0ac6-c641-4990-9c38-6eea2828290e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc34a6e6-d828-478a-b9c6-27522008ef8b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a0011-6d54-4692-afef-739af840d60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c29f0c-4402-4ee5-af3a-a7a432a6e5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b713763-0676-4e17-a8f3-e3550841d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab8b0a40-80bc-48f9-96ac-fe781ef91be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f68c783-24b7-48a5-8806-ff8f22224e34",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a609f453-cfdb-4d77-886b-65c24aa8d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc42fa4c-6717-4742-aefd-c41b78223959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a45c53-8fa4-45cb-8ae9-3b08a9a3f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7e934f-3463-4134-9152-526f2e187b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f37419d-6e58-4fc2-a39d-4ae6a9641812",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2593c3-e3d4-4aa8-8965-2528cc5aff31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfa4b93-c2e0-49c6-a64e-2e901da0846e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a15f0-4b96-4af3-ad58-790c9713c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24a73dc2-b9c6-4b8f-9ff0-c465d7b714fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0053ce-ca48-4f6d-9429-5bcd62888d10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17adba-6184-4888-9ac4-755aa867f286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9276258-110f-4ea9-9a1f-70a594d608ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32cde81-5b39-4fcf-94ef-64fa1ce607d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa5d261-b75e-43b5-b424-fa37ec12946b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29d3f7b-17be-40e2-8eec-b815d994e211",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e209547-adc8-4257-a156-57d46eab9039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181ba63d-d4a5-49d2-835e-ed4fcac22e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c05e0-4f05-4db4-98a9-9bf9eb937154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4e1169-7d51-4102-954c-9b6ce189de67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeacea7-c63e-487d-bd53-1a1bfe1c2711",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485a300-75f0-4f62-b845-d33c770c8129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd70296-5541-4716-bd13-34a2bb69b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5894f0f-37e3-4f2d-865b-d0a8e4a301a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01a3066a-b849-42ff-af9a-a62557daabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805b4f6d-2d32-4bfb-9135-e19d475d7dd2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24202787-0b46-466e-b9c4-5a57465fff20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1fbcd8-2436-453f-8deb-2e5b1577e009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9443dd-44a4-4ff2-bebc-02bc0cfae43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a716d03-4c33-4bb9-aefb-d78aad05ae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71af7e1b-2d84-40af-a245-7c34f69f06d5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af5f71-b556-4e95-9021-b4fa4d98e96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf978fba-e941-4b50-9c38-ab390e9d0fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c544747a-4540-4070-aec9-f991a7711526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c872063-3600-45a8-a17b-724d54e3c648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa4a97a-7af4-48b6-b9a6-3d7b78258816",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a96b83b-01ae-41f2-8f10-b8b8d8e08621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba2c84-de8c-4855-b75d-6ba125005da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8358c0ef-cb67-414c-a704-647b9f130ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "412da456-690a-492a-895d-4e43abe01345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403e17d4-5669-4612-8666-16506a5aa378",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8428c231-68f7-412b-a3c6-d2c541c21c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ea9f3c-f75a-4ef1-a806-6a7cf30cf773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f4f90b-0c7a-4ade-a588-461c74579e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff9ad35-ea1c-4a54-8685-64962cdbf00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6868aa-8d09-4ff5-b084-88e667df5d56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92172dfd-e062-495d-9ce0-0aa006bf602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bf449b-9d4e-4d04-b951-dcbe65d63656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfaf672-5c81-4aa2-a4b3-30f7752d6668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e49239-3285-48de-b329-f4bbdae2c7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09d973d-0bf2-46d5-adbd-7d59ffe82a38",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da719a25-c7f8-42d3-a873-76460a8bbfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86570d81-4b1d-496d-8ba4-dac80886cc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a12094-3e4a-4184-aed7-775ae651a632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdf8b35-8c79-4660-ba19-5a4311b95026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ad6a6c-79f3-4181-96b8-742583594c53",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad80cd6-9aaf-49c3-a92e-bbcee2355944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1926754-5851-49e8-a480-8aef8c98f8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1573713-168b-4c06-ae29-536c6833be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fe3ee2-fe2d-47a6-85f1-936cf462d520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c51833-0bf1-4f79-88f3-4f108b523187",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511ca496-2fe9-41b2-b59c-77a95c34978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f076ed9-cb5d-49a4-9537-27963110ad2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06da8d96-072e-4b0d-8a34-0af3755ad4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37d5e72-9397-4eda-a0b5-bbee6d6e2bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec79b149-c59f-4bb4-bf5b-6085265d690f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c5f7bd-4370-481b-8eef-b7fb8cd96d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4ff880-cdbb-45e0-89c9-d66657fb140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce04bc7-7b6c-4fc7-8fb5-ac833a1b33f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8b2f56-cf4a-4432-bb2b-1ef692282add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7990a1-fdad-4c83-82c5-13f9be375ccf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46523cdc-c3d0-452a-beec-5954cea3fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c60198-1a22-42ff-afa9-65a85970e8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f48bbf-cab5-49ed-9048-e3b901afbfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92fe26ed-2250-4b19-9089-2d0dc9d77886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfcb154-ca3d-4b8f-acd3-f92d1b359c6d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cee57b8-ef89-4fda-9e72-3f2f117ca94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a08287-7b78-413d-9a11-535e263f79df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaad94b-4fab-4f48-8989-852f0ef483bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57f40e2-dcce-495a-ad73-6246a903f61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed1e7b-c3b3-4d47-84f9-9ed5321eecc7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0730f2-0c6f-4872-a140-ce573f5b42cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33267769-6fcd-43b5-8377-070cd03428db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49e91b-9972-4dff-b060-84f73053baab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49ede56-bcf0-4da6-b3f7-081c95790d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b46f4a6-26fd-4737-8862-e2cd8a26785a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf1d92f-defd-4246-98c5-a9102c9a65ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3f6958-9305-4dd5-a5b6-a955f9c974ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ca118-a284-4b39-a692-f24dd5695fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a498a71-6afd-4f56-af98-df7bcef413f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a121029-f742-448d-a749-61dc1b6f3087",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ceff43-1f33-4fc0-b2df-b957c6f0e246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc2792e-bfda-4948-af8c-b019a1bfbbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f78b13c-1912-44fd-9c0e-d9e50b9de930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a344a8da-db48-42bb-8def-1e721a3b24bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f5bd6-c01d-4078-a214-2bfd60343470",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb9d040-890c-40f6-8f9f-2a7015627743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02607927-388e-43c1-8b9c-58aa00d71ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab34e65-899f-402d-b390-76dff005728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f81bdaf-2516-4427-b8c3-276639209bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d11dba-4b70-4298-9ebc-20563d9e2018",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febfce1d-dee5-4905-8ebe-0608bf97f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda3cfad-c789-45a7-acff-8d6cc020fe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14577443-7412-494e-8f9e-fc9ec30b0314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe1b28e-021f-45a7-832a-c71d98c94ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2fa463-8213-42cf-8e10-34d201e4f6d8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4c89b4-c1d5-43ed-a80f-4188637e1541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb4e1db-ea7a-47a0-9ffc-acf08bb5395b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f3962-642c-4b64-bba0-131587114a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "867add7c-94e4-4ca3-a1f1-765586115b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe68a439-7e4d-4728-9f38-54da25ded385",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791c5796-8381-491d-b721-b788eedc6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d75d49e-a79a-4abf-8b60-012db3e0810d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c014f50-884f-4693-aa1c-4e2433ca9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1606cbd6-813f-4f2f-a6ea-59a41ac7a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8117e66a-a7e1-4880-b4b9-bbc4129950f6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4d3b28-7d4e-43f8-8b0f-9965f2765ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1ff6df-7384-42cc-878a-31ac732f4d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6738e5-0e82-4c03-a95b-932f5762bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "219acfc8-d3a1-48d7-8954-b7ef1c4845b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ac2bce-169a-4f64-98f7-f7e7b951f80e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839dafc4-e7b6-487b-8453-8c0e46c63077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494c5e96-0bc8-459d-acee-fa25967cd8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6279b2b1-d9f3-4b29-b9c4-2d67a05be720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6d8958-f7d3-42b3-9f50-a72f07ab69e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03eb2e2-d2c3-48b6-88a9-f85eb51b4600",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff064d76-7573-4624-9e6b-4f18c7b1df32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c6329d-2e7d-4381-bdff-0c9cb29389cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34199cf0-4638-42f7-9b1b-c484d49c8f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb1e764-6a1a-4997-8c10-c4c13501bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa205e2-cb21-4627-9efa-7c1f76da3659",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23d756b-f011-49cf-b9a8-2eacdbcdc02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61824fe5-f24b-4a51-bece-887232c6240d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d87ecf-01b8-429e-b068-a1a3d171158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf3a463-ed21-485e-b9c3-4cb1aad47561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce04e13-c58c-4db7-84d4-f3dd7e7c9cef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e917b3-719c-4bc3-b44f-8a329b286413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cff2c16-1646-4eea-8366-5f52efce5c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c250dd-04af-4df7-8d1c-54a4fa245a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "84061c60-ec81-4d44-a2aa-7a61bdab494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d221095a-eba9-44dc-8781-ba370e61cbc2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4a04fd-2c88-4e81-b8f8-23c024f82eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480986d3-67d1-48db-86b9-e221a6d42f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c00be8-276d-41f1-bb70-843c842c70de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6d300f-7b73-4714-9cd5-04736ea859be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d637ab-c941-436d-8877-a00535669d86",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f28ce-8e73-4e56-b04a-ee159b9cfdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84694ab1-a32e-482a-a0a2-d111687ed11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5cb3f3-409e-4229-86ad-a147758ed35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9212896-b899-4941-89e8-2a245cc6cf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f775e9f2-04fe-4a6c-851e-65b7c1adff00",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657a0b34-5153-4f33-9c9f-7902a3e83b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e05af4-cd1d-4fb0-be23-bd3bc3c525c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0142fbd3-d565-4f78-97f3-ff93e4aa8360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b05f05-c986-4011-bec3-158037f2b973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47044d7e-20bf-4ddb-8063-a35f3f6f2eff",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da6f8c-cf61-4498-b51a-0b924502f433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca6c094-13d0-4d63-bf4a-5f4f8291996a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5b9d8c-caac-41b5-864a-6057252c3ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0462c3-f5f4-4c7d-b791-e5d34f6e87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bae5c9b-612d-4837-9725-e9eaeacabdae",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80623968-3538-4953-bc89-c26bed8da986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb73c9f3-7f1e-475c-bd71-47c67b570c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bea8bf6-9618-4bba-832c-a67e046e2e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed5bd4b-2990-4be1-b764-2cad0250d8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df55fefb-4712-4818-87e2-98cf38b93eda",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d05613b-e7f9-44be-85ea-d9fde7a36348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fc7bd7-b9d1-4f19-b941-81a1893b09e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b02eb1-c90e-47c2-8931-e0a8a396c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed483bf-123e-4c90-8baf-4fad812585a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076674d3-10a5-4aa3-a8ae-9c9d52436462",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f0fcf1-aef2-48ca-9807-6d5318b6bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c26808-173e-4bbe-be63-0f4bb1c400f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f836a36e-1211-471c-9dc0-aafa0b5c4d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7095436d-05e6-4f22-bdac-132e40a27af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9181cf-e9de-46c0-bb4b-5137439bc84f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2103510-c2a0-4180-8016-d00ef4c61ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965930a4-ecf4-4f3c-867a-bb2aa12bba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3174bbb-bb8c-4ffb-8b97-3c8f9ba1cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e72b424-4342-462e-a02b-bfdde38463f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ede5fce-0252-4055-a754-58e5bc72280d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f40d35b-f5cc-4c2d-a6c8-6538d58dbd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba6f094-9573-4bd2-ac32-048a9dd2143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b5a03d-ee56-40b9-9cc2-16ade28deb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2718dc-36b6-426f-b60d-106798655b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c0da09-4b23-470e-b800-ff0e03584f5e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a334a-306f-4542-be3a-7788b4ad985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a51ad-e4f4-4ed9-a394-8228d9568575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944a91fe-63cc-4c34-a71a-288fcf932777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85273cf9-00cc-4156-b205-3b9ae421f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646a0ae6-78f7-44ee-a40b-552e4b474fbd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006b0b3-432a-4944-8561-7a66391bd697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffba7435-ff4f-4639-91e6-d264672e207f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928969b9-1211-48fe-9e15-be8ae64936aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd07e487-75e9-4fbd-97ec-f3b7264336cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70eea95-8d36-4bc9-876b-fe2464dc2c28",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d40fd-86b6-4f2a-86eb-ea464e9374d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b056b0-8008-49f7-8a35-e1a80ac95b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103f3835-bfbc-488c-9eee-a2b747030a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3845c39f-fedc-44eb-adfa-01b0db5d8046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ddcf25-c4f0-43d8-838b-173837ca38f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c552ac-eedc-47f8-a4ba-6e3625071f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8218a14-443f-4429-a42a-674d12aa48bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77f5fe6-8164-4c95-a397-667a7159fcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7bde4c-840b-42ac-bcb1-55e3377cc40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe69a98-4b8a-4e68-8fb7-64861ace0eb5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21c8b79-e327-443a-a6ca-10d20e426f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef1a7b6-6bd9-4caa-825f-dd51f99a670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e138539b-48dc-43bd-9e4d-7ba47af2918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "139a3dec-7e63-47b7-9dde-bc15f509aa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de09d1b-7623-45bb-b42c-1dde09e9c3d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d352ac83-7f4b-4aca-915d-fb059864bc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0168f26e-547a-42f6-89f4-332176558173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f072b6-84a0-40c5-9bb1-a34319856f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c14dbfc2-c08c-4e0d-90a5-8720bc0315ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae162edb-5e55-4f92-9a4b-6cac727c31cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991645e5-564a-497f-a174-1db33ab97bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36658168-942f-41f1-b0bc-6c97b59888b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133c63ac-4c5a-43b4-a715-92389da6ffd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34436a05-21e2-49dd-85fd-43f8ce5512d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28092fa-a9bd-4041-8367-09dfa4202923",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5f26b-dc57-4107-a24d-d71847655ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e213e23-1906-4532-9341-255674bda5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf801ba-314b-42f5-ba12-e954637b5d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b25f06c-884a-4ce9-bdc9-7515e2be1c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c87e80-25e3-499a-b61c-ae7b78af1403",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45f6c52-7ec4-4acd-b6c6-5f4c3e7d94f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea09058f-b974-4ca4-b774-49f1a9e0fd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee61fbf8-f6f5-4699-b481-2454dde6dacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1058aa-b648-46c8-9624-506b6a6ead5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d55295-833c-4ada-a12a-c6118cbe2af5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f4dd58-cdbb-4262-93d2-e3615f50303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9084074c-2b29-4ac3-9763-d35968c2423d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c085aee-8c9f-47fa-8a37-e0c95b9dde51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e730e45e-f1fb-47c1-a384-33e851e497b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b59540-b11d-42f6-bfd8-6a75baebd0cf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8c151d-dec6-4053-be32-45d830d45783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3b8284-2dac-4e08-8b56-1fe96307a8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b61266-34dc-4795-992c-dca29976818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc8a9fd-c5d5-4be0-9c74-7e8d7de366bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68db5d86-12b6-4088-9132-f3f0a303ca65",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7393469-8f91-4b21-b4f8-0f13a3c00c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff53c868-b187-48d4-ae27-10e0fc2881e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c503602-4f99-4048-aa96-1767e58ef704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a105f8f6-b5fa-481b-ba8d-08e4d6d6f0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f1e2b4-8014-4f41-af3b-3379ba9e4a12",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875fe91-e272-4de2-b860-ba6133826cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7eeb6-15d3-4952-ae20-a1b0c3ff5434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e0362-fd73-451b-a0bb-2ec41966524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "082ef404-7dae-4400-b50b-170a437d1e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bec38e-6e02-4676-8782-9da6b2e77cce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82168f2e-a783-4169-9582-9f11525fa835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e80935f-8075-43f6-a45d-d62a4ec93d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8b8750-c027-41aa-8bf7-ffe846d3acc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d959ad7a-dc4c-466e-9ced-4c303a456301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d871e94-d655-4ca6-a67e-805d47dd9391",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefa88e2-a8b2-4876-8c6a-bf2a6c75f3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f820b4d8-3617-4ca0-ab39-f9080564562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5233019-7110-477f-9ff0-55a518ba8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aac33a8-e70c-44ad-bb3c-702e20bef8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962d20d2-def7-48ce-9133-d1e9f17c4ca4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448d0acf-f9c6-497a-aa37-9403abf3c533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9640031e-db1e-40a9-9c06-cdddcfa1dd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41db4c6f-ec36-4b5f-a6b5-3806b76a9dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3df9a947-dee1-4ee7-b5e4-5c513143eb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b222642-ec3d-455e-a325-b9883506747c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36459b30-2aef-4b26-b623-89369d6194f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91c7f46-adcb-45a1-a9fa-0d4b1b138c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2524fc64-c292-4046-83f6-35bf66e413e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b0da38-3099-4294-b4e9-c41ae732e5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7247f9-0612-4a59-b6a0-0698fa7b9220",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5beee555-9e6f-4afa-9cb9-fbaeec0e2c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ce3f5d-adfc-4794-97ff-de783b5ab445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2144791c-0fbc-4be6-bb3e-a8e960163697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a282c8-e9c8-4b6c-b412-14bb0d74fb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87967c8-6bb1-493c-ab22-a0305d5adae1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860c423b-cc05-44db-ba4b-9b81326c66f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca82c221-9ba6-41c1-af85-869e9295284d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2b757d-a033-4ffa-a5af-3539d73f8459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ab2bf4-6d32-4acd-95d6-e9ed667b8822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598f1c14-0244-4f19-afbe-cb13c7ef55d7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43576fea-2e2b-4ef2-bee7-fbac42ea5224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d11c91a-8eb5-4970-a597-e2fd40e31737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45fbde8-3929-47ff-828b-1362d203abbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0a67e1-0507-409d-9415-7c1204e79ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48187494-71ff-4482-8a2d-33301a3ffa85",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b31d6b-735e-4fba-906a-cf816e677eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bf5123-d5e1-4427-bcc8-b6b467f006f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344da654-e305-4654-9723-30688cbbd65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "984a59ee-812f-45e6-a0da-7ae930ea74ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf7f52-c943-494e-b45f-04bd942a3ff5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca50b9df-2e76-4cb7-8ba0-524a0a86c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb03fa1e-c114-4c36-b23e-1fa9dba10628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b79af22-5e39-4376-a6af-31549fc8e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6110a55a-e056-4043-9599-cb5bf55ccc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafc4562-6bd3-4f14-a049-f14c9f6809dd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08ce36e-debf-4d6f-8671-aaa2101dcfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc61cc92-b3b4-4506-82a9-adad9d2167aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14962908-ec78-45c4-a9e5-2a77b4750013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a54a5b8-5364-4220-ae36-33bde16fd07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9f6c07-678e-49bb-9e85-a770f90ff263",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ccd466-71e7-44ca-8c78-2edbac3cbc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6cac57-4b44-4494-9c50-a2f96db89457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e016e728-449d-40e0-b02f-43f6533a3cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e99186c-26b5-48a3-9a31-539ab0b79550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd627af-6c35-4954-adcd-bf09d8e372f1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1ee4e1-e37f-4cf3-afd8-4b0e55022d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7a5f94-b643-4bbd-9f1c-58fd148ac1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000e5234-b953-4179-a26b-6995c69fcb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abc31efb-4df8-4a17-88be-04a6fd71b767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d942c10-924b-454e-83a0-59e5de078e75",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a952d020-180f-4d29-b6b0-6c9473c50587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05257225-c493-4bf7-80d5-996b5ffb52f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3ef8c3-9076-4301-9a46-d9fd77c9c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22dda6d-46aa-4cb0-af39-c6f21c85761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6becb306-070d-4bf9-96bc-10a74a8b38a4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a9ec8c-c855-46d5-8982-2d02ccc6d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ab0b22-8b08-4b78-b727-6a2f6fce32bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30b3ba4-629e-4cee-ac13-99c26bedd5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c002a79-711c-4754-b5a1-b7300e6ef464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f50884-dd83-4543-891e-f2d8a2a977d5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e22adc1-4ee1-4c53-8dd1-54abef2abea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637e7283-6865-41bf-a45d-41e345bd3d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300bb89-b664-468c-abc1-cea062648e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b71828-7de8-4a79-b5d6-0e005950296b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecc7ee1-7392-414f-bd16-f7ccb3990550",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231f238c-54bf-4353-98ad-73653d1d751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9953b610-4465-4fc6-833d-99188a1fdc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a2010a-f7a7-4bd9-9ab0-8312e4579813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db295393-8ef8-487b-9002-f5acde47ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4304205b-2cb2-41f5-9a13-23aa2d76bfb7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac8a983-d778-4a10-b138-ec842a17aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9446a900-c84b-4ac1-9dfb-ab0283d63520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee332a91-19ef-455c-86d7-ee1b95027907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "815e3b55-31a4-4d8a-b610-9fa3241406bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78545f6b-1d2b-4d3d-a009-f82ed6bf22ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43839649-f255-4df5-bb11-5b48700ee595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b5f639-5197-4ba5-9fb8-6f7af4053377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eddbcaa-fe4f-4ad1-927c-961b615e4515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5ee8e9-6625-4477-acc2-f69d87752363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f5a370-b4f1-4e20-9c50-ee61a4917b5b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed4a5d3-0423-40dc-869a-341b24a22573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc13f5b6-297e-4b60-bcef-9dc83769c375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113ffbea-ccb0-4a5a-a9b2-8648c73108f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed02578-204d-4bd0-8c67-c34c969bee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953f0ecc-3948-4f5a-ade6-baa9ee560d4c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a690713-de4f-48a8-9aa0-9f2aa87dd8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d43f95-3dc1-406c-bc2f-fa3007cc51e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db250256-f42b-4c2e-b64c-b150ab15748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3c6ae3-19ab-4d58-80e5-364e2e776ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ddfd3c-6299-4390-91b5-bd0552b405f4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc63e47-3117-479d-b6fe-8e719040de4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536e686f-9fe4-447e-b0c9-941beb3645ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0a54f9-c95f-4a96-9c9b-7fa4794bc036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99dc392c-84d7-4725-adba-44543b7d4015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a034c8d8-1bf7-4830-ac3c-bad221876f94",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d30ea-4171-44d2-b4ce-7dc9aae56f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3ffdd8-13cc-4098-b2a7-0f50e16de7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aa7c08-aee1-4f3f-a24b-545486370a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb2c543-1a00-4125-93d8-85371642b6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91112c99-ebfd-4916-93e0-76a4d7fcfb2e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1371597-a538-4c3c-a095-f98f05234361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dd16e6-23e0-418f-a6e0-27e01da3b6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f41ead-f09f-4a3e-b6aa-0cda7e29d91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "488f204b-a297-44d6-a000-fecf8bdc2097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e059fe7b-b23f-49b3-ae27-d79a1765c213",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b501bb-d882-4e65-8a1c-e768077b6225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59338ed3-684d-4064-a38e-5fb9dba634ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9447ba01-682f-4540-8c23-994a9fab3517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81efa020-c2fc-4870-8d4f-db6b65d821df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c69d72e-aad2-434e-8027-d30e5c1db053",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8047f05c-8a8e-4603-9e15-e123474dac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d366a0-1098-4974-9ef1-8411a83e8900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2330c6-cebb-419a-8e70-70a09b92f37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbbe917-61ea-4886-ad61-bea0ab9db1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf1d084-b037-4257-8609-138b5c963913",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee21dd9-b310-41c4-9738-f2b87f392159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0105e613-e5ff-4ef1-aab3-56ce3f7e4479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da2ce4e-dd06-4a7b-a985-397658e44d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f47b6e3-f2a6-44e2-977c-a812de4522ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f76159-e8e8-47f6-a342-da0e7e1a532e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5b5bb9-72f5-4ecf-b57e-b16769b9ea94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3756726d-79c4-4fdf-94ca-6c363f089aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bc362e-39e5-4f5f-bebd-8b2516c9efb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c81c8d6e-4dad-455d-a800-13099cf30ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c763c9fc-61f4-425a-a22e-19fc39438b29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd16beb-60fe-44f6-b858-2be8dedca3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aa69eb50-04f1-4e6b-aef7-3c7de1be245a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5bad30-ff03-4a62-991f-a7a37c45c876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15fd1fc6-c71e-4066-992a-9737625ced58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e08bc1fd-a5a2-4165-82d9-861a65487f33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af073d89-a44f-46bc-bad1-df28cfba9208",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb28d805-254e-4f56-a2c4-69b6f1141706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5c1decb-15d4-4cf7-80fd-385e240889a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d2a815-50be-44da-b522-13744209f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "059b66d3-b592-4e7e-a443-5785e5c5615a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cde6d62d-54d4-4153-b736-776af31d7d8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67fe3a5-9823-4910-9ba0-c41a9ff9d062"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "caa69ff0-2704-481e-b9c6-d01af875bbdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca77f5d0-986c-45fc-8de3-a3685cee6d57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43154af5-008f-4172-99d2-854ed918796b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5bdaa0c-9ad4-4ee1-93cc-83e2fdf21d09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc9f0376-b2f4-4204-8840-b1cbdd720852",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f00855b8-620e-41a4-b273-35aefb8d8337"
                }
              }
            ]
          },
          {
            "id": "89c05065-d881-461b-bee4-fa7211484d0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e110050d-e42f-4df9-854a-a69061a9625f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fa029971-448d-4874-b37d-06f912daab5a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d1c3dc-da8c-4273-91f1-b5bceb4a7c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2d28f67-fd67-445e-936b-2701c9414322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25c00fe-c570-473c-90d2-7497def50928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e85593c-317e-46ba-9a9a-aca111df934d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b4cff2a-c024-4725-8b15-e8f1a4e36377",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16b74b6d-e0e3-4226-97e6-bd00b8f5f528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "536d108b-e9f5-465e-9b19-b50268010056"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed7cfcc2-8bc1-4918-86ae-c72dd62660ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8995ac5c-3765-49af-9ce4-d979ba0286eb"
                    }
                  }
                ]
              },
              {
                "id": "1785b015-ace3-4073-96a1-2748ffa5d385",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fcfb583-a2d7-4658-921d-37d8fb08f8f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bead3986-d3db-4354-82c1-e6ce69a89a0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7ed7909-bd9f-42d8-a961-ae3db629f7e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c5b8005-4a69-410b-9c59-4aaecda8e275"
                    }
                  }
                ]
              },
              {
                "id": "27422616-3b62-45ff-b74f-ab70dd7f20f6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0afcc03-5156-47e1-b975-83feda4d6f5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d04864d-b607-4597-9db4-a31b58d8e5a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f91e9f1e-8869-4b80-a49c-01c360892776",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac5fe94e-3f09-4e82-9c08-58bbaf57d88b"
                    }
                  }
                ]
              },
              {
                "id": "dba0743b-df57-4966-8530-75eaca4b3fec",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b611114c-ecca-45f7-8d57-863037a02fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee07b468-ccf4-4d59-b0a2-bdccfc162112"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a21e30a3-7004-4f22-ab73-13e6586005ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "489f86c8-e509-4e3b-9277-2931577df502"
                    }
                  }
                ]
              },
              {
                "id": "fd42c3ba-2b89-4f5b-ab8b-3b5c20088293",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f49d637f-6683-4a8b-b86c-0cd77bbb08ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f77be60-93ae-4b4b-aac0-ddba11c54593"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1e703a0-470d-4164-8345-98c30f495a3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca39d110-365c-45e9-8465-f565b2313dbf"
                    }
                  }
                ]
              },
              {
                "id": "750abc56-acc7-4b6c-a2a6-9d57092e0b0e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1685d311-56c5-4e36-a514-2f1ad2525dbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbfc5c56-9ee0-4430-8821-423cb05c67cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3af24e09-53cc-476d-bcc5-09c45273d922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92cfb2f7-eb0a-4115-a454-c86a65be54af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "702d15e2-118f-45e8-bc3e-c39dfd288d94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30e93e38-c9ed-419d-aff0-dd8d482716f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31e3dfde-2384-44ca-b042-86a84370796b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50c300b2-d4c0-4824-ac96-4b7ec561ace0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba0b3270-8210-4ed8-8f68-713e386de42e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1368927a-bf19-4875-b6f2-9ded9fd5d8da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0297205-3f56-40c9-9535-f49288262c7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "625bfd64-b325-45fc-86e4-cc2b695aac7e"
            }
          }
        ]
      },
      {
        "id": "7fd9a6e9-e5a6-4f83-bf01-ae372cb3e263",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "93bedc98-e74f-460b-97bd-9c0bcaccb76a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d0996fa-fe76-4f6b-8923-f83442b549fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07fc49ed-00cc-47eb-a693-7ee870d14a3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd155bc-afc5-478c-8561-05018540f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72333071-d1c1-4001-aeee-c30533260de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e88580-8c48-44b1-b8e2-8376b63b188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "460c71a5-6741-4c42-a8c9-8c60cd844205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da787d77-4def-47ce-9a0b-786dcde28dc9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef078e67-d66c-4786-99a7-b65de978aae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e68354-b98e-4f94-a420-a5f085b3ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8657f525-45e3-4dd7-a995-5329672e51eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "314ae67b-5bd5-4b8f-b11b-8957dfc2bda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cabbb2-4df4-43ab-b5b1-03bafcc6c256",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8d9bb-6e5e-4d36-8835-5c5e6f8c9482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d23f9fc-5d1f-409c-bac4-9e92d422845b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbbd724-0b9c-4050-91cc-af1918ee5c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14f76fa-306e-4fa1-9e05-6497e7d49d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42578b61-8ed4-4752-b8b2-0e5f9c971c04",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc39a9-32dd-42e0-a520-c1d58bbf7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dfa3da-dd9b-4e08-acd5-40008d8b52e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104d9fa5-b219-46ce-9dd9-79aa73094f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "352f9212-ddd1-4bef-84a4-d18ee3c3accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e725680-7508-4554-95f9-95528e3993f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d55658-5491-4ccf-bdc4-6b9a860a901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46728113-793a-42ed-9b36-ed7d71cd3402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbbf415-487d-4931-8449-310f95c997cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60b58ae-6554-4ad7-934c-56341a7091d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4a826d-a2a9-4749-8e48-e37c947efdb9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6110b9e9-a7c6-4c09-bfdb-5209c12e8947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d040d69d-3e4a-47b3-b45b-a8ffc4d33fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25faaacc-4372-4105-8d94-8960efb81601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e114cc-5af1-4d5a-ad4a-9d9e02a5e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14223e9-64fc-4074-bcad-cab111cc19d5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0854955b-db41-4e01-bd22-ac0bc977762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de92fdf-1743-4ca7-8cb1-e0c4158f4f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a8e24f-7981-42d6-a105-e6ae275f8429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b52e69a-aa0d-4503-9e5c-c47fa3de7643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f46af82-840d-4d92-8ebd-221c400ba834",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a805b5-7f89-4de2-ad84-029c0ffba594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f196f60c-fe1a-40cd-bd35-937b3599cc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2959ed7c-e033-4ddf-9816-3270374157e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76bfee5e-6200-47a3-8eb4-fd36e3eb67be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58ca568-5866-458e-95bd-124898b4bdf7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da3597-593c-49ef-9d6b-d2213fef5b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9f15ff-1805-463d-acaa-5e471a97af0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ae4217-a932-41b9-ad7a-042e983b3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a25f21b-974b-41ee-b3b6-65526ccb4184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070f6af-44f4-40ce-a9d5-27c43ed674f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c74843b-655a-49b5-a146-3ab8fa73b99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60569970-244c-46d6-a60d-88e98e414574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eee56f-fba6-42c9-b8dd-60d6ff9ec6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab1b874-3f41-4f84-83df-3c7631e9d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db9bf1-bd77-49f4-8812-7521a54d73ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17387b2f-2ae7-42a7-8ead-ed18c4bb41f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99778f0-a75f-4289-ba64-abb446d9e53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9a025c-1db2-42b4-926c-5349bf38e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6eb407c-9143-4b26-b897-36f30897ecec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295985ef-439f-48a0-bc1c-a1454ac2f4b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544fc9f8-bf3b-4a5a-b799-adfef21930c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a781cf39-7fc1-4b2b-a202-094e03eade29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e195981-3440-45ed-83c3-adc51118d969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "570beba9-9b0e-4752-9b03-dea618411a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777666b3-3575-4e65-b097-69629590a183",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fae1a9-f3e0-42c8-8a1a-0fa87f64b8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942f38ba-d9d5-4a7b-88dd-ada06b030d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4694d39-cb50-44be-a42b-0ca1b1daf985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed0e4b8-63c9-4231-af42-01797dd37be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5e6d2d-57b5-4553-a8bc-7ab0d130fdc5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747cca1b-94c4-4e3e-995c-c5e44f80f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240502f8-753e-4154-be7d-6a74078c6cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16576b8-7117-476f-a599-ec898bc97a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e32d3b-c059-4d8c-8085-8c7e9233c30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f3a1f2-4976-46d4-b184-85f428e5b20a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860d35d4-055d-4d2b-aa47-314b95fe1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6a8f19-fc0d-4fdb-b6a2-07f591ae0425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02912d6-ede6-4ecb-92e7-14676e7e302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d302a78a-8652-44ca-85a2-9c40f603ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ccabd-a38d-4390-b964-0037e2573261",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20a295-60db-40ba-b629-8a8847738d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e013da94-0d03-4e6a-b3fc-5ae8af2c8d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7d4d92-fad2-46dc-9c32-cba34f52a114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6034df3f-eb8d-443c-a548-28aa15c4304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1530f14-001a-4c0e-9eaa-54478da9a9a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d865179c-cd38-4db9-831e-0336fa1c03ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0958b7b1-5dc6-4bf4-beee-03c05e7437a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda00d34-d66d-4035-b3d9-41a7408f8135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f7e0ce-c03e-4f93-b3cb-7033ecb520e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708e296e-cacf-47f4-8fb7-539042d1dcdd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f620ebaa-0985-4ba8-8b7f-6363f460269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87260c3-46d1-49a0-8db7-887b64d48dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82b3216-4ecd-47ed-9b2a-7add834cb539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37847157-834c-4001-8772-5a8cf9ee9ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dade85-a568-4b80-95c0-19b2569991f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272a0790-c92a-438f-9761-7141b8a2c100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32406c75-b256-466a-90ef-2a0012c38f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ceb3ad-7ed5-4784-8fbd-b449338ae7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df414ead-4ffa-4221-a026-190312cc12a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfac3f12-2cd4-4c83-8904-4e175c3f8ef4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a2459-b5d2-44e8-9d4b-a4f9fbdc66f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6343b594-0ea2-458f-ad3c-3013308d943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea34e2-672d-4757-b003-42cc40beb74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b249a8b-c5b7-40c2-9e76-57be0c66fbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1a11e2-6027-40b8-bb48-0b5f3aeb21a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfda67c-6e4e-496b-8778-584df9380038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431b455e-22db-4adb-a10a-84e3092179c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03507eaa-00b7-461a-a616-5b28f41b7fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b1d52d-a530-4f99-8793-c2cf0d161dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1331b961-a1dd-4216-8921-8d30cc351cbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03003e7-338f-49ff-ad00-aeeb4d05a412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12773433-c019-42c3-a038-ec135f8c04b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf7db06-e592-4ee5-8473-d9fac11d66f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4474050-5a04-46f4-a539-94b9c8069dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc2cbf5-c9ec-462d-aa29-9b597fe59a00",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b979fcc-56a6-43e9-8e57-61e5cfc9f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccc7a61-dc6c-4ec4-8de1-72a7513842c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9169ac3-1c57-4b32-9119-e516028b24a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34cbe234-2ebe-47eb-bd5e-0e0f95dde3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4732dddc-0a2d-4b47-9311-43acd6d651d6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494d0139-765e-4107-a50a-4c8a295f536b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3e6725-98a3-4944-80de-fd49925a42b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395fa24a-21a3-406d-82c8-b7f98b83bbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6cc3c2-59ff-46b4-b9f5-a2a02107e9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3534f126-e72a-4c8f-bd43-e6cec0584e2e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2227737a-aad2-466b-82ab-8925cf3b5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cdae86-c227-4d2e-8bf4-82199b4f0511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994494b7-e93d-4e2a-8e28-be8f5460cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e726780-6660-4944-9ee9-ebd258d39852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3556561c-181f-4171-9941-3556b4b83ce2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08b0c56-567b-4335-b3d4-526ca1fd3531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb4dc51-19f3-4546-8e4f-eca819ee8fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beee235-fbe1-4e78-bf09-ce57fd8ba2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80a85bb7-e436-4891-9dfa-a8f16875dbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84a7268-c72e-4614-a005-95ddf496b559",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52d24e6-cbe4-4665-b4f9-5d15de72dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c8ff77-7f0c-4f86-a04f-73058eeb87a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094fbfd-f1fb-472e-9b40-4c6e010d8b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fc4afa-3434-4613-b526-0195421bfb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc880625-c38d-4a26-82f4-68668d04fb47",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e921a01-7ff5-4875-ab92-74eec4a02662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2133a9-ed0f-49dd-b1a3-b384384a56a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6efecc-77dc-43db-904b-eaf7d9b2aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec59c9a3-0e36-45ff-94d8-42547c7219d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47076b49-140d-4719-b951-b0f7b43b6713",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d20246d-97a4-402f-b3de-918158693f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944475c1-2a9b-499d-aeeb-60975b5c7a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4512cda6-6fb2-4f8f-8c58-a35295553344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122c3f05-5925-4ee7-9ede-7bd73e433345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cd4c89-e725-4e76-8931-84d38dc2aed1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679dd37a-2c97-45de-b1f9-7e5179d08766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e8998b-a3e2-4bc4-9ebf-1466a1586bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0002fbe9-88f1-47a8-92d2-ffda2276132d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59325ded-7fab-4d3c-a55d-e904cb9cbabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebe1f70-1990-4e0e-8dc0-d1990b6ace3a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5950774c-0429-42f7-9622-4fe6e8e91865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ef5dfe-32cb-45d2-9ffa-913dd5feba99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c805eef9-b95c-483b-82f8-42be27a20ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223ded57-1e9c-4f12-b3d7-c1ea331aa983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8245d2-7d6d-41d7-859c-dccc7ab92d74",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fb5fec-d163-4ace-91fe-2b3874995430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfd8417-8d2c-4852-ae33-68039ce51255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d89ba4-c93e-46a4-ad1d-1c4b447e9486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db9342f-fc74-40e8-be0e-e38c67c239e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f93ef4b1-88ad-4ced-878b-d36bea79c7ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4b16ca8-869f-4e7c-83eb-43e1b438372c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dde5aab-9291-4fd9-b054-52e546ece412",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11637a7c-21e0-4b06-ae89-7dd6538e66a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba6653c-1e2b-4a1b-9c23-f30f0af8fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd9cbf3b-3711-4b56-995f-056c3cf6ca3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "738d95f6-fa2e-4166-a4a6-c4c98c14c2ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd55e020-bc9c-481d-92e9-a2c399a452f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d9f81b0-fd79-4152-ab7d-4e817b1c0e1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e99ca4eb-8d05-4766-9fdd-5910820c9aab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f3f1a8a-2fe6-483d-b189-375e27e5ee77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f3c4499-e9cb-4e8c-b2d1-1cc296a15966"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99cd98dc-ec8b-4604-95dc-b6caa48ce542",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95166e36-3658-4dd2-bcf6-402ef1cf781c"
            }
          }
        ]
      },
      {
        "id": "34c536e6-3504-4e14-bf10-014f789b9625",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1d2192e0-7dfe-4a46-ba95-eb8e96fe961b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f7de928-d0aa-4c91-b6bd-82660caa686a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6849a58e-a43f-4ef6-9934-211ac59dba4b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c8df70-32e4-459c-bbba-176f7f5e3ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e3a84b-4d64-4188-8212-0c3f579b2493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e171626-68b4-451a-b582-fdd261ddc151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28e1c45-cf9f-413b-843a-43fe8527ff2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b924bfe1-6c22-4b2a-8e99-49e54efe4360",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2bd325-0ec4-4f46-9b20-01813ca601e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fae6fce-f71a-40f2-a98a-ae1eaad4f26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a379d4-a2ac-45eb-93a9-2d549fd57dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce07686-3f41-40c8-8400-e017621df40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a35829-eeaf-48ef-8ba4-c0dffce8b87b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa28966f-8b10-4ed6-a8df-20a9de99c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857bf0ef-7313-4c79-85e9-5b340317a161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa762373-83a8-4036-a432-f3cd42585515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a619a20-9b55-4e14-9dec-c58ce74a2228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568596b-40c6-42b5-8933-1caf955216b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f90005-6dd1-40e4-8cdd-4445afb30188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5a09c9-16aa-4216-8e52-9ecbd8839899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4277afd3-6210-49b2-b4a8-b82f5966e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b684b3-e3fb-415a-ba65-1c34bd49fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127150a1-82ea-433c-bf9c-730b2b7a93b8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3bd33f-604e-4363-a9a9-15b039476625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a641bab8-1655-4036-8ba5-441b49e28d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba65498-5d90-4173-8588-980ab15d8dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6c719c-b009-4a45-9e68-010f45116671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd10645-27a4-463d-b4ed-a2de221dc656",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4180cc-a9f1-4715-a0ea-32823b83734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9271e563-638a-4a60-ad60-42d9aab3409f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1b784-09ed-4584-9ba1-6212be3b6b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953f2f20-fbad-419b-8881-f8053589986e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef73ed65-60d1-4745-a790-09a01c9716a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89db1304-a39e-4c64-982d-3c97106130a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58634de-c383-4249-979c-4aa6fe0e0811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb52e3bd-d99b-40c4-96b9-6a8439b23d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "567f178b-11ed-4892-bbb6-6e43aa98dd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a298db-4ed3-449a-ab40-d2f703c2a193",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcabf6f-a3f7-42b4-8eb7-bbbf0ee43da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b951c3f-a997-454f-9a63-e0814888f729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a648d-2bf8-4f2e-b9ad-13a068ea7b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e647e6-bfb1-47f3-be0b-9646530fe508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3596394-5a15-455c-8e3b-e1773879c746",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796fb2d9-5b2f-4718-9718-60302d81a4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6441e4-a024-4c77-a8ff-ebebe3e72094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f1481-b4cf-4cf2-b811-aff5ed7bb107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e96a32a-5420-4983-81ac-b4784f75b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91b7f48-a9b2-4cdd-a06d-918df79ffb10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a49c9b4-4502-43a8-8732-1dd0d4f05d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d6b349-9f8d-4c04-955c-9c9f7ded00a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a878e-8570-4623-b356-e67b27ac0f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3568379f-c2ac-40fc-a87e-4bd82cf7e725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b171cc7-148b-41bd-8bc2-2d2d49539132",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f380a38-298e-4ea8-aebe-ef21d54d1011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c035c047-e570-4f9c-be7c-c9c45b9e0d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf40599-3fbc-4916-b8ce-27dea7c4e775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12eb71b3-d3e2-4cea-a2f1-c70078ae4521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc6c5a-91bb-45eb-ac99-9e636eabad8d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a04548c-e069-4842-ad53-f562c240ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a24808-64f6-4f20-9bb6-a0d2b8929a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e184c0-62e9-4991-a842-b52249979366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91fb742a-af5a-4168-a242-11734e97000f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19823df-4a00-4f99-b122-072fa470fac0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9069d46-6a5d-415b-913b-d141ed8cdfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3610b90-071c-4edb-a63f-8277302c96d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2735a0e6-853c-477e-8641-ad381266955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4bf882b-3eec-476e-a36b-0720fc11f012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af35b97-0cd3-44af-b612-d6c60a8168cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733dfbd2-7b53-473f-9bf8-56b7e722bb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ed0f1c-365f-4444-98b2-45d2e9363688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab727137-d495-45a9-a366-d012a08dcd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61decba7-fd73-43e6-a4e2-ee5fe1518703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ce9d3b-2325-4bad-9658-19ff73ea2784",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b557ec07-54dd-4d64-b44e-9e77cae72fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df262ea2-5cb5-477a-872d-538142569463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5207512d-0f8a-437e-aaca-96caed24ab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1866a8aa-816b-43eb-8f26-67b0c624baf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a98f3d-0847-4bda-a8ff-36e0c4b0680a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eb6703-5ad0-49cd-9850-275d68f7f292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865e4f54-c36a-482d-91b5-715c2ddb11bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e615e6cc-d621-4d06-9706-eb8f1cdb1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "759b4c45-ed20-4581-8c5a-8d330576bc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a061d7d-1212-4c82-91a0-3484785e4833",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417e0f5-8eea-4271-9ec4-e9da21540e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36925c3c-3b70-414e-8c4e-837ff296a7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee808bf1-120e-412c-b195-85cdffa8fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82abb256-97b3-4e3f-9879-7078f39adfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cafd17-a539-4619-a6de-5681b9f9cd37",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec33d7c-8d35-4cfc-b0eb-ee7f784280ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ad04ae-4b7c-457d-b8c8-da090cfc0068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea28618-344d-492c-a4bb-a25e9dca3b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e07c154-cf18-4e7c-9ac6-64e1419cf72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb1584e-71c3-4f9a-999d-321ae43a02dd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30fbe52-13c0-4e44-b5a3-be3e84c9e135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975f4698-5491-4632-bde0-ab0b7df9dc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7167912e-61ad-4376-9983-ee9c05ac9447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509d774c-fed2-4b60-982c-b0dd1f613358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dfe653-185e-4292-81c1-6682ff8fbc70",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4dbe8b-2b3f-4475-a5d9-7e91cfa20572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b444ac-1791-4876-a848-5a88706a9c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5684f8-01af-44a0-92cb-72055e83a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb21abcc-4aad-4235-b783-d9d93c5a767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61985bd8-ccfc-468c-87bd-94cbfbdc5a5a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1b04d-8bc5-416e-bb2d-56685705542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859d39ee-52bf-4216-b8a0-5d3dd4adf687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dbae3c-7339-4ec6-8a21-1a92c8967ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7146d8b1-4720-45b0-b85b-21350fdcbd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d435f21f-55c4-4d0c-94b7-48473bd06a01",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2236af9d-28ea-4caf-87a1-3f6ae7092cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eecaf2-5cd5-4ce8-b2c2-79e6b3902acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4270e776-3c4c-46f0-b07a-909dc3f5e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b2ba39-0ac9-4958-a257-518dc29fa63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aac901e-0594-4e89-90d2-2442a0f08d79",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e89d75-439f-45f8-af72-d562f1e97f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6ef9dc-ae2d-4d0f-ae88-4a06fd457c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d5dcc-c76f-41bc-b98e-8426737d625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad05b1c-5edd-4dc3-8302-f3c358badc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3960988-77ad-4ac8-915a-acdb136a9398",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7267ed2-4b17-4151-b47e-8ec328503833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d90ef74-c7c6-4278-9528-53b60e5592d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbfbcb3-e6a7-4254-852e-d1cb01317003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e466f6-7666-478a-93d5-7bd0708af58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b0f8b9-8dd6-4cdd-8b96-9a68d41024be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e984867-2a66-48fb-9360-95a15eb08d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011b61f8-b669-42cf-bf71-0a4d54dff300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40475c3c-94b1-4d3a-82e0-acc5b54adcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5d8ffd-c813-44fc-97f2-e4115de59154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2501f2-6b95-44d7-bd5b-09d8dceb9590",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536929fe-864b-4d69-bccc-b8579e2d92ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4e5fa7-0652-40a5-9221-516cbcc5f139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d154f84f-9d5f-4d73-87aa-e3ba5664192a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff93f45-bb8e-4ad6-bab6-8e16e39282af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda2fc11-ade6-4d40-acba-007e8f772c15",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37787269-19ca-4631-b536-326b060b0462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66baba6b-e80c-45c2-8608-453ff9f22e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af1a3a9-96e4-4c53-81b7-3fa85a7a9fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d25672-0328-4fc5-9fd8-fb8c7ba50381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5550fb7c-62ca-4700-9a7b-950ab777a4b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a67830a-3fd6-4f71-9732-2ead6d1f3bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35f4815-6f78-4253-81b1-e829840c3865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580b12bd-6e50-4525-8557-379ab37ecbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b1444e-2fa6-47c2-9e52-2e66442ac112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ef85c1-80ba-4814-b3cd-4391d1421355",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2970fcb-9678-4848-9df0-d2d5bec9fbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b687369a-0817-45fa-a5b6-ad0b72125dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0768882-6954-4e32-a610-c83ebbc6161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf0af65-ff6b-4f54-8ed7-6c74582ba76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790467dc-0568-4868-8c2d-ef39a11176c6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb63f81-45e0-4036-8fb7-0bbef9686c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda6760b-95f0-46ca-a4c7-5e5ab58074de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656e453-8fb9-49c2-b5fb-f53406458297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19b1d9f-041f-4952-bb27-a3d267466305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef466e3-e19b-4756-bad8-cce9bbbf9487",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15023a5-6952-4eab-849f-b0d46af76874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577b8701-4849-4cd4-8022-9e2281000791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b5cc70-2c0f-4242-8d44-2fab9a4e3003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8cd81e-0767-4a97-8ef7-7a70a9e71d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2405420a-67fd-4a0d-adea-946a41250a34",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfc3374-cceb-485c-8e00-9fc1f4a1859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffae9b4-a09b-4fc1-975c-bc5b439c743f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b273bce-650d-412f-b982-4e5a51388985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "984ac480-05d5-4e87-a3b7-e833ebd9bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d884a-00b5-49e6-bb94-3ba4b61a9663",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ce56b8-fe4b-41ca-b096-33aecd577453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10699f48-a442-457c-95f7-58fa0bb2bde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f35982-2741-4f2d-bdd7-7ea4ae20a65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51c14a1-f1ae-45c7-b03e-0629f9a3b1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cf3690-56e8-43b3-abc0-97554579104d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da1c067-de0f-4e97-94a2-2a6340e86b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6d79d5-b46c-44cf-b00c-e26a07557a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a2c051-921d-42c9-8165-f0cbd241a689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0699b9f6-f2cf-4369-b4d8-eae9352030f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a344a371-9c12-4b09-a515-8fa7754b35f4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db068609-cac0-49d4-958f-066631d6732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669d0da9-cd67-45cc-933d-166be15b20f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c671c01-c836-498e-a4f3-f67165597a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c89ae6-4ef2-4d65-8a4a-385e395bf0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1f6c8-cfbd-42f4-8732-0d6728f08f51",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8decf498-5d9b-44fa-9cec-0d7fa8a0a820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b926ee57-1896-49af-84d1-c3eff2d851b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d3cdab-8ab8-4b7a-a958-8c23667ddf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b04f1b-4e60-41be-89b7-d46cfd504486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48320e8-2e58-4be4-8d16-3b18f06abe03",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f3bdf7-b600-4ac0-a66f-be24f422bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4044d07d-f1a1-439b-87d7-4de8904edb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d714d8-f0b4-4e86-acd3-98ab9bb8b78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf84dcc-6afe-4ae8-a120-2d4d851aa6a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b625bcd5-01bc-40ff-961b-1674b5bed151",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "370954f4-198d-43e5-91b8-eb78dd326ec0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79a481-771b-4386-997d-c0d6c4694433",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32e2c4ed-53bc-4989-9987-8350d229984c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c8584-90d2-492e-8da8-58b4d5fb995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdc24997-d5c4-4a0b-838b-59b276f046bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274b718f-2e8e-4544-a103-a9082beb26b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e0f5bed-29dc-44f3-9336-67aea54d3600"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98453a2c-683f-4d58-8657-f836dc19f6e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce21949e-929a-42bf-91a8-04a3a5da6de5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad86fd00-9e15-4cc1-8053-bf03dda2a5e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1db551f9-e8e2-4141-8b12-a2bda459f942"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5f56efd-6500-41eb-899f-64da44ceb792",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7406c60-4e42-4bcd-b4a3-5a8f9103804d"
            }
          }
        ]
      },
      {
        "id": "b698d50f-a44a-4073-9cfa-a44edab2ebd0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bc73cd82-0d88-451d-8cc0-09494b00f41a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bf129dd-ffd3-46c3-a29a-31b5cd577c00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f62ce073-c76d-4716-8149-af8c2bc38e52",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f5129-8ae1-4f35-8b5a-b5edc53fb094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cea82f7-4f1a-4d3e-a82c-cf4624afffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd98448-f6e0-4fdf-94f8-b57770f4668b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4df7a6-ee8f-412f-a7b5-92c60ddbd711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9224a5a6-9388-4039-a93d-1d109c39601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ca3ca-9b5a-4128-b4a7-e48bf867c3c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d9e33-e22a-4a22-8e87-64d36a8fa7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0df2f4-ee0b-4c7d-abab-95fafe262cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb9400c-37cd-410c-8e27-a062f4ed6929",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4d4178-daac-458f-bda7-c9698cffe0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77615605-f778-4242-949d-7bcacd9f039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738d7dc5-9da7-43d6-8264-154bdc7ccdc8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c30b1f0-0849-43c8-aa8e-d9089082eec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1592e3ac-e337-42ee-8102-80ca72341af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8c6296-f64b-448b-9be2-a9dcf91517fa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bd0c35-f4dc-4e36-bef6-2c1c596efdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c201322e-662f-47cd-844a-f45ffa54569b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03efd098-1b06-4135-bc81-3208e8fc0828",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdfd1dc-5a60-445f-a101-a20a763971b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fe55f1-40e0-415e-8eb7-14d2ad56ce62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8afd54-61fe-443a-8413-3a6b78284e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2398d9-c8a9-47ee-b293-bd2b6dae987c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07e1c5e-aa6f-4939-8ae3-ef19e464c973",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031a0eac-c6c7-4a9e-8c63-2224dd09a348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b5eb9e-294c-4f9f-83bf-d56918c6b062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8186a965-3461-468c-9e8f-cad123a28627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2086919-439f-4b59-8c62-bcd43b9e0e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395b6bbd-4ab5-4fc1-a2f0-8de7c0b404d9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc985bdb-371e-4a6b-a6eb-87712c697ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05547665-85c9-4468-ac64-9fbe44aca123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51408013-5f6b-4964-aa49-5f11b11695d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f371e164-1065-4c5f-b5eb-9e1ae363cffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0d7ed0-9ba8-4f78-a1f0-86b738dd71b5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b9931-bb88-4606-b8ab-2d8b483e9216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1965f3a-2ba0-4344-9a08-28ffbb281203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5001caef-ab1e-40cc-b272-d7da7b92edaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221376a2-1a98-47ef-8fd8-5c5f239701ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c79703b-aecf-4026-807e-ccb78bd8025d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce89e88c-f9bf-4506-9960-c43d1c639516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3766eab8-3c3b-4de6-9523-fb398c284b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ab9d0-0a61-42f2-8645-08dc11d63c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43083c22-7025-4cd8-bcf3-40ee5c836dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d394e31-e699-4e46-a208-12c8da55dc27",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cb74d7-939b-4cef-a7d3-2af6c4f8926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e72f6f-dd97-486e-9a6d-4a7b481c752a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6794a9-94c6-49fb-b2e8-986e19aea336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398d43e3-0f30-443a-a0c4-1b720c2ce0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94bd82-79c2-4c79-b1ff-46cbb0cd83a8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077a21b0-d0a1-4eab-8169-54f32a62dc57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f06412-8ad2-48a5-a1fd-735710b5f448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a074e0-d2e5-4eda-8532-a7bff4045e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f228cdae-c778-43a5-9603-345cce7d6954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd775a-6a1c-4359-9b15-122377374746",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b079785e-c4cf-4d7d-b6f8-a49d16c167ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fe1f8b-9b95-4da6-8462-8ca922d3e730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644403b6-d926-48cf-a208-ce5e46399601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7016e7cc-e3bf-48ef-8f38-bb5355c78ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a86657-48b0-41d3-a339-fd88a3d41a33",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533ef5e6-1032-4278-8429-305ed18e3caf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20536135-2129-42af-ae3b-0842500f4ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8b6f06-d6b5-40bf-83b3-68242ae198c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1ec138-8c7c-4590-ae83-05428964dbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599eab6d-da15-42f7-8a2b-1290a2f28239",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5aadb2-4999-4860-8359-e0528d1de138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9aa821-79bc-439c-82e4-89c25bb186fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e15e38-cc9c-4ad4-8d93-f03c793e14ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2087ea16-d144-4e7d-9f06-616df3007345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d06bf-51c1-41fd-82d5-7c04ec426384",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b810a15a-fabf-4972-b477-a6288a99c91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c21f464-e73a-4d43-bfd7-a294dd7efb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8c2a45-8fbc-4718-8d0a-771a62229194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40aff1c1-4198-41ed-9275-8ca45b1b8140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5480d3-e01a-4103-9435-ef9d170ffda6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d881b-78a1-4215-ab97-70a272493a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50d4293-8fa6-4bd3-94e0-afa8fccd2a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5e497e-1a7c-4aeb-8249-459811dcc56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8661b085-a52c-4544-b2df-f08ac0fb3825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793d4a40-3e54-412f-85e4-7c8db1ee0776",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269596a-6720-4f76-a572-ec0a2767c0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a556b3-9274-4621-b88c-0d93ae253284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8943577-5c11-482f-bc67-af23106187b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1036ac4f-a2b8-4987-acbf-25a020f74292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6468dad9-723c-4684-88e9-bf76c31ea757",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b475f1d-cccd-4cac-bdd8-aa481aa02b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff107ad-82f1-4922-b712-7401606c8c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294b67ee-d3c1-411a-b524-1038791d6af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689cb29d-add4-48a4-a295-78d713fc14be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d446c40b-3959-48df-a3b2-8e942f7dcf8b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66a96c7-dff7-468e-a925-5d43334ab281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e93f1e9-bb2d-421b-b052-bbbb4df7bcae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df5df6-5778-4332-9cd2-220c3690f2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f646a6-ce0a-4304-9b5f-bed1ab9e21c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323d3fc3-94e2-4e64-9149-3655abe5ebe3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fd9c75-1fad-47da-b57d-7307c3aae0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213e836f-87fc-4d68-87f7-ca31e0c8c050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5be44f-813b-436c-87bf-39778f0fc844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de835d1-6da4-4667-a695-9a7bdaaf8eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6bd15f-c360-4dd5-9d30-2df435c1e3f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb09319-19ab-4695-855b-bbf13b97c481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762cc1c5-0013-460c-aee0-493cd5e777de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63091599-ed48-42fd-b1cf-f42d78285a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbcccf6-fbec-490b-825d-28d412f0a672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b5110-397b-42a7-a7d1-60a3b95280c7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bccdaa5-910f-4d32-9a06-e6d7028906cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e03606f-e43f-43f6-b21c-74eef2892b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb2e116-c2c8-4a10-94fe-b47165f1167e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec711eae-51ae-4893-b7c6-c3d324325a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ba71c-650a-416d-9984-5c826213542e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a53d5c-1ddb-4e93-8523-5d1d6357b4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9fb402-90af-42c0-9c1c-c4e614e9a919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d6a5d3-cdb5-4cc8-a33e-87f8212e7c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f92b10-21e6-4d21-a607-6350074fce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a50fb52-7c9e-4fda-a878-7454636e9abb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acfeda6-7df1-474f-83d3-a270548736bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1231d0ac-6f69-44d8-9dbd-6006331cc3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1233812d-e984-4d93-ba9b-e34d33c6752f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca9e45d-5532-4491-b47b-eb7631b8def3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a302badc-27b1-4dec-9d71-3c253a656672",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e035883-c37c-4759-a572-e42108b5c385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5dd13ed-798c-4dd7-8677-f0d22379016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea59e7-49d2-4728-be9f-38829a467c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec4f602-d77c-4a19-aac2-d44a8a059e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59157688-0fe6-4d0a-ae97-09b920806f29",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df0b2d-fa67-4f58-9a33-cdd57ff38e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3f3fd6-b941-4671-9318-49437dbf1593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0928d4cd-40d5-4482-a745-6db03cd0a00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a0719a-458a-4cdb-bf13-d59e1ab4c8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59888954-00be-48f7-9572-634ac7c95c59",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf7ec25-4895-4c96-a57b-ae4a0d88bc78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0838ef20-8896-46c0-9bc6-49f0c1dfc173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80953199-759a-48f7-85dc-228a775e7cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d22b53-0d23-46cc-bfc1-a6b80159b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e93020-67a6-499c-b3cf-210d74ec090a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306d317c-f2cf-47ca-8bf6-c674010e7925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add4534c-bad1-4ccc-92e8-99348f48aad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c39842e-0458-4695-8cb1-7b7ed2f5e36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ece9de-4128-4007-be60-eb566cf45fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4035ba5a-3f79-4cf1-95e2-f80abcef55b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2c119-2f61-4f18-aa04-9efc95495f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68bc1a57-54d4-4217-b0cb-ba87e8672de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288337d0-e8bb-4847-bd5c-5f0051756bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52227c67-a53c-430a-b392-4fb34e914a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fdbeaf-86ca-4c4d-9d43-3d51daeca131",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f494e08f-e454-40b4-8ee7-c960f40ddf34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7799fb34-f6d8-449c-8ae8-29478dda25d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72e00ed-9594-4f82-9665-62409bb7536a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb47f1ea-c083-443d-bc04-bbee4316b104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4571bc9-2d35-4c81-bd14-02081cc54d0b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c91cc69-5011-4e60-b155-92e37e823c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99cfa51-01e8-4c72-96d4-8d7a7126600e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f6ae7c-059e-41d2-b6ae-d12be89399ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782d0536-e6c9-4ef4-87d3-ed0b7ad17b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18aeab1-d65a-47d1-8ffb-d00ee0766eee",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10114821-3d83-4500-a929-ba62fb000982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a65b0b-98b5-4450-9481-24ca62307de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5871c1-74bc-4b89-ba84-6bfe13f9a5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af81e2d7-3b16-4303-a659-f72dc78d77fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5e710-3442-4d8f-848e-b0c694190d03",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa6f4fd-ae26-427c-917b-48f4dacec8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39728eb-901d-4cbf-9d59-c41c3ad4f485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9338a39-20ad-487f-8d65-a108dca0fec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8bd0ca-a175-4b65-9c25-1247b79aaf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f5f462-5355-468b-84b0-0a01fdbe7c9d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a4c1f-0356-49fb-845c-a7eb944fadc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c066b04-1f97-4c44-a8dd-b1829c914c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def515eb-28cb-415e-ab2d-a8074050a1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55befd84-9b64-46ec-816c-1abe157ba8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657d1cba-321a-4d43-9fbb-b83c49ef5493",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e74c49-53cc-4c78-be45-bf1c3a0563da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca02819-7005-4a8e-8d08-748601357d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a586a2-bab9-4947-a716-5e20b8073ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880fd9e2-f5e3-4057-b07d-8b88321054c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc687c43-4855-49ac-8249-35544c24be41",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b74e42-b648-48f3-96f1-21cb8260ef9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0590ad9-66f3-4b9d-aa6e-101f61c72812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44a8331-311b-4d15-8f31-a25eedaef940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1155baff-9537-4ac6-bdb2-4202863eac9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c5679f-b195-41d4-8bcb-8608ca6eb2ea",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666e6287-2ec1-447f-87de-5bf269b88d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dc76ba-639c-45c1-ac50-62e7f3a5e2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c569d-ad49-4198-8cb4-eb4f7fb2ae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8eb1791-ef82-46b3-a4fd-1399b68b355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305fb2c-af17-48d0-80ce-fa875fdfb81d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ead6c7-7d61-4d7e-85a8-8ebdc7cd11a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5291b58-a70b-4296-a8e9-967e5a84449c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0ceb4a-1d86-4acb-bfdc-fa0ba6d2000b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd595ce-d71f-434b-9e79-8dc793251fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b42db65-4ab7-43c5-a843-e9b1ed07be7b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7775bf-74f8-4fe1-b58a-72e217997c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf7203c-2dfd-47cc-945b-f1a23cc81ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1930a8aa-220f-4140-887a-fe108eabc97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f781b89c-9b19-4b31-9500-50dfba87a8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90f68b6-d663-4d69-90af-138d0e0c7bec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b62d045-6dee-431c-9f14-94f3613d4463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac5d9e0-cade-4042-a4d8-d5e0c0853032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c155cee-7829-45fd-830b-a40bfe219568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976f7c1b-5480-40b9-86d1-281fa43c6339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925b57f-5dd6-477e-af4a-fa42a30df041",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9f7205-906f-4291-b897-df355c2e0de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a84813e-4f8d-47f5-8ac1-87ac1ca9acce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd0e5e2-c6fd-4e49-a700-d6d155622765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715b0504-1d2b-4912-9607-f306e89e49e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b03be36-e8fc-4c44-8999-f3b6a9a34908",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b60028-766b-4bb0-bc19-3a47f59f7e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52a858d-081d-4b34-a27e-431a7b7dc1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8bc558-d76b-450c-9875-637e681cdd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c63139-34ae-49da-b4c3-9ac703551f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e2e54e-434c-40c8-b4a3-c1aace9b35d9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d40a5a-ad50-4fd0-8590-151d046a7a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f1f3de-379c-4959-be17-18c772b73ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd221337-b0cd-45ce-9740-492de22f4599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20759b8-615d-4d83-b9f1-9f036ae8cd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202adacc-7f01-4829-80bc-4380358ffd15",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638407f6-e514-4f18-8070-d2a7326c398e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efdddd2-9d77-49ce-a7ed-26a8583d1b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c764ad4c-8139-4562-b555-b2598def19fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f582d42-da09-45c0-bd6e-fff8a0707c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dcba84-6915-4510-ae52-ec583980a960",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bf408a-9855-4c78-8e3b-08cb04bd0fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f73266-bbc8-4047-b4a6-56dde5929235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dffc20-68e0-45f2-8870-d403abec779b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b24a42-9521-4652-bfc8-1869d85cbf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c5d24d-8824-4c7c-887a-0044e975ef25",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec3097-2dc5-4496-95df-9883d80981e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957aa3d2-903a-450c-ae63-c862649250b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b658dff-1461-4fc6-a583-52d9b1d6a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdc02e7-0f92-47af-b6cb-8a6c9806714e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e23e88-150f-47f0-9a53-1ee58b7b561f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1bb74b-2208-45f5-b3a8-c44701d9cda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad025f5-e246-4952-9d2b-381dbadae275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622668c0-e28e-44a7-9cb5-69e207408384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9421cc2b-918a-4f70-b2ac-684c28c95d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8daf65-2e1a-45b7-9064-5f9d7bb37470",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b54798b-93fb-4ca5-87c0-74369f96399c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7a1d2b-d972-4af6-8101-face40a0527d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741b2ba5-9812-44eb-ba23-8b69e44abf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7278c0-06cf-40e0-a5b3-a8b40e730351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763cab53-ca61-4c5b-978d-7be0926cf7a2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0018a190-4951-4898-9b85-5a55de7c96a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e886e5c-647d-49fb-9edf-971c965876c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7497e55-052b-42fd-a1fb-292d331510d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c4bea9-bfb9-4790-af8c-747afe83e040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cabad8-3cd4-4731-b1ce-44bad9a63a83",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb1e25-3d67-44ac-a158-83f5c30a0c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86369674-199d-4f6f-9829-779d5ff418b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd23385-ac0f-4187-aeee-7238089ee7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d0693c-830a-4e3b-a28e-b0d53a3a3ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5078857-156a-4a58-b821-baa85d1835de",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f0c545-204e-4c61-a60f-59ed76af52a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc32b50-41ff-44b3-b9d7-c997e87d3142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e3a6be-fff4-4c47-a45e-74e5468afd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bb15aa-db58-4f23-bb03-9081a5835f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c15b53-c297-4206-98be-8e9d5d57f506",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505f29a-5d4e-4960-a5f5-f8e6775798ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f81de1-2642-4360-a079-4ceea9228262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40a9872-50be-4232-9246-76dbc239f917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04adc4f2-ee08-421f-9daf-939a50af654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44169de9-00ea-4c76-9088-3a2f870dd7db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d062299-424b-46d5-a5d0-92e93023629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddda28ba-5e95-42d2-90e3-cb93d56c3ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25008bc6-cdbe-4c32-b603-3e216a0ea146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6171654-c1e4-4047-899c-c595668f9b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38d954e-197f-4137-9e3b-42861c1585fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b048aae-4d7c-4e52-9faf-94ebeb0bb156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be80a880-2a8f-4ac0-9ab6-b038b58e3b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d7539f-b302-4d0e-9628-b9fe57f7bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d3b4d-213e-4c2f-8c91-aa46b46b8761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902053a6-995f-40bd-b3cc-674f1d353f88",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b898942-7159-4e79-9ec4-a8f29e2b3091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96353413-7e58-4a2a-bdea-3d589ec3cb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f64a57-48e7-41ff-bde3-a92d420c8d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29cc335-10bf-4867-aab0-cabeacb9ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fe32bf-44f0-4a41-a550-adae33805823",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ee39e-92b3-4e74-9cb5-8682798cb20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df31f439-105f-4942-a673-6acab01ba5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0acc0b-665a-42f3-8bf2-63af22a22dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff36eb4e-0c9f-4b3a-bd2c-c796f85e3843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806227ea-07f3-412e-a6f2-c64130956779",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a3f6a-6dad-495f-8982-e4c08c1ef3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970a34bf-7c2c-4e92-8afe-26442e4162e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec4f6c7-7223-4014-b0ab-d6ece5677b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602a083f-7ba3-4df0-b2b4-07baa36ce232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd9da9a-7a36-4186-ab6f-9eb4bdf966cb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501d92f9-b546-4894-800b-0cc79d64493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21444d31-52d7-419f-aa47-485432908625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f964b0-150a-42c6-ad1c-e91a95cc7ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f61e014-f2e0-4b1a-baa7-3262ebb7bc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea10336-5911-47c1-8e70-85ad149d9e41",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421fd342-63c3-4cdc-b1b2-6aed756ef669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4d197e-6e48-49f1-b7fc-b7230d5b3cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff3d2e1-8426-4f41-83e4-257d15b92e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d21fb9-ac09-4d51-92a7-f8ccd036b746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e94be1c-bff3-4883-b449-734d4f40b146",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479f335c-b055-48cd-8c3a-9fcbc04f50de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c37b657-3171-4275-8136-335171028b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2332fd10-9ac9-44bb-b471-c5a886a4fd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267b0714-6aee-472c-95a0-c67b727bac1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4904d4-ed82-488c-8258-c29e58bd5095",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3043256-c1bd-4ad6-82d3-183b503b242a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29b35be-517b-43a2-87c0-88c1fbac00f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a561a76-0765-4320-83e9-42336a7c0133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e48993c-8530-4c65-a50e-0021f06cb528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71114908-7f7f-4214-ba5c-60b845fa34ca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855fdfdb-50b4-4fdd-84bf-67e102392c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544d2c6b-811c-4ceb-83ba-bfff13da329c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7744a414-5677-4ad3-b0f9-0a6673080e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7889dc-ad61-42e3-a915-c9fc89d6cc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba809c-674f-40b5-bce2-7b45c6dd5b8a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1b02b8-78d0-448c-94e8-e20d52f5087a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3dfe74-ba53-4966-bb60-e54a6e399469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea0d22c-5aef-4d8c-b0e9-1513081d626a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e000a50f-8805-43e7-85f5-c6835b8923ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9b5392-db32-4460-a438-d494e9fccb24",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba43c57b-7fe8-45a5-894f-ae1693d6e3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab59c79-1e5c-4ca2-8055-7e54ff61ce7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3080b16-d4e6-4e86-8cb3-7bd1b613ec0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff7311a-774f-4562-85a4-a3f67040eb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c875992b-eb54-4806-af0e-3e59fab5d3ef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b4342f-7d26-477f-b122-dbf62b5ea09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1afd963-62a7-4bf5-9c5e-1011dab1f900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acf8cc0-ac59-4347-ab40-bf7f758bad4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48e0958-4d27-4c7e-8f3a-032c91ea68b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0553705-fcaf-4b2e-8db8-df23fc0651a3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653886a8-de8e-471d-b6ea-c84928187d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c47158-22e1-4791-8c2b-493ce880274e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac51b7f5-b303-4855-a6c1-d87646682238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e212d48b-887a-4815-9914-ecc126e7acb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7278bb-19c0-4d13-8183-3f7880f99428",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22704536-bcb2-424c-b00f-7a23b9bf2bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e70083e-eeca-45f7-9b9a-fe406f8f0050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f4cd59-de9a-435f-a7c8-09f01f85f9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361cff38-85e0-40e3-a813-652e404224fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e4d9a3-e3da-4428-89b9-6f1bf41e158c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fbb45a-d0a3-47e6-a988-ea00e77b02d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ba8aac-0b92-48d2-a80f-181d2d74b987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec085b40-71a9-4f60-85eb-1428592233be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f077f948-ba34-4ff5-8454-e513afe7ce8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a29efb8-c349-4bde-b389-51cb153becae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4bdb4e-9f86-4f1d-bfc5-daf404698ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad9cdba-fd10-4fee-9c7b-66fee1556fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa372c6-1d93-477e-9b6d-222beefd1545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19044725-e14f-42b9-b6dc-de34d4feb266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e988bfe-59a4-42b2-af0d-1bcd36bf0ab4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7af6a09-e600-434b-979c-98397b270efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b19a90-304f-4555-8fd5-5428582318de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8092946e-6ec7-4431-8d8e-70ac69b21c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2b4da4-7f31-4a19-a423-4390f6f89c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8684ae84-6721-4ffd-9510-8fb884deb6f6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35f2bb5-6f65-4210-9b86-53510efb0aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b23823-2cad-4b8c-af9f-09b05af5a30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e197715a-0fda-45de-974d-b267d44c2af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e9e526-377f-4dca-a656-ea58c40052ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1888c995-9a50-4d3a-bf1b-57fccf36f275",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dc5c9c-1f37-455a-8e8b-50b29ae20d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffca7ce-401c-4a73-a281-2e53824cf066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86b6f90-8a92-4326-9461-7cf307f7586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19534cc9-a38f-4dcd-9000-02c4692fda4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a486fb-91fe-49d1-a5cc-ffad3786def6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7c8572-c690-4375-a9bf-621706cd27c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0dfeab-73df-4ec2-bdb6-0844d670f064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db62de99-bd75-4845-9c6c-b2fcf6104dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc60258-31cc-4d6e-898c-4010aa0ba21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba33019-d33a-4d55-ba51-289b4fa8ae0f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea827b62-52c4-4edf-9b58-ae3a801ee829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06f4fab-3edd-4eb5-a201-4dace18ee276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2bae01-2e2e-4249-8ec0-5d49bef4b7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13de1032-7baf-4b93-8e05-a9aae0b1bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a62781-7067-4d9e-8044-c969e74551e9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a90576-71cd-4741-8e57-30ee24810cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2dfa4f-b1b0-4329-a8ea-90237953e617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c77e743-41db-4e24-980f-dd35f6478d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223f036d-e3af-4c84-8e8e-600279972381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a354c3-aa6b-449c-ad57-445ed04232b6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03649131-7e71-483a-a072-c3c59aeef065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1d1746-bf74-4839-88a4-f84d6ed89f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4151ab0d-4153-4ce3-ab3e-e6cb0e5a9dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c361e6ca-605c-4b9b-b1d9-ec440a794e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69d1d2f-b000-4330-b6b9-3f9a14275b80",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24df59e-aacf-4f0c-86c8-20a0c8e89938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b9b7e3-4b93-4feb-b3b1-280e7f5f4f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d59c163-feee-4041-ba48-4a825c201d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a18b36-4a73-4c14-a8dd-228066083fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0937c2-171c-4a4b-a544-e83007c73661",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5738aaa3-214e-4f0e-9c2b-065028a873bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89afb05f-9afa-4e9d-b9e7-3edf770c1a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6fa92f-01c1-4c13-8e66-524109485859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e8a1a0-bd9e-4e7a-8a6f-6d5190e0e320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491b8dc2-292c-46e7-80ce-23b359fa2702",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb29bba1-39db-45df-8961-503cf827fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168a4d28-ef48-46b7-a442-074bbd80282d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7946a95e-2b6b-48dd-9a3b-255ebf1a4845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b2a4ee-7fee-4edb-8a35-75c0c2691860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c54beb-642f-4494-b7e4-9c9c6a1f5a72",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13ba84f-dbbd-4a8d-a614-5818400de286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7b2fc2-9f16-4c99-b25f-a8a42ccb2eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f9fde-9356-4709-84bf-9d9326a3136f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a434f33-1878-49db-b24a-1c8346cf2cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1938715f-d093-4f6a-bb17-93a306426e90",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac0a625-7c2b-4873-947d-bddad74b9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2af1cce-ceca-46c0-87f2-86db5d18b64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc5325e-cbd6-45a0-81fb-ebbdaca1e654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a141bc46-d108-4361-ba81-d45604f84633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5aec5a-a97a-414e-bf24-08c15f066b5e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a62e90-28a8-4f2e-be6a-756b91bd2b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1914bc9c-91ce-4a1d-bace-ded6212e198c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08acdb9c-5aea-4f2f-a316-8290044d09b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d9a578-2c17-4420-a06f-6b7ec1564a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da74b26a-e882-4fd7-b011-0579743455f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0681a104-3842-45a1-9d88-fe3da8146460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbc8c3d-fd9e-4655-b8a5-9cf158d609a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b84ad74-01dd-4ad3-a80e-feedf9123adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff448639-b571-49dc-94c0-03b306275d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347962d5-0e9b-4dcb-af6a-4af0080f8979",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1a35d7-ccad-4df6-9127-a85086cc3d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff3ec79-a6ab-44cf-8cb6-cb41577c4a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a91823-5f4b-4e05-9873-1d6c264ebe10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476e8089-778a-4536-9eea-bfbf599fe949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c126f48e-7c50-4fb9-9175-c7a271c1e29c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36055e50-7a5f-403c-8385-1884a151d067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95610959-d0a7-4f17-9f66-d7eda1336885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34055ba8-4f63-437e-85ff-f40d63faf10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd105ca-b8d3-4a77-af4f-224402d996bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5439a38f-0911-4376-9bfb-5dca37c2bb7d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e13d0f-714e-4d2f-aaec-55c2d07ffecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4971c82d-5424-4597-8f13-744e4d5c2e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb1c692-2790-4d2a-b46c-4a47db523f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6114e42-9463-4619-9427-8ee6cf7b3ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2aa01f-99f3-4d37-80e5-18e458aba901",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb11dffc-a8df-49a9-bf57-faac098067c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fff961-b1e2-4795-aae1-dfca1a007968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f673d32d-58b7-4ff9-a8dc-3b60d678d9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e7536d-ff59-418f-a09c-b2516f1b1f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489150f5-90a3-4280-ae4d-ae8b8b85a96e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5616244c-8a3f-4b2c-bad4-cc162a7d9629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef51d11-18b3-4ab5-b3c4-3e645a551b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2054ae7-c0b7-47ff-9beb-609ecd320a7f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e682077-7710-42eb-8430-d360ee63d22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1667ba-816e-4ea1-9425-9fc85b761ef8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d334b1-c302-48bf-9626-5d8cf0df81fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e70751-e2c9-486a-9f54-f56289a2277a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce4ced9-4e1e-42c2-b76f-b6d6fc21db6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b587ce0-4866-4bcc-a3e4-31c53592b55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35687fc-2f96-47c0-a29a-e47c343c53e5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeebd842-3b1f-4e09-a080-324cd18632fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad6b738-53f2-4ba1-93dc-c992f833bfb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec30a3a7-6559-4c38-80b2-d3b7e95dd345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942c47b4-2e52-4184-b4ec-aeecd555a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c4947f-1a96-4632-961c-3ce9535c8767",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3a26c-2591-44da-b8c1-8147ca34f178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d877dcd-1983-44ea-8aff-d24c64919c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02cec09-0747-4e91-9324-5fef8a2eee55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d98865-a3f6-46b0-99cc-8164fb1c9ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be492688-e1e2-4c4e-b244-142544c39650",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ccd453-496e-45aa-8b8b-a47b680386c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa5157a-ffcd-430c-b2e5-04f70a2abd2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9500d004-605e-49d1-ac3b-6c7295a69087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38ab0a0-5331-4bf2-a09d-82bab3b2c3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80a87a8-be7b-46ad-9e9d-ed43f7f7aebf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152bb243-e6c7-4847-afb9-11140b09cef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce92c0d4-f4e4-4b1e-9db0-c009d4eca638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e56bca8-c98c-416b-9669-1c266d023ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d5082e-6a06-4e6f-9e9e-1046529678fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a480eb94-1d33-4ff3-b294-79863e79feed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3495639-ca05-4859-83ea-51367a888a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e43562a-e5ce-41f6-b30c-822f91392f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0272ab14-367e-4bdd-a324-ca277f6f5d94",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf95f61-0ba6-4ab4-bdf7-1f8d7b6c2dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af1d3a4-3efd-45a6-b1a4-bfebc7699fe1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bced61e2-c744-4930-8013-64233a92ac59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbee6c30-279a-4bc3-b4de-557b671243fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4efbbab-bab5-42b2-a8c7-78b3a3551ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee1484f-286d-4624-a3b8-92718656b19a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3862d304-3fc2-46e6-a8fc-3c57b97e45b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02df4987-317c-456c-8ca2-7d2031b9acfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d5352b9-5cb4-4396-8b74-cb00e94e2437",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbd0f3db-3d16-4540-adce-b6169cb95b83"
                    }
                  }
                ]
              },
              {
                "id": "bd51d4f8-82ae-4eb1-b9aa-da9c90d5b32c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4b48d1e-d3c3-4960-8d08-00de44531bd4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9959f6c6-af3d-479a-90d9-71a2fa9e0e12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5174aeb2-331d-4263-9c1f-5769f96eb009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d3b06-7d06-43e4-be35-edefdff60ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cd4e8db-7ab1-415f-ad52-6dee8bb88a67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "757fc321-555a-4fd5-8602-a693f8d00a6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83294186-14df-46a7-92c7-70d19cc1c239"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "103e43eb-473f-41a2-9ff2-ce71dd6cbdad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03d87bc-9870-4929-84ed-b583ebf2eef2"
                    }
                  }
                ]
              },
              {
                "id": "f6adb2b0-9a7c-40a9-888a-cffefc305011",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "766dc379-60af-40e5-bdb3-115ab6583b38",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a257683-8da2-4a2c-aff2-1a6bf387179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d43e0512-39ac-4712-8f56-cd56b9f6e0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97073d38-5f39-4e24-bb65-2f2e40ca617e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32846944-2b69-47db-8d4b-c4beb6d814be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b7da901-cabb-427d-be90-2fdfd7eee6cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da395db0-545e-4fe4-bd0c-6dd30cd31662",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13c9eeb8-9c40-4e0a-ad02-8cf5450d0118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df7ac401-8fbe-4f83-919f-426e3a2a9b34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd01ed1-17e0-4555-b649-39412ca35322",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d6dc952-ae0f-4a2e-8eb8-fc5984758e9a"
                    }
                  }
                ]
              },
              {
                "id": "822813c7-f9ea-4471-afce-3b6ecb121e12",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8738ee9-7e61-4522-b2e7-1f236959d667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "121a9c2d-ea73-4220-9425-e706c959b57f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f64fbb9-6284-4ea6-a839-c9b6f141c6f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8622a292-c94d-482d-9a5a-2a6bb90ecfa3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f63cbc13-2d0c-42f9-b5d9-668c3c553279",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a9cab7a8-cc46-41f6-bed9-7816a2c000b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49769b15-e7c3-475f-a492-9d6679586e04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d17bdcb-c280-4ffd-b1ee-97b0aecec1dc"
            }
          }
        ]
      },
      {
        "id": "ca479be4-7019-435f-b32a-ca91765788f4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "79ae2824-ec24-4cf9-b626-bbac7b7b1609",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f7b5aaa-85e3-4514-b9e1-13dcace312fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31977cc6-24e5-4e5a-8114-c947406be25c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d52311-31e8-4602-903d-37883d5991c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fb0b9123-79a4-489f-8f25-d68dbbb9d7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c1f81f-2b71-4550-89f6-21dbad4625bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "675dab6b-668b-48a9-aa34-bcae1a080661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1759030e-d058-4275-9657-10b3879476cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1581b1d6-a621-40a3-bacc-86d0d056889b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4859af0c-52d5-473f-9e82-6da11247f150",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222451c0-5b0d-4fff-bf67-6032106a7998"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c9085db-67f4-4fe2-a250-ee7d74eb7376",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f850ce2e-d3ba-4f4f-94b0-23c553fae53c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ee570c3-2db6-4836-b573-f5cc6c9e1cb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3435f74-844f-4b56-8f79-09d77b1dcb7f"
            }
          }
        ]
      },
      {
        "id": "9c5c3093-79bd-42f9-a5a0-bcce29de10a4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "42223776-8f70-40a9-b3c7-b709c71c5ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "258d499e-796e-4d3a-84ea-2bbcfba7fdb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40181e32-8644-4f93-98a2-175b34de7bfd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b39ddf-edb1-41ae-ad87-0071fafa98f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3847b06-8f3c-4284-ab3b-02d9bbc04a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3b57a2-0a99-4106-9f25-570008a659ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91e41f3b-e804-4544-82ca-6cd3ae6c7f96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c19e23c3-db3f-41ce-9c9f-172668f7bdbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e063a254-90f4-46e0-8b1d-408bf377c440"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ac934f-4bb1-4ed0-8eae-0f9c93284dc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de70f093-7c9e-4363-bd10-398f2b78a041"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe01e16f-3bb9-483b-95f1-8724a4904232",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65d38c34-6ac1-4275-902f-d56b6b03382d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b81f0bb-6e8b-4aaf-a1b5-d3706f91a35c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e680518e-40d6-49fd-867f-7fb31c6ad15b"
            }
          }
        ]
      },
      {
        "id": "99083562-8a06-4864-91af-9fefd82cf221",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "62113d48-685b-433b-9b58-c576b367d84d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b36b274-b990-463c-a648-2a38c490abce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1cb68ae-f85d-4f97-854b-0e1907799249",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcabe2f9-de1d-4255-a076-338ad6663aa2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6506ce24-90f2-4410-8e6c-1684f32b9841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f81a3f-d003-434a-9cd3-6c9a0753d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd1229c4-e814-44a3-a1e7-186202fae6f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fdf6e4e-4651-44b1-997d-3c2259deff8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55d67589-9e5b-4b04-ad4f-87a2b47ca7e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cf0fb51-6535-434e-8230-784eecec93a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4136358-6780-423d-a59a-f72b430ea487"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d81ecdd7-8037-4497-817e-393d68ec44f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67e0cd30-b0bb-47ad-9880-324da85094ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72d5ff89-9c6f-4441-8a74-658ccadc0f15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ebdbf0f-5321-4b35-a169-38d8ce151132"
            }
          }
        ]
      },
      {
        "id": "bca7f82a-5f5e-4c60-8c46-46372473b8a9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df03d814-5beb-4fe5-961e-444d060f64f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e096ffe-571a-4fe0-9a1b-c897e61990f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "61c7af6f-a6d8-4a2c-94ed-d6e19ff1ee33",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "511b5d40-2df9-4bb4-a487-8ec836bdada0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75c31087-c4d2-42c3-8f27-ac54c4070dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.6140350877193,
      "responseMin": 2,
      "responseMax": 370,
      "responseSd": 26.079335360412752,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705451799732,
      "completed": 1705451810401
    },
    "executions": [
      {
        "id": "2952bba5-0020-40ca-a5d3-b0467a585e75",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5741693c-a9bb-458b-aaee-ac8dbbae5e15",
          "httpRequestId": "68114c21-f6ef-4d6a-8f96-da4785e12aa4"
        },
        "item": {
          "id": "2952bba5-0020-40ca-a5d3-b0467a585e75",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "812929f2-729c-4676-acaf-ceae1833efce",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "c4bcff41-ee5a-4ffa-80c2-86988be56d74",
        "cursor": {
          "ref": "2dbc8182-90b4-4b5e-b834-255cc479f047",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47f41288-e6d9-4f3b-8117-14448bf0e442"
        },
        "item": {
          "id": "c4bcff41-ee5a-4ffa-80c2-86988be56d74",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d3624820-dca2-49d9-b229-abc833eb1d36",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "5b07f890-4c02-4648-a88c-7bb9307afe02",
        "cursor": {
          "ref": "fff803b9-e334-44b2-bb8e-7ccdaeb56ad3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "12866672-9124-4c40-a1b2-252d2666395d"
        },
        "item": {
          "id": "5b07f890-4c02-4648-a88c-7bb9307afe02",
          "name": "did_json"
        },
        "response": {
          "id": "2eab5be5-199e-4114-bd41-841b23d0165c",
          "status": "OK",
          "code": 200,
          "responseTime": 196,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c62d2b-f4f6-457a-ad9e-1fecfde13e85",
        "cursor": {
          "ref": "1c7c2dea-b05d-4d68-9b3a-745c4a4d8e23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de574755-57e5-418d-a7b0-a344ec0db793"
        },
        "item": {
          "id": "50c62d2b-f4f6-457a-ad9e-1fecfde13e85",
          "name": "did:invalid"
        },
        "response": {
          "id": "ea7a61d1-974d-4ab2-aef1-71017d40cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c62d2b-f4f6-457a-ad9e-1fecfde13e85",
        "cursor": {
          "ref": "1c7c2dea-b05d-4d68-9b3a-745c4a4d8e23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "de574755-57e5-418d-a7b0-a344ec0db793"
        },
        "item": {
          "id": "50c62d2b-f4f6-457a-ad9e-1fecfde13e85",
          "name": "did:invalid"
        },
        "response": {
          "id": "ea7a61d1-974d-4ab2-aef1-71017d40cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad9595b-fc5c-46fc-bea1-b56c209b0683",
        "cursor": {
          "ref": "59fb0c17-9594-4859-b6b4-36b9829b9452",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6799e01e-2530-4447-9071-549f1b2b44b8"
        },
        "item": {
          "id": "7ad9595b-fc5c-46fc-bea1-b56c209b0683",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "80baf182-650b-4e09-b043-8bbb2faf999d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dabe6d-89f1-4e62-b7f4-db03e67f5002",
        "cursor": {
          "ref": "58cc21cc-6877-4fdb-8bb3-6bb7eebfc8f4",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a0fe37e-4d89-40ef-b71c-c015603041ae"
        },
        "item": {
          "id": "a8dabe6d-89f1-4e62-b7f4-db03e67f5002",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d81fc11b-31a0-4aa5-992a-02c428d9ea1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67cd171-7bdd-4223-b712-f462f90307ef",
        "cursor": {
          "ref": "94722edf-b18a-4e25-bdb0-30393c97e4f1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "897b8ea0-1cf3-4357-87b4-508f0ee6ab69"
        },
        "item": {
          "id": "e67cd171-7bdd-4223-b712-f462f90307ef",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "adbb4254-e9eb-49fb-8a2b-8dbb8233de95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4cec28-d742-4104-8df0-47c4df51420e",
        "cursor": {
          "ref": "26f47a6e-a99c-4865-89d6-3f6c939f2d14",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47ffabbc-5f4d-454e-8886-d380c989c3c6"
        },
        "item": {
          "id": "ac4cec28-d742-4104-8df0-47c4df51420e",
          "name": "identifiers"
        },
        "response": {
          "id": "2f9881aa-2891-4f25-8991-fa27d9ed564b",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ff6d7a-fa01-4555-b0bb-99ecacf30769",
        "cursor": {
          "ref": "99e64729-22dc-4aea-a7f2-18bb3de9739c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e921aada-c445-460f-ba8f-ccc84fda7ea7"
        },
        "item": {
          "id": "86ff6d7a-fa01-4555-b0bb-99ecacf30769",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "92d3271a-a89a-4762-946d-d3ad7b8c826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8c99cd-6aff-41b5-9e79-4be83e9054bf",
        "cursor": {
          "ref": "026f26ce-dc9c-43be-b9d5-2b5636af9461",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a901ecf7-7494-4769-ae33-467e1e1fa6f4"
        },
        "item": {
          "id": "2f8c99cd-6aff-41b5-9e79-4be83e9054bf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2bbfe15-3122-4892-8fe2-afc307d99bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2656aab4-4ea5-48a6-b2d3-3bd78c7fc729",
        "cursor": {
          "ref": "99bd18bb-7ad2-4aa7-b4a7-2aff39e08275",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e1557f4a-4a47-46ec-9f52-fccc5042172f"
        },
        "item": {
          "id": "2656aab4-4ea5-48a6-b2d3-3bd78c7fc729",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b10f193d-c2cf-4414-a772-739b2f21051f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c683c-3e5e-4511-9e15-c2f69faa7566",
        "cursor": {
          "ref": "68f481f0-245a-4887-9e21-2b9b96796921",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5ce25a83-b750-4b8e-89a0-af41151845e3"
        },
        "item": {
          "id": "617c683c-3e5e-4511-9e15-c2f69faa7566",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c51bd2c5-498a-45c4-b8d8-bfa29b4404ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593d35a3-b352-41b5-8818-c2169b39fd48",
        "cursor": {
          "ref": "81aabec0-c19c-4d2b-95ec-3ba3003efd6c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "81f9d775-937e-40cf-8014-101ba1136b81"
        },
        "item": {
          "id": "593d35a3-b352-41b5-8818-c2169b39fd48",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bfdc452a-36db-4e17-b735-69834699a554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4fb08a-8291-4a7c-bbae-3bdd47602096",
        "cursor": {
          "ref": "3d8371f7-c9ca-42ab-8e91-25fef647f4e3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ad0b258-849c-4b01-a2bb-4006858df375"
        },
        "item": {
          "id": "7e4fb08a-8291-4a7c-bbae-3bdd47602096",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf69b854-1e81-4a1b-bbc7-9e4e1b2b3d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef032634-58f6-428f-a7ec-264ca9753bb7",
        "cursor": {
          "ref": "2bd7889b-f53f-4431-9693-19764446a590",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4dc1e7f3-0e4c-453c-92fd-2a1f2d756a78"
        },
        "item": {
          "id": "ef032634-58f6-428f-a7ec-264ca9753bb7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0c9d57a3-8ebf-4e7f-aab1-dac16dc00304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b346f551-3263-44a6-ae83-e838af4ce232",
        "cursor": {
          "ref": "160f4828-46dd-4c3e-82f4-0359fc80abee",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "86224c98-a5aa-4e8c-9838-1483098fa7a4"
        },
        "item": {
          "id": "b346f551-3263-44a6-ae83-e838af4ce232",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d6a34ae9-24ed-49f1-850b-51198c986593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d55489-68bb-46a4-90f0-c336a0e01d59",
        "cursor": {
          "ref": "9cd9a9ce-013f-4810-8eb6-c9d01d0ae5cd",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0390bde5-ca95-40ac-8351-f8c155e7a783"
        },
        "item": {
          "id": "35d55489-68bb-46a4-90f0-c336a0e01d59",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "acc04bb8-2e56-477c-9721-c65ac7743630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2dfd87-54a5-4942-84d0-9e64ac4b7c6c",
        "cursor": {
          "ref": "59e371dd-a0bd-4dd8-803d-9748d4b937c9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "95813397-f445-4b6c-9372-f2a81b59476a"
        },
        "item": {
          "id": "fd2dfd87-54a5-4942-84d0-9e64ac4b7c6c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d763cf68-2cec-414a-b843-68eeac1e9697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f8e39f-214e-4d7d-b72a-f8da39682358",
        "cursor": {
          "ref": "9e4aab0e-b291-4e4e-958f-a182660e9613",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dcb9f3ef-5c03-4d51-b689-c137d626f664"
        },
        "item": {
          "id": "88f8e39f-214e-4d7d-b72a-f8da39682358",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c24a4c44-e03a-4c37-9531-21f7c41798ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a8b29b-c7e4-4006-a2f1-21c3ca524386",
        "cursor": {
          "ref": "5981a92e-3304-443c-9f3c-40a23ed091b2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b5857ff-a52b-4d9e-b8d9-31d8b257ca2e"
        },
        "item": {
          "id": "42a8b29b-c7e4-4006-a2f1-21c3ca524386",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "550415ed-cbc8-44c8-b7f0-9c3f157e8421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b9f72b-2e98-4b16-af5b-f9e08ee5e19e",
        "cursor": {
          "ref": "fb6d2c7d-b3c2-4beb-8c6f-1b463dca0b04",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dadf715f-f425-4107-bbac-a88fc972f290"
        },
        "item": {
          "id": "e4b9f72b-2e98-4b16-af5b-f9e08ee5e19e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "54c5a5cf-8510-4eb6-a851-cb40720920d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc34a6e6-d828-478a-b9c6-27522008ef8b",
        "cursor": {
          "ref": "df3ece8a-0a7d-4f73-a1ca-8331320f4bf9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5968bb59-78b7-408c-8a0b-03cb78221ba5"
        },
        "item": {
          "id": "fc34a6e6-d828-478a-b9c6-27522008ef8b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b950a55b-2d87-4474-8665-c162f46f5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f68c783-24b7-48a5-8806-ff8f22224e34",
        "cursor": {
          "ref": "f3332b97-d57f-4d1f-bb7e-b180976a7a74",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e5c2b60-2097-43e6-94a2-4a4b5b01f630"
        },
        "item": {
          "id": "0f68c783-24b7-48a5-8806-ff8f22224e34",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5fa694d1-efa2-44ee-a404-e389bd84ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f37419d-6e58-4fc2-a39d-4ae6a9641812",
        "cursor": {
          "ref": "5db323f2-940d-4a6f-a7fa-13f876d30cc0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3807aeb4-6e30-48b9-991e-38c2e2dc5737"
        },
        "item": {
          "id": "2f37419d-6e58-4fc2-a39d-4ae6a9641812",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b0e48562-8000-4d0d-8602-db0cf31ba9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0053ce-ca48-4f6d-9429-5bcd62888d10",
        "cursor": {
          "ref": "e10b3e76-844a-4154-aeb0-438f1181f0f0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "91cc5017-8905-4225-82e5-4bb07efac4c6"
        },
        "item": {
          "id": "1c0053ce-ca48-4f6d-9429-5bcd62888d10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "61006eac-36a9-41ae-81dd-0e7ef39dd609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29d3f7b-17be-40e2-8eec-b815d994e211",
        "cursor": {
          "ref": "aee9cf93-b44d-4ecc-b664-aa10b8af1c97",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "741f149f-d1f7-4f33-9fc8-3f4b7f912ea1"
        },
        "item": {
          "id": "c29d3f7b-17be-40e2-8eec-b815d994e211",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f665f754-175d-4e39-aa6a-8eea9cadd41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeacea7-c63e-487d-bd53-1a1bfe1c2711",
        "cursor": {
          "ref": "0c28588c-be62-4672-8f74-003178057571",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fcf694ca-b0ad-4ffc-99fb-e9479d5638e5"
        },
        "item": {
          "id": "daeacea7-c63e-487d-bd53-1a1bfe1c2711",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "23a4daec-0ca6-451f-b583-8da43d2c6d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805b4f6d-2d32-4bfb-9135-e19d475d7dd2",
        "cursor": {
          "ref": "a73618e7-77e4-4efa-9b33-e1d37466f628",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ac9073cc-6e88-4eda-864e-44044149aec7"
        },
        "item": {
          "id": "805b4f6d-2d32-4bfb-9135-e19d475d7dd2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c9347668-f1dc-45aa-a14b-cf566e56fbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71af7e1b-2d84-40af-a245-7c34f69f06d5",
        "cursor": {
          "ref": "abf36e42-be48-4ff6-a9f7-f8cdcdb14092",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "92588bfa-3f5b-40c8-bc60-8a7f92ac8b8a"
        },
        "item": {
          "id": "71af7e1b-2d84-40af-a245-7c34f69f06d5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "431c0416-2cd4-4c46-ad80-55859f84e780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa4a97a-7af4-48b6-b9a6-3d7b78258816",
        "cursor": {
          "ref": "eef25437-2d9c-43d2-b01d-dba8e0654093",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "94ebba87-cd9e-409d-be43-90a6a362ab71"
        },
        "item": {
          "id": "efa4a97a-7af4-48b6-b9a6-3d7b78258816",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "820e3942-3edd-4945-88ae-8afb54f00732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403e17d4-5669-4612-8666-16506a5aa378",
        "cursor": {
          "ref": "850d4446-21cc-4a3a-8961-0780e4c040bb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b83d1edb-249e-4c1c-88c9-3b1863f45db5"
        },
        "item": {
          "id": "403e17d4-5669-4612-8666-16506a5aa378",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80fc2e29-37b7-47d8-8932-e996a59fcd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6868aa-8d09-4ff5-b084-88e667df5d56",
        "cursor": {
          "ref": "cc135c1c-65d8-4d8a-899b-52dec8a52ae3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e478d5b9-7bd9-4ea8-9a4b-6ed3eca93e64"
        },
        "item": {
          "id": "dc6868aa-8d09-4ff5-b084-88e667df5d56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6047335b-49d3-4871-9a9e-eb1add211513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09d973d-0bf2-46d5-adbd-7d59ffe82a38",
        "cursor": {
          "ref": "9252d127-07ea-41c9-b879-196511e184b1",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "880ed495-a497-4b0f-844b-d70b5c35a619"
        },
        "item": {
          "id": "a09d973d-0bf2-46d5-adbd-7d59ffe82a38",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f19fa77-0376-4fbe-879e-e7aa8d50c841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ad6a6c-79f3-4181-96b8-742583594c53",
        "cursor": {
          "ref": "3de59cb6-0fbc-445f-a2eb-62b4394e2f15",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d440dcf0-302f-4f5c-b419-7d1d05b465ea"
        },
        "item": {
          "id": "a4ad6a6c-79f3-4181-96b8-742583594c53",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "86b21f56-6e70-4228-a751-f8a885baa0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c51833-0bf1-4f79-88f3-4f108b523187",
        "cursor": {
          "ref": "7e5bb24e-0f7b-40fc-a2f8-e0a60521a341",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a60e22d4-649c-4c40-9ac8-1e7652ba3044"
        },
        "item": {
          "id": "66c51833-0bf1-4f79-88f3-4f108b523187",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cebf24e6-a317-492d-8f27-d48d73bf4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec79b149-c59f-4bb4-bf5b-6085265d690f",
        "cursor": {
          "ref": "5d78ee2f-c258-4f84-9cb4-5884e99a9105",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "195bad0e-2d44-46b9-9fc1-5e10597eaf76"
        },
        "item": {
          "id": "ec79b149-c59f-4bb4-bf5b-6085265d690f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5a480dfa-e46c-4f46-9d8c-9b82266bcf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7990a1-fdad-4c83-82c5-13f9be375ccf",
        "cursor": {
          "ref": "0a58a3ba-5441-4ea3-b56f-75d5c43d6bcc",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27ad1093-b79d-42df-afde-decafb403538"
        },
        "item": {
          "id": "7d7990a1-fdad-4c83-82c5-13f9be375ccf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69189ec9-2dc0-43ff-82de-fe1ac0bf9837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfcb154-ca3d-4b8f-acd3-f92d1b359c6d",
        "cursor": {
          "ref": "9e9206a5-5990-46af-897f-8079db3a2187",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6ef82898-fc75-46fb-8740-77b63d8af453"
        },
        "item": {
          "id": "5bfcb154-ca3d-4b8f-acd3-f92d1b359c6d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "40def195-8de8-444a-8e80-28fde51c9ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed1e7b-c3b3-4d47-84f9-9ed5321eecc7",
        "cursor": {
          "ref": "f3f48c7f-44ba-4fa5-8745-e3d9c705b924",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "251f3d52-984a-462e-8606-2a2d9813ba7f"
        },
        "item": {
          "id": "4fed1e7b-c3b3-4d47-84f9-9ed5321eecc7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "89825d74-55fc-4d08-8e59-1023f264ffaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b46f4a6-26fd-4737-8862-e2cd8a26785a",
        "cursor": {
          "ref": "94e0b72b-53e0-43a8-a894-6631ad9ffaf6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "24c1769d-b341-430e-92f6-ce9e3a653326"
        },
        "item": {
          "id": "7b46f4a6-26fd-4737-8862-e2cd8a26785a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f8bf15e-978e-429f-9bb8-b78698b3037b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a121029-f742-448d-a749-61dc1b6f3087",
        "cursor": {
          "ref": "a76faf8c-7fbd-4c43-a767-a37a5cb79d24",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "97cf1312-2166-46cc-b184-60ca95b0bb6d"
        },
        "item": {
          "id": "0a121029-f742-448d-a749-61dc1b6f3087",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "362c2db3-d188-4727-a3d5-e008bc4bb0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f5bd6-c01d-4078-a214-2bfd60343470",
        "cursor": {
          "ref": "a6b23c13-6e39-4694-a6de-a9a5f7d4940d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f5d92e6f-5fbb-4ee9-b372-3c42a6f21f47"
        },
        "item": {
          "id": "476f5bd6-c01d-4078-a214-2bfd60343470",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "425daeed-b81e-45d2-8dbd-13ae4fa08878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d11dba-4b70-4298-9ebc-20563d9e2018",
        "cursor": {
          "ref": "74a77d9c-19f1-4814-b0c7-ae85b9923912",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54bad3aa-f039-4914-b5f9-aad084a78645"
        },
        "item": {
          "id": "b6d11dba-4b70-4298-9ebc-20563d9e2018",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "230c3b25-cf50-4e20-9c17-5891032f4217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2fa463-8213-42cf-8e10-34d201e4f6d8",
        "cursor": {
          "ref": "b50c7aad-0962-46f6-bb7a-e16bdc9e011b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6faec141-fdf7-4de1-95d0-be9276c11e7e"
        },
        "item": {
          "id": "ea2fa463-8213-42cf-8e10-34d201e4f6d8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "25f6e063-02d5-44e2-b7ef-cf08cff9f549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe68a439-7e4d-4728-9f38-54da25ded385",
        "cursor": {
          "ref": "1a1777ce-80a3-4917-b702-cc3a86b0348a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aca1e9e1-d0da-43e0-8353-8928c7881740"
        },
        "item": {
          "id": "fe68a439-7e4d-4728-9f38-54da25ded385",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4effb4f9-307a-4d8d-bd1b-81b80d396537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8117e66a-a7e1-4880-b4b9-bbc4129950f6",
        "cursor": {
          "ref": "66ace7c9-20e0-4777-a3c3-5befd31e4351",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0278af3c-4177-4137-94e8-4a3f7a186bf8"
        },
        "item": {
          "id": "8117e66a-a7e1-4880-b4b9-bbc4129950f6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "752d0ee6-1da9-4e88-be24-fea6b8566c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ac2bce-169a-4f64-98f7-f7e7b951f80e",
        "cursor": {
          "ref": "6e12729b-fb33-47db-a40a-b3873eceb79d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f66ef48c-983e-4d51-85f0-54ab54e5e8dd"
        },
        "item": {
          "id": "16ac2bce-169a-4f64-98f7-f7e7b951f80e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "312e9fe4-1d9d-4e1a-9d82-a6344a9e6a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03eb2e2-d2c3-48b6-88a9-f85eb51b4600",
        "cursor": {
          "ref": "5964217c-3606-4942-8550-527e8594769c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ddc4d675-75c4-48c2-acbe-8bff640b49f2"
        },
        "item": {
          "id": "f03eb2e2-d2c3-48b6-88a9-f85eb51b4600",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a75e2e28-03a3-494b-82a9-f759294e1d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa205e2-cb21-4627-9efa-7c1f76da3659",
        "cursor": {
          "ref": "540affee-a58c-4541-b275-0a230c99573e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "898623da-5393-4515-9cb0-35693420a28d"
        },
        "item": {
          "id": "afa205e2-cb21-4627-9efa-7c1f76da3659",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9174ec69-f1d8-425e-a20d-3adba8efa52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce04e13-c58c-4db7-84d4-f3dd7e7c9cef",
        "cursor": {
          "ref": "241b793a-a81b-4367-a34a-357a5fa597ce",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5546ef71-75b5-416b-9d9d-bd12221e4835"
        },
        "item": {
          "id": "9ce04e13-c58c-4db7-84d4-f3dd7e7c9cef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0545d869-fe02-4bfa-bb94-0b4d43c23777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d221095a-eba9-44dc-8781-ba370e61cbc2",
        "cursor": {
          "ref": "955d4e1f-6d1b-4440-80c8-eb121a7cdd2c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "34c34450-6d50-4df6-9abe-abf65b97d2c8"
        },
        "item": {
          "id": "d221095a-eba9-44dc-8781-ba370e61cbc2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0d0f47e8-f8b1-4a4c-9d55-c82b92d3af1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d637ab-c941-436d-8877-a00535669d86",
        "cursor": {
          "ref": "dfef5a76-54d0-480e-8d73-81d5b3beee1f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "193c626c-137d-444e-9906-4cb7c4163ce2"
        },
        "item": {
          "id": "85d637ab-c941-436d-8877-a00535669d86",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ee163188-b4b0-47c3-b567-61c427f00456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f775e9f2-04fe-4a6c-851e-65b7c1adff00",
        "cursor": {
          "ref": "e0322d3e-63b0-47e5-99c2-b879a3ba9b0e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ae11d677-48a8-4ccc-90d1-ae2221175d1f"
        },
        "item": {
          "id": "f775e9f2-04fe-4a6c-851e-65b7c1adff00",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e77fd2b1-df5f-459b-aeda-5ce81454a054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47044d7e-20bf-4ddb-8063-a35f3f6f2eff",
        "cursor": {
          "ref": "769982f6-6a1b-4525-bb79-789e09812fc0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "68403966-221a-4fc1-8d9e-f6c4518fbad6"
        },
        "item": {
          "id": "47044d7e-20bf-4ddb-8063-a35f3f6f2eff",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7beb14d0-796f-4e4c-87cc-56e70ac81f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bae5c9b-612d-4837-9725-e9eaeacabdae",
        "cursor": {
          "ref": "cc6bac6f-8fb6-4dd6-8d8f-bc7e95b02de3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "91430dfa-3df9-4ff7-a540-0ae601612300"
        },
        "item": {
          "id": "1bae5c9b-612d-4837-9725-e9eaeacabdae",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "74f77611-0606-4142-8e81-89de47a03376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df55fefb-4712-4818-87e2-98cf38b93eda",
        "cursor": {
          "ref": "cd905b8f-8108-4970-a90f-86da19527d30",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f62daaa9-933d-4b56-a905-b549fee1ce8d"
        },
        "item": {
          "id": "df55fefb-4712-4818-87e2-98cf38b93eda",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0ab6d169-7a3c-41a7-b0bf-ffc5d1732d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076674d3-10a5-4aa3-a8ae-9c9d52436462",
        "cursor": {
          "ref": "13d6212e-f46d-49c6-b5d1-a754619ad81b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6ba9c539-1127-4fb9-af3e-9298370020ac"
        },
        "item": {
          "id": "076674d3-10a5-4aa3-a8ae-9c9d52436462",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "da7c60db-4a3d-48eb-a4f2-f4f01cde6700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9181cf-e9de-46c0-bb4b-5137439bc84f",
        "cursor": {
          "ref": "e173050f-7e0f-4b80-806a-ba79679c337c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c57ac6b-6b96-4249-8c86-e3d38bd77b60"
        },
        "item": {
          "id": "5c9181cf-e9de-46c0-bb4b-5137439bc84f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4be6a6cb-2bc9-4b4c-adbe-e42d9a26cdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ede5fce-0252-4055-a754-58e5bc72280d",
        "cursor": {
          "ref": "33537159-9720-4b37-b0a6-cc1df6b64d43",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d64cc0d-64bc-4d56-86cf-b16c6673cf0c"
        },
        "item": {
          "id": "3ede5fce-0252-4055-a754-58e5bc72280d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b323b1c3-b222-4c56-a6c1-e7878fe227cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c0da09-4b23-470e-b800-ff0e03584f5e",
        "cursor": {
          "ref": "541e9ece-a0ca-4474-96ab-fa94e0327846",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d21195c2-ce7e-4e90-9e9f-3f24a585ef39"
        },
        "item": {
          "id": "f8c0da09-4b23-470e-b800-ff0e03584f5e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a92e2350-e7e0-4d1b-9d1b-f36f73badfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646a0ae6-78f7-44ee-a40b-552e4b474fbd",
        "cursor": {
          "ref": "ee7effd2-1534-4a9b-ab58-fb6e14abb13d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8539020e-6aa7-4490-bec5-91b740e57808"
        },
        "item": {
          "id": "646a0ae6-78f7-44ee-a40b-552e4b474fbd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aa67e168-0b70-47aa-95c5-a722d5a8bcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70eea95-8d36-4bc9-876b-fe2464dc2c28",
        "cursor": {
          "ref": "60978fa5-0805-4bc3-8f02-1e7bf9b9a5f4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "44ba0dbf-8a3f-4dd1-9adb-38189df60b0e"
        },
        "item": {
          "id": "f70eea95-8d36-4bc9-876b-fe2464dc2c28",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aa0e4d4d-f682-4b38-bd95-fc984eb35cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ddcf25-c4f0-43d8-838b-173837ca38f6",
        "cursor": {
          "ref": "b1764912-802e-434d-89fa-2ca9c1db7b4e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3252f14-0c9a-41a6-bf57-cc056b48c8b4"
        },
        "item": {
          "id": "56ddcf25-c4f0-43d8-838b-173837ca38f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "19a045ed-3937-4143-a687-de6fad33423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe69a98-4b8a-4e68-8fb7-64861ace0eb5",
        "cursor": {
          "ref": "c5ef620e-fd98-40f8-805d-2ca619d1dd5f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cb45c86e-6d26-4475-bf23-6f7e91cae1b0"
        },
        "item": {
          "id": "afe69a98-4b8a-4e68-8fb7-64861ace0eb5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "451ac4f4-d942-4026-a9c8-7fe6604f70a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de09d1b-7623-45bb-b42c-1dde09e9c3d8",
        "cursor": {
          "ref": "8d48d97e-2797-428b-8f39-e14946ddacde",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bf893083-9d86-4d35-95ad-6434f223c93c"
        },
        "item": {
          "id": "6de09d1b-7623-45bb-b42c-1dde09e9c3d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "12aaf2da-1815-4d39-a03d-559a6ca8ae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae162edb-5e55-4f92-9a4b-6cac727c31cc",
        "cursor": {
          "ref": "1f924327-e6f0-446b-a5e0-4f897c3b91f8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05aba356-7630-4c84-b2c9-3ef2dfe7b499"
        },
        "item": {
          "id": "ae162edb-5e55-4f92-9a4b-6cac727c31cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8874b208-be8b-410a-a87f-5bfd1bc5231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28092fa-a9bd-4041-8367-09dfa4202923",
        "cursor": {
          "ref": "9c81f3d6-4a08-4d60-9769-d0b79a5f7961",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8cd7d1ec-d5cd-4a62-8d51-c25364767b0a"
        },
        "item": {
          "id": "f28092fa-a9bd-4041-8367-09dfa4202923",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2e28386b-b587-4c10-b95a-76205dbc3040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c87e80-25e3-499a-b61c-ae7b78af1403",
        "cursor": {
          "ref": "44c80b61-47ac-4aaf-a918-7d4671fbf7f7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d45cd939-52ac-4a4d-a5c4-f6ac21cc9e36"
        },
        "item": {
          "id": "96c87e80-25e3-499a-b61c-ae7b78af1403",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7c8f87ef-8ffb-4fb9-a2f8-10d01a88b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d55295-833c-4ada-a12a-c6118cbe2af5",
        "cursor": {
          "ref": "046aefa1-0230-49c9-a3c5-62297dc2afdb",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c9753066-8b4d-4844-ade2-b77c51e6938b"
        },
        "item": {
          "id": "87d55295-833c-4ada-a12a-c6118cbe2af5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2f5452fc-f4bc-42e1-af5c-c7a341d7f685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b59540-b11d-42f6-bfd8-6a75baebd0cf",
        "cursor": {
          "ref": "e44fa421-2867-427b-8907-b7b35c4bd6f4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3af00f9f-6e2b-4fe9-a8e4-e334ad363e09"
        },
        "item": {
          "id": "65b59540-b11d-42f6-bfd8-6a75baebd0cf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b65caf4-42d7-442c-b5f1-f5b965bbf885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68db5d86-12b6-4088-9132-f3f0a303ca65",
        "cursor": {
          "ref": "eb8f7326-bb8c-4122-9a78-441fec019661",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b1168b0a-6be0-47e9-b3e2-1a7a2432c636"
        },
        "item": {
          "id": "68db5d86-12b6-4088-9132-f3f0a303ca65",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2cfd850e-d5fd-4693-bc9d-c40bdbb574c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f1e2b4-8014-4f41-af3b-3379ba9e4a12",
        "cursor": {
          "ref": "c8b03a8d-ddd8-44e6-a9fd-de723aeb239f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8cd45aa9-58a1-4451-8326-cd5b27f2e55d"
        },
        "item": {
          "id": "13f1e2b4-8014-4f41-af3b-3379ba9e4a12",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab49c123-4ce9-4a69-b042-224d0871c260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bec38e-6e02-4676-8782-9da6b2e77cce",
        "cursor": {
          "ref": "9cae9bf1-25b5-488f-954c-a71d958f091d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a303ab87-3ef2-40ce-a49f-d5308bb06124"
        },
        "item": {
          "id": "b2bec38e-6e02-4676-8782-9da6b2e77cce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7e0b9f4b-2066-4796-98fa-3a371146ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d871e94-d655-4ca6-a67e-805d47dd9391",
        "cursor": {
          "ref": "cb62e1ba-1073-4ea3-a2c0-bfa71f9887ea",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ca89907-6738-40ce-bb64-680be51dfd8b"
        },
        "item": {
          "id": "6d871e94-d655-4ca6-a67e-805d47dd9391",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a59ac7cd-a004-44b0-a29e-97c5218b66d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d20d2-def7-48ce-9133-d1e9f17c4ca4",
        "cursor": {
          "ref": "4aec21d8-59dd-41b8-960f-0e05ca6130a4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "82ba5e95-0ae5-406f-bebb-c64adea195df"
        },
        "item": {
          "id": "962d20d2-def7-48ce-9133-d1e9f17c4ca4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8165b808-1063-4296-903e-4eff9c8d01b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b222642-ec3d-455e-a325-b9883506747c",
        "cursor": {
          "ref": "4af4bf49-cf1a-4e05-8e66-1cd64656fded",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aa465318-7cb5-4429-bdb6-e014c1b14206"
        },
        "item": {
          "id": "1b222642-ec3d-455e-a325-b9883506747c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9651833-0f8e-4447-afce-971ab4e4e1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7247f9-0612-4a59-b6a0-0698fa7b9220",
        "cursor": {
          "ref": "2f3d5fe2-d364-4fe6-8e22-381b7a7129fe",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "08e5b90e-86e7-44ba-8259-6fbed55b98b7"
        },
        "item": {
          "id": "ee7247f9-0612-4a59-b6a0-0698fa7b9220",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e55ee6e1-cfb3-431c-a74a-c15894c5014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87967c8-6bb1-493c-ab22-a0305d5adae1",
        "cursor": {
          "ref": "ba198d83-0edb-4fd0-9918-c71b8c4141cf",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "60a7ff84-ac80-4a63-b047-a31d5563181c"
        },
        "item": {
          "id": "b87967c8-6bb1-493c-ab22-a0305d5adae1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1dd829f2-8546-44bb-ab5d-4091e4ea46b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598f1c14-0244-4f19-afbe-cb13c7ef55d7",
        "cursor": {
          "ref": "73bc931b-693d-444a-a9cc-234653f442ac",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1357c0c5-d673-4e98-8cf6-53489dd4d603"
        },
        "item": {
          "id": "598f1c14-0244-4f19-afbe-cb13c7ef55d7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22a94de2-e787-48f1-b350-28bbcc00e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48187494-71ff-4482-8a2d-33301a3ffa85",
        "cursor": {
          "ref": "a356d09d-4a9b-488e-ad6c-3b443a415912",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72d70f83-1b03-4d78-a540-e6f2b7e37f72"
        },
        "item": {
          "id": "48187494-71ff-4482-8a2d-33301a3ffa85",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a769da56-ada2-4219-ad33-8f5aa611485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf7f52-c943-494e-b45f-04bd942a3ff5",
        "cursor": {
          "ref": "a6f3a7a8-e0ff-45d4-b49f-10b8de863c8e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cde1729e-1ece-49bb-97ba-a368e44a9679"
        },
        "item": {
          "id": "a6bf7f52-c943-494e-b45f-04bd942a3ff5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3d3f8c3-0cbe-4e1c-a1fb-efa062caf4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafc4562-6bd3-4f14-a049-f14c9f6809dd",
        "cursor": {
          "ref": "9bf5e6da-ab63-416b-8a5b-502e58b416d4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "da26bb6e-9c6d-4d36-a9d0-bd279e39f99e"
        },
        "item": {
          "id": "eafc4562-6bd3-4f14-a049-f14c9f6809dd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e3803e4a-7778-4e2e-9b41-696bd2f82378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9f6c07-678e-49bb-9e85-a770f90ff263",
        "cursor": {
          "ref": "6368d5c8-a437-46ab-9a92-dc01efc2c560",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4a92c1a3-5a8d-463c-afb0-3523d3ddeaa6"
        },
        "item": {
          "id": "5a9f6c07-678e-49bb-9e85-a770f90ff263",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d7296610-f520-4cd0-80f3-d08a732dfd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd627af-6c35-4954-adcd-bf09d8e372f1",
        "cursor": {
          "ref": "6f829566-25c9-44f2-a9ad-dcfb3989bed8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c31e927f-fd00-4675-9562-e3290676e2d8"
        },
        "item": {
          "id": "8fd627af-6c35-4954-adcd-bf09d8e372f1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fa53a6f-6b47-4502-8947-c10f516d1b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d942c10-924b-454e-83a0-59e5de078e75",
        "cursor": {
          "ref": "3b8a59ec-e3ef-455a-9ed8-ec5e185b93da",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1325e790-13bd-4d32-82d8-e89512e11cd3"
        },
        "item": {
          "id": "6d942c10-924b-454e-83a0-59e5de078e75",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "52931b46-4587-4144-9d06-5c839e1a1cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6becb306-070d-4bf9-96bc-10a74a8b38a4",
        "cursor": {
          "ref": "1b8eaf1e-4c37-4657-b7f0-582929be8c2b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "859c907b-716b-45f2-b172-9f1d5a8f8af3"
        },
        "item": {
          "id": "6becb306-070d-4bf9-96bc-10a74a8b38a4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2341a509-9f46-43ce-a5f2-5c97aa96a4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f50884-dd83-4543-891e-f2d8a2a977d5",
        "cursor": {
          "ref": "176d4a4c-740e-48c6-b02d-b4766431b757",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c7f6966e-47c9-4597-a217-93beea11ae45"
        },
        "item": {
          "id": "00f50884-dd83-4543-891e-f2d8a2a977d5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9b3ec6f5-4905-493b-bf48-f345377be8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecc7ee1-7392-414f-bd16-f7ccb3990550",
        "cursor": {
          "ref": "b0622256-2f53-40e7-8979-4f5c325e15ea",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6355b228-3365-493c-9ec8-b2dc54a9a556"
        },
        "item": {
          "id": "6ecc7ee1-7392-414f-bd16-f7ccb3990550",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9f99e87f-b27c-4374-84fd-ce02061246d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4304205b-2cb2-41f5-9a13-23aa2d76bfb7",
        "cursor": {
          "ref": "60ae9c18-5061-42ba-819d-828d7c271c6b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1e4637d4-d94f-4ba7-b486-623e6a592ac4"
        },
        "item": {
          "id": "4304205b-2cb2-41f5-9a13-23aa2d76bfb7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8a3ff55-eb96-4c39-9d0a-2b907d2d223e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78545f6b-1d2b-4d3d-a009-f82ed6bf22ff",
        "cursor": {
          "ref": "f8c598e1-11e1-43a1-b2d3-84313029cf7c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "15bc6fd0-74ce-4568-9be1-38c019ee1e27"
        },
        "item": {
          "id": "78545f6b-1d2b-4d3d-a009-f82ed6bf22ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "711b5b5f-e867-4fdb-a87c-601d9eff9e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f5a370-b4f1-4e20-9c50-ee61a4917b5b",
        "cursor": {
          "ref": "4561bae2-cdc1-482c-97f0-5e486a3f6f05",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6830c2bc-3304-4a9b-a9d9-76bdcd4e5fd9"
        },
        "item": {
          "id": "a3f5a370-b4f1-4e20-9c50-ee61a4917b5b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c161c0e3-6e79-4634-a4bb-f0e50addb75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f0ecc-3948-4f5a-ade6-baa9ee560d4c",
        "cursor": {
          "ref": "9a809ed9-6a40-4fc1-935e-dbb486f59c62",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a203748f-6678-464c-962d-72b09600d600"
        },
        "item": {
          "id": "953f0ecc-3948-4f5a-ade6-baa9ee560d4c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fdd1d5d2-ad4d-456d-a9cf-94d21af58c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ddfd3c-6299-4390-91b5-bd0552b405f4",
        "cursor": {
          "ref": "872ac3f7-1dac-4b20-8dd1-d6b36cc17158",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be0b516b-664f-4880-90e6-79f02fac12a3"
        },
        "item": {
          "id": "c6ddfd3c-6299-4390-91b5-bd0552b405f4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b68bf74-2862-4297-8ade-6e2ced02b2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a034c8d8-1bf7-4830-ac3c-bad221876f94",
        "cursor": {
          "ref": "76bc7b58-0bfd-46f8-8a52-1b884dc9c380",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6cf88a8e-e043-4898-bbef-8f39e79046d1"
        },
        "item": {
          "id": "a034c8d8-1bf7-4830-ac3c-bad221876f94",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c09c586-4a9b-47a8-bf7b-52dbe76e05b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91112c99-ebfd-4916-93e0-76a4d7fcfb2e",
        "cursor": {
          "ref": "d6f7fdb6-88f3-4578-92c7-7d266b97ac31",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "40a705a4-e47a-4fb3-9f9f-ba658da4ccca"
        },
        "item": {
          "id": "91112c99-ebfd-4916-93e0-76a4d7fcfb2e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "44a72845-4317-4e8a-88b8-0e04cae90306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e059fe7b-b23f-49b3-ae27-d79a1765c213",
        "cursor": {
          "ref": "4f1f6483-7bf8-47fa-85a9-2dccafe01696",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c372cc72-ef50-4eb3-86c1-18194f83ad6d"
        },
        "item": {
          "id": "e059fe7b-b23f-49b3-ae27-d79a1765c213",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b963a632-2a30-4d9c-bdec-96ca4cdfa0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c69d72e-aad2-434e-8027-d30e5c1db053",
        "cursor": {
          "ref": "5acb729a-80a9-49cb-87aa-210e3e26689f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "37c50f3f-6489-42cf-b321-10bf8be4e8a5"
        },
        "item": {
          "id": "1c69d72e-aad2-434e-8027-d30e5c1db053",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3f948eaf-de23-4558-bb1b-b8dceaddaa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf1d084-b037-4257-8609-138b5c963913",
        "cursor": {
          "ref": "71986918-782f-4112-91e6-2022adee4552",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "60da254d-81dc-471c-a67e-ebcda82050ab"
        },
        "item": {
          "id": "abf1d084-b037-4257-8609-138b5c963913",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d0ea945b-74a4-48e7-bea2-3b56fb9b133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f76159-e8e8-47f6-a342-da0e7e1a532e",
        "cursor": {
          "ref": "011fc0e2-8a83-40c5-9614-1653b8ee0eea",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e796523-a8e1-4fb2-9bdd-a305ed4c61cb"
        },
        "item": {
          "id": "46f76159-e8e8-47f6-a342-da0e7e1a532e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ff6f0a28-2a20-4513-86fd-1e3e1d74cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c763c9fc-61f4-425a-a22e-19fc39438b29",
        "cursor": {
          "ref": "54327af4-6240-4727-abd3-1a7b3a937902",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d08d157a-068a-4876-b6d3-58b610016b84"
        },
        "item": {
          "id": "c763c9fc-61f4-425a-a22e-19fc39438b29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ba24c569-050d-45f6-be03-33de32717ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af073d89-a44f-46bc-bad1-df28cfba9208",
        "cursor": {
          "ref": "2dd284f6-4764-435a-abec-54c0f2be6bd1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ff0a7467-e96b-4564-b5c9-39074443ccc8"
        },
        "item": {
          "id": "af073d89-a44f-46bc-bad1-df28cfba9208",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0abf9d71-d280-420d-b1d1-bad977e122e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa029971-448d-4874-b37d-06f912daab5a",
        "cursor": {
          "ref": "cb03283a-18d0-4a3d-83ef-48691942d9b2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5be9e706-f5fb-45bc-b959-84e0b5543e63"
        },
        "item": {
          "id": "fa029971-448d-4874-b37d-06f912daab5a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9373cb1e-44da-47c7-a725-050d2961a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1b4cff2a-c024-4725-8b15-e8f1a4e36377",
        "cursor": {
          "ref": "4a437c15-da4d-434e-8ae0-6ba54996cfeb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fcd7dd82-e751-4073-9d03-d13d847a6e1e"
        },
        "item": {
          "id": "1b4cff2a-c024-4725-8b15-e8f1a4e36377",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0608641-ab3b-4012-999f-55a22aa4a28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1785b015-ace3-4073-96a1-2748ffa5d385",
        "cursor": {
          "ref": "7a4189f8-9c38-4a94-8cad-a53b0446807b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4480810d-4c1d-4504-b56a-e6cf21face2e"
        },
        "item": {
          "id": "1785b015-ace3-4073-96a1-2748ffa5d385",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "84ebffae-f959-42bd-962f-b5e09c106f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "27422616-3b62-45ff-b74f-ab70dd7f20f6",
        "cursor": {
          "ref": "29bcf167-acac-4092-bb9e-e57c21f7f6e7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6be7a146-2b99-41ad-87e4-3ccb46725b32"
        },
        "item": {
          "id": "27422616-3b62-45ff-b74f-ab70dd7f20f6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "408ca923-9128-449e-a1d3-114a7445b89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dba0743b-df57-4966-8530-75eaca4b3fec",
        "cursor": {
          "ref": "8cc25035-fa1d-4a55-955b-d087ad9e2c69",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f56ef901-66d6-4739-ba97-37e01a5d4975"
        },
        "item": {
          "id": "dba0743b-df57-4966-8530-75eaca4b3fec",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f56b459-09c9-4025-bad2-f1d851acbf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "fd42c3ba-2b89-4f5b-ab8b-3b5c20088293",
        "cursor": {
          "ref": "50d05344-bcbf-45ec-a539-b36721903a18",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f269035-0ad2-46bd-b6b7-8a13f7e00642"
        },
        "item": {
          "id": "fd42c3ba-2b89-4f5b-ab8b-3b5c20088293",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65435636-0bfb-4ac3-bc16-7a961d983593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "750abc56-acc7-4b6c-a2a6-9d57092e0b0e",
        "cursor": {
          "ref": "ef3fc3a5-cd88-4198-bf05-982839166e7d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "99c0f013-c990-4461-84ef-5d03bd82db92"
        },
        "item": {
          "id": "750abc56-acc7-4b6c-a2a6-9d57092e0b0e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "733ff41e-65ed-448d-99c8-5b9b087fdde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "07fc49ed-00cc-47eb-a693-7ee870d14a3d",
        "cursor": {
          "ref": "3efd5bf7-96d7-45ee-929c-d646126943dc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cdfe63b0-6cb5-479f-b990-6c09922770ff"
        },
        "item": {
          "id": "07fc49ed-00cc-47eb-a693-7ee870d14a3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2ffadd49-72f5-4db1-95cf-27d5b1a0ff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da787d77-4def-47ce-9a0b-786dcde28dc9",
        "cursor": {
          "ref": "1c2cec0a-97b1-4743-bb0e-8d5629dd3b30",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "94a5b4b3-7c4d-4d79-acbd-aa23dbb7311e"
        },
        "item": {
          "id": "da787d77-4def-47ce-9a0b-786dcde28dc9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a9a8492b-c242-441d-93e4-172dfbe85419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cabbb2-4df4-43ab-b5b1-03bafcc6c256",
        "cursor": {
          "ref": "deb30bc2-c91e-42de-bf7d-138d686c0e00",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "96f938a1-5d1f-431e-a7bb-51a27a032c2f"
        },
        "item": {
          "id": "15cabbb2-4df4-43ab-b5b1-03bafcc6c256",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bd5791aa-44fd-49cd-b4be-86f44a9e5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42578b61-8ed4-4752-b8b2-0e5f9c971c04",
        "cursor": {
          "ref": "ab1e2c94-052c-4bbd-9a9a-cf61f0f028ac",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0359d96f-7cff-45a5-bd29-1d870860303f"
        },
        "item": {
          "id": "42578b61-8ed4-4752-b8b2-0e5f9c971c04",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad46c5d3-41d9-4969-9b1e-d3e0f8781f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e725680-7508-4554-95f9-95528e3993f6",
        "cursor": {
          "ref": "077f1b1c-cde6-4cd6-b428-1cccc0c18508",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "58e51eba-f52d-4944-a674-e3a36da176bf"
        },
        "item": {
          "id": "1e725680-7508-4554-95f9-95528e3993f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "840c6792-1f42-400e-96dc-354ecf1550cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4a826d-a2a9-4749-8e48-e37c947efdb9",
        "cursor": {
          "ref": "ed80cd1d-0c1e-4396-81a7-d37f8e4a3bc3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f98519c-5e77-40f9-b44e-7f1546ac8e1a"
        },
        "item": {
          "id": "ad4a826d-a2a9-4749-8e48-e37c947efdb9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0556790-15d3-4125-b86f-67281d3876e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14223e9-64fc-4074-bcad-cab111cc19d5",
        "cursor": {
          "ref": "5b4df7f3-b21d-40a2-884d-da046b481bfb",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "843c9499-298c-4f27-92cd-b7a7abec23f7"
        },
        "item": {
          "id": "a14223e9-64fc-4074-bcad-cab111cc19d5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "455006bb-3f44-438e-bff0-5a81c078e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f46af82-840d-4d92-8ebd-221c400ba834",
        "cursor": {
          "ref": "6ec1cab2-4485-43c4-b8b9-383343e805c9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3d2ce02b-4eb2-4c4c-9ebc-34e84c4bc2f0"
        },
        "item": {
          "id": "6f46af82-840d-4d92-8ebd-221c400ba834",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8d1732c4-2aa6-4fc2-a39e-37f4c552f5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58ca568-5866-458e-95bd-124898b4bdf7",
        "cursor": {
          "ref": "dc126755-9452-4a51-b3be-7eca67a85563",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3167af54-010a-4273-8c60-9e539cb089bf"
        },
        "item": {
          "id": "e58ca568-5866-458e-95bd-124898b4bdf7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "549a4737-7857-429f-8f81-be4c4298912f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070f6af-44f4-40ce-a9d5-27c43ed674f8",
        "cursor": {
          "ref": "ed0683a4-7dfa-46e3-b0de-b25e775cead1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "91a89938-6227-423f-80ce-62b957df5f76"
        },
        "item": {
          "id": "e070f6af-44f4-40ce-a9d5-27c43ed674f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76e009f4-02f5-4c8c-b89c-4ca1490b13fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db9bf1-bd77-49f4-8812-7521a54d73ad",
        "cursor": {
          "ref": "2f6feabb-1b88-4334-a2ac-2017b4040f44",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8febbcff-efbc-46e5-a40c-76367ca9ce69"
        },
        "item": {
          "id": "f1db9bf1-bd77-49f4-8812-7521a54d73ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f6432b5-9416-4d35-a4a2-bc449a96477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295985ef-439f-48a0-bc1c-a1454ac2f4b4",
        "cursor": {
          "ref": "27006557-0ba9-4032-b79c-a8827e4540e7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e10dfc1-d3cc-4463-aea3-2a2195bdcd51"
        },
        "item": {
          "id": "295985ef-439f-48a0-bc1c-a1454ac2f4b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "615298b8-924a-4339-bfdc-8f6f78bccadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777666b3-3575-4e65-b097-69629590a183",
        "cursor": {
          "ref": "c151c42a-1403-48df-99c7-b6e63d514fa2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bc9a84f6-c4cf-4945-b52c-43db7edafa4b"
        },
        "item": {
          "id": "777666b3-3575-4e65-b097-69629590a183",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0412123-5b49-4a78-b2cd-1883aa4cb5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5e6d2d-57b5-4553-a8bc-7ab0d130fdc5",
        "cursor": {
          "ref": "b289bfd9-7505-4cb5-8ee6-cd01398ad69e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3d66f074-e916-4ac9-a443-1516108f70a3"
        },
        "item": {
          "id": "2f5e6d2d-57b5-4553-a8bc-7ab0d130fdc5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2af97230-3b3f-418b-91f5-630b0ce703a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f3a1f2-4976-46d4-b184-85f428e5b20a",
        "cursor": {
          "ref": "ea95d639-4d7a-449b-9a57-2d40c9205590",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c923bb62-664c-4472-bcea-4bfebbdc6707"
        },
        "item": {
          "id": "d0f3a1f2-4976-46d4-b184-85f428e5b20a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "26f3987f-aad3-4693-be26-03cf8d48a4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ccabd-a38d-4390-b964-0037e2573261",
        "cursor": {
          "ref": "c3c9b2aa-cb4d-45e6-9a19-f85ec80cb182",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8c4a79c6-9665-4c02-b89e-3c580f29afce"
        },
        "item": {
          "id": "782ccabd-a38d-4390-b964-0037e2573261",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "722f8f92-df9f-4ee7-9b92-eb71345f125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1530f14-001a-4c0e-9eaa-54478da9a9a6",
        "cursor": {
          "ref": "7493ac9a-d730-4442-adc3-891922fada3e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5c6edde-ca83-4d09-8d3d-28e2c87056be"
        },
        "item": {
          "id": "a1530f14-001a-4c0e-9eaa-54478da9a9a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87e6488d-c1e4-483c-922b-b763e4574b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708e296e-cacf-47f4-8fb7-539042d1dcdd",
        "cursor": {
          "ref": "4366893d-64c8-41f4-9002-4708dcc905c6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5168c19d-0601-4fac-bdf5-02f77590a5f7"
        },
        "item": {
          "id": "708e296e-cacf-47f4-8fb7-539042d1dcdd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ebb7433e-6c79-48cc-a1ec-9a0c9457ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dade85-a568-4b80-95c0-19b2569991f7",
        "cursor": {
          "ref": "56d70c58-d80f-4c0f-8791-1266231eeaa9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5ede6f81-c474-444f-b210-25f9c08046b8"
        },
        "item": {
          "id": "48dade85-a568-4b80-95c0-19b2569991f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "937c307e-187e-481e-9def-b8422c124625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfac3f12-2cd4-4c83-8904-4e175c3f8ef4",
        "cursor": {
          "ref": "f3ca8273-4741-4a8d-ae7b-8f02452c4e9f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "230cb605-e275-40fa-be33-9cb19068554d"
        },
        "item": {
          "id": "bfac3f12-2cd4-4c83-8904-4e175c3f8ef4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a0eaefd-2699-4c40-95fd-1242d91e1124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1a11e2-6027-40b8-bb48-0b5f3aeb21a0",
        "cursor": {
          "ref": "a1ee2ef3-9b57-4db1-9e1b-a695ea81b39f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57bdb47c-e16c-49d8-801f-1aace0ad18d6"
        },
        "item": {
          "id": "1f1a11e2-6027-40b8-bb48-0b5f3aeb21a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "506c94f2-7300-4b7f-9f6f-1e7e0fd95607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1331b961-a1dd-4216-8921-8d30cc351cbd",
        "cursor": {
          "ref": "242fc25a-f428-4bfd-84ef-daed9c0329f8",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8bd18dcf-7d3e-4d27-9a3e-a0875a7553df"
        },
        "item": {
          "id": "1331b961-a1dd-4216-8921-8d30cc351cbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b6661e5-a913-472d-8375-5412648d0568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc2cbf5-c9ec-462d-aa29-9b597fe59a00",
        "cursor": {
          "ref": "89b2ba4c-bff4-4ab2-bccc-29247858937f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4e7a56a3-bd2d-4fc5-838c-e28c3edaa588"
        },
        "item": {
          "id": "7fc2cbf5-c9ec-462d-aa29-9b597fe59a00",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc8d7427-86a9-4a4e-9cef-297557027908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4732dddc-0a2d-4b47-9311-43acd6d651d6",
        "cursor": {
          "ref": "09fa39b5-1700-46a0-bd43-e7fc90fc0d3b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "369b90d8-8741-421e-9dcb-a608b31b4199"
        },
        "item": {
          "id": "4732dddc-0a2d-4b47-9311-43acd6d651d6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3b00bf59-4382-4751-a5bc-cc37e99e124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534f126-e72a-4c8f-bd43-e6cec0584e2e",
        "cursor": {
          "ref": "4f0e10a9-0ddc-4821-a4de-e292e7ee4c0a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c594f398-ce2c-47d4-b23f-717549cde03a"
        },
        "item": {
          "id": "3534f126-e72a-4c8f-bd43-e6cec0584e2e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "33899886-c006-4f84-a6aa-52f11db366b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3556561c-181f-4171-9941-3556b4b83ce2",
        "cursor": {
          "ref": "06f581c9-7f2f-459e-88e8-b0f1284c44cb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "59339955-6ac4-4340-bcd7-2e9fda0c3291"
        },
        "item": {
          "id": "3556561c-181f-4171-9941-3556b4b83ce2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b4795f6-fde1-4f36-93a9-a45143ff90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84a7268-c72e-4614-a005-95ddf496b559",
        "cursor": {
          "ref": "53d5e5b5-78bf-4e41-b3e1-8c184009467b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eb93758e-72f5-43cb-a34b-07599ce47ee4"
        },
        "item": {
          "id": "d84a7268-c72e-4614-a005-95ddf496b559",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c1949b9-ab2a-4b7e-b4a0-4e7a695583e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc880625-c38d-4a26-82f4-68668d04fb47",
        "cursor": {
          "ref": "8923965d-a418-4dcf-8686-ff9d6f7a7b3b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0be86162-adca-4b16-a3af-b5447b762123"
        },
        "item": {
          "id": "cc880625-c38d-4a26-82f4-68668d04fb47",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ada5db7-5f67-4769-8be4-394c31d6cfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47076b49-140d-4719-b951-b0f7b43b6713",
        "cursor": {
          "ref": "f6126873-bbd9-4bd5-93bb-c9a24f1f23a3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2cee3978-8757-4e3b-a7ed-2a58757adb62"
        },
        "item": {
          "id": "47076b49-140d-4719-b951-b0f7b43b6713",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f5a2c85-6f8b-4b53-92a6-aba27f14782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cd4c89-e725-4e76-8931-84d38dc2aed1",
        "cursor": {
          "ref": "8c53aec0-afd9-4b5b-8f4a-2cc2f356fe9a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e8ec58ff-572d-433e-a67d-df15d3121d54"
        },
        "item": {
          "id": "62cd4c89-e725-4e76-8931-84d38dc2aed1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f1914a1-1c53-4149-a822-5a4dc3a767fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebe1f70-1990-4e0e-8dc0-d1990b6ace3a",
        "cursor": {
          "ref": "bb00384e-796e-4649-87cc-d8b26eff3cf8",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f247ef6-d319-4e38-a336-e3066eb2e694"
        },
        "item": {
          "id": "5ebe1f70-1990-4e0e-8dc0-d1990b6ace3a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "405b578a-a13b-4cde-a63e-df44c543ee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8245d2-7d6d-41d7-859c-dccc7ab92d74",
        "cursor": {
          "ref": "bd18aa01-58b7-4cd4-996f-2f8a6e1b66dc",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1b4727d0-97dd-4d0a-95be-576ea837d88b"
        },
        "item": {
          "id": "3a8245d2-7d6d-41d7-859c-dccc7ab92d74",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "30d0c435-be8d-4dcd-b63d-777292dfdc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b16ca8-869f-4e7c-83eb-43e1b438372c",
        "cursor": {
          "ref": "09d0f508-454b-4280-b033-db5fbda821ab",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fd0fae4f-86a7-416c-a129-8769005e9705"
        },
        "item": {
          "id": "a4b16ca8-869f-4e7c-83eb-43e1b438372c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "093fc5e1-5081-4166-a14c-e40f51a98d21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6849a58e-a43f-4ef6-9934-211ac59dba4b",
        "cursor": {
          "ref": "69b1e246-0a26-4fc9-9b03-7898c62a4966",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "afaa076c-483e-407f-9aa9-25a329712422"
        },
        "item": {
          "id": "6849a58e-a43f-4ef6-9934-211ac59dba4b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "66603b68-f122-4b1d-ac09-d7c83bf4ed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b924bfe1-6c22-4b2a-8e99-49e54efe4360",
        "cursor": {
          "ref": "3569d27e-817f-43ba-9c0c-a0eb51ad0387",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "374cdd8a-46d0-4a2f-9a20-6bb8202371cb"
        },
        "item": {
          "id": "b924bfe1-6c22-4b2a-8e99-49e54efe4360",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "146b8f5b-cd62-432d-a690-416629789450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a35829-eeaf-48ef-8ba4-c0dffce8b87b",
        "cursor": {
          "ref": "ca7ab09c-3e31-4579-aa0d-cc09346e5439",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8da26196-c780-43f6-8301-d9f2f2107f40"
        },
        "item": {
          "id": "34a35829-eeaf-48ef-8ba4-c0dffce8b87b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45625666-580d-4fc8-b0e9-d15f86b8330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568596b-40c6-42b5-8933-1caf955216b0",
        "cursor": {
          "ref": "a995bee3-05cb-44ad-8e4c-36aba89eb84a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e1708c3-acbb-4512-96f6-4a8c1ff8f4a5"
        },
        "item": {
          "id": "1568596b-40c6-42b5-8933-1caf955216b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "513bb2ff-e50c-4ef4-8f04-d0d1c2de451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127150a1-82ea-433c-bf9c-730b2b7a93b8",
        "cursor": {
          "ref": "95b68771-3167-4c69-a8d8-1ca470c374f9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "604163fd-fbb6-496d-a7e9-1d7ddf796a32"
        },
        "item": {
          "id": "127150a1-82ea-433c-bf9c-730b2b7a93b8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8205d890-f7e1-453c-a831-f0c2183c540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd10645-27a4-463d-b4ed-a2de221dc656",
        "cursor": {
          "ref": "63a3a866-aa50-4a9b-b129-19e7ad1c4844",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9403964-f23c-442f-a8ed-679115c52802"
        },
        "item": {
          "id": "0fd10645-27a4-463d-b4ed-a2de221dc656",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c231578b-752f-4d07-801b-8858777ee587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef73ed65-60d1-4745-a790-09a01c9716a0",
        "cursor": {
          "ref": "9107b2e4-55de-4c20-96bb-916954fcb217",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ac72449f-60dc-4ec7-8267-8422e6acb391"
        },
        "item": {
          "id": "ef73ed65-60d1-4745-a790-09a01c9716a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1fdaa83a-d71a-4f2a-9c8c-568a29a5827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a298db-4ed3-449a-ab40-d2f703c2a193",
        "cursor": {
          "ref": "eaa348e1-0e1d-469f-8cd0-6a873e47cd67",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a51f7b66-7310-4e41-a195-2ddb97972733"
        },
        "item": {
          "id": "e3a298db-4ed3-449a-ab40-d2f703c2a193",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8dde5e79-0fa9-4588-97dc-a2a61a93a9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3596394-5a15-455c-8e3b-e1773879c746",
        "cursor": {
          "ref": "10049c11-07db-4da7-b95c-ecbf6e7e61c7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "883a7668-5610-4131-a6bb-b478e0dcca1f"
        },
        "item": {
          "id": "c3596394-5a15-455c-8e3b-e1773879c746",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f45418f6-0b01-4c1b-823b-0fcf09b26ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91b7f48-a9b2-4cdd-a06d-918df79ffb10",
        "cursor": {
          "ref": "a33acf52-483f-45ed-a8d5-50eb32292805",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ecca8cb4-1aef-4894-bf76-5b6ec21f1a32"
        },
        "item": {
          "id": "d91b7f48-a9b2-4cdd-a06d-918df79ffb10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7c138e89-db91-40da-a16f-b25adfdd21a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b171cc7-148b-41bd-8bc2-2d2d49539132",
        "cursor": {
          "ref": "fbd0b9fa-7635-497f-8dda-a59c048a941f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "163a4aaa-8e61-491f-8644-2de36051ce67"
        },
        "item": {
          "id": "5b171cc7-148b-41bd-8bc2-2d2d49539132",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "40e00685-094b-4e3d-85e2-8b44c34e71e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc6c5a-91bb-45eb-ac99-9e636eabad8d",
        "cursor": {
          "ref": "78665aa4-4455-41c6-a2d1-896dbd28646c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0d3b1b4f-c34e-4d83-ba32-6f282155f863"
        },
        "item": {
          "id": "6edc6c5a-91bb-45eb-ac99-9e636eabad8d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8ed05602-77c5-45af-9833-cdb1fe6d22c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19823df-4a00-4f99-b122-072fa470fac0",
        "cursor": {
          "ref": "5414df9b-e8a8-4e44-966e-dbc54daa7fbc",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d77db032-dc2e-4c28-a72b-01e93e73eead"
        },
        "item": {
          "id": "d19823df-4a00-4f99-b122-072fa470fac0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3af3091e-49a8-48fa-b729-03455fcd90aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af35b97-0cd3-44af-b612-d6c60a8168cc",
        "cursor": {
          "ref": "f3d51ad6-dfa1-4452-b184-edbb21dba450",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8c1d2b7c-6553-4cfb-8fd2-0f764f1b985a"
        },
        "item": {
          "id": "1af35b97-0cd3-44af-b612-d6c60a8168cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ddfac2a-64b1-439a-8c90-fc8d7c25202f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ce9d3b-2325-4bad-9658-19ff73ea2784",
        "cursor": {
          "ref": "da978a36-a2c3-49bb-8522-9f4f837237e5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8df14900-bc95-4b41-807b-edc147e1d823"
        },
        "item": {
          "id": "75ce9d3b-2325-4bad-9658-19ff73ea2784",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aa9d925f-47fe-48ee-8e4e-549e39f99079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a98f3d-0847-4bda-a8ff-36e0c4b0680a",
        "cursor": {
          "ref": "8a9faf7c-0c85-4b30-849c-e4f0213f4c8b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e76de84a-ef03-46f8-8a78-4e608c5c48f5"
        },
        "item": {
          "id": "05a98f3d-0847-4bda-a8ff-36e0c4b0680a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9da992b9-e989-4e1d-abe4-2a2b9daa2e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a061d7d-1212-4c82-91a0-3484785e4833",
        "cursor": {
          "ref": "7b0c6c77-7fd8-4160-b65f-6e0ec8d18980",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "77910682-5ace-44fb-b52f-3b6499a365a0"
        },
        "item": {
          "id": "8a061d7d-1212-4c82-91a0-3484785e4833",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "91e1a12d-445d-4685-a4ed-08010987a617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cafd17-a539-4619-a6de-5681b9f9cd37",
        "cursor": {
          "ref": "477b5e08-faeb-438d-b41a-65efeb25bc4c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2def4e9b-b3c2-4a58-8f88-78bcacf3b6be"
        },
        "item": {
          "id": "02cafd17-a539-4619-a6de-5681b9f9cd37",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99ff1d35-5bc4-4fec-b236-f8a00130fe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb1584e-71c3-4f9a-999d-321ae43a02dd",
        "cursor": {
          "ref": "e793fbeb-34f9-4f2f-8370-92895d0ce8ee",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "12f8bbd3-bf42-4a15-b728-35f9cadbd713"
        },
        "item": {
          "id": "efb1584e-71c3-4f9a-999d-321ae43a02dd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13543809-5777-43db-85b8-98c2e60e5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dfe653-185e-4292-81c1-6682ff8fbc70",
        "cursor": {
          "ref": "fcabcf1f-fadf-4d9d-a98b-08e945679d1a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "88920361-a668-4856-bdc7-a83c34444246"
        },
        "item": {
          "id": "19dfe653-185e-4292-81c1-6682ff8fbc70",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d2c6edf9-c045-4616-b735-99911529d130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61985bd8-ccfc-468c-87bd-94cbfbdc5a5a",
        "cursor": {
          "ref": "960f2aec-0914-426d-87b5-44291ad4b862",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f529a5ea-ca77-4aca-b959-79b69bc785a3"
        },
        "item": {
          "id": "61985bd8-ccfc-468c-87bd-94cbfbdc5a5a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac1d9cce-2fac-4969-9bf6-b91a66c80b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d435f21f-55c4-4d0c-94b7-48473bd06a01",
        "cursor": {
          "ref": "c853eb15-0b56-4849-87f6-d4d48865673d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2854b13b-349c-4f65-83dd-4c24f3a0fbcd"
        },
        "item": {
          "id": "d435f21f-55c4-4d0c-94b7-48473bd06a01",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4681ab0b-9821-42ab-849e-eef9010272ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aac901e-0594-4e89-90d2-2442a0f08d79",
        "cursor": {
          "ref": "fb3e619c-04b1-4a68-b7ea-e249b1ff9ecc",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0dbcd799-70c2-4244-8067-fc77779681b7"
        },
        "item": {
          "id": "7aac901e-0594-4e89-90d2-2442a0f08d79",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7cd74ff2-e7de-4604-b1ef-8baf93fe39af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3960988-77ad-4ac8-915a-acdb136a9398",
        "cursor": {
          "ref": "3db7e8e2-0fcf-4b4a-ab70-1ef8f8a6f5dc",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c93aa61b-5055-4647-af76-65be96ba9466"
        },
        "item": {
          "id": "c3960988-77ad-4ac8-915a-acdb136a9398",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c6e00154-6318-4534-8c32-130d755469bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b0f8b9-8dd6-4cdd-8b96-9a68d41024be",
        "cursor": {
          "ref": "ea3f8f2b-d177-402f-8cf4-a9c12a28b2bf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "34ecc5b6-7a82-420e-85dc-586f4a2a38d2"
        },
        "item": {
          "id": "71b0f8b9-8dd6-4cdd-8b96-9a68d41024be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a8069c83-f4ee-497a-8d41-e49086b0402d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2501f2-6b95-44d7-bd5b-09d8dceb9590",
        "cursor": {
          "ref": "e90393d0-caf3-482e-9e3e-3184f8148090",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aeaa5e27-bcd3-4050-af08-0dbb169bf595"
        },
        "item": {
          "id": "fe2501f2-6b95-44d7-bd5b-09d8dceb9590",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a20a4ba4-4423-4c47-bcf3-51c229b1db89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda2fc11-ade6-4d40-acba-007e8f772c15",
        "cursor": {
          "ref": "271bdaa9-4e70-4750-9341-9ca9cc54c233",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1c61e930-6d24-4f60-91ca-c68553983df4"
        },
        "item": {
          "id": "dda2fc11-ade6-4d40-acba-007e8f772c15",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "39b3437d-8558-476c-879d-44fd06ec4601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5550fb7c-62ca-4700-9a7b-950ab777a4b7",
        "cursor": {
          "ref": "894dc78c-d4b2-43f8-a383-8d926fa88f59",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9aa725f7-4796-4565-83d2-e6b850c74ae7"
        },
        "item": {
          "id": "5550fb7c-62ca-4700-9a7b-950ab777a4b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1b717d4d-6f00-4205-bb10-b9c084f08757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef85c1-80ba-4814-b3cd-4391d1421355",
        "cursor": {
          "ref": "4ca3b556-8509-440c-ab78-15804bc8b194",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c3b2c329-940e-429c-a4e1-a2add95b49a0"
        },
        "item": {
          "id": "07ef85c1-80ba-4814-b3cd-4391d1421355",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7023eef-4eba-45d2-8ea6-3d80062487aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790467dc-0568-4868-8c2d-ef39a11176c6",
        "cursor": {
          "ref": "1b0bf4a6-d9aa-451e-89b9-5550d36bfc70",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "30480fe7-8213-4483-b202-143248994981"
        },
        "item": {
          "id": "790467dc-0568-4868-8c2d-ef39a11176c6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c8b0b3f9-b07c-4647-9c14-8c8cd3016ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef466e3-e19b-4756-bad8-cce9bbbf9487",
        "cursor": {
          "ref": "10af50af-9f1c-49cb-9c5d-92f10cfde7e8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1d054894-6102-4a27-97aa-7cdb98472fc9"
        },
        "item": {
          "id": "aef466e3-e19b-4756-bad8-cce9bbbf9487",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1c9b2b9c-1f34-482e-a0cf-151f8cf8f762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2405420a-67fd-4a0d-adea-946a41250a34",
        "cursor": {
          "ref": "300ee26f-1da3-4763-b52f-4df1e73b359c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dba47fcf-c4c7-4b2c-afd6-b5ec828403dd"
        },
        "item": {
          "id": "2405420a-67fd-4a0d-adea-946a41250a34",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da4f5c15-837a-4110-bca4-44b5ce6b518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d884a-00b5-49e6-bb94-3ba4b61a9663",
        "cursor": {
          "ref": "3f3f8956-a4ce-4a07-a187-d94c6ed5b981",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "40f43667-785a-4e14-bed1-595d4aeaecef"
        },
        "item": {
          "id": "b86d884a-00b5-49e6-bb94-3ba4b61a9663",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c36b3bad-3ecc-4a1c-90de-b46110504486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cf3690-56e8-43b3-abc0-97554579104d",
        "cursor": {
          "ref": "e50fa528-f716-4388-ba13-d82d52cd0cbb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bfc39682-eb52-4403-a5cf-978d20b071a4"
        },
        "item": {
          "id": "28cf3690-56e8-43b3-abc0-97554579104d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "24bf735d-381a-4984-a8da-7ed8e560966a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a344a371-9c12-4b09-a515-8fa7754b35f4",
        "cursor": {
          "ref": "d48e0568-51d3-43dd-a7d5-df15e86e5601",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d5a6753-223c-439d-80f3-f0c86ae5c7a2"
        },
        "item": {
          "id": "a344a371-9c12-4b09-a515-8fa7754b35f4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f3d05f39-2c5b-4c55-b552-b46b4229c2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1f6c8-cfbd-42f4-8732-0d6728f08f51",
        "cursor": {
          "ref": "4435dc9a-7a0c-4283-9962-203c64b9e8f4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "53bb8b93-68a1-4386-a9b1-b2761bb3e03d"
        },
        "item": {
          "id": "5ca1f6c8-cfbd-42f4-8732-0d6728f08f51",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4587f48a-d5e2-47a8-a19b-110aa3286c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48320e8-2e58-4be4-8d16-3b18f06abe03",
        "cursor": {
          "ref": "ea5df255-f40d-459c-a0e4-600e269baa76",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "86e78dd0-e400-40ee-8642-0a28a3638562"
        },
        "item": {
          "id": "b48320e8-2e58-4be4-8d16-3b18f06abe03",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "64166fe8-f0e9-4cf0-b984-10383dee788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370954f4-198d-43e5-91b8-eb78dd326ec0",
        "cursor": {
          "ref": "e2faa7b3-7e0c-4f08-bd8c-7b60011ae68f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6e51ef11-756e-45bb-ba8c-d643a75f62cc"
        },
        "item": {
          "id": "370954f4-198d-43e5-91b8-eb78dd326ec0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b7ec9b57-7129-454a-a794-4b9fd4fb7a38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62ce073-c76d-4716-8149-af8c2bc38e52",
        "cursor": {
          "ref": "faa2942a-dfb3-4f4d-a337-f98f6805ff7d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6325a08e-9f02-4496-97e4-c4993a9de8ea"
        },
        "item": {
          "id": "f62ce073-c76d-4716-8149-af8c2bc38e52",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b13d69c-8dab-48ea-acfe-b25db44dad9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd98448-f6e0-4fdf-94f8-b57770f4668b",
        "cursor": {
          "ref": "0484b93c-9dd6-494e-8c60-0787a7c16b92",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "01365702-de6e-435a-9faf-d7fb4c089d81"
        },
        "item": {
          "id": "2bd98448-f6e0-4fdf-94f8-b57770f4668b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "270533b3-ad76-43cf-826f-93c60d1505ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ca3ca-9b5a-4128-b4a7-e48bf867c3c0",
        "cursor": {
          "ref": "5c04ad11-da4d-421e-84fe-eb56eb64f2a9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "83b0516a-7538-4178-8592-dbe52b007c3d"
        },
        "item": {
          "id": "660ca3ca-9b5a-4128-b4a7-e48bf867c3c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d12680cc-2502-43eb-9809-b56587dd53f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb9400c-37cd-410c-8e27-a062f4ed6929",
        "cursor": {
          "ref": "9c61f7b9-ff6b-46ba-b7dc-67082cf683e6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1adf85bc-5363-4354-b486-e33be1fc2132"
        },
        "item": {
          "id": "fbb9400c-37cd-410c-8e27-a062f4ed6929",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9d7c146c-6c9a-41fd-8b1b-e5885fa80541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738d7dc5-9da7-43d6-8264-154bdc7ccdc8",
        "cursor": {
          "ref": "eefb764a-4bfc-4bdf-b5d4-f68819ea43d4",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e1ab4150-bbdf-4844-8d8c-69bf2dab6589"
        },
        "item": {
          "id": "738d7dc5-9da7-43d6-8264-154bdc7ccdc8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b68469c9-e227-4750-a1a8-950b970cd739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8c6296-f64b-448b-9be2-a9dcf91517fa",
        "cursor": {
          "ref": "abc57e37-510a-49e6-ab92-07f10a395d9a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad22be94-3ce0-4dc6-9dad-d2d86b5ba052"
        },
        "item": {
          "id": "4a8c6296-f64b-448b-9be2-a9dcf91517fa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "35bca7d0-6594-4020-b9a6-8047ed4ebe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03efd098-1b06-4135-bc81-3208e8fc0828",
        "cursor": {
          "ref": "0db82949-6314-4987-a3dd-61d3425eb0c1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7c38e51d-0a03-4c54-a999-c390e19746b7"
        },
        "item": {
          "id": "03efd098-1b06-4135-bc81-3208e8fc0828",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5157913a-b203-492e-b113-6af3784f9ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07e1c5e-aa6f-4939-8ae3-ef19e464c973",
        "cursor": {
          "ref": "38bc0870-f442-485e-9fa7-6a7275a8bd5b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8a664329-0b06-43e3-94ef-368605d139bf"
        },
        "item": {
          "id": "f07e1c5e-aa6f-4939-8ae3-ef19e464c973",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3a1cb056-72a5-406f-b5fe-2cc401d90eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395b6bbd-4ab5-4fc1-a2f0-8de7c0b404d9",
        "cursor": {
          "ref": "ea72322e-3943-43c3-af9e-827784ad4ea9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a801e973-a508-4ea9-88f6-98eced08f64a"
        },
        "item": {
          "id": "395b6bbd-4ab5-4fc1-a2f0-8de7c0b404d9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5ca31581-10e1-40e4-b27b-ff4d12b69d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0d7ed0-9ba8-4f78-a1f0-86b738dd71b5",
        "cursor": {
          "ref": "c6cccb64-b3c3-491b-9ff1-01cca828953d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7672923b-3c23-4170-9e68-ab2c5c365d36"
        },
        "item": {
          "id": "6d0d7ed0-9ba8-4f78-a1f0-86b738dd71b5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fe06325b-315f-48c6-99c4-41d3908cff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c79703b-aecf-4026-807e-ccb78bd8025d",
        "cursor": {
          "ref": "0ee9ea40-c946-470f-ba02-bc0678a79ea9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "318c2680-ebd7-433b-ab75-46f826e43433"
        },
        "item": {
          "id": "3c79703b-aecf-4026-807e-ccb78bd8025d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bc56e511-193c-414f-977b-424a18eabb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d394e31-e699-4e46-a208-12c8da55dc27",
        "cursor": {
          "ref": "dbb26124-6db6-4662-9058-0b5c877c178f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "473c93b9-979d-4bde-9484-e7c48fda4099"
        },
        "item": {
          "id": "1d394e31-e699-4e46-a208-12c8da55dc27",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "97c28390-0390-4315-b211-5704185e8849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94bd82-79c2-4c79-b1ff-46cbb0cd83a8",
        "cursor": {
          "ref": "ab904813-54ec-4f1f-afa7-44f94fdb2b07",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b2fd69b0-391d-4d80-8cc1-d16ecadfaa92"
        },
        "item": {
          "id": "2b94bd82-79c2-4c79-b1ff-46cbb0cd83a8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "635ff6ea-7984-4f6d-b9dd-7173fce2f2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd775a-6a1c-4359-9b15-122377374746",
        "cursor": {
          "ref": "315c4fd3-2e45-4e02-99e5-c8b13a92f05b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "717d60ef-4a29-47d1-8432-97b4210bfa8f"
        },
        "item": {
          "id": "63dd775a-6a1c-4359-9b15-122377374746",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d9d79f21-5fc2-4441-a7c9-7e818f9e196f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a86657-48b0-41d3-a339-fd88a3d41a33",
        "cursor": {
          "ref": "e7f1e9c2-76b7-4235-bbbd-7c3524e225fa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9ddcc6f5-c959-4615-a09b-ae022df7425a"
        },
        "item": {
          "id": "a3a86657-48b0-41d3-a339-fd88a3d41a33",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ab4c84b2-acd8-423e-aba7-a7db197ebb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599eab6d-da15-42f7-8a2b-1290a2f28239",
        "cursor": {
          "ref": "1600bc11-6ded-4849-8b51-8bde77c2f6d0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "148cc518-39b1-4a70-9046-b925f23adcb6"
        },
        "item": {
          "id": "599eab6d-da15-42f7-8a2b-1290a2f28239",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7fe4ada5-dca2-466a-8af9-cc689a9f252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d06bf-51c1-41fd-82d5-7c04ec426384",
        "cursor": {
          "ref": "539e1bb1-be6f-4122-ac28-49aed3ac9f18",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "733cac0d-c4b7-428e-bff2-52a87b095f99"
        },
        "item": {
          "id": "f44d06bf-51c1-41fd-82d5-7c04ec426384",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "68994103-839b-4475-b668-bb291cee6107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5480d3-e01a-4103-9435-ef9d170ffda6",
        "cursor": {
          "ref": "510681a2-751f-4f7e-ad5e-d10e0da21e6f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4321ccf1-a5c5-4472-843a-6c8026b6eb3e"
        },
        "item": {
          "id": "1a5480d3-e01a-4103-9435-ef9d170ffda6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e7c3e74e-553d-4d91-81c9-fd3c655088e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793d4a40-3e54-412f-85e4-7c8db1ee0776",
        "cursor": {
          "ref": "c931d4f3-a62c-47a6-a81b-63e1e22ec9d1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b553fc4f-9671-4552-a77e-03a2127d15d0"
        },
        "item": {
          "id": "793d4a40-3e54-412f-85e4-7c8db1ee0776",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "182f30a8-d23d-4902-96a6-09fb04f3b82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6468dad9-723c-4684-88e9-bf76c31ea757",
        "cursor": {
          "ref": "75df9fda-788e-4972-875b-da9175613916",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8530ac5c-e62d-45b5-99c4-22b0f52b4ab2"
        },
        "item": {
          "id": "6468dad9-723c-4684-88e9-bf76c31ea757",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6c74105-b84c-4915-843e-6c527fc0b0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d446c40b-3959-48df-a3b2-8e942f7dcf8b",
        "cursor": {
          "ref": "261c5c5e-a63e-40c8-a710-fc845880bcbe",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b42388a5-ff1c-4016-bd08-336c4028d28e"
        },
        "item": {
          "id": "d446c40b-3959-48df-a3b2-8e942f7dcf8b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b660cfe-1632-407e-baf5-b90210cf7dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323d3fc3-94e2-4e64-9149-3655abe5ebe3",
        "cursor": {
          "ref": "a438df56-2b8e-4480-b5f8-718722020aab",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c1e083c6-4aac-4bb8-b2fa-a5feb97eaf10"
        },
        "item": {
          "id": "323d3fc3-94e2-4e64-9149-3655abe5ebe3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5ec233f2-2ff6-4b84-81e3-cb815ac78c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6bd15f-c360-4dd5-9d30-2df435c1e3f8",
        "cursor": {
          "ref": "7a97d108-56e0-4483-a003-70513cee1b04",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "27481932-0157-4c81-9a99-64f38328796f"
        },
        "item": {
          "id": "5e6bd15f-c360-4dd5-9d30-2df435c1e3f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "31cafe91-1ee8-4c83-aab8-b7ba572ba9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b5110-397b-42a7-a7d1-60a3b95280c7",
        "cursor": {
          "ref": "d212d6cb-3ef4-4262-bac4-8529324395fc",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "83293241-73a2-43b6-9984-c7e77a6b4baf"
        },
        "item": {
          "id": "d53b5110-397b-42a7-a7d1-60a3b95280c7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d99155a5-d8bf-4f47-bee6-5c6172189804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ba71c-650a-416d-9984-5c826213542e",
        "cursor": {
          "ref": "2a6ebc59-044d-473a-8893-9d40283c8470",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ce74155e-633c-4c3d-bd4d-66be8d3d4643"
        },
        "item": {
          "id": "377ba71c-650a-416d-9984-5c826213542e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4db12e59-e746-49b2-a823-0f65a6aba893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a50fb52-7c9e-4fda-a878-7454636e9abb",
        "cursor": {
          "ref": "d8252142-7176-4156-9c1b-d80e5275f9f3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "414caf60-8052-4013-8469-2fdff64d0a3c"
        },
        "item": {
          "id": "5a50fb52-7c9e-4fda-a878-7454636e9abb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c929fdd-4366-4597-b2e6-e48df78e3c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302badc-27b1-4dec-9d71-3c253a656672",
        "cursor": {
          "ref": "435fcb93-5e73-41ea-9ede-256532b3fa98",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ac5f002-6b6d-4020-b689-0d5b3c572b15"
        },
        "item": {
          "id": "a302badc-27b1-4dec-9d71-3c253a656672",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f9151d32-1a5d-49f9-bc41-1417f084eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59157688-0fe6-4d0a-ae97-09b920806f29",
        "cursor": {
          "ref": "28690640-bb34-4092-9e6b-a52aba12ea7d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "02c384db-a2a3-4dc8-8510-aa0e51358e91"
        },
        "item": {
          "id": "59157688-0fe6-4d0a-ae97-09b920806f29",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "19aebe7b-ac9d-4105-8b7b-3bf2ac00e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59888954-00be-48f7-9572-634ac7c95c59",
        "cursor": {
          "ref": "7c4d9564-f2b3-48be-832b-bf2f43dafaf6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "482719e8-1fb4-4978-aabb-36ce6bfda96e"
        },
        "item": {
          "id": "59888954-00be-48f7-9572-634ac7c95c59",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a491532a-c6dd-4b68-bba7-936aa12e18dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e93020-67a6-499c-b3cf-210d74ec090a",
        "cursor": {
          "ref": "4773a07e-427f-4ffc-b2c7-50c963683078",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6034277a-cecc-4718-913c-ad9f6c65c657"
        },
        "item": {
          "id": "10e93020-67a6-499c-b3cf-210d74ec090a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "01d1f86f-ea18-484f-9585-8a2e06740ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4035ba5a-3f79-4cf1-95e2-f80abcef55b6",
        "cursor": {
          "ref": "09566a78-d543-4f66-ab65-53099aea5b91",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dae7888d-6cc0-4574-9392-bb7b26268897"
        },
        "item": {
          "id": "4035ba5a-3f79-4cf1-95e2-f80abcef55b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "42f5e140-e6ed-49df-a1ce-5e7267d29bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fdbeaf-86ca-4c4d-9d43-3d51daeca131",
        "cursor": {
          "ref": "71511fe8-f33b-4bff-92da-bf6c1cc0af7b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ba4ab138-4295-4038-bf00-63d00df8e7cb"
        },
        "item": {
          "id": "64fdbeaf-86ca-4c4d-9d43-3d51daeca131",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "59ebe941-e50e-4bf0-9649-a83dfd21fb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4571bc9-2d35-4c81-bd14-02081cc54d0b",
        "cursor": {
          "ref": "300e3bd8-8da1-4837-947b-69c6d061cca4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "93c2adff-c63c-4a2e-9ac2-6aa0ca076f3a"
        },
        "item": {
          "id": "e4571bc9-2d35-4c81-bd14-02081cc54d0b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "563cae35-e185-4c93-a0bd-506f39a2005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18aeab1-d65a-47d1-8ffb-d00ee0766eee",
        "cursor": {
          "ref": "67ffcd93-00c6-44dc-8255-ed3ddfb14ca5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4ba15be9-f16f-4f00-8a9d-b9029cd7d641"
        },
        "item": {
          "id": "c18aeab1-d65a-47d1-8ffb-d00ee0766eee",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ea80c8a-af8e-46c7-b153-68b52b0a84c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5e710-3442-4d8f-848e-b0c694190d03",
        "cursor": {
          "ref": "bc55c664-c7d1-448d-8ba2-2c5eb94355b9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "48691471-7a58-465c-977f-3c10a71d9c98"
        },
        "item": {
          "id": "8eb5e710-3442-4d8f-848e-b0c694190d03",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1ac86bbf-81c6-4171-8db4-bc752f3235cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f5f462-5355-468b-84b0-0a01fdbe7c9d",
        "cursor": {
          "ref": "f689743e-bfe9-4969-996d-69c98fa0185f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "69151af6-3683-4c54-9344-86c951572811"
        },
        "item": {
          "id": "f7f5f462-5355-468b-84b0-0a01fdbe7c9d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "68267052-7d22-4e97-828e-6e6003273d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d1cba-321a-4d43-9fbb-b83c49ef5493",
        "cursor": {
          "ref": "2b9739e0-a223-4e53-b942-80d4f8e8e9b4",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b0c9a7a-b086-41c2-8ccf-4724d6039bf4"
        },
        "item": {
          "id": "657d1cba-321a-4d43-9fbb-b83c49ef5493",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c96f6630-a8fd-464b-8eb4-b971cb27e72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc687c43-4855-49ac-8249-35544c24be41",
        "cursor": {
          "ref": "9754f31a-3a9a-4413-a82c-d12696ec573b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f0e0ed7c-a751-468c-96ac-2368417889f3"
        },
        "item": {
          "id": "bc687c43-4855-49ac-8249-35544c24be41",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0da66cb2-0d5c-4066-9703-f118edc38353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c5679f-b195-41d4-8bcb-8608ca6eb2ea",
        "cursor": {
          "ref": "e79aa078-c9e7-4b9f-9b81-208f5e7d0d7e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "610571bc-2f9a-426f-b79e-bcb4308671b4"
        },
        "item": {
          "id": "d4c5679f-b195-41d4-8bcb-8608ca6eb2ea",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4a7b684e-8e57-4cba-8577-16b69d167887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305fb2c-af17-48d0-80ce-fa875fdfb81d",
        "cursor": {
          "ref": "459bf512-87c1-4ab5-8cfb-6d21506d283d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0026f201-26f0-44b5-aa6e-440ecb725981"
        },
        "item": {
          "id": "a305fb2c-af17-48d0-80ce-fa875fdfb81d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ceaadabd-9c8e-4ac6-a22f-6a826147e2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b42db65-4ab7-43c5-a843-e9b1ed07be7b",
        "cursor": {
          "ref": "8afcdd0c-bc5a-43f2-9cb4-1976280ffe5a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d21cd709-805d-4c9d-943c-100eacef41a3"
        },
        "item": {
          "id": "3b42db65-4ab7-43c5-a843-e9b1ed07be7b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "585567bb-ddca-4fe4-a2bb-2b3dcd5d13d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90f68b6-d663-4d69-90af-138d0e0c7bec",
        "cursor": {
          "ref": "5c2b7e36-0e09-4f17-9f10-20ccc5112648",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cc1d7b11-37d9-4a1f-b47f-0eff67d0cfd9"
        },
        "item": {
          "id": "b90f68b6-d663-4d69-90af-138d0e0c7bec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c5b34eea-776a-41ea-b606-4ff1d968b901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925b57f-5dd6-477e-af4a-fa42a30df041",
        "cursor": {
          "ref": "c185f26b-1c84-4dbf-bd1e-c97b983b5c92",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "25527acf-9fc6-46bc-84eb-61e34abcbf44"
        },
        "item": {
          "id": "a925b57f-5dd6-477e-af4a-fa42a30df041",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e4274fb-5521-412a-aefa-6e5a089b0f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b03be36-e8fc-4c44-8999-f3b6a9a34908",
        "cursor": {
          "ref": "3debb024-2c09-4a3c-9840-7c8cd6047137",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "50b1b76a-cb61-4d92-a889-1b0821270d0b"
        },
        "item": {
          "id": "3b03be36-e8fc-4c44-8999-f3b6a9a34908",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4d92fb3f-61ae-4691-91d1-49c8ee153217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e2e54e-434c-40c8-b4a3-c1aace9b35d9",
        "cursor": {
          "ref": "017e0674-72fa-4c57-811b-bb9f8b305d03",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5a7dd713-9c69-451f-9f99-7ae26e6f5956"
        },
        "item": {
          "id": "73e2e54e-434c-40c8-b4a3-c1aace9b35d9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9aa82ef1-9a24-4b7e-adb4-53051c3fc210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202adacc-7f01-4829-80bc-4380358ffd15",
        "cursor": {
          "ref": "a25f3a2a-bdfb-4439-a75f-af8efcfefbc8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2f69c1cc-3054-4631-b871-593924691255"
        },
        "item": {
          "id": "202adacc-7f01-4829-80bc-4380358ffd15",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4e9d93aa-bfb6-4018-b2bc-09fa9fe21c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dcba84-6915-4510-ae52-ec583980a960",
        "cursor": {
          "ref": "cec69320-c690-406a-b3a3-b89da665837f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e002972d-9e41-43d5-9769-2e5ef7a8c389"
        },
        "item": {
          "id": "18dcba84-6915-4510-ae52-ec583980a960",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1742870-68d1-4a19-894a-42e12c43928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c5d24d-8824-4c7c-887a-0044e975ef25",
        "cursor": {
          "ref": "5489d819-65b2-4b00-b031-a7369dfc0f95",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "989a1e32-dc86-473e-a3c7-3393dbe4cfa2"
        },
        "item": {
          "id": "95c5d24d-8824-4c7c-887a-0044e975ef25",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "77f0c16c-4286-4886-a2a9-8551f0a3b3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e23e88-150f-47f0-9a53-1ee58b7b561f",
        "cursor": {
          "ref": "1fc1d82a-3451-43c9-a250-2f4c35c4ab1a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8836922c-f6f2-4c4f-96f7-c00eb11f43ba"
        },
        "item": {
          "id": "99e23e88-150f-47f0-9a53-1ee58b7b561f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5bc0440e-374f-4a51-a084-b57c3ad112c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8daf65-2e1a-45b7-9064-5f9d7bb37470",
        "cursor": {
          "ref": "986931c7-153d-49b8-94a6-07ba26948306",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "afcf1a49-ac9a-453a-b93e-2c06d52532a7"
        },
        "item": {
          "id": "4f8daf65-2e1a-45b7-9064-5f9d7bb37470",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ff29750e-5f85-460c-a420-7d9c4b14be33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763cab53-ca61-4c5b-978d-7be0926cf7a2",
        "cursor": {
          "ref": "7da12427-b086-4386-8e63-34f7b70d6170",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2dbf6faa-da11-426d-b1f7-9470883d4929"
        },
        "item": {
          "id": "763cab53-ca61-4c5b-978d-7be0926cf7a2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cce47d4e-5613-4b29-9449-f5320b084d22",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "45cabad8-3cd4-4731-b1ce-44bad9a63a83",
        "cursor": {
          "ref": "2b71e6fa-72d5-4099-9648-7794dcdf4355",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2b7df73d-0478-4811-b60e-ef850f2afa09"
        },
        "item": {
          "id": "45cabad8-3cd4-4731-b1ce-44bad9a63a83",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5860f18d-e53c-4d41-b272-0d06b2a6743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5078857-156a-4a58-b821-baa85d1835de",
        "cursor": {
          "ref": "972c8c75-a946-43de-b186-714627ddf515",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a2f6dbf9-836d-4078-9522-65f824721795"
        },
        "item": {
          "id": "e5078857-156a-4a58-b821-baa85d1835de",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6c6ee41a-e0a8-4553-9712-de5bcce6e009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c15b53-c297-4206-98be-8e9d5d57f506",
        "cursor": {
          "ref": "c370d56d-d03b-412c-8e15-93f471d68c87",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2815df7-31f6-48ce-8c69-d07206096ca3"
        },
        "item": {
          "id": "92c15b53-c297-4206-98be-8e9d5d57f506",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b0ee9cad-54e3-4fce-80aa-50cf0b4ee8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44169de9-00ea-4c76-9088-3a2f870dd7db",
        "cursor": {
          "ref": "4b148f0a-1c96-4831-8297-9ce36b5460be",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3b41227a-90ab-416b-afe5-2dca077d1f73"
        },
        "item": {
          "id": "44169de9-00ea-4c76-9088-3a2f870dd7db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b0f6e49-4637-4bcb-97d6-e56efea584af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38d954e-197f-4137-9e3b-42861c1585fe",
        "cursor": {
          "ref": "1871ff00-8a80-4903-9293-bddf6c219651",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5d7139bf-917c-40fc-8b38-1d8d3b6b6ffa"
        },
        "item": {
          "id": "a38d954e-197f-4137-9e3b-42861c1585fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e84bf141-4e1e-495d-b4f5-73e39af5ea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902053a6-995f-40bd-b3cc-674f1d353f88",
        "cursor": {
          "ref": "16ebf783-2e92-49d6-9fcc-4bcc24007f0d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "79f640f7-4f04-4587-8d14-2b2cfc1e2fd7"
        },
        "item": {
          "id": "902053a6-995f-40bd-b3cc-674f1d353f88",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "556cb8b9-33c5-4df6-9023-fd35d4e143d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fe32bf-44f0-4a41-a550-adae33805823",
        "cursor": {
          "ref": "c1b8b3ec-62c2-4a94-aaf5-2ef6e0a83e9e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1a9cdd27-7056-4218-aa20-868e289ab686"
        },
        "item": {
          "id": "a0fe32bf-44f0-4a41-a550-adae33805823",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32627775-e058-4c85-afac-705a27ca3fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806227ea-07f3-412e-a6f2-c64130956779",
        "cursor": {
          "ref": "caa3e04f-2f65-41a7-b40d-40a0c6884ae9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5970ad6a-9c5e-4161-bd99-91416b6fec8b"
        },
        "item": {
          "id": "806227ea-07f3-412e-a6f2-c64130956779",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "06b927ca-c2c1-416e-9f7d-603199721e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd9da9a-7a36-4186-ab6f-9eb4bdf966cb",
        "cursor": {
          "ref": "4865e3b6-3417-4045-b6a4-1a01297646f4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "732b8646-56b2-453e-a083-dd5bdf589448"
        },
        "item": {
          "id": "4fd9da9a-7a36-4186-ab6f-9eb4bdf966cb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a4b4804a-30f3-4ba0-b087-7628bb6ba2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea10336-5911-47c1-8e70-85ad149d9e41",
        "cursor": {
          "ref": "b41b5cf9-00fe-4f34-88b7-17e6f379d742",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c95fc8f0-7695-4de0-bf46-2039bda755f9"
        },
        "item": {
          "id": "1ea10336-5911-47c1-8e70-85ad149d9e41",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2236ad4-f8d3-4756-a8fe-d815dd714a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e94be1c-bff3-4883-b449-734d4f40b146",
        "cursor": {
          "ref": "a9f8068c-2dab-4b69-8258-614fe1e64368",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e67a8a04-1d34-4a34-bd7d-f6fd0fb5e1db"
        },
        "item": {
          "id": "4e94be1c-bff3-4883-b449-734d4f40b146",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4082a099-d1de-4b80-a808-2d13dc58685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4904d4-ed82-488c-8258-c29e58bd5095",
        "cursor": {
          "ref": "9ca3b870-1565-4613-bc3e-26259cb32c7c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c693e99a-cef0-4a16-bb3f-f699974dcffd"
        },
        "item": {
          "id": "0a4904d4-ed82-488c-8258-c29e58bd5095",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa5ab1cf-1900-406e-9f45-16e31721c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71114908-7f7f-4214-ba5c-60b845fa34ca",
        "cursor": {
          "ref": "1581eb9b-364c-4715-8e0f-441cacd0c387",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d0eb5eb8-4320-489c-a4b7-6ece4d63a7a0"
        },
        "item": {
          "id": "71114908-7f7f-4214-ba5c-60b845fa34ca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "764b1528-59b5-4da3-8f56-da481665e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba809c-674f-40b5-bce2-7b45c6dd5b8a",
        "cursor": {
          "ref": "b465fa6f-bb18-4ad8-b3b2-209a7fd5099c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fe91dcfd-ef6f-44a7-b359-9f2758d0f7ff"
        },
        "item": {
          "id": "eeba809c-674f-40b5-bce2-7b45c6dd5b8a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa24405a-71a9-46d3-a59a-1595b9504373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9b5392-db32-4460-a438-d494e9fccb24",
        "cursor": {
          "ref": "9864cf82-6d92-4af1-b6dd-91eecbd082f3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "891f7e85-a196-411a-95aa-e9e9cd126794"
        },
        "item": {
          "id": "bf9b5392-db32-4460-a438-d494e9fccb24",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fc1ff54c-353f-41ed-88e3-0fd49221cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c875992b-eb54-4806-af0e-3e59fab5d3ef",
        "cursor": {
          "ref": "9b438445-e3c3-4b20-9dd0-08f5af193186",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f89effe1-f61c-4b3a-b186-1b912b0301fd"
        },
        "item": {
          "id": "c875992b-eb54-4806-af0e-3e59fab5d3ef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f8156fd5-52f9-4a76-9ab6-0236c2d1f4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0553705-fcaf-4b2e-8db8-df23fc0651a3",
        "cursor": {
          "ref": "b449b968-ece6-4033-9007-a653601c9827",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "87972b6d-efe1-43ea-ad0c-3db858d50a77"
        },
        "item": {
          "id": "b0553705-fcaf-4b2e-8db8-df23fc0651a3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "57bed9cb-07d0-4781-a6d1-c3e5a795eb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7278bb-19c0-4d13-8183-3f7880f99428",
        "cursor": {
          "ref": "97b93be9-69c8-4015-b5f9-a2920b563c82",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0d5caaa1-42f1-44f6-97c2-d076ee636018"
        },
        "item": {
          "id": "ee7278bb-19c0-4d13-8183-3f7880f99428",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2a78b6d0-e16b-4245-9926-06cc7047509f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e4d9a3-e3da-4428-89b9-6f1bf41e158c",
        "cursor": {
          "ref": "98e2aafe-e60a-4c76-ad2a-a4352c532f74",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cda3c00c-0261-4ae2-abef-46d6e35b168c"
        },
        "item": {
          "id": "c1e4d9a3-e3da-4428-89b9-6f1bf41e158c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a89eb707-baec-4543-8581-f553da4d8df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a29efb8-c349-4bde-b389-51cb153becae",
        "cursor": {
          "ref": "226f375f-ae0d-464d-9438-23e4ecfd174c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4a2f5249-9681-4151-b6ae-421b0b6cf3d3"
        },
        "item": {
          "id": "7a29efb8-c349-4bde-b389-51cb153becae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6163d6e1-2e1a-47db-b482-b8c0e569b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e988bfe-59a4-42b2-af0d-1bcd36bf0ab4",
        "cursor": {
          "ref": "5d46cf00-3dc1-488d-af5d-3340f84dcde2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dd64fb01-192d-4999-85d4-1a0794c1bdd7"
        },
        "item": {
          "id": "7e988bfe-59a4-42b2-af0d-1bcd36bf0ab4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5b44900e-f4b4-44b5-80e5-87bc1d588c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8684ae84-6721-4ffd-9510-8fb884deb6f6",
        "cursor": {
          "ref": "6fa07f31-74f6-4b56-a243-577f16ff6ae3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "18c01d29-22f1-406b-b900-47f3c480c7f1"
        },
        "item": {
          "id": "8684ae84-6721-4ffd-9510-8fb884deb6f6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c934949b-dcf1-4ee2-9b0e-c16b7e627a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1888c995-9a50-4d3a-bf1b-57fccf36f275",
        "cursor": {
          "ref": "bceda923-833a-4655-b4c1-eb107f52a385",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9a919eb6-21a1-48c2-a5f3-27d185b79c46"
        },
        "item": {
          "id": "1888c995-9a50-4d3a-bf1b-57fccf36f275",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9480efae-fb62-4ad2-81ca-94a0ba3db0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a486fb-91fe-49d1-a5cc-ffad3786def6",
        "cursor": {
          "ref": "b131425f-db10-4f82-ab7b-89fee4a4ceb4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c247080a-0e76-4a9c-bca4-fc187889f1a2"
        },
        "item": {
          "id": "a1a486fb-91fe-49d1-a5cc-ffad3786def6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b0a0521a-23da-40fc-b793-ee2e517eda12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba33019-d33a-4d55-ba51-289b4fa8ae0f",
        "cursor": {
          "ref": "6e84dadd-1e28-4678-be3e-9db843ce6333",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "33c6083f-ef4b-479c-b3b4-fb5d7a90d1fa"
        },
        "item": {
          "id": "aba33019-d33a-4d55-ba51-289b4fa8ae0f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "214df267-3bc6-4706-98cf-c81b7f898386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a62781-7067-4d9e-8044-c969e74551e9",
        "cursor": {
          "ref": "7d00ae2b-c436-489e-8aa2-dfd40e0e09cb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "27d752dc-ef8e-43d9-a42f-86bdf9d28368"
        },
        "item": {
          "id": "12a62781-7067-4d9e-8044-c969e74551e9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5e50c212-7835-4e35-bc92-fe8b675ba6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a354c3-aa6b-449c-ad57-445ed04232b6",
        "cursor": {
          "ref": "c0ad52ff-d274-415a-9c7c-36c0b6d42dd9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9987c56b-e662-4692-b02f-27d5ef894f94"
        },
        "item": {
          "id": "a9a354c3-aa6b-449c-ad57-445ed04232b6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d991eaa-f037-493d-b7ac-52d9afd3c68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69d1d2f-b000-4330-b6b9-3f9a14275b80",
        "cursor": {
          "ref": "4078b597-62a5-4b32-ab74-84e19b4312e5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fa0f4f17-62be-434c-8932-144cb0aeed42"
        },
        "item": {
          "id": "a69d1d2f-b000-4330-b6b9-3f9a14275b80",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "02e4314c-1220-42f9-9d2b-e92aea7bd679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0937c2-171c-4a4b-a544-e83007c73661",
        "cursor": {
          "ref": "80dc8614-d5dc-40bf-ab96-8895ef9e2f43",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4724deab-90c4-4fab-bdcc-6430c0a9db15"
        },
        "item": {
          "id": "ab0937c2-171c-4a4b-a544-e83007c73661",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5cbd5de9-1220-4d55-90cd-2bd8971e3536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491b8dc2-292c-46e7-80ce-23b359fa2702",
        "cursor": {
          "ref": "a3f304dc-f301-4f07-96d3-bf723a6e23d9",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "825ebec8-607b-46e1-bc04-6dc1cb342e85"
        },
        "item": {
          "id": "491b8dc2-292c-46e7-80ce-23b359fa2702",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c6781d3b-7477-4c79-b1a3-1ae4f8a54523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c54beb-642f-4494-b7e4-9c9c6a1f5a72",
        "cursor": {
          "ref": "0014826f-1443-4dbb-850a-871f7ce7332a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "96c7459e-1ffe-4b04-8b8b-843ff039479d"
        },
        "item": {
          "id": "a2c54beb-642f-4494-b7e4-9c9c6a1f5a72",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5c5568db-c93a-4341-a2fb-b145ef31f0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1938715f-d093-4f6a-bb17-93a306426e90",
        "cursor": {
          "ref": "eaa0aefe-05ec-4f8c-9127-35c96c3ce517",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "075c9617-5d87-424b-9bb4-b061afd64a85"
        },
        "item": {
          "id": "1938715f-d093-4f6a-bb17-93a306426e90",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d93a9623-84df-4ca3-911c-f06c9289765f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5aec5a-a97a-414e-bf24-08c15f066b5e",
        "cursor": {
          "ref": "b224d166-d2fa-4657-b522-894cf2f1dc8c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e94943b6-f0c1-4624-ad94-2f29618c80a5"
        },
        "item": {
          "id": "fd5aec5a-a97a-414e-bf24-08c15f066b5e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "32defa71-1a49-4300-8495-a1fef47c967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da74b26a-e882-4fd7-b011-0579743455f5",
        "cursor": {
          "ref": "d1fb2c40-a506-4164-80e2-2529efe2a2dd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a73f4240-7865-4454-9923-b7af9d705335"
        },
        "item": {
          "id": "da74b26a-e882-4fd7-b011-0579743455f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cba374b5-43fd-400c-9666-177d2bea1461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347962d5-0e9b-4dcb-af6a-4af0080f8979",
        "cursor": {
          "ref": "ed0a7b0b-f22d-4ef1-8ff5-a56ef47b4c46",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "565e1be4-0771-4783-a3bf-5fd9e5f64506"
        },
        "item": {
          "id": "347962d5-0e9b-4dcb-af6a-4af0080f8979",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bf9e731a-d024-421f-b2a3-140e22f743d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c126f48e-7c50-4fb9-9175-c7a271c1e29c",
        "cursor": {
          "ref": "b0023b1d-95b3-4b46-8cd6-8c9b254dd595",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5d0f553b-9956-41c3-a765-da50f527f82a"
        },
        "item": {
          "id": "c126f48e-7c50-4fb9-9175-c7a271c1e29c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4864959e-c905-4c64-a4eb-7da439c6a692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5439a38f-0911-4376-9bfb-5dca37c2bb7d",
        "cursor": {
          "ref": "4e8dd3c1-4e49-43d8-aee4-55fb3b760a76",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a35e0e9e-c701-4ac0-8d52-2aba8c13f3ff"
        },
        "item": {
          "id": "5439a38f-0911-4376-9bfb-5dca37c2bb7d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e2ed199d-0277-40db-9f4f-e776088d39f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2aa01f-99f3-4d37-80e5-18e458aba901",
        "cursor": {
          "ref": "6fbeed8f-3ef1-4c9f-85af-e31da2e865f8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c5a15e81-38a0-4252-9dad-c1637dd0f071"
        },
        "item": {
          "id": "bc2aa01f-99f3-4d37-80e5-18e458aba901",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9349c599-e523-4967-8b40-f73497ce15cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489150f5-90a3-4280-ae4d-ae8b8b85a96e",
        "cursor": {
          "ref": "101922b5-e4b5-4b7d-83c7-b9643f06c5f5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aac04b42-1703-4ebc-8283-02f1daba4532"
        },
        "item": {
          "id": "489150f5-90a3-4280-ae4d-ae8b8b85a96e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ed602ec2-cefa-4843-bf73-9d7b6cc919ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1667ba-816e-4ea1-9425-9fc85b761ef8",
        "cursor": {
          "ref": "633ba396-3488-4e1b-8796-cb0f35a5c8eb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "39faeb14-c569-403b-8e0c-68c7cfa1abb4"
        },
        "item": {
          "id": "7f1667ba-816e-4ea1-9425-9fc85b761ef8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "63dd2df5-dddc-4f47-a1b2-4449c08f3cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35687fc-2f96-47c0-a29a-e47c343c53e5",
        "cursor": {
          "ref": "83b1502d-a635-4373-9774-625e5dd21c7e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5666a1e4-2180-4ffd-95a4-439ad9f1d7f1"
        },
        "item": {
          "id": "b35687fc-2f96-47c0-a29a-e47c343c53e5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d18cace7-fbd2-4b19-b776-4e9347a151f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c4947f-1a96-4632-961c-3ce9535c8767",
        "cursor": {
          "ref": "12700f46-f293-4cac-a9ad-6f9c6a955355",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "66dd2530-4fd1-4b8e-8920-dd7ab12f31ec"
        },
        "item": {
          "id": "31c4947f-1a96-4632-961c-3ce9535c8767",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "14b4c4e7-fb08-4df3-af40-e2563d955603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be492688-e1e2-4c4e-b244-142544c39650",
        "cursor": {
          "ref": "562e5053-b278-4188-b8c5-5bfdb8b2e3bf",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "01e05477-1547-4bb1-bd10-1ed4cf2218b9"
        },
        "item": {
          "id": "be492688-e1e2-4c4e-b244-142544c39650",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "283553ad-a70f-4d03-90e6-1fe0ac6f5bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80a87a8-be7b-46ad-9e9d-ed43f7f7aebf",
        "cursor": {
          "ref": "de2cd9d9-e9cf-4dbc-83d9-2d3ab2445357",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4d30ea71-8aa8-4430-b8bb-e9208cf7f820"
        },
        "item": {
          "id": "d80a87a8-be7b-46ad-9e9d-ed43f7f7aebf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "637b734c-8158-4b41-9bd9-bc977c765861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a480eb94-1d33-4ff3-b294-79863e79feed",
        "cursor": {
          "ref": "ef78e398-b2bd-434e-a830-85c54662d419",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "01b69a66-165b-43ac-b263-8252d1d3befe"
        },
        "item": {
          "id": "a480eb94-1d33-4ff3-b294-79863e79feed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ab7e31d9-2f5b-4e89-8289-de673d029ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af1d3a4-3efd-45a6-b1a4-bfebc7699fe1",
        "cursor": {
          "ref": "20b8106f-b3c6-4795-9d91-6cec7f7b4ddb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "54c91903-e48a-43ec-be50-2a343d6a892d"
        },
        "item": {
          "id": "3af1d3a4-3efd-45a6-b1a4-bfebc7699fe1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b3dcc456-80b1-4728-a112-f08cce907452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b48d1e-d3c3-4960-8d08-00de44531bd4",
        "cursor": {
          "ref": "8d9c482f-ec81-415c-8d45-23e6c2a2fe8e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "683b7fb1-5fa4-497a-ad05-f22c30ec6214"
        },
        "item": {
          "id": "f4b48d1e-d3c3-4960-8d08-00de44531bd4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e78aa521-faf5-415a-b76f-7fc645832692",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766dc379-60af-40e5-bdb3-115ab6583b38",
        "cursor": {
          "ref": "ccc94692-67e4-4eae-bfe2-f923e9da05e6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "10976f47-6d3d-4c77-bf1b-3c755b5451d5"
        },
        "item": {
          "id": "766dc379-60af-40e5-bdb3-115ab6583b38",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "24a663f9-02cc-4cd2-90ce-691e5fa22d73",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "da395db0-545e-4fe4-bd0c-6dd30cd31662",
        "cursor": {
          "ref": "975faf48-2396-46a1-96c9-2fdfbed8c3d3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "81f85c4c-0a21-4aca-9d96-fb02978ad945"
        },
        "item": {
          "id": "da395db0-545e-4fe4-bd0c-6dd30cd31662",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c1f3d308-8674-4e18-8986-e647e1d6f07e",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "822813c7-f9ea-4471-afce-3b6ecb121e12",
        "cursor": {
          "ref": "05718b79-af42-43e2-a749-10f780e3fb18",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "10e8f0c1-064d-4d89-8e12-7ad94bee17c4"
        },
        "item": {
          "id": "822813c7-f9ea-4471-afce-3b6ecb121e12",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f00435f4-4296-4b1a-bd65-7c3ead64fc4f",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "31977cc6-24e5-4e5a-8114-c947406be25c",
        "cursor": {
          "ref": "eccf6afd-fe9a-422c-a011-a94c68c33f4d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "73835f6f-124c-4ecd-a976-f2b5d1e2df46"
        },
        "item": {
          "id": "31977cc6-24e5-4e5a-8114-c947406be25c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2570bb16-a26b-4f87-9bcf-92dc09755226",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31977cc6-24e5-4e5a-8114-c947406be25c",
        "cursor": {
          "ref": "eccf6afd-fe9a-422c-a011-a94c68c33f4d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "73835f6f-124c-4ecd-a976-f2b5d1e2df46"
        },
        "item": {
          "id": "31977cc6-24e5-4e5a-8114-c947406be25c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2570bb16-a26b-4f87-9bcf-92dc09755226",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40181e32-8644-4f93-98a2-175b34de7bfd",
        "cursor": {
          "ref": "0bc6f32b-8193-418d-bed3-af45cdb818ec",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4347b826-dcdc-47b0-bac6-587d69c522f7"
        },
        "item": {
          "id": "40181e32-8644-4f93-98a2-175b34de7bfd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0486988b-9926-468f-bbda-58f085197bf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cb68ae-f85d-4f97-854b-0e1907799249",
        "cursor": {
          "ref": "5e7c2fc6-8f5d-4241-91dd-58c95daba37c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "77bbbfef-ff9e-4a0e-afc9-7d8a4e7cb710"
        },
        "item": {
          "id": "a1cb68ae-f85d-4f97-854b-0e1907799249",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7bd2566b-135b-4ae0-ac5e-dc0d99d6ea12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}