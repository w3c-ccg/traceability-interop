{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2fa48192-09ce-457c-a233-cc77ad1142c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0c5faed7-2e89-48c3-a0b2-351fbec5a384",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dbd4c61-0673-4b75-810d-8db42dfce221",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90f9ca4b-b892-4e1a-8c67-54807c10f28d"
                }
              }
            ]
          },
          {
            "id": "891fc465-e05a-4b50-95ee-91424db97fa0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d1e6ba9-d7e4-4291-8a26-0884a8d2ddef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f4b4e30-d238-4bf1-ad66-2bb066fa2935"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "13b2df0d-48bc-4aaa-8979-52c4775953eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bbf3b2be-3e88-441b-b5ba-20544ca4193d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ebce8d14-156c-425b-84ca-859b6bc4ff62",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3dcc2e2-4403-42b2-ae0f-9ea4c53ddfcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02435718-306e-431f-9466-5135338d3d8f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97f62636-7b5b-4879-8f76-1a8cabe137c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db28ed14-8099-492f-a994-80041431d8c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b19d42ce-20f3-498b-a94e-431ddee0b28c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a1b4e77-5ea5-4148-9c81-1f99fcfd28a7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d7010c2-6c49-4100-a975-3a3f742f6f9b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ffb43e5d-5a7f-469c-89cc-44d41bfedf8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85606099-2d08-43a5-b40f-d0afe77db318",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "981bc5bb-0d51-42a4-a39d-a558915187a8"
            }
          }
        ]
      },
      {
        "id": "87d53a16-5745-456a-b665-f14adec53480",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fbe27f7d-0903-4d4b-807d-2c1aadff54a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4cf6c85-1c25-484b-acfa-2c94b4f71c0d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d5cac66-c6d4-4395-b3e9-bd7e73f85df3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ce1b40-8cb7-4ed4-baf3-1b2d8a791e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc2a69a4-02b7-48ce-81c1-0214c08b3091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34e3952-51ab-4670-b3be-98b5547d15c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf59664-f2b9-40a4-a459-fe6534d59ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a78beb43-8fff-403d-bdb5-ed288eb2e597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7d698d-68a2-47ab-a00d-0baecc7336ba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07394263-6f62-450e-a984-c2a05eb99fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8cb383e-1253-486f-a63e-4a8cc867ad99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "385019f1-86c7-497b-b0c5-85dff79b985a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ad3e942-f59e-4f55-ac57-8a3a1010f549",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7454158a-349e-4e71-83b9-124f421907af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928b9800-f1f2-4213-9368-433d0673efd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0784e3a-4541-454a-a0e6-046d63034523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35837f2d-f960-42a0-8bf2-651f410f2756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09749496-8bd7-4600-a311-ff6aa8c76670",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e37da2-cf75-4fd2-ba75-0905d51cec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56abac39-f020-409b-ba7e-9d90d354bc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb9f1e-d401-47e4-9c67-db468bcddf7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "862c833f-7499-4b25-a70a-a2217e0e34b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5ab50d4f-6253-4274-a86f-cf7132308863",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66b816dc-c257-4d4e-a35e-a25a44642f2c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f27845e4-be35-4ab5-bfb2-e7e27aa477b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9c01454-e40c-40dd-8668-af4be5063e50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f274a0f2-cc1b-4112-9333-562feb056e6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9f1541b2-f209-42d4-b638-37dd80c0f9c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b634f1c-174a-4665-b0fe-eb7d54e050d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58da27f4-6a00-40e5-81f6-0eaa297b3fa1"
            }
          }
        ]
      },
      {
        "id": "1e6d24b2-a75b-4c71-a811-fcb3e49fe7a3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1e171f44-830b-4594-b93b-28798d59ca17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8aba8be2-f7c6-4a99-b4ca-4e736c69c5c5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9f2d51df-bdd1-4bf7-b172-8cc87f38e7ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c49e79-2a2b-48a8-ac11-b99392dffd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16700a2-353b-4edf-be1d-829dd004436c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d5b2d0-3904-4c9e-8495-3412af006ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c5eaf3e-e614-46f5-93d4-9f36c0a46408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3bfd6b-3b3d-44e0-beab-3f49b6960421",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089902bf-d3d7-463a-8dde-ac859c38a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea70ee53-fb3d-448e-a78e-29e05600f5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfc64fb-3eb1-4e1c-ac14-185b56fc42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa21f404-e713-43bc-a706-337a23281150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fac9883-5445-46cb-8313-70e6e47fed82",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6575664b-a2d7-4cf9-b8d8-180cae3a409b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b522669-3b53-4004-91c4-d48011e3108d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5abbc5-6a76-4267-8ff4-36d8c2f0f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab309d84-39e1-4a3a-90a5-77396ec4d300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1580ba-7dda-43fe-b947-4ac65388ac35",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b0f00e-ab7d-4704-89dd-c032686fa1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a8a541-2c6d-43ec-9004-226e9901cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ff773a-96c3-4d12-8d5b-1d6d7a70d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b83c78-386c-431e-93dd-2f038f3137af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6ef846-5877-468d-8d90-ea543521dbf7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16e6479-fdb7-4852-9270-8a375a71deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a192d8d-30bf-4f8a-b0f6-fc625997e066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d438dae9-2ff9-42c2-81a2-100fcb10ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9adce343-dfca-4bd0-99a5-27fe898225c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b728282-9a54-447e-9e4e-c2814fce458f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c30b0a-5960-4486-acb3-5ccb2625069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03d3500-654d-495c-a113-b69d2dfa5b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87a92fd-64a6-41a0-b95b-9edd52aa2560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a0dbf16-095e-4b8b-a1fa-eaba10dc30c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee3c181-7c2f-48e5-b9d8-c26a0fd9d752",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e16100b-8642-4be4-b879-b78468cd25bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27008e70-75a8-4db5-8c7c-c5c65e165ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff447767-8813-4e94-a5a7-a2f78d08ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "128be85b-8dfc-448c-b156-632df97c211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ebbf97-4a76-429f-86b0-f2a99a3ee881",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcb1fd2-e68b-4d51-8135-4b87ce009d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ee96f5-d275-4c31-b491-957d47ebead2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e795e5-9906-4d9b-9920-67c00b7fb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce8a035-da15-48a7-a50c-ed3a5517db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a8532f-f846-4fe1-af32-4a51539aeb68",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ea3d6-e4f4-4994-8c0f-290f6d5cd931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140a1bc8-4018-4a8a-8c78-f908ce4fd681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace1cfd5-c0d1-403e-9e62-f12f8bcc7c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7cb87d-dd4d-4c03-b50d-f41662f32b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3142b498-01ee-4a42-bba0-0a9fccbc897f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ad3a1e-4146-40d6-b86a-e0bc40cc9215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50fb521-f705-4a1e-b98e-69db8990fef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c2c6c8-0963-4964-8650-7faf11002198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d981f0-027e-4996-93d3-a5fc3b9bf635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd97c69-d3b5-48d0-afcb-67845d3a95b9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae3795b-cd7a-45a4-889b-449744486f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e70d5d-4fd0-4320-a5d6-3303472a6e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1b1459-6b7e-4946-b4b1-bc3c0d2d36c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "530c31ab-65cb-40b6-9933-97b18dfbc7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8881da-52e9-4e04-8df3-4231a09cd95d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f64b767-582c-4876-a00c-d2d8953cc678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea75290f-474c-4dd3-b7ef-a76fa8662c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfc93d7-10eb-4c40-a6ac-2a060f965318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db8e3c1a-bea6-4b54-a092-9867f790bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd836af0-bca6-490b-81cc-2ed82da9fa42",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61bbe0c-e32d-44ef-a12a-a811afd17874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb32d76-dff2-4534-be5e-455e8799faf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb2b8b4-b90a-4349-8082-6d700bfa541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ada7dd05-f762-4930-b726-8f9161e2f9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48540da4-3268-4a1a-a589-d3cdc35b8689",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a7a77e-5734-420d-96a7-4a79353bae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2f8de0-7b1d-4856-87bd-60863d7f12ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc81bde-7075-4262-8ad9-3d4ae6bafd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d771d09-98e6-4b5d-834b-ed60cdba61a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c50dc03-6e23-4886-8288-ca674d4795f5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a25114-b1d9-4a2a-9e0e-1bd357d41f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbb946c-007c-42a1-a6f4-ea57870f3856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3536a9-096a-4590-9449-2a00e397ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0568039b-7bb6-4d63-9d42-cac1af7c03d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f19350-8447-4a06-b427-a8eb871085f0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdeaa10-05c3-421e-bc1f-9917b1691a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d7af3b-3977-4459-a861-58e0e6e06672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cb846-f3ca-4410-a838-0aa1622edf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b21db85d-3f10-4edf-a877-077f29adb121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb82bfc-7499-4c8c-9584-256c2b563acd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed3a3f5-6aab-4975-9608-f9c4472c8ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4473c837-2452-476f-89c9-e8c76389e028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f2894f-2f56-4717-a5ea-5e1823cb3431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83d007a7-e237-4848-9bc7-561e1b391616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34d7775-a322-43ce-a1ed-c41e2bb3df08",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bd0536-6099-4ef4-8eae-9f385919ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72e2402-dd5d-45c8-a2f8-a69a85bb793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7cc815-6cbd-469c-9211-36050b019b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641852d5-a30b-458f-a349-d7e88157a30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30a6804-7607-47f3-9876-61c58fe52b6d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710062be-d506-4308-8451-0a105717b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9308799e-364b-415b-beed-c5bba6238131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b1bbf-556b-4833-afb7-ee10d5ad9a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edca3341-2348-4113-a6ed-452d302b4b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33af0f5-cc44-403f-8786-05aeda6a2312",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8e96dd-adb6-4818-8dd0-eb7f69bbaaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ee969-37ef-4636-bc9f-c71c079f6bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2b43b5-b4b6-4350-b578-bf373af5b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c80f85-096b-470c-a5d5-8dca945e8fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb86640-fe10-4c37-bc1d-7fe1702593ba",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a076917-ef1f-4e9a-be1f-7e1e21e75b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82613f8-e104-44bc-a572-39074b472fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8fac42-9d8a-4850-b391-3e2f51e8ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "210bfabd-4c67-4e4e-8fe6-db8522c463b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3d340c-559a-431b-9df6-055f150d7814",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e6b909-356a-4bb7-b8c0-0e016ac08d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfd6f24-0031-4d48-bc40-304040db9009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c506359f-3b4d-46bb-871b-e4ea0f8cf31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa331f8-fc77-43d6-b456-7f898d196efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f29306-3047-4529-b449-a00840ec88c4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e5f901-caa8-4db3-965b-7ed0fc39caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a4e447-030f-4771-b26a-8468732f07d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f06a2-d773-4858-baaa-7af90956f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811ad95c-ffdc-49dd-9774-60c4fbb10fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11076340-f25c-4fd5-b18e-0dd7053c67a0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b1a103-2d00-4bf6-8392-9ae14469c439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1af0ed-cf18-464c-92a0-9d24e9112a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ef5d5e-a22d-44ce-98ea-4d48ae925423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fac6a8-badd-4274-926a-b702759b8604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5feb97-0718-45db-9d95-149e8912f0f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0483632-2ed6-4511-b2eb-0e7eb135a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2084939c-869e-4156-8aa6-2af570b37bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61040913-63b3-4dc0-bd7b-483c934ec4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b770d3ef-8ef4-46c8-85b4-ebf1b4633ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0c921c-6503-4672-a7b3-4d6119ce8c3a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a224d4-9dd1-4e58-afb4-96f6c49b314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a562ecb1-4174-45d2-a934-75d1eeddca61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b908b-2c9a-4281-b7ff-e11e486aa6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "532b49af-42ea-4891-9148-701105d43422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e3c27b-1f55-4872-bc35-328e4edfd22c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6f6a4d-46db-46af-855e-c6d8bd2a8b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56da151-e508-4ce1-852e-7b387bcf4a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c31a70-4e77-42ac-a2fa-f230d541ca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9127c96a-0cdb-4af0-a22c-b773a2a88164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee8886d-b671-49eb-8bb4-c33811a491b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3206d07-cb53-488b-833e-c6993a080265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2acbdc-a700-4032-8f5a-28516dd7301a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d140c8-266f-46d2-8bea-db33c8316dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "975a5b9a-e716-4303-95c1-9b5683280165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27762f5-4cad-4b79-b4f3-7b9c930e00e2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6739c0-8788-443e-8e59-dcdbea115e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ce9ca6-03f0-4c93-964c-4fb8d3d50a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27663424-23a3-426c-94d0-61028d106da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d57e4d-fcdd-495a-ab7e-01fe4d55944f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0516031a-347b-46bc-ba06-fe8f62f9c415",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14172238-2ac7-456b-b495-32f4ab1d2a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c5c7a5-c17d-4ac3-947f-d22519d4c7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4657acfd-cb40-483f-a215-0fa7d2eaa2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc16bfc-29f1-47cc-9aeb-217ba45b9fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf97be0-a3dc-423c-b23f-a9d94d401b71",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7c52bd-9743-4fff-b99c-742d88c94fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a680401a-342d-4f70-8265-6180c296a0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e768bb-fd17-4307-95f0-2dbc41d14726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "caad4cb8-15ce-4933-a75f-8d0f4012a00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2b4de5-d3d6-47c0-9e2f-3407c76674d5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496509b3-a3f6-4d7c-8270-41fba6321fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eb46d6-f3e3-40e0-814c-67c17be60e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a3dc2a-7962-4832-aefb-ca7576967efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72b8fa8-20d9-402e-b8ae-708fb89fad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad504738-7ffe-4582-8060-1f8ecf251a80",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693cc576-8416-4c1e-921a-1973a68c4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eb626f-f5d5-47b1-b850-49430512daa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbff43-b443-4954-a701-93a79f89f033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b943148-576a-433f-af61-e7355e25bca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3991f34-c06b-4c98-a53e-4c086c81ece6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bf34ab-3f19-4cb1-8cfd-382fa91dd61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f6fe5a-fccf-47ff-ae23-c9df2c398ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577378d4-fdcb-4b13-aef4-653c2c5d805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc425de7-45f9-4823-9e53-2c744ca21672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94711009-670f-41f7-bb3b-6186fe43d129",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d3deb5-450d-47e3-b95f-b6494164fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3daa9f-2eb7-4fcf-a497-983fc3c922f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd15dd2e-17ea-40e1-a0e1-1414ca379c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff666e24-0cae-436d-a881-7ab50ae43014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ebc8b9-cc5b-4ac5-ac54-73519ed04570",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ed348-d504-48d2-85a7-c8f90efb5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afe872e-2431-4acf-8781-b4f21c00065e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222d9a4c-7304-4d29-9581-6d5c26378cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "353d7c78-74d4-425e-88be-b8d7260d7cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1e7a28-375e-457b-8835-460b8133adc3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735b43d-5d82-41ed-a9f9-adf23d4444e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2199a37b-ffce-41b9-8d2d-5e2bd83257ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d11558-b43b-4416-9784-04141b2da36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b067d7df-d0c6-4ee4-9dee-6cc482eecdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751ff905-426e-4828-8869-e85788de78ce",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cf6bdd-d482-42f0-8159-0bb347763b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c86da91f-17ad-4fc4-8dcd-fb2cc9257091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f81d95-3962-48bd-a674-383d2aefaac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2554c713-00e9-4092-af79-f75d477f793a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf54def-bcc3-4af8-9419-5df0c95f4afb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a450811-5c7e-4966-a351-03d0cbee5041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bc8cfb-ee2b-4e94-b8c2-994076763936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa68c54-6331-4d4a-8890-41ec4b4f778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11bc1748-5405-49b3-8735-b8d25b1dcb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d481da-e7a4-4da6-9203-87f7b3e3e5d4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c363fe2-9d15-4672-8d57-d0028b5967e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082ead51-e168-4545-a294-954e348fe74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cec549-e038-4883-bc76-c40b6dcb2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af95998-29c5-43b5-bae1-ad8512abfc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6b71de-c596-44f6-8ff5-326927d42775",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cb3f3d-2ca7-4453-9783-de64c30dbfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefd98b4-9639-4218-9c41-df176985b8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae56c864-5537-489f-9e15-94df44762acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80a5405-f3c9-4573-8ec1-d3bff2be6585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f5be5-5f77-4592-9ab1-c6f38906c44b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f151e9-609b-4ddf-a385-4e211dd4a88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea84eda5-b824-472a-8d44-95a580be88b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd88863b-fe8a-4833-8a79-7eddbbb86eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbff458-3fd4-47dc-9e0a-71fb61c47332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf241eb1-9db0-46b1-acb9-1d59e93fba01",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f2a6fb-781c-43fe-a81c-641eac344586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c453c12-fa6e-4a38-99f2-2395f4ea3e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fdab25-b75b-49eb-a74e-337c28a8656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d327b24-3e81-4661-8e71-c1c6b13a69c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2b7e88-f54f-41fb-8195-f7a0b9003e84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0870c580-0597-4972-b995-db655539a841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e41bcbe-1651-4570-b2c9-f48dd4ec0f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b89be4-ced8-4da3-8108-d80f3aa52d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a02dc3-a3ef-4a82-a2ea-58d922774769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204a1e8c-b226-4a80-8e35-c572652aa0dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bb49b5-c723-497c-ac36-3606e1b17ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e05fe75-a64d-438f-9621-c1ca89d28ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4698fb8-9c60-41b1-a9fa-99dc8c41a3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "61c30285-afd4-4809-9fbd-6163ec94d1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71753ce9-adb6-479f-9027-0c77c9389148",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84351cb-9712-486c-8dd9-1ca4d5b8a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7796050a-2380-47b1-97ed-46196149cd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6a3e5b-9b61-4ee9-8e7d-03c3bf1ae795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2ec291-5c45-4f3a-a9d4-4ac290b90cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8ec96-3eae-49c3-8063-5fe730cf96c1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41e3ae6-9596-44e0-b1d5-ce0212c6419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46d763c-18b4-4c8c-b978-b2f55090798d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dade6932-fc61-472d-be7e-e955f49f148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39246b35-2932-476e-9571-be03da443d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887bd811-00a2-40b2-bc05-f4159d529ad1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a6dacd-8f74-4d91-91c0-1183907118d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495eda33-163b-4b29-a4e5-899393ece6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7445a312-4f09-4304-99ac-b270dbdd07ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6d87a1-ada6-4cf9-aff7-144380a472bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bc5227-8c2f-44a7-9ee1-38d7ef922cc3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956c115-8012-43ef-b6b5-2e581a9915b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73cfb13-51e3-4634-b0d6-d6e431bbbcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d10f7a9-759f-446b-9595-4836c51831b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19810b8-974b-40f5-8c22-e4d53b5ea8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8416ff0-2ab1-40e4-8b15-3b1a11ef8ee1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e7af7-708a-4452-b211-0b0cb137aa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b553e8-5ed3-4170-997b-ae40f9dc0ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a19b93-8a68-4fe5-989f-b2dcf0f5701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebd2119-d19f-4110-a367-debddacee5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae692551-35ad-498c-b664-a0f7dbd92371",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2ba424-0ad9-4048-b4d4-60aeb4ad38bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d03fc0-a810-416f-b239-1ca46ab0577d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e07b4ef-cbc6-443d-82e6-b58d6a9ea343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ea680e-5507-478c-88ac-acec7d601d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3739cbc-3b53-462f-b5ff-021326a2280f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15987d12-8ddc-4baa-b0b8-42938c0ddfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b34a805-2b68-4840-bc8f-562834025a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca40909-717f-4642-8a12-6a1e11f94d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdbcd38-5839-4cf2-a92d-cc6a3a0a4cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bd90d2-1ac2-4b99-a077-54d5fa8b736e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e604c40b-cbd8-4abc-82c4-d94b6a366c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162f9ccb-df57-4f74-8167-ea3e3c66c0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff7b7da-8661-4b57-b7b9-ad4c8b5e9bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da3446b1-25e4-4192-9575-ece7f63ace62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f158e0a5-e397-4ac0-ad39-af0aa27b829c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9d936-0440-4602-9870-86dc9512e218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e9603c-9198-458a-afc2-6dd70512b045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f16c023-0e13-48f4-81fa-1392286a3067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50382bd2-1413-4f0e-9204-296a43e4f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7476f800-bbc0-40ed-9ba3-906abd3eb78d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a367b0-c6b2-4eb1-85cc-000b2d72d0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c81228a-d082-45d2-b9b6-40faf4991255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d385d02-2dea-4af5-8b9f-d68659eadcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc389b6-d194-470b-b8b7-9b1bf8454059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ade1c84-5bd2-4b43-b5dc-caaf02ea50cf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa73cb01-cad5-4335-89d8-1d84fc27cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabd22ab-1ed8-4424-81ac-52c47a0c6334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c423f-17c5-4162-82d3-ce5ed966c974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2a22dd-36b1-4052-999a-d2814ac36643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f0884d-cfd8-43a7-8ba3-9a5c51fff93e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddcb9a4-58f1-4b71-87b5-ad5ec600b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f3c02d-b9fd-4a5a-a8bc-7103c9877dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391fca82-9975-40da-8656-13c975d05e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b41d63-d422-4e75-9e00-080b3644d50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254db713-893e-4bdf-91ea-40703237a399",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1ac84f-416e-4807-a7af-37eb297f7fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364c00f1-01d0-4776-a55f-16da76a63cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f1936a-fa71-4ac1-a88f-cb689c51aac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "97cdea0c-8628-494e-8f64-675ae41ef0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22de8d6-732d-4f80-a2b4-be674341a4d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df258b5-6f26-4225-804c-4b72383350d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e4648b-96a4-4be4-8680-c0164bcc2241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17416b9-1364-4b22-8cbb-b691b702e216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e13e4c-6766-4fe5-8a55-a13f3ea2e579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecc506-a789-48ca-a9b4-1c665cacfa42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401bedbe-d372-48f5-9eea-4bf0ee123ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6365dd-6e34-48db-b170-b033bdd81e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4239b1-8925-4847-a77d-d9819bff2f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1a55b8-a047-4c26-a059-5b1df2910c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65991596-738b-4965-83ee-9971bd503989",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e185302-b1fb-4420-9305-eb9a6505cbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d26527-6d3a-4cc9-a402-f30737dbde83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598c35eb-f6ec-42cb-87e0-eb2c9f42bb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "079a10b9-a47c-41ff-82e1-4ebb53ef0e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7e0b2c-f731-48e1-b91c-49cf621bb854",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fd4f17-1111-440b-87af-9f624469f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d38ff83-b9b0-408f-bc38-ccfbe236179e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bac57f4-bf67-4fa6-8b32-989be9c9ea91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de39426d-bcc8-4198-baab-2ab5f2d59172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81ae25f-81b4-486d-a7ea-5f8d41801f60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c607aa0d-d742-494e-b651-a9ca8e702c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6355454-ea76-421a-9bf0-de30e3cd5d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1222606-4505-4f99-8b8c-7807f906e68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f914d74-bc8d-4500-a2e9-ae1ea2157745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ba440c-ca4e-406f-bef1-e5ce76ac5463",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ac0aa7-c713-4035-a4c9-feabb851303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e3a636-6f3d-4659-a649-ad60bf4599da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8504e44-93fd-40b7-a2fb-63ea2a7d4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83b2b67-9b72-4c6e-ab44-f2a253fc12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745cfedc-edf0-4c24-90d5-daf9812b6fc9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd72828-da42-45e6-81f8-c77c81c3840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76626e29-6c27-4a72-86f1-7aa18c443652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff1943-3370-4128-b988-19ab68e651a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe22d867-29f8-4acb-bb5d-aac2ff66d8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713461aa-0514-4df2-803d-69ed03187ef4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d3e6bd-bd48-4d30-aec6-666c1d99553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c4e081-72b0-4867-b1fb-dd2a84b9d276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2cbe0-31e9-4e64-9fec-ed0eaf5e214d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13701b11-c389-4c59-abf9-413ef5d19380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e348772-d50e-4a57-ba1e-f8111d7dc710",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c2d0d9-6f8c-480a-a869-a74b86a72407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eadcb4-f0c2-4388-9511-db6a98255d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43737a65-ee89-49eb-acc3-dc1561c63bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76868d5-9be1-4704-9422-93132a1a6570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957bb14a-cb6d-4e12-8165-772b2cdb37fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129dbdf5-9934-455f-aed2-4ee65068fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d22f2fe-9fc5-45d7-8c45-a46e7f51a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6ecd14-dec6-4700-b472-6eb57317596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b822e575-1b7b-4121-a990-84c36082c08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf811b0-c3b7-43ea-92a0-0bc3330c213a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e36f60-227a-4bd3-b022-2c95a28765f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e6baa7-813a-4dd2-9bf9-736b4a6b9e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd6ac9-add1-4128-b1d8-04755925ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6acd993-25af-4762-aab1-b78dd69d0066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016b8c23-71b3-4aba-8125-a8dd6bbfe5d0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeef66fa-a034-4366-91cf-04828a316933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70b20f1-61a9-4ec8-906b-dc59a3669b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00f2bfa-40f9-4fd3-b78d-0a137e58aa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d50812-3fe3-4c33-8126-2829d91d0443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd74369-d190-49f6-a760-41fa3de48874",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ad49f0-7e98-48fd-81cf-741e796db16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dca2edf-de9a-4b23-b11a-bc28cf41a241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc55086b-a4d2-4d26-967b-7ba91963e41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "491b7901-3772-4bee-abf0-8a37c34c8513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e8c23e-931a-4767-aacd-005d88cff6b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2a38f1-33bc-40c2-a0fa-50a7845125aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ab078b-a4a5-4b78-a76d-498aba117653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7ede81-9b4b-4988-be04-9afc1fdaa233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c2e360-2db1-4402-987c-18e36cf50e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c952f39f-0941-4fde-aa22-d1c21793c56a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137bf016-67db-4da2-b097-7c3a335d600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26900b1d-ade3-4c8a-94cd-9f6914cec3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc1198-e687-43fc-9d34-8f696d678321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e44f05b-1ce2-47cc-be56-3f545b6734d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1764b-c8d1-449d-bb86-f419e81b6ca4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ff9109-4b80-4c58-8cb7-7f51f299df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62a131a-1f4c-4f4f-bf1f-0af65308a16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ff0ff4-bb95-499b-a025-e85386c902e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4595324-7208-420a-92d6-5933dc878760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd840e9-7213-4e44-a678-f42f58fd77e7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1032bbb4-d00b-47b1-bb34-2a86e0ccb2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c338141-de2e-46a9-83c3-2f1f1fc3817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2292c4c-258c-492e-ae59-5d3199eff7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6733455-5115-4ef6-8a3a-a39571966ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb80206-884b-4a04-b842-b179325b58f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a655416e-da3f-4e23-aa40-09185241af82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f225c-792e-46cb-ad2f-9a7be98d713b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8816e4-0cec-41e8-9849-2e625d524ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "329dd332-fd69-45de-8a29-f06b361c3eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ea2eca-17a0-4559-b39e-48b4c9f8de19",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da6221a-e2be-4471-9eeb-fe61b7fc45eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a333d2-74e9-49ea-86c9-80e95d6dcef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd4e84c-8128-4f43-8dff-c5f38f7f9be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99729b8b-11fe-48f6-b54c-cfd9c3c3caa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb6b1b1-3d78-435d-bc67-82b3b8c96c8d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313773c0-c71f-4c34-824d-6302beb47722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd92912-94bc-4426-a986-7baa3f87a7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c62e60-cedc-4982-98e3-01c8dd331e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a256e9-2019-4161-83ed-40f46a43c69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9a5eb2-56e2-44d0-8b2c-f222b7c2677c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1185c1-d5e4-4f81-800c-0763dac9c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fa3184-24f7-4d84-a0db-ce13886453bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666296ee-4c95-43e9-bf47-9bfb4a4df933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f48b9df-f299-4d6e-9f85-08c7a5cd26ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07b22b5-3095-4c13-8158-db29dd07d932",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d9c274-a1f4-4d40-aad5-51dc10dc231f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c33968-424f-47e9-a2c2-ee1889fb3a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48de701-2c67-45e4-bd45-0d124bc5e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59c7a30-334d-426e-a16b-b2eb863132e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22858d0-89f6-4dc2-ac05-6d90ded49a04",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a13fd6-4202-4d5a-9f7c-8ff1927ce388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c417dc-f62a-4eee-9706-0bb781f7f483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25fb1f-b291-487c-9acf-1e65ff6f696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6dd3fe-4cf3-4550-8d2a-ad0b5fa4e3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb12a397-a01f-407b-894b-d77b0cfbf964",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58afa506-ca10-4790-82ee-7247dcc40220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1550237-f33c-4e64-ab34-c66ce6c5b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebd264-672a-4ab6-b748-cb49c6eb65e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bf1052-f9b3-4120-bd60-976956150d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3100ad6-aa39-4b7f-a213-467a6661b546",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794e060a-fff3-4ae2-a3bd-46ad3c102865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092caf78-1f2a-41a0-a658-4c769bf338a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008c3fb7-01f0-4b59-b2fc-c1b9e87c5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e40a50-25c4-471a-8ca8-002df43fbaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4347c109-c7fe-44d3-bf36-4b31892f05a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf887f-26fd-43f7-9e0e-e3f93a65d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489a0508-7f94-4454-8b6d-24c047cbd469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d08bab-a315-47f9-81a7-1a9b6006e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f8ec2f-8d82-4c94-8a31-d1187b06e160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ba6fd9-bfc0-4aaa-ac7b-e6c0e7edc52b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ffdea0-af6e-45fa-bdaf-9ddf0b3de817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e22696-791c-4062-b3a8-ceebb6f308da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fe93a6-f8f9-4561-9762-858124ad5014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9628d89-6586-43b0-b290-5eb7326a5e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14ba962-3e0d-4259-8179-a954297e7a48",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2840d7-5f69-42e4-a8f4-41e20d70e6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1a40fc-0736-43c5-a9f2-ccb3d6f3ba65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a217e7-b76d-4c55-a8cf-0aaf4fde937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecd45f8-e104-43f9-a245-d13d6e3dd826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bbf076-e236-4761-a86e-deb592483b56",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edca0d46-1050-4216-a981-e32c724f4441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3536025b-c85e-44f9-bbf2-8f3adc072e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b111fa-2941-4f06-b1d0-7c3a7ec385cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0732d2-31d2-4bfa-b4e2-cb4db1787624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8923d90-a614-4004-bbf8-6dd505325218",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c965a6d9-6def-4824-98a0-459250646afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9721f3e-8770-4d6d-86dd-06f71db10fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c848746-b10c-4664-8040-546b6dbdf6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9882e2fe-e03f-40d7-9429-8456a0572367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce78179-64d5-4175-970a-14dbb69dd2d6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5e320-3fd8-4b61-a42f-5b8de264edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70160e2-7c4d-4c2e-bd99-32ff53c3b09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb00611-a793-4f63-853e-372646926783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee57e64-8972-4e80-ad3a-5cc8bb9f1357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfe7d8a-096f-4a5a-95be-298b4812ce44",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53daf9f6-2cbe-4ed2-824c-77917bb5e928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d0174f-97c3-4421-bd93-0add1247154a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e411a56-d4d7-493f-bc3c-7cc4c72ae2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b20aaf3-0f59-47a5-9228-bfb35effea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bac04ab-d9cb-47c5-9b3c-a506ce330f48",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ffcec1-1b97-49cf-8a9e-0f459f8b1864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8695fd-f84c-4cd0-960a-8af421fce0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b94110-4664-46c2-ac30-d12c62bf8a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8dc496-d96b-4db7-bac7-48bc5fed7af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8639065c-d02a-4bce-8a7e-82faa38c3158",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441e329a-4088-4f05-b7dc-cebeb3a991b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abcb7d3-102b-479e-b23c-b4e1c9638588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85227680-f233-4eb2-b6de-ac355849f096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddcd484-a4b9-4cf5-ac19-a68babeab64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50363dc1-6f10-4aef-9fcb-d4472106c55f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9fe822-d8ce-4246-999f-9894266ed4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fb1528-0841-4c77-a377-cd1b42a5bbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c13cbf-8d32-406e-b84c-304379f5f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae02f882-48a0-4b67-9469-9e6163e5eabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75881752-35ed-469a-be4b-5c19e5499232",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c7c17-e69c-435e-a86b-2c0f8b67cd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aef64336-0a60-40d7-af0f-07017baabd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9adbbaa-a224-4e60-b57b-fa6faf671af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df5abbea-9334-42d4-aa34-59ec835d00a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a2d3885-46a2-4717-bbe4-2885ea705231",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1124db01-8662-4bcf-b9ea-fb5383abdf0b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b402c-6841-4440-9212-4f33962ae052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "350e0bc7-4238-4047-bd81-42c2992fbbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b23348-06b3-4edd-86b1-e118bada849e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8eeabeee-aadc-4bea-85fc-493de7ddc82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efff4b9-e708-463b-8d52-09dca13b258b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77fdfb1-009f-4361-9e6f-9718ef6c9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e7303e2-e254-485d-9bcb-dca538dbd322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54492f30-2574-4124-82fb-097d267d8a79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "63a70fbe-3712-4e6c-8d46-e60aa394844c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36a6e110-4118-4cc1-a9c1-eeaddaa8cbf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0e3bd7-3f9a-4e0f-8523-bd17561f480c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65df9d8-1d7c-434c-9201-1b9fe9d624a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f84c1bc-23e4-4832-83b7-9ac3f85e3d42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0c5ff07-ac29-4863-84f2-db91d3021fe1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd969011-8c14-4a5f-9168-59f1096afa2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f09b96a3-7ad8-4f69-8d9d-e9c79bb9e9d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dfdcf03-22e6-471b-8847-b052938b1a8d"
                }
              }
            ]
          },
          {
            "id": "d35e9692-e5f9-4bf7-80d3-5c03a6079390",
            "name": "Positive Testing",
            "item": [
              {
                "id": "629d5c94-6d33-41be-8b50-c272ee0c1fde",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "653774c5-9248-4271-a6a5-db8d8f79c740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61e670f8-6195-4dc0-93f9-d9f32c54a479"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "433d45b3-e809-4849-bb0c-bcca605707ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63f0f2ca-d641-41f3-82fc-5c8846d1f24d"
                    }
                  }
                ]
              },
              {
                "id": "1ff3628b-c4b8-45d0-a356-60171cae39c5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dfc2ede-22dc-4e0d-8b0a-8b32d404373b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "499947c3-52c4-4d12-a5e4-1813a99466dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e666725e-1954-48a9-9899-89f277e2a877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00401320-2e61-4482-85b5-b04026e9f63f"
                    }
                  }
                ]
              },
              {
                "id": "ca4d300c-a912-4519-8ceb-97e7905406eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "850b4e8f-0d04-495f-9af0-7420c58a8759",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bd800fe-1d25-4400-b870-5fb87a61cea7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f09a2755-a990-4f18-8c2f-deeebd4623f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "032543c5-c411-4e01-bc68-45e46687359a"
                    }
                  }
                ]
              },
              {
                "id": "13c8fd97-664e-403f-8e7e-01c0da83d6ad",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2cedbd-89b7-44cb-afa4-c8d98cccc98c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a911a7fc-f083-4fa1-b91a-622c2217c349"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de6a4173-f104-4d72-88c4-058c8db216a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5b448a3b-e53d-4279-a390-1c611eb73533"
                    }
                  }
                ]
              },
              {
                "id": "1fdda1fd-f148-4b61-b336-23203fc54056",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69ad6afc-076e-4418-9388-2c03d94e9f3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29c415e3-adfb-4d75-8050-fced9d1bdef5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "255d944d-2803-4ad0-bd5e-e63f7a7603c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7e70585-b84a-4449-ac9f-7b4dffac1497"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51515606-1efa-4334-9b88-64b9e9a3dd30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07a9cb82-6aa1-4361-9fc6-5cc6ae2a5576"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5a83d72-fa48-455a-8fc1-55ac7b5e0755",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de458f9f-e8a6-4e68-8ae9-e7f7d97641d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7831cffc-e033-44b6-85c1-11202ddb6e69",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e3e4963-0544-42fe-bd0b-85bbc45dcd22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da63ce6a-1cd3-42c0-a382-abf7c99f591c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e917248-207b-4240-82cd-932d90870671"
            }
          }
        ]
      },
      {
        "id": "a9caa87e-dd0b-4353-b4d8-7f751542de1a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3fb70b7f-4252-4ad6-ad73-965d2767b660",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23bb6dbe-f023-409f-8f70-7a493113865b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f3fa4fa-50e3-41ce-9c3e-50bc56578287",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad73777-cd1f-4063-b379-5de04bea6c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf89fba-a7e3-418a-94ea-0d6392be6485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5984210d-60cf-4e1c-a1e4-4baf4e57a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "863259ed-8add-4679-9311-84251f238465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb7553-bd11-4ce8-890f-7606ac4575b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02cfa64-02c4-44b0-b57d-271cb5379926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aacb4fa-2bfe-4652-919a-dc1cc8bb8b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df1958-2e85-4b18-94a5-88ba9d0ac001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34a0f36-92e2-4bc0-88b6-8db6759c91d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d3339-83d6-4fa4-8389-9a5c120a1dab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b30d01-ec9d-41d9-9459-8445723701ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3314780-3324-41b0-a0b0-ad4a06e422c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8b26e8-7c52-4e44-b9a1-209865a09bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7be77a-cfa7-4c9a-ad99-c20fa9d2929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ec5c56-3ab0-4a28-a4d6-4f773261f7a6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f4154-b362-4d33-8568-737611182d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc49372a-da8a-4bf6-b395-ebdf75c60200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223a954-59db-451e-b390-1284dffbe5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69a793b-d5d1-4cd1-9a34-0abbacf5280a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd5094e-82e8-4f9b-9c0f-b8f5c577d6ad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea81913-bf76-4ee1-bea6-2db8a33aab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36352e7a-bd24-490b-8d5d-763e35b55d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c28f2f4-6dbb-4dfc-b50e-b84eaf197f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b374a9ed-cf0a-44ab-9acb-2901a12dd17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f3fbd8-ec47-48eb-830d-282124f3539b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59016acc-1d73-4646-b60d-05933237a963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d1afb8-2d54-4fa1-b52a-f344a2fd18a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ac9b1-6d63-4da0-b8b3-12c49945d269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca06eb0-caa6-4cff-9c0e-1aa4d9e00529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325a799-7e04-4631-8b6c-3bf643bd826a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cdb057-0a33-447d-af95-5e02f701d38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df34c913-1ede-4c42-ac22-c539350db4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b104e9f7-e3fa-43b0-8304-4a3a57fadf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "62eb09ae-e449-4294-8255-cdd07bc3097d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63afd184-0728-4982-999e-daa42d32c15c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0328e3-e7fe-4c84-a974-66e9a02831c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82f31f1-9b18-4c88-a826-143a83338d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e088b00b-f518-41cc-8b60-787446e73434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e56fb7b-04ce-4f9b-9398-eb6010ff700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253e0148-013b-4ce8-8be9-b311fe9c22d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcc98cb-a599-4f9d-b333-8097dca19245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f48c54-88e1-4ea7-bf43-9108138e8926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c066362-d06b-45f7-be05-ada02a4d8df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b65961-1260-49ce-8f3a-84939f344c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b67e055-4d2b-40ba-8715-ffbd7d93006b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc92899b-dcf2-4124-a056-188ef6cd54ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39661e3-6977-45d1-b3fa-76345f20120f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaffaca-879e-46f2-a17c-398b24d8c1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7c810e-94b6-4989-85d0-19f194cdfb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071595f1-30ac-4485-95b0-f2f30c54d6f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e6508-e81a-4392-b781-86bc0a80334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97a3de3-bb50-485f-89f8-d2cafcea9272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6682d78b-3aae-480d-bdb5-6d23b397cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f43761-707d-4d59-bbbf-a9e089484c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c8177-d374-4f0f-ac1f-689622f9540d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e36bcd0-ae05-4484-bd86-7a1c1a7fe333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a3d211-6b23-456b-8340-a7e8f71e8de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627375f9-a1ec-4c93-adb4-b53d3a6eb7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3d985b-3517-4f6e-9925-272b0b6d5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a17aece-ddf5-4c03-96b5-cee352bad618",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fd6e4a-a1b2-4d2f-a2c9-07b6e97ea58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461b08af-2d41-4076-adb3-f1c7ed58c56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d0f096-8b8a-4ab8-baf9-e3785ad9be7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "add1680f-464e-489b-bc2d-7740327d5d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7ec996-3e15-4baa-9a86-790514e19756",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e5e47-9f6b-4871-9fd8-0678c8d8dd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35f7a5f-987f-46f3-b3d8-397cb2d15f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0685c2b3-0dd4-4aef-a97f-dd31c422eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d727fc8f-30e8-4561-9186-873bf6383751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd02786d-d202-42db-9aab-bc27503be0cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7271e4b3-b8d8-49b0-8bf3-88fb7e2f3df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b75398e-72c5-4ffd-997b-163bd2c6e031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45dcf4a-c1ea-46d5-b62c-8abfd9229c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecaeae0-17f7-4ab4-bbde-dcb5085af7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e73b39f-ad22-4144-9240-132bd06a4c00",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457fc43f-26ec-4da5-9656-db931b26ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1195539-27ec-4f88-9d63-660c548b2073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d2a758-b69a-428f-bd13-3c40d2780830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf623d04-2f80-4708-bdae-14d4d9903ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272fa317-bccf-4286-9973-c90b5f106df6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36520890-2a5e-4de3-bdb0-37a83d1b9fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdddbea-70a4-45a1-81ec-024a0cd79f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1143216-8ac7-4522-ae76-047a28bc56cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6182c4-839e-4887-884a-d681742405e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde24c5a-2678-4b84-8065-acefe84d03fe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e83b51-8130-4821-9794-66faec074178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353227ed-504f-4de2-aeb4-e41c4e4b47ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae25c05-4718-475d-a2d8-5572cffe97f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb70bee4-5238-4621-8318-bea373de70ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a008255-ea7c-47bd-9315-cb33901d07d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d188e98-96bf-4999-932a-7c0ebb588590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563c7c03-0339-4800-b02d-efe4bf5c081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc34e22-a414-4104-9636-d8f68919deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "792db794-73ab-4aa3-8855-036f71b2dff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8605fb-3b3a-41c7-92ff-c434178a2b97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59540118-bc55-434e-8de1-704add27a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344bacb3-7a33-4f3a-9a02-5a048ab32c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ad94d6-4df6-4a87-aa11-48eefb2c35a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be66c166-b282-4690-9c51-2f279ce42b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89715a7e-be74-4884-a60d-1f79cdf604b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726dc8b0-e1bf-4d42-a33a-282627c979e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef62c8ab-7fe1-4068-a4f7-4b2388723a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e92ee-7554-400e-a52d-f9cac8c34934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3b54e2-de77-46f9-afc5-8cc5c9f2265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc2d6a8-8d43-45b9-8fdd-e179ecfc9c5c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e03e559-43b1-4451-b891-92540eb38cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05469b5d-43de-4d1d-8278-47f7f24c8faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66fe8e3-b6ac-43d6-ad68-291e354bff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f22ae6-6ec7-49f9-9bfb-b6c693481f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce54d94d-2936-40c6-8afa-9fdda3f1dc0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a39172-fa72-40f4-9ca8-c45776936fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22f7e04-df70-43d5-bbe0-3b8aad2b141b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7b09d8-c4ab-480a-9bfd-95220d3559a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e38435-578e-4acd-a0ad-ad7bbe94b3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e6e9d-0848-4170-9852-994cf84ecc35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab801307-24ba-49ab-9675-37d1f070f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85da55ab-8b7b-43e5-b770-fb94505bf8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dfabc9-9b78-416a-a089-22adc24d4d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5456ac3c-fad2-46b2-8bb8-cdf564e8f230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7540450-dda7-4d56-a871-c2c1942ac64c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d698997b-d433-4feb-9efc-6d57e818a6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cec0a8-e9d1-42d3-bef2-ff13cf4ddd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91416730-7b45-4884-b385-2bae7cbbad7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "512dfab2-8031-41f1-bd62-d966831b2ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8801107e-eff0-4399-b961-7595c9a552ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d270454-1268-4b2f-9802-f62740ff625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69de47b-7319-44b1-b5b7-d6e8cf26eabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e739b22-0c6d-4389-8a31-9310ac33a4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2962b902-0190-4a10-942a-0085e82c0961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9588e88c-5aea-458c-a69a-5d5fcc87d3c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd86df-64e7-40fc-9168-842e5a216a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e8994a-ce1d-4abe-bacd-e2ba4e5b4f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07556c6-94a3-4523-8888-6a63f9d0998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8555242-aa78-43e6-b6e4-10f1b4714d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abd4891-5d3f-4e60-9a05-ca71737ae9d5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34a9108-b6cf-43cf-bcad-dc78061e1d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a51c26-70b4-4187-b1be-db5b5b027458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d9b812-e0e4-463d-8c6a-08bc8b9a596a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0881d37-293c-4f2a-8377-ad66e8bddb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b63a764-175f-4f44-81d0-5c5464180c55",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b729bfb8-47f6-4fc0-a09f-443e9388368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc939efb-e473-4d69-8c6d-422cb8152628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1661e2-6bea-4a15-98ce-371806455d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f70e68d-9d81-4a4d-920a-29fd3cbf49c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54335cd-93cb-49b3-b2ec-3153308da497",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22a61e6-2114-4cf8-b3c5-1467219a26e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d97bff-f353-4d15-b4f8-4b9ff6663001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0213f8-c168-49ad-bbbe-b6c7eaccc1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64cd260-6d61-4683-b89f-f2843e35054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e722b728-18c3-4aa2-8a76-e62d2dbded98",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f212aae1-9976-4568-9873-6477b64fdfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb91ed24-dadc-445f-b8e9-3e54877fa66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b998059e-b060-4022-8cd7-70f0b8045c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5db74b-403a-4f08-bcb0-694abf60d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68264c92-a1c1-4056-92b4-f618011408fc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169b1940-a90a-4869-bef9-34464117696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85112eee-52ce-4e6e-bceb-5005c96a72e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd88b82-bba4-4d7c-b18f-7d7a897f2db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7817d4-2444-4d55-a64c-d5a52e0d2936"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99c41f2a-5786-4a54-b1f6-291d589d81e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1aa1dbd-920d-4ae8-822b-546dde5f98ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a2ce24-4912-4c17-9c43-c592bc8e2f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b70263-f45d-47d5-b28c-38570b1d9aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340e007d-bd8b-412e-9440-a61d055e917c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1abcba78-1acb-4f59-8c41-a0016e6bcbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2237adf-6d24-49b9-9f38-0808623dd241",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191251fc-204f-4359-bb9d-285caf1cfec1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8753d07b-106d-4d4a-89b2-a92a0bb9b70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de0a68c-ed7c-445b-b513-6eee718c2627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f28f7a8-6403-4e54-b2ed-bc0af10cbbe9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2179e6c8-072b-4631-a27a-e418fee71543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d47993e4-5410-4887-b074-385edac0e063"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64d26794-0430-4f84-8a39-196006ade0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4d3f749-4265-4d91-8899-5028ee99cbdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7628305-b76a-4cf3-8ac6-90a04f4fc0e4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1baaae3-e8a2-471d-b4fe-5f9ae5ff8924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2af65896-6bed-40e3-804c-adef3c0b005a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9422fe2a-1c33-4576-ba56-6a03a0241ee9"
            }
          }
        ]
      },
      {
        "id": "876aa707-2791-4b4f-abb4-bf1c1dcf2f60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ede0ca81-38bd-45e7-9bc9-263ecf073f02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6474ae44-66a0-4d72-b92b-3cd6e1c5e8d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2dd64e6-1635-49cd-a198-013ed4cc64ed",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72a127-49d4-4991-bae4-4d3a8ff530c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101a4c2e-20ba-4ac5-9d52-be3c89839c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ea38a4-4a96-4299-9658-e72e1fdf351c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bdc156-0066-42fb-a57e-bb79044a6be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f832ea6-65f8-485e-b501-102c5c709171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398d5fb7-1296-49ba-9db1-6e9a03c0c247",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f221c5-5979-4f66-8d30-5dff77873784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb578c8e-c4dd-4dc2-9245-e4b9e1c9a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c10677-b09f-46d9-9a27-ca9c9f7c6762",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4897ffd-e82f-4913-9f03-c527b3045cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4beb49ee-e7db-468a-a661-59fe33ca035b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4e6e9b-8f04-4e3c-9f42-f8ec08a58538",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b2844b-8688-403d-ab3c-57f96201b785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8c741d-78d4-48b7-9ff7-aefe2794ff84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48a30b-fd94-41ce-95bc-40475fa19e14",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f78ad9-0367-492c-b8a3-94bb1cad3940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd5a885-e877-4dd5-8dc5-d99e21450195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d74d8c-258b-474f-a253-6ecceb2f1d0c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc117cf-d30d-4d10-96d9-1888c13caafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53506aa6-23a5-474b-afb3-20063893e82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89957ce9-087e-4185-92b8-c4b375927b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1703cd-7ecf-4991-9261-1a867cfe2769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ce1157-6f3e-4344-b678-1931d2e50161",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e6d5b7-1049-4112-beac-07f1f28faf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d84163-c6cf-4ecf-98a6-b23b0b4af4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77947352-1e8f-47ef-a7b6-ebe41e6e9262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0819e5de-123b-445c-beab-bfdca5911ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01170e8f-c791-43b9-a30e-941343acc95b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9394649d-3eec-4bfb-876a-466037cf13f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce45d2c2-3fb2-4e5d-a367-495fa6d0ceba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd94c4e-61cd-42ba-a232-522293914ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed3029d-792c-466c-b7f1-6b565e0936f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe85d6c8-9a00-4de8-8d9d-9d7032cf2bc6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f78bd00-eac2-460d-a419-18855904b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751cc8fa-317a-45f4-aa84-c1e13086a285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b744e582-a8cd-4698-a1f6-7cf2c1dcd5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39025d0-abec-4de9-8073-e886af88003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e2c462-39a7-4886-b4f1-e87f07f3cea6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c5e27b-49e4-4317-a456-3d9424a48b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7796c4-0c97-4b51-b62c-54ea15109bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d835cc7-8886-434e-bbf2-6916de75ea4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bff9552-e056-4606-b2c4-17d06334ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ae8eb0-863c-4914-95c3-182751a061c2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415cef89-f72e-4c1a-9c17-8b6cb3622a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c203171c-b722-447b-a2eb-7df959fea709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbc8873-adf5-42f1-b1c0-280d1a1b2c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cc36b1-1f79-4f3a-9199-1a6e094ad4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003d96cc-00cb-46de-9a3f-c476f5f838c6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b0fa2d-3f84-44dc-b0de-96a37ed2ac0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92ffbcb-7c42-4b1f-8d55-a779d7e42e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2758f5-78d7-4aaf-9d31-bace1b84915f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672e6301-2063-4136-b82c-e3e37096f83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f8c188-b927-4444-ba47-a6f7ba9baca1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b2fdac-7d99-4d5d-a28d-3f2db0225052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2693beac-faf6-40ee-80f1-00a2cea7282b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74845c94-49eb-42f2-aef3-a375907c61be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1577b5c-315a-460f-8c78-b097f987c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279747ce-4c7d-4fd4-bf04-3d04a592b8b8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7736f65-f713-43a2-9253-778262b7da3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452842a2-9db8-4576-a15b-c7a5ccb5ba3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa5105e-031d-45d6-a515-6c30a2cb37c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52069aea-7771-47bc-9f95-7f2c821fd424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52771cfc-6db5-4174-9ce4-191ac91ae831",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f08a7f6-2dd7-4754-8ae7-5449cf5ca4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3c4571-6c06-4105-b728-783d1fa6b217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dde7e1e-5e58-4d26-ade6-634987ee2ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaeffc41-f095-41c6-94b6-ee2956b90031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb86bd95-0e60-4cfe-9b44-f49ea24b4254",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bdf28a-d30e-41d0-acd5-7a888dcadcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1f4f20-6c6d-4223-90c2-34123f4bcb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171339b6-30df-4d6e-9162-f582074dd731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2dfa6d-b002-4efd-9b2f-58698638f2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1197aaa7-2174-4b4d-a8c8-a8fbfdbcc1af",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371d5f6e-39d4-475c-84ef-0cc487d0badf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80e341b-a9ea-4caf-b6fe-5b26fd0a67de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e32af7-589a-466d-a557-7622a8199137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d31da17-1a32-46a1-928e-d2735d0a29f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08f5349-11fe-4e0b-bbc9-2e73e2154a85",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598e68c-0024-4d2e-90f9-0c259dbad331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723a07b5-6ab3-4a0f-92fb-d58701dcc3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929d9d8f-1aa7-415c-8433-48f9e4dbfc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23adccd4-47bc-4701-bfc5-3eb63cc48246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8935e2d-0322-4554-b494-46e080080216",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e936f5c-d800-4aeb-b1af-d079f00310a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99b7f05-22a5-4f45-903c-095e05c7b97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be5432-aa55-42ec-8ab5-4d8cf73619c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b28a66-5984-403d-8bf6-6dcd9e26a2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7dd0c3-1579-422d-8de8-1cb52bba546a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a42286-d6f3-452d-bc3a-8cc76a1e886f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9261ba-c400-4add-9669-e40cbdd97887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef38c34-10dd-49cc-933e-01277d677e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119b86c7-8e6d-4541-9a5a-0e286863750c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b39460-4ced-4d8e-abc9-da9a9686ef49",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc522fdc-fe5f-47fe-9db9-dd8ffca24fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a89cf61-b830-4bd6-bbe9-15042031462c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4d2d70-85e8-403c-9384-ad6515d7b63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee85eab7-b7c3-4ee0-85e9-79460f700caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df397c-4807-4942-bc66-238bed81b974",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf63901-50df-40c9-88c5-8961bd4dcb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40bbb7bb-f019-43d3-9479-b1cdced4021f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c073257-8ca4-48fa-95c1-225ae3cf3a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8472623e-45c2-407f-adea-d3ed58639ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1906d212-a9f7-45a3-886a-c35a05a781c6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec525d37-2085-483e-988c-f3905f7ef57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81b0143-adb8-4a96-8f69-a38f82a0847f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed30f0-9073-40d9-a23a-7ca57fd75b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ba3044-a4fe-4a25-a341-8b01f6c6d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbe5f57-8e20-4e9a-a45d-0cd75201ebe4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2fb8f-a862-465c-b1a6-128c9948793c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485f435d-5a5e-4d0a-91f5-81b330adc00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e94fec-e994-4b16-a3bc-80c7bbd9ec80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fad34d-e453-4892-844f-067e16de284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abc5e12-b3d0-49e9-bfc8-38d495fcff3d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb371226-0e83-48d5-91a8-eff8603cdd32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee11a42-7536-4781-9b69-8891775e7fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccf7c33-e039-4d46-9908-e2fbbcbc71a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea934786-ef9c-4948-aa93-3de0a6e1d1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc1081e-18e0-4616-a6b7-193698b1fae8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e0272a-e250-4806-8615-7a7beb52289e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7197d743-dfec-4607-b476-b4e9b2c945b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5e9801-52dc-4394-ab7f-96ae1f34486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5c87fc-3c28-418d-bb43-c0054e65408a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0af4db-45a3-4ca6-8d25-39662ba5a5fa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b59d1fd-bae1-4fe4-8aab-d79cd88f3579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d7967b-9d88-48a2-8dca-dc19cdbf5166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e80a4ab-57ad-4e0a-bfe1-a79e2f23b75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e094ec4-40f2-41a1-9ad5-6d7d5a161386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe309c1a-3d05-403b-8ae8-5e8c10071e3a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcbbf1c-4a70-46e1-908a-b54335935f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe19e93c-4a6f-4789-aff9-24b857899adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5806f2-0115-4778-9123-54020a6cf313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b329da74-45bc-4629-b550-828f11eec0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec0fcc6-e29f-407e-9d36-ee636eeed016",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0512dc1-ee6d-492d-8b59-affd48540eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1603c5be-13c9-4aec-bf00-45d9aa09f897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166acbbb-e220-46a3-90cc-ffd99448901c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0b9e6b-43ed-47a2-85ce-2e06718ebc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2984b2cd-45a1-4d14-ac0f-10c7931ffd70",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c086424-8137-43d4-bd7f-fe2c4352e01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f2e5dd-9e4f-4323-b611-f9bec9535230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe38a5-04ee-4eb1-a1eb-1605774b223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40408e4-376f-41f4-80df-44eb1484dd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87973e20-4f0f-4323-ad70-1f274f20c0db",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc31e86b-25b5-4fa2-942f-e9c27e0bef25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f13c1b-bd82-443d-82b7-4402954e48d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bbaa70-4634-432c-8b4f-39445d4f628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e132af-a7b4-406b-9466-e9a9af438a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190b5be3-a7c3-435f-98a4-8d4b40b88c7e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd371a6-46d7-4fcf-9c0d-7bf454948e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec553f90-a465-42ec-b133-28af92069065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb00cfc2-bdf4-4493-9fe9-8496e1dad8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953dc052-6817-4a68-95ff-0647c419b1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b60776-3595-45ce-9f69-2e02cb5ea350",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eefb83f-20d6-4ecd-bd41-b408fbe4e572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8046042-e132-45de-96b0-3c7ba7064e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0af932-1487-4e9c-9123-bc0fbc9238bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b73f34-d36c-448a-ac17-f2132065b623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617046c5-6032-4be7-b2c2-934d2d383c85",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e219a71e-0db6-4b47-ab59-98c374e01be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14eaee30-4173-46c0-98c8-e52c482f3a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12bcc9-8272-4d56-9785-96a1b3c6ae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d5d2e6-1515-45e2-8a74-9dbd17fe98f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c72c41-cc1d-4fa7-b4c2-b9d8bf52ea3f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da8f2eb-7694-4cb2-87b2-560fd76f5cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c98399-9a93-4c08-b51b-71f009ac7235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7ad9b4-5548-468e-b167-d2debc060497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7dfa9e-ab39-4b98-9ece-4165f934a08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0daa6d-bad4-42b1-ad14-3818f21652c7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b13486-6eaf-4e30-bde5-c669a36fb46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6baac3b6-765e-4cda-a9ca-0fdd69c3c5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e240c1-aa47-470b-9ae6-0b70994cd078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b87ec8-1c34-4e15-a2c2-7b58bb33ee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7ae227-8e54-4cb4-9877-2d5268453355",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433edec4-43a7-42c1-990b-2241ea76cccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b2983e-013a-47a4-a675-5a8efda6eb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1342014b-f1c7-424b-82fd-236cf9517aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913f6edc-79fb-4495-8b1a-cf64a9a9a5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f23f590-39f9-47a4-8461-3164dc85889b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992949b6-5387-4048-9b02-c418024e9627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cfa166-2ce6-4ec7-824f-9374eec80c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7a8383-5e90-4324-aa5b-07031f6d3a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd9dc7e-78cf-48c9-a895-b1f38ab2e3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a0dc9-80a9-4fa8-a583-9001d55a984f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32771a22-5869-4d28-9e6f-e78374f5e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762135ba-d898-4070-9317-4ab1a50747e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9aeb6a-4d20-4e08-b135-f26dd44ba566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3224da88-46b8-4187-a537-28bb719dff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b3be33-4a50-43ca-9b9a-a6d8d3540069",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381d290-0424-48d6-889c-437510444f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b72b91-6b2b-4bce-b6fe-2d53ac8113e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9bd181-a650-431d-ab88-6ab80950818f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d527c4-4023-40ba-8fe8-31a7db4db8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eaa77c-beef-4425-8750-3b92bc8f9b3b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054e1dd-268e-4a93-8a78-d0de91fdc07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ca8dd9-d55b-45d6-9f6e-fb45fc5aa959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea74e1-f71c-4e3c-8413-1d25a7d6ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e8b6b5-08d8-44f7-a3b7-92b09d3a4c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bece1dd5-6641-44c8-af22-849fe7523a58",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af5de20-5ca8-4d98-a64c-cbf7411dd34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c6ba35-56f0-446b-a75d-5556ba68d7dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6927d623-fe93-4e40-89b5-3e44c39b8a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea516743-e0b2-46a4-8df6-0b01dd8c2423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975e82d6-dfdc-44d3-84c1-5adb3014e14e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe111335-7609-416d-9bad-8a51ebae25c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85840a5e-3e71-4079-b272-630a465072fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836faa57-5faa-45b0-8c90-447f3194b68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba0722b-ab7d-49a0-8610-6eb730a6ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c504d40-0fb8-4a4e-bcd5-7e07d043c9f2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8910bf-6e55-40d9-89f2-e58a2bdda592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ebe2c3-50b4-4699-a4cc-c67eca78e614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9fbf54-afee-4b79-9f89-c11cb1be8798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3443094-76d4-43df-abc6-35f2e1a8f47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b943abdd-fa7c-479c-8ce5-94b367e5a28f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a32962-2242-492e-90c6-c662d9ffb4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d89fcb8-c2c6-4640-90f9-4dfa8e86cc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f51a59-3ba5-4349-9b50-b95c8c4c970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f802c9-e71f-46ff-8413-03dd53810a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a18c96-7b65-441a-bbfe-3c4266c01454",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8421443-e67f-4e9c-8759-96b94be125fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816cca0b-ce2d-49c7-af98-61b8fb37d382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e16f859-aa8b-499b-b168-e20a6cb50274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f83616-df5c-4538-8560-dc3c30bdb534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf8244e-7760-41ce-b5c8-803bce7376e5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f13222-972b-4df4-bfe5-325e3bf8a4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fd29f4-5d59-4b7d-9dc6-cb28b1f1f8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2e1b64-f526-42e2-b4bc-72f5e691c2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ecc3a0-d429-4e50-bbc0-11c076cfe323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5396926-e96f-4f95-b77e-363636ddecc0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c8eaf-4ea5-4e7d-a202-aa1e053b4964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca03052f-46c3-45e5-8834-0a6a0bf5501f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09a8bdd-0f2b-4292-9c98-ecca7f4798af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c38755b-2b83-44f5-95a8-c6e19ef1dd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3afa32f-b91d-4e02-a00d-72a3cf0d126c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35388b12-93b9-4eca-8299-83c5534d25fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce38994-c0a9-4d41-b200-8ca1e3a080da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77198257-7b20-4abc-9a2b-930947f3a76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e280adbd-e9e6-49c3-b99b-98127231b028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912f4157-28a7-4462-91ac-93bfa1e59e81",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4809f081-9449-4ac2-8589-4221a5afa17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9414da69-93c7-4bad-bff9-93584eab954a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd71786-34e5-41c8-85d0-5800af48792c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62681b94-1091-4601-943c-a4f483927760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0677ac4-e4a1-4184-ba3f-1a1a554c24b8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c781a7-51f5-4fd9-98dd-3c70030fd370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be79431c-d666-4245-9e11-e0eaa9e9f667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f9671c-a544-4317-b16a-6bd33b6e0ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49d202-1770-4c8a-85aa-4b9f05e4ec93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff19e379-30f4-4bf7-93a3-a1fa29b76f35",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d2e5e4-6acb-4a14-9f05-d87abb09be63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c816d1-9edc-4c43-98f2-5f454fede443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1709fe-da64-4f17-9b07-175d7539bcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcf2e57-9ceb-445b-8242-a318af7fd911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e188f7-ab01-4875-b1a9-db630abad7ab",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989019f6-c9b2-45ab-a452-817b33d8b420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922b6b05-9331-443e-bfca-573071eef527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e288b659-819a-4794-a66e-8a622638335a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24034243-ecf4-4abe-b5b4-9b16cd210bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5af12d1-835d-4d8a-93f8-8279b01a3d8e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ea9cb-d93a-4ff1-8f03-bce8dadea011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b77330-c251-4205-a286-89afa2ceba6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff19e9ec-01d4-4547-8031-8d7c70397eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1674b9b7-faa6-458a-af7a-9c8b9f8afa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6552eacd-f7d8-45d1-98de-9fa6d30023ef",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4537fbaa-9a59-4535-8979-341a05476ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88184a9-106a-4da4-a1bd-d9a61b31bc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ef9eb3-f901-4673-b828-27bc4723357f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f053952b-1ebe-48be-a94b-fa9c5d0172cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592323b5-d756-4316-8125-ea4ccdd393d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8449b3f9-5590-4e93-a9ab-709c3bed0a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f02fc4-cbbf-4226-a522-12bf9b6ee206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe5b1b-88d7-4725-9718-91c8215bd964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c19e77-8b22-48d6-b0b6-5e278be09d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2a038a-a26a-4d84-9f69-c53c97d1aef5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f99afc-526a-4470-b1d2-7e41adf54462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef4ccb9-c179-489f-8607-a9305929a52b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0d5ef8-4560-4a89-bf05-375475ee18f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c59b73-30a4-4ed9-a9dc-f69a538cdfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4321683a-e7df-446e-a815-dc82dce0bd75",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b719e099-a390-46ac-9867-3ba298765fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bc64f6-af18-42e7-a4d4-7755666e7dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9ce256-14f7-4957-ad9e-1619cfd946d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f75682-dfe8-4d1c-8f9a-23de82b00886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77631b42-2aaa-43c1-9c83-d67056c4437f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c6bada-9d93-4ecc-b27e-f692977238a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495f68a7-49f8-4f79-87bf-60058d92546f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f596c0-38d8-4968-89a7-c0c008185b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b0774b-9884-4858-a91f-7badbf73810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de55738a-1112-4880-bc56-aa7cd47c13a7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afb9393-8d38-48dd-86a6-3e98e0fa1d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc8e4a5-19be-4a47-b633-dbf46a49f2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0550b00-b4a3-4578-8ea7-8e0cbbc9f156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29a3b10-4441-4701-b5b2-181e937eb390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abdc49f-7519-4fb6-b70e-0358e903b603",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014cb6ea-9d64-4172-ba69-e28772bb6e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa36c03-59da-4088-8cde-c4d2bd4f63ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a940bdc-7988-41f8-9734-4128bbace137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b8257b-4a32-45aa-ab51-31977b7c56ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13687759-28fb-4812-ac8c-f280c18af40d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f4f499-327f-4b83-9b2a-5cc7fb7d188b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655829ae-ab9f-4f5b-ad94-24f62ac4cb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37df01b3-34f6-4bed-9e23-0a60508204aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09698a6c-08cc-4e29-a125-2151e97194f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cb4c24-858a-4bb5-aaca-3fa2d3bc1bb5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3303527-b15a-47bf-986d-735043d0dc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3a18f8-fb27-4e0c-a136-ddb0be4ad084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a20f84-6986-43c1-ba8e-d0216af88dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bcaffc-8876-4447-bc1f-6ea8d6a44e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc39573f-7d04-445f-8e03-7b233d95570e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61739932-2607-4383-a0bc-174182ac02a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e869369f-63a9-4bb0-b5d9-5a7d74e09b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bc3380-5495-464c-b95a-0b5257739a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e4de06-3543-4574-867d-f82b0c311662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e86441-c1a8-4bf5-885b-793a6d7ea99f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cc2649-b102-4ee6-84df-9dcb2eeea0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c7c22a-4387-42d8-89af-2765bcc995cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd1c2a8-3a11-47a9-a1b3-5f0279ced63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d38fe66-bb06-4399-93c4-4a0f7f744bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fba4f84-0808-4de8-bc13-3662992b9e49",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394c64ef-cb0e-4f91-832e-341459154209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbffdaa-999d-469a-a873-c2b32e669c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007737ae-aaf6-4a7f-9155-280c89924440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdea508-a95b-4fe5-8fd0-6b9f3d9c637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c34e7c-b5ff-4b22-886d-b63b8cbc66c7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5c6275-2c2a-4fa0-ac88-da542a0f1777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cef05af-24ad-4c1e-9573-bf44b6796fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea12db3-f017-4bce-b25e-69648d3df83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c21383-0067-42b9-a335-661a089531aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8c18de-8ef7-42ff-9c66-6355878aaa32",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcfd035-7f7b-41b6-8112-91ed888fa632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a497ab82-fb8b-41e6-b004-55e395f964e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373a462f-9775-4b94-b851-a7712eee7738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a5fcaf-0f94-48f3-a2b9-3121f7e948f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d4167c-8027-45d6-9c83-3ca1b1e2026e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3289671a-f99f-47bf-b9f2-55a6f491c96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a184125-1f8a-4be0-b494-4770b5420a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a51d22b-58e8-40da-9957-1c33442c588b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769347d3-7dfe-4497-864d-34367dcea91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b82ab-463f-410d-9c76-3b250f1611b7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cf0406-d230-4460-af16-aa673de8bbaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63117b43-3789-4a0b-80d4-f195bb3f215e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f920a3f-adbd-45ff-9f49-5b0d4e384d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e69577c-bd21-4665-84fd-81bc05631f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac25848-0b72-4129-9f7b-154aba934d6f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255c5608-f0cb-4159-89d1-9b8e9456b68f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2867c689-df7d-4cdc-b0e6-da41089441b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9c615a-61ba-4559-9157-6bc3c857e251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcffbe8-4ece-406e-a95f-ce953834b189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da2a666-84a6-4ab5-b274-0abfb23895eb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b309792-27e2-4c35-8a44-20e56d7f108b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194b1505-7383-4072-93ee-96d2f17c8244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd401eb2-1e50-429c-b1ef-bb10acad52ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305879d2-b451-4c89-82fb-ced6809b6026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4bc52f-0a9f-4a9b-ae9b-ac430e6ec3d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052fda2c-2ef4-439d-9769-629dfc5d309e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d82366-e5e6-444d-b366-791721e87fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791376ef-c2f8-4a5b-8089-8e09e2a81acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43423afa-929a-4d1c-a002-fc1aa5613a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f337356-e6c5-47cb-89c1-76714f112edc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a715da-8426-42f5-ba8c-f9e725a483ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1be30ec-d141-49e3-86aa-79fbe93993c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df78988-b26f-4d63-afc0-eb97e25b9129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0ef8ce-4208-44c0-92e5-e545a813254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ac3e8e-da3a-44b2-9057-6e8136643e5a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb8205-d40e-4e81-b18a-d6b2a05e09ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cb613c-a2ce-4be7-9af1-61d0aa65860e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff5b709-5deb-46eb-89ba-ece69739c876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b66a85-2dd7-46b5-aaf7-b000142b9d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bb8387-d70c-4ed9-943e-30b63c9776d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bdaae4-85a5-4db7-999b-83fe31035b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b593b470-ece1-4d2f-a0e7-e97a97fb50a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11f78a2-1804-44ed-b8a5-8fb93f36174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246d99ff-31c2-4227-bbad-1a4184aa0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c0533-0ba3-4761-ab61-48a2d22de372",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca9ed20-3bc9-4d62-80c8-516c7160e6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633aed9b-0626-49a6-8a8e-e11e1680a7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f3d5ec-cde5-42b5-a43c-45cf2f362483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fa3276-73e2-4e79-9c45-65bfda4533ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7c4562-c95a-4bf4-aa65-8a9bcf34ee44",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cc5908-91df-4801-ab97-f966d05e0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227c91c0-6a47-40e1-bd0a-32bcf68e37af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3883f8d9-cceb-4476-b174-141c2bd3d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eadaa9a-0b51-412f-bd3d-03b132648052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60c145e-e028-4c63-810a-f499a1ad9019",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c47ab-a96c-40fa-a6f4-36b5644f2303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d52b2c7d-45da-4cee-81e3-7b816466a000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe996a9-d865-4c01-817e-ac92cfd5fb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9f8d70-357c-4c00-9e29-78ea38eb0530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dff690-0477-463d-add6-4f10b68e369c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f865ec71-e9a5-4779-8eba-4194a112c950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b45777-fccd-4531-ae9d-c52b4ee1960a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2072e-da7d-4c79-93dd-2dc0edd8bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed48939a-b974-4feb-8a35-daf5f365ded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6768866-c7bd-454c-b656-a7135315bbab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01b224b-f620-4e4d-89da-78b0baeb050f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f541c95f-a582-4d8f-b691-d0e63b115887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc96db1-000c-43f9-9064-18b46c5e49ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2dc675-acbe-4afe-b904-2a62d315ca93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44113997-c311-4215-ace7-b30447985b3d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc0eed-a595-4322-aacf-41fec4a1cb43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe43899-59d0-4f48-9b77-0b8e40130325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2b7251-5df1-49a0-854c-c3084da1e608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a10c11-6984-44a8-a567-4460047593a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93892ad6-9342-4f12-aa1c-28e66680e51f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d897750-76e0-462b-ac1c-3e48470fcd18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60cf21a-90c1-4ab3-a2af-1a2cdec64032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f74e089-67e8-4380-84cb-45f00738185c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b5ec1e-3609-4a23-a488-9208aac99ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861de280-8317-4cb7-af52-a1e1263c4eff",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df7ae0-b350-4c7f-b711-0c59f66eb839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fee9c00-53b6-4d6d-ad56-a56f21b5225b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0768dc1-d0d0-43db-90c3-09346fd04163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f65c75-1c3d-4c02-83c6-91984fe4a787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a1a431-ae62-4816-9ed0-1a77cae2c4dd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03ed239-5719-4ca8-8443-994de26d1695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1462fee5-1fd0-4816-9c73-eb67daa0f631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e26792-1fd1-41de-9dcd-effb911933d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0775d1-9447-4849-ac11-fe822ec53440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfb123d-a246-4318-96a5-9a9f897d01c5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8812ef64-f936-4887-9b18-07b6ed384098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b793f8-4d32-4058-adbd-15c610892877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804d827f-c825-4022-b1ee-cd1e23610783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48f9a3a-ce92-4c1c-aea3-5758688eac85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e42215-65b1-4a91-9016-d66e12cb58ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcec0eb3-b4ff-477f-ac50-bb75ecf6ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dce8277-cd37-401b-a0c6-798e1019ba2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881a3aa-b7e7-4f50-ac96-a147310e334f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398a70d2-d081-4861-a8cb-a5082d87a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5647a9dd-d13b-4049-96c8-bc973bac989f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46847d52-88e4-4cd5-9512-41f188ecbc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d49923-c1d5-41e5-b61f-cb8d2ec3770c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98346400-6923-439f-9c52-18aae49cacf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adf8dfe-0d10-4ba3-a78e-283694d76d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb3364-d09d-4fbe-8e2e-8efa72c1e325",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb3c487-bb94-4088-8d70-c3ffc221eda4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a95c2b6-7475-4dfe-b2c0-14800201f4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7d65b7-3824-4cd4-98b7-25b098c2ad21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1be16d0-b89d-4f41-b6bf-e6ac948d58c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdd65c6-3d02-499b-9e0e-04352c9fd523",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02dc507-8361-42c5-9dc9-4b24d3bc979d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9884c14e-e5a4-4094-af70-17094e5bf464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc256e78-7b94-436b-9b22-69eab9229dc1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab8abe9-9cfe-4c7b-a1f3-0564f72e09a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee4f87-d959-4fcb-82c1-6ad104dc5a8a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0161a2-034f-4b32-9c00-7e04898bdae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1b351a-c5a8-41b2-8e8d-ba9815704a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba9f76-5e13-4e3d-a89c-2eaad0537664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38212db9-04ec-4c3d-8779-474394caf907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbee1ea3-2dc0-422d-ac30-88bd2cecc0e3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab86b50-5e69-455c-bb64-d50764e3ba4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904d7238-69e4-4331-9078-92d5a816e630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099b6a3c-8ace-45f5-aa30-bfe96902d3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f88861-7698-4677-a672-6a380f115515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb943a88-d8c6-44bf-a3d7-e4aa856a1443",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc510dd6-a9c6-4674-ad27-db25a9394973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a39aa3-804a-4529-8a2c-9ecdbf43b905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f113bc-41d4-45a1-8ee1-56303b039340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4931ef-6fe5-41fe-85fd-b1a13acab4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db409054-2a5e-49d8-8750-567a1dc9151d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e5c5b-aa19-4535-9bfa-af20b94f10be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b1c947-a6ca-4321-bf98-36d65187d243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9157769-66db-4858-8f09-f321e4d229f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f7f751-a543-4b49-a824-8fc6c4571103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb786b8-8b70-4078-ae02-0b13779be831",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532cd5ba-453b-485d-aac4-5f97d6e8c404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c418a8e-5374-4c21-9019-5819921017fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6ce49b-6cac-4d37-a52a-85c99c5daa92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbf6ff4-b225-4c28-8f5d-2604c8ff17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0983914d-c6fa-4ade-8a4f-28a197c564b6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82723ff6-70e6-4b4f-a2b6-f1d5edea59a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29a4969-aaa9-49af-8923-754c02c46b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62cd3f2-7a0a-469d-ae03-2d1abbf112a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a7a7da-3202-4d0f-bf22-6973712ce270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5d07c4-afa7-4bc9-b04b-870fd7aaaab8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f0d610-4ab0-486a-99dc-c8968ad3803e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f82411-a13f-4864-83d9-52603a60c0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5739bf4-adbc-40eb-be12-1b9985b8cb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e5deb4-79ad-414c-bfd3-a27ecc1db050"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31861d94-5951-4f8e-89ae-428ed4dd82f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936327cc-6b61-460c-8a47-3547880c8055"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f12d3226-7e31-4bb3-b77e-517a3a682322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4abc16a1-d47a-4e05-93d0-ca531d5bdb30"
                    }
                  }
                ]
              },
              {
                "id": "158003ad-b227-4ebc-8915-d4aab189d9b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c5c63fc-78ea-47aa-8904-61eb7ac928c1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8176dc15-2229-4e17-8cc0-c1152724d998",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6f2f86ec-7b25-4c40-9633-33b8bf056373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebe84b3-2fb0-4a4d-a0fe-0c063951f3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "196baf2c-5127-4b97-9eec-8f62f1b18fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9e2d29-4d55-471d-8029-45229cca213f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c6b32-7c06-4e28-8bdc-0d88b8c5da18",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a1c6623c-3edf-4e35-99d6-21f308d8ac55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ebab4d-8e2e-495a-be94-c4e2e6677634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5edc6014-cad8-455c-9570-00b26d0fc852"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "943e73a0-4526-47a2-b1e3-ab196f736ba8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1cee8b9-c59d-42a7-b089-470c50a415d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1381a45-1f1d-4269-aec3-48445370b468",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a360106-a1eb-4be6-8281-977d294312d3"
                    }
                  }
                ]
              },
              {
                "id": "1308abc1-2993-4d33-b346-787b96790687",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "537a8fdb-7846-4157-8404-89745fa545e7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea27ce8-4075-42f7-9649-a6209d9634d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8b3e28b-0d66-43b7-9f5a-5a4ba168b79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6a3c02-a5e7-4d9e-9361-7b4e23c2fc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1e5acd-1cd6-4ef2-be7c-b684f3e65791"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "262467a2-40de-4bc6-a591-7b48d074ce0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0acc23d9-9dff-40bb-9779-570553f6c943",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15663a7-6485-40c6-8492-600a38290177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1fb20e77-65d1-42fe-8977-3b7024411561"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdf08933-0386-4478-ba8c-ab47babe8161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "095e0803-2f65-4462-a490-f7ffa3790934"
                    }
                  }
                ]
              },
              {
                "id": "f4b91572-fb28-4533-88bf-5f4a587e99f0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ce0685-223d-46de-ab13-233bfbae9cf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "576983d0-68e2-4804-a991-73c3c8e9c8f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1202ee3-2aac-49be-a14b-64421b3a0984",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecaebcca-9d74-4226-b6c5-dee9493d5338"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "527d337a-d48b-4621-b38b-1d8a6bbf826b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a7b4c647-ba3a-45c3-853f-a697897f60df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b58c96f1-5470-4264-9279-e636a00195d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cce325c-11fa-4f07-8a54-a2c3e8258ed9"
            }
          }
        ]
      },
      {
        "id": "822f3299-c723-470f-ac85-bda8be09d416",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9459da55-1dbc-4ada-a614-c18a702b7faf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25d153f4-8753-43b7-b9a4-a528b6b84b36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27917f55-1d9f-419e-b83c-9f7ec8d17af1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f143f9d-3884-46cb-831c-dea65bb627d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3806942d-7b8c-45c0-ac89-49593839e5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f26d43ca-7461-44bc-89f7-f971e9ffb0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe092947-b5cf-4a58-ab29-eefde2be5b59",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8421c809-46f8-4d32-bea8-b1887970d674",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb4b77c5-27ad-44b5-a7c2-a3e73b1ccd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c6eec0-ef7a-4912-8200-f183b6db4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d63c1a09-8859-48de-a1f5-fc8f5bd1acb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07e00003-4868-437f-acda-83786a0496de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81b79d54-d0ab-4176-98c1-997bde54a0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f47b7fce-4376-47fa-8831-d2e9927ece82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f05f1ccb-6aef-47b3-a869-0f8e9aa6f889"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0d4bc5b-b70a-4861-864f-e4eb5d5bffbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "14ade44c-af13-4ddf-8631-0e08b94e5806"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8f237e3-ed7f-46cf-91c3-520c36c4c967",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15bef2bd-3990-4385-8cf2-11fa9a6704a7"
            }
          }
        ]
      },
      {
        "id": "12501ed8-564b-4762-8f16-0cf48b8ad94d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eb4fe3ad-3089-4c20-bc28-3c5ff4b0ebc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "221c96c4-2742-4562-9fe7-f632f0502116",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80ac8ea4-59f8-470f-a783-395d70188403",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231ed3c6-272d-47cd-97b9-9f15b4a0c095",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "271be402-c613-442b-bcc3-caa7688939e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e35a62-4a6a-4ef1-8b29-792ba4f75d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62e370b9-4bc1-4ae9-b918-63a37d321d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee254fe-2c32-43a1-a2dc-ccfb456f83b1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6522c290-8245-4ea1-80ee-489fa6e9015d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30a2e015-0787-4ee8-acc8-09aa3b6e163f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651f7340-f000-4a8a-ac42-b26bb0422b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "520e1095-8ced-489d-8a05-cfa071779f75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7883f657-84fa-4935-8a66-2218af90e325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e7ffb63-7100-496f-9ca2-328c5cafb5db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e58451d9-e206-41b4-92c2-b1eeb252b430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cb0ca9f-f92f-4414-8c5a-c2509ab6c5e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3254c856-0e52-4ac1-b0e9-bffab6b4d74a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4f661973-d82e-44db-aedb-aee7cf136914"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20aa25e1-8563-41cd-bd27-689146e31fcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5458fdd-f4b6-4a4a-933c-922bbafcf23f"
            }
          }
        ]
      },
      {
        "id": "5bccdec3-7fae-4013-abd6-013b9963f6f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "185bd787-62c4-4ac0-b444-48191a344130",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84aefee1-941a-46ea-9f7c-c8617b2a7c9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae85381c-2402-4f59-a461-d1e5c7884c44",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30bbca9-544b-4e9f-98c2-ae40f9491251",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7158ca1c-3791-4a26-b7fc-25623ad7bfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c111365e-65eb-4cdf-a566-608a59ecc433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70caf59e-5bb0-4c6f-80fa-ff1c52f10a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe20a00-a2cc-43ac-8cba-45861a123c46",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee7ffd-d188-4604-a6bf-b85211904213",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4cd938a-292f-49bc-9dc9-d9a482884666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728afa3c-23a8-4357-b51c-90881cf83309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "609247ae-8913-4165-87c1-01f4e590c302"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40074301-c4d0-4c4d-a1c0-2eaa51f6d6cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63db3aba-f688-4759-bebf-9479121949e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc160e8-8d94-4a2c-a9d4-df6efa171ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e43a15c-89e5-4fdd-ae74-54d5bdee8a63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ad5da6a-7f56-4c98-8b94-d6f2bdf3421b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f4e78bd6-40c5-43fe-af0a-74c2f3f7f6a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38db17b7-9e65-4f00-ace6-52dc862f58d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa6cdec-af0f-41be-b7c4-f6f1f6503c2d"
            }
          }
        ]
      },
      {
        "id": "73280e7b-e773-491b-a7f8-b666a7602edb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c85337d4-561a-4141-b195-6349d7a417ca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d82f1e6-b499-4476-9def-30f84fd0160b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "982dfb9b-59be-4ad5-bbd0-021aaff5891b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "310a5a72-299f-4031-b665-7ea46c91bc01",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7da960c1-f08b-41f3-ae2b-8cd8776824c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 603.103053435114,
      "responseMin": 6,
      "responseMax": 9395,
      "responseSd": 840.3768062023672,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673915978645,
      "completed": 1673916147846
    },
    "executions": [
      {
        "id": "0c5faed7-2e89-48c3-a0b2-351fbec5a384",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6add32b8-9262-4b4b-9b97-ec045b70d56c",
          "httpRequestId": "bb571cc6-a8e6-488a-9e42-bdeb9dff9993"
        },
        "item": {
          "id": "0c5faed7-2e89-48c3-a0b2-351fbec5a384",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e065309b-22ee-485d-8038-0420ee179424",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "891fc465-e05a-4b50-95ee-91424db97fa0",
        "cursor": {
          "ref": "31ffa740-fae0-4674-9f11-7d7454de9b82",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9fdd0a65-e741-441c-8cc0-db6f0132ef6e"
        },
        "item": {
          "id": "891fc465-e05a-4b50-95ee-91424db97fa0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e159bcf9-4c6b-426b-9ac8-3a02d83f1444",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ebce8d14-156c-425b-84ca-859b6bc4ff62",
        "cursor": {
          "ref": "62c5d42b-ff71-432f-8d9b-73688b152935",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b6ce0a7a-c7d5-4318-b8a9-4ccf4ea73fa4"
        },
        "item": {
          "id": "ebce8d14-156c-425b-84ca-859b6bc4ff62",
          "name": "did_json"
        },
        "response": {
          "id": "bc11815c-37e4-459c-a695-2f775d9f2610",
          "status": "OK",
          "code": 200,
          "responseTime": 520,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5cac66-c6d4-4395-b3e9-bd7e73f85df3",
        "cursor": {
          "ref": "6a2da166-fc6f-4cbf-b4ef-1a567216a019",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b89d68a6-2e1f-4661-9ebf-f617e1395dee"
        },
        "item": {
          "id": "9d5cac66-c6d4-4395-b3e9-bd7e73f85df3",
          "name": "did:invalid"
        },
        "response": {
          "id": "c58c81bb-4269-4556-94eb-8d97fcf3c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5cac66-c6d4-4395-b3e9-bd7e73f85df3",
        "cursor": {
          "ref": "6a2da166-fc6f-4cbf-b4ef-1a567216a019",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b89d68a6-2e1f-4661-9ebf-f617e1395dee"
        },
        "item": {
          "id": "9d5cac66-c6d4-4395-b3e9-bd7e73f85df3",
          "name": "did:invalid"
        },
        "response": {
          "id": "c58c81bb-4269-4556-94eb-8d97fcf3c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34e3952-51ab-4670-b3be-98b5547d15c8",
        "cursor": {
          "ref": "ac1a8426-9429-4ba3-8f3f-9139878d1dd0",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f7360c93-9544-426e-b43c-135a6166c292"
        },
        "item": {
          "id": "d34e3952-51ab-4670-b3be-98b5547d15c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0bec6ed2-8777-4098-bb3d-180cc920befa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 586,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7d698d-68a2-47ab-a00d-0baecc7336ba",
        "cursor": {
          "ref": "fd2cf784-e42c-465a-b5e8-29e98a080639",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7c6e52fd-a3d3-48fa-b353-ff97ac0cb1e2"
        },
        "item": {
          "id": "8f7d698d-68a2-47ab-a00d-0baecc7336ba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fd60396f-3279-452a-801e-fc359fb4ce4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 519,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad3e942-f59e-4f55-ac57-8a3a1010f549",
        "cursor": {
          "ref": "84791770-ada9-448e-838e-9207faf0efa4",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8ade956-3183-4b05-8a06-a0982f034c25"
        },
        "item": {
          "id": "0ad3e942-f59e-4f55-ac57-8a3a1010f549",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ef38b53c-a71c-4bf5-ae98-fcd90da0693a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09749496-8bd7-4600-a311-ff6aa8c76670",
        "cursor": {
          "ref": "0c7ebb9f-de53-4416-941c-5c86b59bc420",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9bae3ad1-8527-4c6a-a5a6-83426e6a6a98"
        },
        "item": {
          "id": "09749496-8bd7-4600-a311-ff6aa8c76670",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ed773991-727d-4645-84f3-15dca5be3ec9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09749496-8bd7-4600-a311-ff6aa8c76670",
        "cursor": {
          "ref": "0c7ebb9f-de53-4416-941c-5c86b59bc420",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9bae3ad1-8527-4c6a-a5a6-83426e6a6a98"
        },
        "item": {
          "id": "09749496-8bd7-4600-a311-ff6aa8c76670",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ed773991-727d-4645-84f3-15dca5be3ec9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b816dc-c257-4d4e-a35e-a25a44642f2c",
        "cursor": {
          "ref": "04daf4af-c6e3-4364-bb32-b4ea1fdc9b04",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68c1f7e9-2bfe-4aa6-895f-499c2d456eba"
        },
        "item": {
          "id": "66b816dc-c257-4d4e-a35e-a25a44642f2c",
          "name": "identifiers"
        },
        "response": {
          "id": "bebd0d0c-28b9-4fb1-87c9-84d1959013b1",
          "status": "OK",
          "code": 200,
          "responseTime": 890,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2d51df-bdd1-4bf7-b172-8cc87f38e7ca",
        "cursor": {
          "ref": "0c6dd2af-5d78-412b-bcf2-d8c1e89422d2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f5c00ac-4e04-4683-a4a5-355e5ec8f98b"
        },
        "item": {
          "id": "9f2d51df-bdd1-4bf7-b172-8cc87f38e7ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e05977aa-83eb-40ac-8301-8e4a127501e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2d51df-bdd1-4bf7-b172-8cc87f38e7ca",
        "cursor": {
          "ref": "0c6dd2af-5d78-412b-bcf2-d8c1e89422d2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f5c00ac-4e04-4683-a4a5-355e5ec8f98b"
        },
        "item": {
          "id": "9f2d51df-bdd1-4bf7-b172-8cc87f38e7ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e05977aa-83eb-40ac-8301-8e4a127501e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3bfd6b-3b3d-44e0-beab-3f49b6960421",
        "cursor": {
          "ref": "6a86ff0d-173e-4f0d-8ae0-5bf96e7a00b7",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4aaf3007-08f1-4569-ab16-742dd3685bc5"
        },
        "item": {
          "id": "9b3bfd6b-3b3d-44e0-beab-3f49b6960421",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5ce643dc-76a5-4fe6-8358-c16787e439b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fac9883-5445-46cb-8313-70e6e47fed82",
        "cursor": {
          "ref": "685e3f4c-ea48-4540-b311-45bda2f4c117",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e61b1b95-cdb5-4ef8-886d-e62fbb8cb537"
        },
        "item": {
          "id": "5fac9883-5445-46cb-8313-70e6e47fed82",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "7f0dc248-601c-4911-818c-e6ecf2a89df2",
          "status": "Created",
          "code": 201,
          "responseTime": 2523,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "9a1580ba-7dda-43fe-b947-4ac65388ac35",
        "cursor": {
          "ref": "90772f65-9792-4234-8945-b650790b769a",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c43166c4-4db5-4cb0-bbb7-1fd16dd6e91f"
        },
        "item": {
          "id": "9a1580ba-7dda-43fe-b947-4ac65388ac35",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b6c77f1f-c7cc-455a-8ec7-4a11378a5d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6ef846-5877-468d-8d90-ea543521dbf7",
        "cursor": {
          "ref": "3466ab93-35f2-458e-9cf2-7cf18e61a985",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8ca1f94-36dc-4b42-bad1-e8fffb8b476e"
        },
        "item": {
          "id": "ef6ef846-5877-468d-8d90-ea543521dbf7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8e9e02fa-053e-4dc0-8c14-551158c59f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b728282-9a54-447e-9e4e-c2814fce458f",
        "cursor": {
          "ref": "654a01b8-f439-4f17-93e0-4b8db8e4e5c0",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f63a9666-83d2-4b74-963c-cf04a3e25cec"
        },
        "item": {
          "id": "0b728282-9a54-447e-9e4e-c2814fce458f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3bca0534-5e79-4a27-abb0-89608e6d2573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee3c181-7c2f-48e5-b9d8-c26a0fd9d752",
        "cursor": {
          "ref": "8b69c3a9-c387-4405-bf42-d3284b9950d1",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "02f9fbe8-45b3-49cd-856a-383ae63dad38"
        },
        "item": {
          "id": "4ee3c181-7c2f-48e5-b9d8-c26a0fd9d752",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "166a46ad-ed7e-4a79-bc68-96ebf95eb603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ebbf97-4a76-429f-86b0-f2a99a3ee881",
        "cursor": {
          "ref": "3bdd141a-6898-4547-8a01-c0e0c1208e57",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7c0ae099-ad7b-49c2-aa40-0c45be2d403e"
        },
        "item": {
          "id": "10ebbf97-4a76-429f-86b0-f2a99a3ee881",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7fd2a81e-b5d4-40a1-aecd-5c77369632c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a8532f-f846-4fe1-af32-4a51539aeb68",
        "cursor": {
          "ref": "8b4a1055-d3b4-4b81-97b1-cccb0f4a1365",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca2c903c-947d-4072-8dd6-0a18ef346d0f"
        },
        "item": {
          "id": "b8a8532f-f846-4fe1-af32-4a51539aeb68",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e636f85a-2791-4737-a955-a8766773085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3142b498-01ee-4a42-bba0-0a9fccbc897f",
        "cursor": {
          "ref": "e873f610-06d5-4237-b91f-8027511418e1",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f53f4b26-f604-4224-bef6-f44cf2609cac"
        },
        "item": {
          "id": "3142b498-01ee-4a42-bba0-0a9fccbc897f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "059cedb0-8f6e-4d7f-8297-c06f1dc397aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd97c69-d3b5-48d0-afcb-67845d3a95b9",
        "cursor": {
          "ref": "515b12ba-dbc8-435a-908b-a242b4f22260",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c099a4b8-9a21-4133-b799-3621cfde55cf"
        },
        "item": {
          "id": "8bd97c69-d3b5-48d0-afcb-67845d3a95b9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e284401a-2bf9-451e-a1ee-c0a6cc6c6497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8881da-52e9-4e04-8df3-4231a09cd95d",
        "cursor": {
          "ref": "1b39c832-888c-4b44-9f34-0d4d08c04369",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "499c0cde-9f38-449c-9810-1907a41a075f"
        },
        "item": {
          "id": "5e8881da-52e9-4e04-8df3-4231a09cd95d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "90725eb7-df13-4053-9ed5-9117c60965c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd836af0-bca6-490b-81cc-2ed82da9fa42",
        "cursor": {
          "ref": "2d5bf748-0fa9-439c-813c-accbec812867",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b38903f-9f6a-4b56-9828-eb18cd43938f"
        },
        "item": {
          "id": "dd836af0-bca6-490b-81cc-2ed82da9fa42",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aad61167-00d3-46b4-9bd1-4dbb93690ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48540da4-3268-4a1a-a589-d3cdc35b8689",
        "cursor": {
          "ref": "03fddc16-1e6f-44cb-bcc9-63dbee054f48",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5526fec8-fe7a-44df-a69a-4a70645ffe9f"
        },
        "item": {
          "id": "48540da4-3268-4a1a-a589-d3cdc35b8689",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "6727d103-ca54-41d4-a01e-fb0a3c3bf938",
          "status": "Created",
          "code": 201,
          "responseTime": 6633,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "2c50dc03-6e23-4886-8288-ca674d4795f5",
        "cursor": {
          "ref": "4888f790-4ad0-468a-ac21-1ba93fc6cea8",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a23d2c7-7496-4a98-b604-2d44bb71aafd"
        },
        "item": {
          "id": "2c50dc03-6e23-4886-8288-ca674d4795f5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "56c931dc-5f92-47b9-b3c7-3788d608bf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1190,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f19350-8447-4a06-b427-a8eb871085f0",
        "cursor": {
          "ref": "92791694-8761-402c-a476-30ed85619ff0",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "51265273-23b2-4727-a6c0-fc3661fb4159"
        },
        "item": {
          "id": "95f19350-8447-4a06-b427-a8eb871085f0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a84ebc92-a10a-44cf-9ab1-b27f3e4ac031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb82bfc-7499-4c8c-9584-256c2b563acd",
        "cursor": {
          "ref": "537bfa10-bc91-459a-a9da-ff82ccebc047",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f317277-43a7-416d-9738-e14916b9e79b"
        },
        "item": {
          "id": "dbb82bfc-7499-4c8c-9584-256c2b563acd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ba9ce3f5-e475-487c-b008-66d01e9a12a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34d7775-a322-43ce-a1ed-c41e2bb3df08",
        "cursor": {
          "ref": "b2b1a690-97c0-4e07-b79d-3991120a86ac",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e106da45-a16e-4511-8362-d4a1bdf9ff57"
        },
        "item": {
          "id": "d34d7775-a322-43ce-a1ed-c41e2bb3df08",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03a4af90-e9e0-4019-8171-dd594f87c5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30a6804-7607-47f3-9876-61c58fe52b6d",
        "cursor": {
          "ref": "fa593a54-dbc3-496b-87ed-f605e86e54a9",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ae2d9997-f3fb-4d67-a270-6e87254dd78b"
        },
        "item": {
          "id": "b30a6804-7607-47f3-9876-61c58fe52b6d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b88de8ed-f5aa-439c-9b19-d7b902fab12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33af0f5-cc44-403f-8786-05aeda6a2312",
        "cursor": {
          "ref": "55342205-cbfc-427b-88b9-ec0072308873",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bb4eec68-e1f2-4790-8b14-dda93b2a0e3c"
        },
        "item": {
          "id": "c33af0f5-cc44-403f-8786-05aeda6a2312",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ae45a9b2-768a-444d-b19f-2ba684e53def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb86640-fe10-4c37-bc1d-7fe1702593ba",
        "cursor": {
          "ref": "147df4b1-92c4-4ed9-95ce-afc8fd310176",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a85c5b9-860e-42d3-9fb5-5a9f09dcb855"
        },
        "item": {
          "id": "5bb86640-fe10-4c37-bc1d-7fe1702593ba",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a9fd67f5-1699-42d1-a338-3d82725ad875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3d340c-559a-431b-9df6-055f150d7814",
        "cursor": {
          "ref": "305f530e-c087-4a65-92d2-3ed0f7c56d15",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6d2f1daf-7379-4cad-bbdb-29779939309d"
        },
        "item": {
          "id": "5a3d340c-559a-431b-9df6-055f150d7814",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f445edb2-3d26-496b-af95-86778e0cd478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1134,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f29306-3047-4529-b449-a00840ec88c4",
        "cursor": {
          "ref": "40ce0f37-24a9-44ec-9e4a-496a92cfe908",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c924210f-3e87-40d4-bcd5-a4923b461388"
        },
        "item": {
          "id": "84f29306-3047-4529-b449-a00840ec88c4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e6a201e-5004-460c-ae07-49abaff3d2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11076340-f25c-4fd5-b18e-0dd7053c67a0",
        "cursor": {
          "ref": "b59102ac-e133-4015-a79c-1e58e5be8f3c",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "755b92b2-1f39-4461-9e79-46d7859c39db"
        },
        "item": {
          "id": "11076340-f25c-4fd5-b18e-0dd7053c67a0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5e7bd4e1-4b08-4b5f-a46b-195c941c2cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5feb97-0718-45db-9d95-149e8912f0f0",
        "cursor": {
          "ref": "1200d294-1e5f-4646-acf0-938fdc08003c",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91ef400f-2c8b-4959-906b-98ad94ff4d6e"
        },
        "item": {
          "id": "bf5feb97-0718-45db-9d95-149e8912f0f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d51471e-62d2-432f-bf95-e412e183c398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0c921c-6503-4672-a7b3-4d6119ce8c3a",
        "cursor": {
          "ref": "592604f6-4502-487a-ae7e-e1215b302e9b",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab08315b-a322-45dd-95e1-d95e0679cda8"
        },
        "item": {
          "id": "4b0c921c-6503-4672-a7b3-4d6119ce8c3a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ee30ad8f-0613-412e-b064-f2e1d9eaef07",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2043,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "f0e3c27b-1f55-4872-bc35-328e4edfd22c",
        "cursor": {
          "ref": "b970d67a-e262-4fba-baf2-a48fff3554cc",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "458beede-334b-4a27-b50e-7ee9cf25a225"
        },
        "item": {
          "id": "f0e3c27b-1f55-4872-bc35-328e4edfd22c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6a060fd6-816f-43cd-bf8f-29293aae1683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee8886d-b671-49eb-8bb4-c33811a491b5",
        "cursor": {
          "ref": "1accd70b-bcba-4bb1-bb17-df4554194207",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d77e1ece-4cc7-4b50-bfa4-7d4c9794d64e"
        },
        "item": {
          "id": "3ee8886d-b671-49eb-8bb4-c33811a491b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ce39eb3d-1d50-4402-9368-1bd422b78ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27762f5-4cad-4b79-b4f3-7b9c930e00e2",
        "cursor": {
          "ref": "10eb291d-3ec1-4743-8814-a624fe20ed20",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d8043d9-edc1-47d0-8940-3c6c95bab30f"
        },
        "item": {
          "id": "d27762f5-4cad-4b79-b4f3-7b9c930e00e2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d636603-4bd9-46a1-82cc-78215629a349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0516031a-347b-46bc-ba06-fe8f62f9c415",
        "cursor": {
          "ref": "2ce7ecc1-9dfe-4225-9f71-44572fc6531e",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "31d95bd3-9e7b-48ff-9d02-876b1ff77290"
        },
        "item": {
          "id": "0516031a-347b-46bc-ba06-fe8f62f9c415",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5c382888-2f59-45b6-8c56-083eddfc205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf97be0-a3dc-423c-b23f-a9d94d401b71",
        "cursor": {
          "ref": "96b3af2c-288f-4b71-961b-d1545561161d",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eaf9f2d1-aa97-4e0a-8dea-5b332ce51e2e"
        },
        "item": {
          "id": "7bf97be0-a3dc-423c-b23f-a9d94d401b71",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d982d425-363d-4114-888d-04ba09e9c7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2b4de5-d3d6-47c0-9e2f-3407c76674d5",
        "cursor": {
          "ref": "27fc57be-32d9-4d2f-91bd-eaef5e764319",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29da22d2-6ae9-4747-baac-a951e2ff3a8b"
        },
        "item": {
          "id": "1a2b4de5-d3d6-47c0-9e2f-3407c76674d5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "961c4159-11a6-4bbf-af91-4210aa950c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad504738-7ffe-4582-8060-1f8ecf251a80",
        "cursor": {
          "ref": "5104b181-284e-4689-8f80-515a00aebd62",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "43205fba-216b-4740-8ba9-eab1d63fa916"
        },
        "item": {
          "id": "ad504738-7ffe-4582-8060-1f8ecf251a80",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a70af31f-133c-4a19-bc1b-60d9266a7289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3991f34-c06b-4c98-a53e-4c086c81ece6",
        "cursor": {
          "ref": "0a4b3901-ad73-4419-ab4a-40f36710e081",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "60e3bc24-6dcd-405b-b9a8-62ab1699609c"
        },
        "item": {
          "id": "c3991f34-c06b-4c98-a53e-4c086c81ece6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e22c4c7-86e4-487c-8fe0-9265e6ff6b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94711009-670f-41f7-bb3b-6186fe43d129",
        "cursor": {
          "ref": "95468236-9566-4754-b0d9-f79e2c959811",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ba45eb4f-5f91-4274-ac2d-54ec4b0f0e9e"
        },
        "item": {
          "id": "94711009-670f-41f7-bb3b-6186fe43d129",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5837de0b-26e0-4c06-9914-dee12a5ae846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ebc8b9-cc5b-4ac5-ac54-73519ed04570",
        "cursor": {
          "ref": "db9814cd-c9e5-4d2b-9c2a-45670e7f0d95",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f30187d-5466-476f-8757-7c6653fd11c9"
        },
        "item": {
          "id": "87ebc8b9-cc5b-4ac5-ac54-73519ed04570",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ae0fc6c-e7bd-4c35-acee-918a0c73e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1e7a28-375e-457b-8835-460b8133adc3",
        "cursor": {
          "ref": "82584fef-a6fb-485f-bb12-541dfa87a301",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6ecdfd2b-f74b-40eb-a3b8-5344aa01b2c2"
        },
        "item": {
          "id": "6d1e7a28-375e-457b-8835-460b8133adc3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ed9de0aa-44f9-45d6-8eb6-9eb9a07ac322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751ff905-426e-4828-8869-e85788de78ce",
        "cursor": {
          "ref": "cd5e805c-a2df-4905-a451-5bdee2829879",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "16339be9-85b8-4cde-9899-b54e296b543e"
        },
        "item": {
          "id": "751ff905-426e-4828-8869-e85788de78ce",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "256df61f-9531-4732-b48b-62c29ffce0a8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 563,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf54def-bcc3-4af8-9419-5df0c95f4afb",
        "cursor": {
          "ref": "465fa124-48a5-44cb-8347-93b83093004c",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0355a299-8c56-46ad-ab1f-358e988ee25f"
        },
        "item": {
          "id": "caf54def-bcc3-4af8-9419-5df0c95f4afb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "30f18e0e-84e6-4193-9c7e-718434d45c29",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 504,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "a9d481da-e7a4-4da6-9203-87f7b3e3e5d4",
        "cursor": {
          "ref": "5c8859c8-76f6-4b3f-967b-c040be704be2",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8ad756f8-117a-44db-b637-5df29a076100"
        },
        "item": {
          "id": "a9d481da-e7a4-4da6-9203-87f7b3e3e5d4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d7f18c30-d674-4f79-9fe4-24d7c0a6c1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b71de-c596-44f6-8ff5-326927d42775",
        "cursor": {
          "ref": "2f2e7f03-b652-40cd-a05c-b09d045b5490",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8a079585-f7db-4264-bf06-9e039eefbe1d"
        },
        "item": {
          "id": "fd6b71de-c596-44f6-8ff5-326927d42775",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e0635cce-a899-46f1-b60e-ac1066e4fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f5be5-5f77-4592-9ab1-c6f38906c44b",
        "cursor": {
          "ref": "f0b83eb7-d7b5-476b-8425-44976f9ba250",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f318fc1-ee8c-4c5f-b126-17e05d5a063c"
        },
        "item": {
          "id": "6e6f5be5-5f77-4592-9ab1-c6f38906c44b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "846a0548-1201-4d02-885f-f08bd02e0aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf241eb1-9db0-46b1-acb9-1d59e93fba01",
        "cursor": {
          "ref": "817df8ab-acad-470d-844c-7ac36c5df03c",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2765dd93-cf50-4a97-990a-4daa08ea2cf0"
        },
        "item": {
          "id": "cf241eb1-9db0-46b1-acb9-1d59e93fba01",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c8d2ed3b-2040-40bb-a891-de29a4631251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2b7e88-f54f-41fb-8195-f7a0b9003e84",
        "cursor": {
          "ref": "006f60be-d14d-47d1-8ce7-d10d4611fb06",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a56df22d-4630-4f68-82b1-c9ab7fef0c73"
        },
        "item": {
          "id": "3a2b7e88-f54f-41fb-8195-f7a0b9003e84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "08335940-58ab-4f3e-b762-f038a89cabc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204a1e8c-b226-4a80-8e35-c572652aa0dd",
        "cursor": {
          "ref": "8cdd7634-59df-466f-8bf2-d2129660549c",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "698a1045-89de-497f-9e98-e4b40f5dc349"
        },
        "item": {
          "id": "204a1e8c-b226-4a80-8e35-c572652aa0dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e35fa2e9-5134-4001-80d4-e30906e0f843",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 551,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71753ce9-adb6-479f-9027-0c77c9389148",
        "cursor": {
          "ref": "7b745247-fee9-48f2-a315-53eb2bffcc75",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "698835d8-f951-4275-8366-4a38c9f679ab"
        },
        "item": {
          "id": "71753ce9-adb6-479f-9027-0c77c9389148",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ea328f18-f63c-4191-8ae7-5d5da7f3879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8ec96-3eae-49c3-8063-5fe730cf96c1",
        "cursor": {
          "ref": "1dd42013-6222-4521-a1e4-2fa987396790",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "63b040ae-65a4-4130-a2f2-a1f4c30c8c55"
        },
        "item": {
          "id": "66c8ec96-3eae-49c3-8063-5fe730cf96c1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7386397c-58d0-4e11-8079-8c445a903448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887bd811-00a2-40b2-bc05-f4159d529ad1",
        "cursor": {
          "ref": "798b9418-ac50-4fa1-90e3-a4c0d8e42aa7",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "25f6919c-1f63-4f1e-84ea-a117ddaf8835"
        },
        "item": {
          "id": "887bd811-00a2-40b2-bc05-f4159d529ad1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37d39539-1858-4397-bace-bbf96daf5ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bc5227-8c2f-44a7-9ee1-38d7ef922cc3",
        "cursor": {
          "ref": "27d1be4d-fe4f-41f5-8d92-df3c43100cf1",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "10d90830-9d1a-4b55-95a2-fb050e01ab24"
        },
        "item": {
          "id": "16bc5227-8c2f-44a7-9ee1-38d7ef922cc3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ae797083-4628-432d-8de5-26a740dde1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8416ff0-2ab1-40e4-8b15-3b1a11ef8ee1",
        "cursor": {
          "ref": "c21853c1-7ea3-4530-8aeb-3ec4fb4fc996",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "03dcace6-e316-4a78-bc9c-07c100bf3095"
        },
        "item": {
          "id": "d8416ff0-2ab1-40e4-8b15-3b1a11ef8ee1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc6b2421-b9d9-4bd6-9a9f-0cca36c2bd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae692551-35ad-498c-b664-a0f7dbd92371",
        "cursor": {
          "ref": "fac90b15-f1f0-48e1-8b74-54e7e0cd36e3",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d54c9ee0-fa98-4b02-bdf4-93af74db696a"
        },
        "item": {
          "id": "ae692551-35ad-498c-b664-a0f7dbd92371",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5afbb919-dc6f-4eb8-8962-547c14f05f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3739cbc-3b53-462f-b5ff-021326a2280f",
        "cursor": {
          "ref": "ce7d6dbb-a3af-488f-b7f6-c313b3737bd6",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "100be9a2-0740-42d6-9f3a-72a89332d01f"
        },
        "item": {
          "id": "e3739cbc-3b53-462f-b5ff-021326a2280f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ab6cd811-25ac-4866-aad8-b6c8dbffe0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bd90d2-1ac2-4b99-a077-54d5fa8b736e",
        "cursor": {
          "ref": "e5688fc7-1aca-4fa3-9b49-03726186fd87",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b61c2225-db62-4322-92da-c94f8108964d"
        },
        "item": {
          "id": "d3bd90d2-1ac2-4b99-a077-54d5fa8b736e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "795f4038-f19a-4f88-98ae-95c26a1f8b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f158e0a5-e397-4ac0-ad39-af0aa27b829c",
        "cursor": {
          "ref": "bccf2086-bb97-4e2d-9e88-e4a1a2da629a",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "89ac89ad-312e-49c4-b3b9-559e9c9df012"
        },
        "item": {
          "id": "f158e0a5-e397-4ac0-ad39-af0aa27b829c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b023a479-00d1-4b06-b9dc-29a84aa480d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7476f800-bbc0-40ed-9ba3-906abd3eb78d",
        "cursor": {
          "ref": "df19dcfc-4a51-4e84-ad8f-f2010a2c8bd0",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bcabd738-fc55-427d-9716-a12acfc5bbe3"
        },
        "item": {
          "id": "7476f800-bbc0-40ed-9ba3-906abd3eb78d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9d477dc3-01fc-466e-bf49-d9238336a250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ade1c84-5bd2-4b43-b5dc-caaf02ea50cf",
        "cursor": {
          "ref": "849b2f39-b67d-40c3-85ee-499b80669f94",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d77428ba-39d5-4732-9514-557dd5b65226"
        },
        "item": {
          "id": "3ade1c84-5bd2-4b43-b5dc-caaf02ea50cf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ded489b0-441d-4c6d-9fa5-6ded9cbd9d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f0884d-cfd8-43a7-8ba3-9a5c51fff93e",
        "cursor": {
          "ref": "5e63c8ee-cd75-4771-bcd7-0687ec1b9cc2",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "782a5d33-dab8-4c91-b50f-6ceafc99c8db"
        },
        "item": {
          "id": "d6f0884d-cfd8-43a7-8ba3-9a5c51fff93e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4caf5681-2d99-4757-86ac-ce528808ed04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254db713-893e-4bdf-91ea-40703237a399",
        "cursor": {
          "ref": "0dff6ada-989f-45ce-a7ee-391d2efe885a",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f66bc9f0-50df-4716-a22b-c4f3059b1ec0"
        },
        "item": {
          "id": "254db713-893e-4bdf-91ea-40703237a399",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a8a8849f-749d-411e-a2a2-0405393119e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22de8d6-732d-4f80-a2b4-be674341a4d7",
        "cursor": {
          "ref": "11a7c416-f21a-414f-9c52-be7b82a8d27a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "add2980a-e40d-4b57-b2ca-b709e2c1bd57"
        },
        "item": {
          "id": "c22de8d6-732d-4f80-a2b4-be674341a4d7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "328b3104-93aa-490a-9d69-ccded8219e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecc506-a789-48ca-a9b4-1c665cacfa42",
        "cursor": {
          "ref": "2f3d287f-88fc-433c-8819-9db951b56405",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b86a3481-7d7c-4bf7-a856-9bdfabb05e31"
        },
        "item": {
          "id": "cfecc506-a789-48ca-a9b4-1c665cacfa42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f43e5cbf-5446-45e1-91e3-23aeb601abf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65991596-738b-4965-83ee-9971bd503989",
        "cursor": {
          "ref": "2baf9f36-ac48-4dfe-8e22-acfe80687212",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "77d0c71d-dec3-4d21-96b7-64a763ca6f9b"
        },
        "item": {
          "id": "65991596-738b-4965-83ee-9971bd503989",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4318d10f-7d23-4acf-b804-f959363a7354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7e0b2c-f731-48e1-b91c-49cf621bb854",
        "cursor": {
          "ref": "5157e44a-656b-4494-b9de-da36beaaf90e",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50924775-959c-4fc4-b4dc-3f9aadfc975a"
        },
        "item": {
          "id": "db7e0b2c-f731-48e1-b91c-49cf621bb854",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "06f2c93b-7e44-4298-8b1e-5311bbda0a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81ae25f-81b4-486d-a7ea-5f8d41801f60",
        "cursor": {
          "ref": "c7fa6ef0-0764-403c-a9fd-b2f6d07221c8",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd0cbf0d-fc2b-4701-aa54-332d596e374e"
        },
        "item": {
          "id": "d81ae25f-81b4-486d-a7ea-5f8d41801f60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a722c156-359b-4c86-9d9c-ff25a448750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ba440c-ca4e-406f-bef1-e5ce76ac5463",
        "cursor": {
          "ref": "4ff60894-9dee-4d04-bbe7-06f7f1ab20db",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c5d245e-60f3-4835-a0b5-36334cb53db0"
        },
        "item": {
          "id": "22ba440c-ca4e-406f-bef1-e5ce76ac5463",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c72151f6-a2a9-4bcd-9b73-1359acffdd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745cfedc-edf0-4c24-90d5-daf9812b6fc9",
        "cursor": {
          "ref": "860f40da-c02c-4353-ae18-46e877ca2c7b",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bda1e01c-840b-4ec7-af9d-50d238a27c0d"
        },
        "item": {
          "id": "745cfedc-edf0-4c24-90d5-daf9812b6fc9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b05e1f1-c712-458e-803b-4a145e5c9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713461aa-0514-4df2-803d-69ed03187ef4",
        "cursor": {
          "ref": "d2f43fe7-956c-48f2-9309-1767b5aae2e2",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6dfb85c5-1924-4672-bb54-0af00f22d37d"
        },
        "item": {
          "id": "713461aa-0514-4df2-803d-69ed03187ef4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "100a8025-6bd9-4465-a036-f5b26ecc3cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e348772-d50e-4a57-ba1e-f8111d7dc710",
        "cursor": {
          "ref": "547daf4a-07db-4eb4-ab8f-4d61a0bf3216",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a2fc09ac-1d4a-4814-8ff2-83c1c4115c99"
        },
        "item": {
          "id": "5e348772-d50e-4a57-ba1e-f8111d7dc710",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "223cef8f-68a6-4666-917e-338f897e9efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957bb14a-cb6d-4e12-8165-772b2cdb37fe",
        "cursor": {
          "ref": "ee095e77-1ae7-433e-930c-d1499cb6887c",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e6af0df3-f811-4077-9025-933b01e3a6c2"
        },
        "item": {
          "id": "957bb14a-cb6d-4e12-8165-772b2cdb37fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7e316510-bf43-4583-8019-46f57ef1e377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf811b0-c3b7-43ea-92a0-0bc3330c213a",
        "cursor": {
          "ref": "170e6db4-b460-4c00-935b-84ccba18cd1e",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77205ab0-6869-4a86-a478-91566c70973c"
        },
        "item": {
          "id": "1cf811b0-c3b7-43ea-92a0-0bc3330c213a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cfafb785-f90b-462d-9011-31555c8dc402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016b8c23-71b3-4aba-8125-a8dd6bbfe5d0",
        "cursor": {
          "ref": "f91f5486-bd36-4b33-88a8-8e5b4d56ab35",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9e30661b-8c84-42e7-9212-564d262bc083"
        },
        "item": {
          "id": "016b8c23-71b3-4aba-8125-a8dd6bbfe5d0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9aa500cd-f67b-4815-8254-1de1ec5c7c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd74369-d190-49f6-a760-41fa3de48874",
        "cursor": {
          "ref": "2ca3cd4d-a659-4103-83c6-c115781d787a",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cb329fe7-b60e-4663-b021-94837a8c18c0"
        },
        "item": {
          "id": "7fd74369-d190-49f6-a760-41fa3de48874",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d09d024-b0a6-49f2-b4eb-26aad64d9fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e8c23e-931a-4767-aacd-005d88cff6b7",
        "cursor": {
          "ref": "7e51c92b-2efb-443b-9e6d-49223800773a",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f5d6b6b4-dd47-4a78-acf1-aafd1f95219d"
        },
        "item": {
          "id": "06e8c23e-931a-4767-aacd-005d88cff6b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6f19794c-2a76-4bef-88d6-8b0cb2d9010c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952f39f-0941-4fde-aa22-d1c21793c56a",
        "cursor": {
          "ref": "47b5394d-9074-498f-91a7-3709c5a2b7c8",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "db8fe868-a20e-48d0-b5da-2f9ec8be3550"
        },
        "item": {
          "id": "c952f39f-0941-4fde-aa22-d1c21793c56a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9472d989-13d5-4e45-9d97-fbb47e3db0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1764b-c8d1-449d-bb86-f419e81b6ca4",
        "cursor": {
          "ref": "04239984-1564-4da8-be46-93700f257b6e",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6839a7ce-e0c1-4f72-a88f-4b51fe402944"
        },
        "item": {
          "id": "8ba1764b-c8d1-449d-bb86-f419e81b6ca4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e4c4012b-3b57-4e6d-a788-011993053731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd840e9-7213-4e44-a678-f42f58fd77e7",
        "cursor": {
          "ref": "6d35da33-42ce-4ad9-85d7-3875f84980e1",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dffb8d87-5190-4890-9c57-b10506927e4e"
        },
        "item": {
          "id": "ccd840e9-7213-4e44-a678-f42f58fd77e7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9633f407-3046-46a8-a330-1efadec0f748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb80206-884b-4a04-b842-b179325b58f2",
        "cursor": {
          "ref": "b55e3adf-2922-46f9-b977-5382a14be8d7",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "418bcdec-45af-49a5-a0f0-2043eeac12db"
        },
        "item": {
          "id": "2fb80206-884b-4a04-b842-b179325b58f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "acc61eb1-beb7-4641-8a7d-4ec5c49a3208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ea2eca-17a0-4559-b39e-48b4c9f8de19",
        "cursor": {
          "ref": "1f5d541c-a731-42e1-9b09-37b34f05e6f4",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "86cd207c-9e9d-4ae3-a4b4-9ba80397eea8"
        },
        "item": {
          "id": "c8ea2eca-17a0-4559-b39e-48b4c9f8de19",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "352ac72f-e529-4110-b282-f8f034835f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb6b1b1-3d78-435d-bc67-82b3b8c96c8d",
        "cursor": {
          "ref": "35e1b674-51d3-4225-83ff-a3fe8b8a17af",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c3a5c33f-1539-43be-8448-5a2296a955ab"
        },
        "item": {
          "id": "adb6b1b1-3d78-435d-bc67-82b3b8c96c8d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "48adbdd2-7ec6-40c5-a621-36a56750c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9a5eb2-56e2-44d0-8b2c-f222b7c2677c",
        "cursor": {
          "ref": "7cbcdd61-593b-4f79-9670-9964290ed247",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e0a349da-f620-4b67-b5ae-232f31856a9c"
        },
        "item": {
          "id": "5a9a5eb2-56e2-44d0-8b2c-f222b7c2677c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e25878a6-c7d6-43dc-a46a-9488b6fb91bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07b22b5-3095-4c13-8158-db29dd07d932",
        "cursor": {
          "ref": "743e44f1-326c-4315-bbc7-594e814c8cfa",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e4d14251-ff76-4b0e-84d9-f010490edadf"
        },
        "item": {
          "id": "a07b22b5-3095-4c13-8158-db29dd07d932",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "74489396-025a-4c3a-9425-f6d2b68dbaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22858d0-89f6-4dc2-ac05-6d90ded49a04",
        "cursor": {
          "ref": "16cdbe45-63b0-4d62-8a05-2b7f11938f81",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d984aa0e-db0e-4495-8402-44d59ec43117"
        },
        "item": {
          "id": "f22858d0-89f6-4dc2-ac05-6d90ded49a04",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c990c2bc-3e3d-4aea-a029-6f7ed8bd29c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb12a397-a01f-407b-894b-d77b0cfbf964",
        "cursor": {
          "ref": "4c643105-cc98-4b6a-825f-ea73e6a3a152",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5247ca27-c384-4de9-86d7-5ee10fceccc5"
        },
        "item": {
          "id": "fb12a397-a01f-407b-894b-d77b0cfbf964",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fddaa052-a059-4fb7-80ea-080dc0ad76ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3100ad6-aa39-4b7f-a213-467a6661b546",
        "cursor": {
          "ref": "944de9fd-e76b-48c2-82b6-3ef797325316",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e342107-650f-4d97-b873-76223a4cbc1d"
        },
        "item": {
          "id": "f3100ad6-aa39-4b7f-a213-467a6661b546",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6c0d279-ebe8-4168-a491-99a6f221c140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4347c109-c7fe-44d3-bf36-4b31892f05a2",
        "cursor": {
          "ref": "b652447e-c038-4b82-9b0f-6ba9f67a0259",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eead6904-d096-4902-bc62-a364075dcb18"
        },
        "item": {
          "id": "4347c109-c7fe-44d3-bf36-4b31892f05a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "82bf263c-733c-45fc-849e-789fc00a88b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ba6fd9-bfc0-4aaa-ac7b-e6c0e7edc52b",
        "cursor": {
          "ref": "32f5a347-2d8c-41d7-aa37-d9beb19edfa1",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c51e5a7e-9c1c-462b-9fb0-836bdabb15e2"
        },
        "item": {
          "id": "f5ba6fd9-bfc0-4aaa-ac7b-e6c0e7edc52b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ea9f537e-6476-4adf-9388-3b35fbcf7b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14ba962-3e0d-4259-8179-a954297e7a48",
        "cursor": {
          "ref": "a35eaf91-6674-4a30-a4bf-ed1df5f44d2c",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5d44ae5c-210c-457b-a193-c5160f5dc993"
        },
        "item": {
          "id": "f14ba962-3e0d-4259-8179-a954297e7a48",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ea29c9c-a278-4d98-8d1d-5a4fb6b59960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bbf076-e236-4761-a86e-deb592483b56",
        "cursor": {
          "ref": "95728d2f-5c3a-4344-bb7a-ac8e50e81040",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ea2d37b2-bc5b-45f2-a8dc-76dfe95df56a"
        },
        "item": {
          "id": "03bbf076-e236-4761-a86e-deb592483b56",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "365ddb97-f471-444f-86e2-ef7f4dc317a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8923d90-a614-4004-bbf8-6dd505325218",
        "cursor": {
          "ref": "7d3ed018-63f6-425a-ba71-fb10c69580c1",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b1f6463e-f4fe-411b-b56d-fae52c7d11d5"
        },
        "item": {
          "id": "f8923d90-a614-4004-bbf8-6dd505325218",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9138a738-d5be-446a-a9fb-fa70de4e719b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce78179-64d5-4175-970a-14dbb69dd2d6",
        "cursor": {
          "ref": "8fe0753f-9463-450f-b1fa-65aae7178ae2",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e43bc18a-3a0b-4224-aca7-1e0b61970bd6"
        },
        "item": {
          "id": "dce78179-64d5-4175-970a-14dbb69dd2d6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d386d01d-377c-463b-b907-a46153f67fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfe7d8a-096f-4a5a-95be-298b4812ce44",
        "cursor": {
          "ref": "125f56cb-3588-48f1-9188-0819cc66828f",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4e26fa85-9282-4c38-9818-218fcf7282a3"
        },
        "item": {
          "id": "0cfe7d8a-096f-4a5a-95be-298b4812ce44",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b007be0f-ad17-4320-b11a-daf43baddb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bac04ab-d9cb-47c5-9b3c-a506ce330f48",
        "cursor": {
          "ref": "4a954dca-62b7-4874-8828-4b4553ed5d83",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "536a48a8-d991-4685-a105-05607dd1262e"
        },
        "item": {
          "id": "7bac04ab-d9cb-47c5-9b3c-a506ce330f48",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e2469517-7b52-4b51-ae42-a7b8c4758841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8639065c-d02a-4bce-8a7e-82faa38c3158",
        "cursor": {
          "ref": "e6c407a0-99d6-4df2-9ae4-55214e301855",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a801896a-9f51-4bcf-8823-f762308d0a4e"
        },
        "item": {
          "id": "8639065c-d02a-4bce-8a7e-82faa38c3158",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4fc79af5-1e26-47b7-bc3b-3ce88aa00838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50363dc1-6f10-4aef-9fcb-d4472106c55f",
        "cursor": {
          "ref": "8363fad4-9e35-4ce2-ab44-465dac56030c",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9610a4b3-1b79-4d6a-a7ce-275fd344b8b6"
        },
        "item": {
          "id": "50363dc1-6f10-4aef-9fcb-d4472106c55f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "14356ea4-5bed-408a-b9b4-9de5eb6a7182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75881752-35ed-469a-be4b-5c19e5499232",
        "cursor": {
          "ref": "7e9499b3-82a9-47b1-bc29-2cde4f6faa3c",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b87e978-1b57-4655-98d0-45bea4bbab37"
        },
        "item": {
          "id": "75881752-35ed-469a-be4b-5c19e5499232",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1210e0f6-d389-4fe4-8ef1-86de6665c1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1124db01-8662-4bcf-b9ea-fb5383abdf0b",
        "cursor": {
          "ref": "0e482769-c8a8-47f2-b4ac-d8ff0361191c",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0485e8c6-0ff6-40d4-b430-f5e877eb9ea5"
        },
        "item": {
          "id": "1124db01-8662-4bcf-b9ea-fb5383abdf0b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4e31b156-e410-4396-8033-2ab7d7e51781",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efff4b9-e708-463b-8d52-09dca13b258b",
        "cursor": {
          "ref": "b1b00b8e-98c1-4744-9950-d222560bf204",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a426e78e-27d9-4d55-a888-d4e265361960"
        },
        "item": {
          "id": "5efff4b9-e708-463b-8d52-09dca13b258b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8f53bc3a-818c-4b9f-9a50-92982fee51f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 533,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629d5c94-6d33-41be-8b50-c272ee0c1fde",
        "cursor": {
          "ref": "d485db88-92b7-431d-9376-f3804cbab86e",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bf678db6-7670-4675-b602-4512b5293405"
        },
        "item": {
          "id": "629d5c94-6d33-41be-8b50-c272ee0c1fde",
          "name": "credentials_issue"
        },
        "response": {
          "id": "133e18a0-0242-4ee8-a256-cffc8d9cec30",
          "status": "Created",
          "code": 201,
          "responseTime": 3603,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "1ff3628b-c4b8-45d0-a356-60171cae39c5",
        "cursor": {
          "ref": "420b35ed-771c-4c30-9ac3-bc78a6c74e7d",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c6fd8940-4367-4339-94c4-ad28e193de0c"
        },
        "item": {
          "id": "1ff3628b-c4b8-45d0-a356-60171cae39c5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3bdf0eee-010e-4f3c-a3e4-f452554860e0",
          "status": "Created",
          "code": 201,
          "responseTime": 3591,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "ca4d300c-a912-4519-8ceb-97e7905406eb",
        "cursor": {
          "ref": "f222df82-5c14-485c-ab8f-12d2c90eeb05",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3fa1bf77-af20-4986-b9f4-8e6b5fe00e7a"
        },
        "item": {
          "id": "ca4d300c-a912-4519-8ceb-97e7905406eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0ed7242f-e697-4665-8842-32ba35fd45b4",
          "status": "Created",
          "code": 201,
          "responseTime": 3522,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "13c8fd97-664e-403f-8e7e-01c0da83d6ad",
        "cursor": {
          "ref": "72e23844-0d9f-4c81-8901-a2f29ed451a9",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d505722-7128-4ab7-87a0-539145fa53f0"
        },
        "item": {
          "id": "13c8fd97-664e-403f-8e7e-01c0da83d6ad",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a7117c03-5908-4816-aeb5-c3d280b4e4c9",
          "status": "Created",
          "code": 201,
          "responseTime": 5031,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "1fdda1fd-f148-4b61-b336-23203fc54056",
        "cursor": {
          "ref": "aa414d3a-722f-4d9e-ae66-98a68cba85fe",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "16b14613-cebb-49f4-b8a9-39ddeeda578a"
        },
        "item": {
          "id": "1fdda1fd-f148-4b61-b336-23203fc54056",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a97dd03e-8772-4b11-8e38-a26c8ee9d477",
          "status": "Created",
          "code": 201,
          "responseTime": 9395,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "3f3fa4fa-50e3-41ce-9c3e-50bc56578287",
        "cursor": {
          "ref": "d2aacbeb-d98b-43ad-81b3-6b236d716583",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a8e5e3da-cfee-4113-8545-7e0a6f9e2d78"
        },
        "item": {
          "id": "3f3fa4fa-50e3-41ce-9c3e-50bc56578287",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e04c74f1-445a-42a2-89c9-66438c2a865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3fa4fa-50e3-41ce-9c3e-50bc56578287",
        "cursor": {
          "ref": "d2aacbeb-d98b-43ad-81b3-6b236d716583",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a8e5e3da-cfee-4113-8545-7e0a6f9e2d78"
        },
        "item": {
          "id": "3f3fa4fa-50e3-41ce-9c3e-50bc56578287",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e04c74f1-445a-42a2-89c9-66438c2a865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb7553-bd11-4ce8-890f-7606ac4575b9",
        "cursor": {
          "ref": "065a8e24-b740-404a-948e-7e0f29806802",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "64e674f2-f6ec-48cc-9d30-266320d35858"
        },
        "item": {
          "id": "62eb7553-bd11-4ce8-890f-7606ac4575b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0dffef01-8472-4d84-9c89-51bdc13c84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d3339-83d6-4fa4-8389-9a5c120a1dab",
        "cursor": {
          "ref": "4890c65a-81a6-4d2c-885b-d77d02e63804",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bcdf546c-ac8e-400d-a256-109e453d7342"
        },
        "item": {
          "id": "886d3339-83d6-4fa4-8389-9a5c120a1dab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aecb0b0f-cf04-4143-b2bb-55dc59fbb61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ec5c56-3ab0-4a28-a4d6-4f773261f7a6",
        "cursor": {
          "ref": "b72a9eb9-4802-4e71-a283-3de6aa845126",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fc5cfa1c-1ebc-43d5-b941-c3a441340c69"
        },
        "item": {
          "id": "d6ec5c56-3ab0-4a28-a4d6-4f773261f7a6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d615ca38-6589-45f5-82b9-502961d80170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd5094e-82e8-4f9b-9c0f-b8f5c577d6ad",
        "cursor": {
          "ref": "f2d70b54-5ccd-47a4-ae5f-7222abb38f9b",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d6c263c7-b23f-4b00-9f61-d7cb2d789b62"
        },
        "item": {
          "id": "4fd5094e-82e8-4f9b-9c0f-b8f5c577d6ad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8590eaaf-63b8-40be-abef-abf93da2af49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3fbd8-ec47-48eb-830d-282124f3539b",
        "cursor": {
          "ref": "ac56cba3-6a0e-47bf-a906-1bc1230e8c5f",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "aab3061a-43c2-45d9-aa9a-dea8f90ac45b"
        },
        "item": {
          "id": "a6f3fbd8-ec47-48eb-830d-282124f3539b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "57efe7bd-8117-4a08-b789-1cb65ffa5793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325a799-7e04-4631-8b6c-3bf643bd826a",
        "cursor": {
          "ref": "41f15674-b4dc-4d0e-ba3e-d73f1e3af6d2",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "174e13ab-d74a-4763-9e2d-bae72ff10f2c"
        },
        "item": {
          "id": "b325a799-7e04-4631-8b6c-3bf643bd826a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea912741-d52d-4a1a-aabd-b85985560ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63afd184-0728-4982-999e-daa42d32c15c",
        "cursor": {
          "ref": "f819b82d-f0fc-4e1c-a56a-2f25f8a22b75",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "59eaa54e-2fc2-4132-add3-557540035d26"
        },
        "item": {
          "id": "63afd184-0728-4982-999e-daa42d32c15c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "96104994-6b64-4d29-a92b-e414379130d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253e0148-013b-4ce8-8be9-b311fe9c22d9",
        "cursor": {
          "ref": "bb846224-1173-4e8a-a3f9-a389503d1c40",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28f40e25-237b-4d4b-b3d2-83dda41134b4"
        },
        "item": {
          "id": "253e0148-013b-4ce8-8be9-b311fe9c22d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "524f6efd-efd6-407c-ab2d-eceb4f142904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b67e055-4d2b-40ba-8715-ffbd7d93006b",
        "cursor": {
          "ref": "9ad48b16-b8a9-4d57-b486-2c4631541a40",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5cc65d67-4990-47fd-950f-045794b682f4"
        },
        "item": {
          "id": "7b67e055-4d2b-40ba-8715-ffbd7d93006b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7eaf48d7-3e7c-4d82-80c3-8a2d2a210eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071595f1-30ac-4485-95b0-f2f30c54d6f2",
        "cursor": {
          "ref": "d712a2d8-efab-45cb-9383-0956e35cb1c8",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37bfd03f-a503-431e-b49a-cd721610e2b3"
        },
        "item": {
          "id": "071595f1-30ac-4485-95b0-f2f30c54d6f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73a9fce1-ff7e-41ef-aa77-73db2a22f4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c8177-d374-4f0f-ac1f-689622f9540d",
        "cursor": {
          "ref": "ccf792c6-bd6a-4f08-bc28-949eb256a7d3",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "57a6fd7e-0391-4def-a9b2-50868349cc81"
        },
        "item": {
          "id": "bc5c8177-d374-4f0f-ac1f-689622f9540d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "37f5d2d7-0229-49f3-90ef-8fef244405c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a17aece-ddf5-4c03-96b5-cee352bad618",
        "cursor": {
          "ref": "f99e6050-e6f3-45c1-8669-eb9c3aa6959f",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "47dac5d8-943b-4a45-a8fe-7d9b84474403"
        },
        "item": {
          "id": "0a17aece-ddf5-4c03-96b5-cee352bad618",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55718b79-0c55-4fba-b901-672e53012865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ec996-3e15-4baa-9a86-790514e19756",
        "cursor": {
          "ref": "040b5282-46e9-4f2a-96bc-7be7ef91d904",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cff1f126-c609-41a1-a706-7613acbf5398"
        },
        "item": {
          "id": "ba7ec996-3e15-4baa-9a86-790514e19756",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4788f45d-b75f-47d8-b9d6-ecbc7211d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd02786d-d202-42db-9aab-bc27503be0cf",
        "cursor": {
          "ref": "d173d395-0258-48ea-9a7a-fdc6c92baff0",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a3d73b3b-7938-4f16-a4ba-5e31a672676f"
        },
        "item": {
          "id": "dd02786d-d202-42db-9aab-bc27503be0cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c8eb93e-a118-4b31-a09b-fe32a66fb3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e73b39f-ad22-4144-9240-132bd06a4c00",
        "cursor": {
          "ref": "b531f0e0-3d29-4047-be87-c98706debb85",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3b7cb028-b224-43bb-972e-b3efda4b5bf1"
        },
        "item": {
          "id": "1e73b39f-ad22-4144-9240-132bd06a4c00",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "096f729c-22ef-4356-af6a-d9e4e7ccb473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272fa317-bccf-4286-9973-c90b5f106df6",
        "cursor": {
          "ref": "bf011e7d-c942-403a-a771-34ee94e1b0c8",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "478609b6-42be-49fe-98eb-328c42ffe529"
        },
        "item": {
          "id": "272fa317-bccf-4286-9973-c90b5f106df6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d83241c2-0ac9-4949-926e-a0c09b3b3278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde24c5a-2678-4b84-8065-acefe84d03fe",
        "cursor": {
          "ref": "3ecf55b5-9b64-42a9-bd6d-9d8ed1b3feb8",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b76a29cf-6ced-4641-a350-7e32fd1c8da5"
        },
        "item": {
          "id": "dde24c5a-2678-4b84-8065-acefe84d03fe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c30b21b6-f1dd-43ad-9ce3-ecf683cf3dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a008255-ea7c-47bd-9315-cb33901d07d2",
        "cursor": {
          "ref": "3c101e26-d604-4f67-910b-b6a58b0d77a4",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "21e7a72a-9e57-4965-b5c7-bc100489c6e1"
        },
        "item": {
          "id": "3a008255-ea7c-47bd-9315-cb33901d07d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "90a7d90a-fdd1-4d6a-a965-ef6f54ccb383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8605fb-3b3a-41c7-92ff-c434178a2b97",
        "cursor": {
          "ref": "28ef9e9d-f3b3-4579-a00e-8d68bd9dff4d",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b97871b2-ee69-4bfe-9348-0693d00cee50"
        },
        "item": {
          "id": "bd8605fb-3b3a-41c7-92ff-c434178a2b97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4e678ceb-4954-44d9-af84-d9de63d33140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89715a7e-be74-4884-a60d-1f79cdf604b7",
        "cursor": {
          "ref": "14263992-178c-49e4-a8df-f16f64edd3e1",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4110e98b-a50b-4bd4-a52c-728f48f34566"
        },
        "item": {
          "id": "89715a7e-be74-4884-a60d-1f79cdf604b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75fd7abf-cabb-449c-9fb2-0fd3e45876c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc2d6a8-8d43-45b9-8fdd-e179ecfc9c5c",
        "cursor": {
          "ref": "a01c1b48-9f28-46b6-878c-1d504da8b0ff",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "167a2544-f5db-497a-bd4f-1e158b65b920"
        },
        "item": {
          "id": "0dc2d6a8-8d43-45b9-8fdd-e179ecfc9c5c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18df6feb-a629-487f-9b88-1879e5fafc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce54d94d-2936-40c6-8afa-9fdda3f1dc0e",
        "cursor": {
          "ref": "5d4ed589-b2b1-4a07-88a3-c330b46b3bf7",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "87b141c3-110d-4972-b4c4-5e8b78707a96"
        },
        "item": {
          "id": "ce54d94d-2936-40c6-8afa-9fdda3f1dc0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a511c566-488e-4325-9c5a-d1184f1c402d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e6e9d-0848-4170-9852-994cf84ecc35",
        "cursor": {
          "ref": "6fd4ccbb-1a05-4ce8-94f5-0ce43d0ece22",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3dbd90a4-be09-4de1-bf70-09e2725063ca"
        },
        "item": {
          "id": "af7e6e9d-0848-4170-9852-994cf84ecc35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e07dc2aa-df29-4f56-95f3-cb5f47acf39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7540450-dda7-4d56-a871-c2c1942ac64c",
        "cursor": {
          "ref": "f3d59599-7aaf-450f-85d4-f8c04426c897",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a71d668-e43d-49d0-958e-f2b7d61dedaf"
        },
        "item": {
          "id": "e7540450-dda7-4d56-a871-c2c1942ac64c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "606621dc-aba8-4817-9ae4-8ad25250ec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8801107e-eff0-4399-b961-7595c9a552ba",
        "cursor": {
          "ref": "a595ff82-1ee2-4ff1-9f6f-d1d272675a18",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "df137b49-45d6-4fc0-b32c-da9c086b558a"
        },
        "item": {
          "id": "8801107e-eff0-4399-b961-7595c9a552ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a9c97f66-d710-49de-9471-aa25cf509f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9588e88c-5aea-458c-a69a-5d5fcc87d3c4",
        "cursor": {
          "ref": "56ec245b-fb7f-43e7-9161-588dce93d22a",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2adede8-e3ed-4c37-b6f8-1632a16360fe"
        },
        "item": {
          "id": "9588e88c-5aea-458c-a69a-5d5fcc87d3c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3baba65a-45d5-4807-ac01-7b007cad649e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abd4891-5d3f-4e60-9a05-ca71737ae9d5",
        "cursor": {
          "ref": "d62ba4b7-dbba-4f99-b5ac-2a879427d358",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6bb7d6bc-b2c3-4393-a276-700cc2742b00"
        },
        "item": {
          "id": "5abd4891-5d3f-4e60-9a05-ca71737ae9d5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d4e6de9-1466-4d58-91e3-5c99e39e19fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b63a764-175f-4f44-81d0-5c5464180c55",
        "cursor": {
          "ref": "92b1abab-c7e6-4431-94e4-2f00f3d5cb43",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "947f44bb-8eb3-4ac2-80fd-2253bdfebd90"
        },
        "item": {
          "id": "6b63a764-175f-4f44-81d0-5c5464180c55",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4480605e-5b00-472e-a764-8b2cc33ca5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54335cd-93cb-49b3-b2ec-3153308da497",
        "cursor": {
          "ref": "9786a1e8-7064-4f3b-826b-626097ad4958",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "309972d8-81b4-4d4a-95cd-8e1df8feabff"
        },
        "item": {
          "id": "e54335cd-93cb-49b3-b2ec-3153308da497",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "81a612fd-58c3-4592-93de-78e39d17b92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e722b728-18c3-4aa2-8a76-e62d2dbded98",
        "cursor": {
          "ref": "211edb5a-c52f-4ede-84a6-94c115abe083",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5436331d-abc2-46ac-ac98-3df8982d515a"
        },
        "item": {
          "id": "e722b728-18c3-4aa2-8a76-e62d2dbded98",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "479eb021-fc0e-4d8d-8db5-af318df85ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68264c92-a1c1-4056-92b4-f618011408fc",
        "cursor": {
          "ref": "8b3c1308-d41b-4abe-8ee9-a70c88dc52a6",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7e7609f0-3aaf-43f3-b30a-5258002620db"
        },
        "item": {
          "id": "68264c92-a1c1-4056-92b4-f618011408fc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a5050ba-647f-41f4-b4ae-84e4540cb59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aa1dbd-920d-4ae8-822b-546dde5f98ee",
        "cursor": {
          "ref": "022c5f03-c684-49df-9c92-407035759b94",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4d4753b3-b138-46c9-ad4f-c4906580c7f6"
        },
        "item": {
          "id": "d1aa1dbd-920d-4ae8-822b-546dde5f98ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "692d245c-9c54-4526-9a99-299064bc7aa0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2237adf-6d24-49b9-9f38-0808623dd241",
        "cursor": {
          "ref": "5d10d193-2a8e-418b-b393-f7ab1822c936",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2b66c3c3-d923-4347-8206-cc61795c034e"
        },
        "item": {
          "id": "f2237adf-6d24-49b9-9f38-0808623dd241",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c683c67a-b568-4dfe-97cc-170983028c0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dd64e6-1635-49cd-a198-013ed4cc64ed",
        "cursor": {
          "ref": "854c9120-4e20-4894-ae75-c218087930f8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "38792f45-4eb8-4291-b348-08192ef1716c"
        },
        "item": {
          "id": "f2dd64e6-1635-49cd-a198-013ed4cc64ed",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5b3b07de-f3b3-4531-b251-88ddf01532a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dd64e6-1635-49cd-a198-013ed4cc64ed",
        "cursor": {
          "ref": "854c9120-4e20-4894-ae75-c218087930f8",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "38792f45-4eb8-4291-b348-08192ef1716c"
        },
        "item": {
          "id": "f2dd64e6-1635-49cd-a198-013ed4cc64ed",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5b3b07de-f3b3-4531-b251-88ddf01532a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ea38a4-4a96-4299-9658-e72e1fdf351c",
        "cursor": {
          "ref": "4257a928-eb87-4946-b8ee-5a66681d735c",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1b8ed9f8-5d4f-481a-9054-268e82328265"
        },
        "item": {
          "id": "85ea38a4-4a96-4299-9658-e72e1fdf351c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2138e981-ee58-4024-b561-43abfc7594b5",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "398d5fb7-1296-49ba-9db1-6e9a03c0c247",
        "cursor": {
          "ref": "ccc26101-9c0d-4899-830e-53ed06df253e",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d0de6f5-a3f1-4825-9fdf-79d59f8d1372"
        },
        "item": {
          "id": "398d5fb7-1296-49ba-9db1-6e9a03c0c247",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a959fd7d-1648-492d-a53f-22e8e72ce1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c10677-b09f-46d9-9a27-ca9c9f7c6762",
        "cursor": {
          "ref": "fba2d933-1241-4188-bb83-e3f6080c5592",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4ed7f8b3-d3a9-43c3-ac69-3501ad0cd8cf"
        },
        "item": {
          "id": "76c10677-b09f-46d9-9a27-ca9c9f7c6762",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8de0ffbc-f1fe-43f7-a1e9-fbfc6cfbda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4e6e9b-8f04-4e3c-9f42-f8ec08a58538",
        "cursor": {
          "ref": "e8e39422-e8be-42a2-88f5-ae9bef09c341",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "999115de-1b62-45d6-b809-1002ab897643"
        },
        "item": {
          "id": "8c4e6e9b-8f04-4e3c-9f42-f8ec08a58538",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a2ff8560-9d6d-4921-9cc1-5a15ac016b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48a30b-fd94-41ce-95bc-40475fa19e14",
        "cursor": {
          "ref": "3026b186-4dc2-4626-ab73-c05a51406f88",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0d251e61-2e1a-4e93-8c2d-69e5fb6dd3c5"
        },
        "item": {
          "id": "3d48a30b-fd94-41ce-95bc-40475fa19e14",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c71f4b22-b02d-465c-b737-424b2055e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d74d8c-258b-474f-a253-6ecceb2f1d0c",
        "cursor": {
          "ref": "1620cf4a-7553-400e-a14a-a37be49d761e",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "99f7dafa-8247-4026-bff5-5391a0598024"
        },
        "item": {
          "id": "12d74d8c-258b-474f-a253-6ecceb2f1d0c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dd8636e9-208b-416a-8b3a-3ea7a13f78ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ce1157-6f3e-4344-b678-1931d2e50161",
        "cursor": {
          "ref": "7f2d15e9-cffc-4043-95d8-59a14b7da79e",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5fe83a6f-eade-40f4-ac83-753f0c23a978"
        },
        "item": {
          "id": "e7ce1157-6f3e-4344-b678-1931d2e50161",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3c24d1ca-d0fc-4db5-a4b4-ef5dc248a27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01170e8f-c791-43b9-a30e-941343acc95b",
        "cursor": {
          "ref": "0d5e9558-64d6-4fa4-94d1-5728e60a8002",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "53d90578-8bff-4e42-acb0-b7d6b5aa9a2c"
        },
        "item": {
          "id": "01170e8f-c791-43b9-a30e-941343acc95b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a028af6a-9f24-45ed-a456-19d57259cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe85d6c8-9a00-4de8-8d9d-9d7032cf2bc6",
        "cursor": {
          "ref": "1d826241-2258-4822-942d-d3c460d85acf",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6b1f02e9-75c5-4880-b2ed-14286c7b1e69"
        },
        "item": {
          "id": "fe85d6c8-9a00-4de8-8d9d-9d7032cf2bc6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "483e3385-91bc-4009-9675-1bd2499af619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e2c462-39a7-4886-b4f1-e87f07f3cea6",
        "cursor": {
          "ref": "52a2201c-6157-459e-9974-3df51f1a3fb1",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "092a0a5a-94a4-4c68-8b30-cddc7ebd2d75"
        },
        "item": {
          "id": "f8e2c462-39a7-4886-b4f1-e87f07f3cea6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b1a24af0-7dad-4dea-9f66-39e6f4537cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ae8eb0-863c-4914-95c3-182751a061c2",
        "cursor": {
          "ref": "4a742e22-59ba-4de3-acb4-5f7dbcf773ae",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bc11a6b9-387c-4a7a-9b2a-1da45eee8b68"
        },
        "item": {
          "id": "83ae8eb0-863c-4914-95c3-182751a061c2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5476752b-cc05-4d87-91f2-f316df8c5080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003d96cc-00cb-46de-9a3f-c476f5f838c6",
        "cursor": {
          "ref": "27761cd5-5d77-4976-a969-dbdba7efd27e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fc76ab80-07dc-4231-a5ef-883ef3fe24e3"
        },
        "item": {
          "id": "003d96cc-00cb-46de-9a3f-c476f5f838c6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "79a20603-7da1-4f44-b9d3-47963598bbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f8c188-b927-4444-ba47-a6f7ba9baca1",
        "cursor": {
          "ref": "d6871610-4ef4-486a-89fe-53c80cb3fb42",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "04209c3d-e0dc-4920-b02b-6521843470a2"
        },
        "item": {
          "id": "f4f8c188-b927-4444-ba47-a6f7ba9baca1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c756d05a-55ba-481e-8ce3-32c0c2411a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279747ce-4c7d-4fd4-bf04-3d04a592b8b8",
        "cursor": {
          "ref": "9aad5cb8-9248-4544-8173-7dabcd24e0a7",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "52082a30-cf65-4349-904b-09315ec26122"
        },
        "item": {
          "id": "279747ce-4c7d-4fd4-bf04-3d04a592b8b8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e897f0d8-caab-450a-b56c-1fad50163d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52771cfc-6db5-4174-9ce4-191ac91ae831",
        "cursor": {
          "ref": "3b1faa7a-3696-4edc-a0e2-c12e427ded61",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f2b1a618-65ec-46ea-aba7-fe89dff2a69c"
        },
        "item": {
          "id": "52771cfc-6db5-4174-9ce4-191ac91ae831",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "786d4c30-d381-454b-b902-b673645c05ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb86bd95-0e60-4cfe-9b44-f49ea24b4254",
        "cursor": {
          "ref": "9b546db4-50b5-424f-a623-50bcadfd075b",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4eb763f8-6487-4743-bd82-db36c776ce4f"
        },
        "item": {
          "id": "bb86bd95-0e60-4cfe-9b44-f49ea24b4254",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b5e87fd6-f04a-4071-a2c1-c20458f3bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1197aaa7-2174-4b4d-a8c8-a8fbfdbcc1af",
        "cursor": {
          "ref": "09f6d46d-5061-40af-be30-b531978e50ba",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5be01a50-45fa-49f5-9bbf-b8cbb7616166"
        },
        "item": {
          "id": "1197aaa7-2174-4b4d-a8c8-a8fbfdbcc1af",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "5a61fc8f-a834-4507-91b9-4f015982cd7e",
          "status": "OK",
          "code": 200,
          "responseTime": 2041,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "b08f5349-11fe-4e0b-bbc9-2e73e2154a85",
        "cursor": {
          "ref": "92d6a503-13ae-455b-b804-bfce0f224c8f",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "698d0c41-bf68-4b7b-ab50-4091e21162db"
        },
        "item": {
          "id": "b08f5349-11fe-4e0b-bbc9-2e73e2154a85",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "176ea8e9-355f-42ba-9762-85397355277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8935e2d-0322-4554-b494-46e080080216",
        "cursor": {
          "ref": "d5571c6c-b77a-4ad6-aeeb-803a51651d4b",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "882300e9-be3b-4efd-90b5-447943ae285a"
        },
        "item": {
          "id": "a8935e2d-0322-4554-b494-46e080080216",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8d74acc7-6558-434c-b08e-bcb77908df54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7dd0c3-1579-422d-8de8-1cb52bba546a",
        "cursor": {
          "ref": "89a7669f-ade5-420c-be50-821c92abfc7e",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2945f99-ac29-43f6-833c-47049bf45524"
        },
        "item": {
          "id": "bf7dd0c3-1579-422d-8de8-1cb52bba546a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e1c2ca4f-3080-4e38-9e9a-4dd332ec4433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b39460-4ced-4d8e-abc9-da9a9686ef49",
        "cursor": {
          "ref": "f91cbaeb-4bb7-4ade-834d-3d2627ec6918",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "211095d8-01ea-40dd-bc01-ad5d2f9882ad"
        },
        "item": {
          "id": "34b39460-4ced-4d8e-abc9-da9a9686ef49",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "119be30c-1b87-4b02-b6fa-f5bdb8ed0f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df397c-4807-4942-bc66-238bed81b974",
        "cursor": {
          "ref": "b7e0cd13-6e11-40bb-850d-dcf5096ff9b2",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b00a2109-000d-4767-aa7d-818842eaaa38"
        },
        "item": {
          "id": "05df397c-4807-4942-bc66-238bed81b974",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99a8d6e7-4ae6-460f-babe-9acd766d46fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1906d212-a9f7-45a3-886a-c35a05a781c6",
        "cursor": {
          "ref": "8692471c-057d-4351-b0f1-28eec37d7ab3",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "afd885b3-97d9-4c51-b4b3-6f80cb6aec54"
        },
        "item": {
          "id": "1906d212-a9f7-45a3-886a-c35a05a781c6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "57868925-a225-458c-88be-0e0aff79de7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbe5f57-8e20-4e9a-a45d-0cd75201ebe4",
        "cursor": {
          "ref": "110b3051-9c47-4151-8645-8e943f95670f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "32818b51-a8b2-4469-b239-a4f7a20432d6"
        },
        "item": {
          "id": "9fbe5f57-8e20-4e9a-a45d-0cd75201ebe4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "382e34aa-d976-49c7-9fa7-a75e0e9d93f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abc5e12-b3d0-49e9-bfc8-38d495fcff3d",
        "cursor": {
          "ref": "157e11e6-491f-4a53-9f89-8baa5983499f",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "91a9fe3b-3e69-418b-b34f-ff02af53614f"
        },
        "item": {
          "id": "1abc5e12-b3d0-49e9-bfc8-38d495fcff3d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fd17d442-37c1-4c52-b68b-9d729443a8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc1081e-18e0-4616-a6b7-193698b1fae8",
        "cursor": {
          "ref": "1177345f-3b87-4c13-b7b5-ac62a7e2c59a",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d40afac-bce1-416e-bd78-31e3ec555f8f"
        },
        "item": {
          "id": "2bc1081e-18e0-4616-a6b7-193698b1fae8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1040351f-d714-46f1-a3cc-4ffa7d4d2840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0af4db-45a3-4ca6-8d25-39662ba5a5fa",
        "cursor": {
          "ref": "59fb542c-cba0-4221-b9f6-4deb1b018cc9",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "67f90a98-ea90-4f2d-a734-ec3369e51389"
        },
        "item": {
          "id": "3c0af4db-45a3-4ca6-8d25-39662ba5a5fa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4ccf7b66-b92b-43b7-95a3-e26d117f9731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe309c1a-3d05-403b-8ae8-5e8c10071e3a",
        "cursor": {
          "ref": "a9788226-7b5a-4fad-bad0-9492e8138243",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "81af767d-247f-467d-b3ab-5f00522ff560"
        },
        "item": {
          "id": "fe309c1a-3d05-403b-8ae8-5e8c10071e3a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bea7f9f9-a45a-4d7f-9092-b854ddafda9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec0fcc6-e29f-407e-9d36-ee636eeed016",
        "cursor": {
          "ref": "3051e40b-c2d1-4a3a-bb69-93b7f079f9cc",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fc4703c1-57e5-4420-aca0-f735dc97bf25"
        },
        "item": {
          "id": "aec0fcc6-e29f-407e-9d36-ee636eeed016",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1e250a40-a98d-4adb-91ea-023d4a11d5c3",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "2984b2cd-45a1-4d14-ac0f-10c7931ffd70",
        "cursor": {
          "ref": "af2a53ab-0dd1-4fa7-bcd0-e5534fc5fe66",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "438c4db9-dd8f-4550-b630-6aa2f81569a7"
        },
        "item": {
          "id": "2984b2cd-45a1-4d14-ac0f-10c7931ffd70",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5256b4a2-d8a5-42e7-9bff-a79ddaebaf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87973e20-4f0f-4323-ad70-1f274f20c0db",
        "cursor": {
          "ref": "195044bb-4612-454d-a690-7e31b970368c",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "762cefe1-70fa-4868-9157-e28e77d120a5"
        },
        "item": {
          "id": "87973e20-4f0f-4323-ad70-1f274f20c0db",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9aa7159-dd40-4db5-9ef7-fc83cdf954e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190b5be3-a7c3-435f-98a4-8d4b40b88c7e",
        "cursor": {
          "ref": "348b8e5a-59c4-4d85-9da7-dcefa7cf19ad",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8eb3aa5f-d571-4fe3-a97c-2c727542fde6"
        },
        "item": {
          "id": "190b5be3-a7c3-435f-98a4-8d4b40b88c7e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "152feea0-7bb8-491f-99c1-969af6d22b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b60776-3595-45ce-9f69-2e02cb5ea350",
        "cursor": {
          "ref": "2cd92e70-7f05-4473-bbc7-1cacc4fde2f3",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0300842c-6c61-41a6-8096-3b39950fdd87"
        },
        "item": {
          "id": "86b60776-3595-45ce-9f69-2e02cb5ea350",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1896972e-135a-4750-b59c-df5e4fdd0545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617046c5-6032-4be7-b2c2-934d2d383c85",
        "cursor": {
          "ref": "9a9f3679-6362-4359-9932-de76d41f97bf",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3aaf07ca-9990-4112-b397-b17ddbbe3452"
        },
        "item": {
          "id": "617046c5-6032-4be7-b2c2-934d2d383c85",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6b9a8720-e29e-4b1d-b867-3c4f19b82278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c72c41-cc1d-4fa7-b4c2-b9d8bf52ea3f",
        "cursor": {
          "ref": "8b576551-bba4-4667-840c-a195afe63d73",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b4d184c5-b13b-43aa-84eb-3162b8821460"
        },
        "item": {
          "id": "e4c72c41-cc1d-4fa7-b4c2-b9d8bf52ea3f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8a4be10-77a4-479f-b940-66c217a24a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0daa6d-bad4-42b1-ad14-3818f21652c7",
        "cursor": {
          "ref": "26397b0c-893a-4ef3-80af-339ca24322b1",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0aca5af2-2fde-4f76-a5c3-ecdf9b4dc488"
        },
        "item": {
          "id": "8f0daa6d-bad4-42b1-ad14-3818f21652c7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3b2f65a9-37e1-404f-9101-a7b83bd65823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7ae227-8e54-4cb4-9877-2d5268453355",
        "cursor": {
          "ref": "629237fd-f6ea-44b1-aaba-a36bf54358ea",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c40428b-8568-4a33-ba62-b89474dda32e"
        },
        "item": {
          "id": "9b7ae227-8e54-4cb4-9877-2d5268453355",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d8190d33-d5e1-47fc-bdb8-017be70f4094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f23f590-39f9-47a4-8461-3164dc85889b",
        "cursor": {
          "ref": "94a89317-56b7-4798-a147-5b8e20c4a060",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b5d44441-a388-4316-9061-6a8e3bf281e6"
        },
        "item": {
          "id": "3f23f590-39f9-47a4-8461-3164dc85889b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db238a59-849c-4c9a-920d-45358c6423b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a0dc9-80a9-4fa8-a583-9001d55a984f",
        "cursor": {
          "ref": "006f41d6-b2a4-496e-b94d-df9cf12b09d9",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ab7a613d-9571-4d4a-bc08-4b7d3322f456"
        },
        "item": {
          "id": "1b0a0dc9-80a9-4fa8-a583-9001d55a984f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dfa1a476-75f1-44e9-9f21-824b7780896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b3be33-4a50-43ca-9b9a-a6d8d3540069",
        "cursor": {
          "ref": "6115fdf4-9a02-4254-bdc6-b835de0a8aab",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "625d93b2-b926-49a7-9799-f2b51db74c15"
        },
        "item": {
          "id": "36b3be33-4a50-43ca-9b9a-a6d8d3540069",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1d36ad29-daff-46f0-9f7d-a2905f2b8a09",
          "status": "OK",
          "code": 200,
          "responseTime": 287,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "f0eaa77c-beef-4425-8750-3b92bc8f9b3b",
        "cursor": {
          "ref": "662e42ce-6373-4a92-82cb-e53a35ab70b9",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f16a4c5-7a02-4649-9e40-51841c8da5f9"
        },
        "item": {
          "id": "f0eaa77c-beef-4425-8750-3b92bc8f9b3b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a0fb9b34-3940-4d41-abf2-d9d5e0663c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bece1dd5-6641-44c8-af22-849fe7523a58",
        "cursor": {
          "ref": "3bf4b070-b8c0-407b-a242-209ffa8e0160",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2a35aee-be23-415a-a994-70e28e963782"
        },
        "item": {
          "id": "bece1dd5-6641-44c8-af22-849fe7523a58",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c0cef915-8c80-4544-b107-3557277dabe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975e82d6-dfdc-44d3-84c1-5adb3014e14e",
        "cursor": {
          "ref": "dfceee89-6382-4c33-8778-1738f767c45d",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e1355c7-6b6c-4b5d-aef9-e7c8a49a1fb9"
        },
        "item": {
          "id": "975e82d6-dfdc-44d3-84c1-5adb3014e14e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2402654d-439d-463b-a0f7-8f0080efb54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c504d40-0fb8-4a4e-bcd5-7e07d043c9f2",
        "cursor": {
          "ref": "793c0430-a979-4488-ba81-c77201e8c9bb",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "949363c9-9fe8-4069-8cfb-5a6829a6e225"
        },
        "item": {
          "id": "7c504d40-0fb8-4a4e-bcd5-7e07d043c9f2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ce71fc61-92d3-4d3c-81c2-04dc44b4222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b943abdd-fa7c-479c-8ce5-94b367e5a28f",
        "cursor": {
          "ref": "659705a0-37f9-4095-a719-4c0572f13e4b",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f664661c-4881-4549-afb3-6808a0098bd1"
        },
        "item": {
          "id": "b943abdd-fa7c-479c-8ce5-94b367e5a28f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7b58654a-afdc-47e7-9685-575f4e5f2d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a18c96-7b65-441a-bbfe-3c4266c01454",
        "cursor": {
          "ref": "4eee5e54-4f65-47cd-81d0-d528e5dea530",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ee03cb79-2c40-4122-be3c-4eb877e6d1d3"
        },
        "item": {
          "id": "18a18c96-7b65-441a-bbfe-3c4266c01454",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cd133316-2311-41c6-928d-c3fbc4c43dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf8244e-7760-41ce-b5c8-803bce7376e5",
        "cursor": {
          "ref": "51a171a2-fea3-497b-bdf0-8e4e8a837d69",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1960f52b-2036-4094-8599-44626e2a4b03"
        },
        "item": {
          "id": "7cf8244e-7760-41ce-b5c8-803bce7376e5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ada14d53-7f94-4028-babc-7d29463d1258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5396926-e96f-4f95-b77e-363636ddecc0",
        "cursor": {
          "ref": "45911b3e-b4df-4058-95f0-946a72e0c948",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2e4afb3d-94a7-4ec2-8c17-875274fee1cc"
        },
        "item": {
          "id": "d5396926-e96f-4f95-b77e-363636ddecc0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "47f0d014-5f2e-4278-ab9d-2a2a0805e241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3afa32f-b91d-4e02-a00d-72a3cf0d126c",
        "cursor": {
          "ref": "82c65c7c-01f0-4677-989f-f03a212f801d",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d5193dd9-063f-4bd9-a5bf-cf07b3d8f22f"
        },
        "item": {
          "id": "b3afa32f-b91d-4e02-a00d-72a3cf0d126c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64a4c2df-a8e7-43c9-927c-91be6c3fd39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912f4157-28a7-4462-91ac-93bfa1e59e81",
        "cursor": {
          "ref": "7ae6693d-742b-4547-8744-bac578f32763",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8995396-5a28-4f45-a0b8-6e42c56b31a1"
        },
        "item": {
          "id": "912f4157-28a7-4462-91ac-93bfa1e59e81",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "24d15baf-c43d-438b-a07a-6dc0d4784202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0677ac4-e4a1-4184-ba3f-1a1a554c24b8",
        "cursor": {
          "ref": "86432f34-cb6a-46bf-b5fc-54597d63918e",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46fea8a2-31df-4030-94ec-5d59c1f2ccea"
        },
        "item": {
          "id": "a0677ac4-e4a1-4184-ba3f-1a1a554c24b8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed56ae34-4889-4b34-8ad6-430a2d29ceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff19e379-30f4-4bf7-93a3-a1fa29b76f35",
        "cursor": {
          "ref": "25fdb84b-e38a-4706-9ab5-077473bb5d70",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "86b46698-af17-4af2-9e63-bc82f18709f0"
        },
        "item": {
          "id": "ff19e379-30f4-4bf7-93a3-a1fa29b76f35",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4a80b75f-a6b6-4177-8118-ffdacc0c1208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e188f7-ab01-4875-b1a9-db630abad7ab",
        "cursor": {
          "ref": "2ba5929d-aa22-4566-89da-9fdb80b26b99",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a3b17782-5e54-47d7-8291-f6ad87d54df8"
        },
        "item": {
          "id": "f0e188f7-ab01-4875-b1a9-db630abad7ab",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5fd3db08-0ce0-485a-83d8-a8673433b846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5af12d1-835d-4d8a-93f8-8279b01a3d8e",
        "cursor": {
          "ref": "ff357305-f78a-46aa-899d-ebe7bea6497d",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5f54ca76-cec8-417f-ac2c-e52936096f9b"
        },
        "item": {
          "id": "a5af12d1-835d-4d8a-93f8-8279b01a3d8e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf5db049-076a-46c1-be3f-32271b380004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6552eacd-f7d8-45d1-98de-9fa6d30023ef",
        "cursor": {
          "ref": "6749da11-57f9-49be-8a7f-0c094af06ba8",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ebbaa382-6b20-4611-8c70-705742b82478"
        },
        "item": {
          "id": "6552eacd-f7d8-45d1-98de-9fa6d30023ef",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b67abb2-4d17-4fc7-a8ab-a8c5bf65603f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592323b5-d756-4316-8125-ea4ccdd393d7",
        "cursor": {
          "ref": "cc964cb3-0df1-4925-81db-09fc670b122e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ec8dbdb0-0973-4f44-8ae0-974f8de72029"
        },
        "item": {
          "id": "592323b5-d756-4316-8125-ea4ccdd393d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "646e197f-d596-41a8-8a64-85350e8ec9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2a038a-a26a-4d84-9f69-c53c97d1aef5",
        "cursor": {
          "ref": "082a918a-ef68-49fe-8a74-e2ce1cb9f381",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cccac6c2-6a38-4514-a4fd-ca4d64d02291"
        },
        "item": {
          "id": "4e2a038a-a26a-4d84-9f69-c53c97d1aef5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f44ad195-0b0c-431c-ac83-df09a3191d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4321683a-e7df-446e-a815-dc82dce0bd75",
        "cursor": {
          "ref": "107c19c1-4d81-49ff-bc49-d20cbe7def44",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2faf80a9-70d7-4757-bf9c-955071a8df15"
        },
        "item": {
          "id": "4321683a-e7df-446e-a815-dc82dce0bd75",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b6331e08-c17b-458c-87ee-2a11b3cf0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77631b42-2aaa-43c1-9c83-d67056c4437f",
        "cursor": {
          "ref": "fd6f9f01-a340-42bf-8c23-48cf0921c566",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "14c8b4d1-2edd-4c11-9cd7-798d8fe64b9d"
        },
        "item": {
          "id": "77631b42-2aaa-43c1-9c83-d67056c4437f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8b3c32b9-34ae-4f80-ac81-9e1c5835298b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de55738a-1112-4880-bc56-aa7cd47c13a7",
        "cursor": {
          "ref": "aae47333-5108-4052-a6c4-617ea0573caf",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "889a8956-42b8-473c-80ca-1f2636f80174"
        },
        "item": {
          "id": "de55738a-1112-4880-bc56-aa7cd47c13a7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a9215988-1640-4768-a3ff-4446a9510ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abdc49f-7519-4fb6-b70e-0358e903b603",
        "cursor": {
          "ref": "1df4ad93-b00b-4e3d-a705-b542305c0b75",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "48fde2ae-1fb4-4743-b51b-c177c622459f"
        },
        "item": {
          "id": "9abdc49f-7519-4fb6-b70e-0358e903b603",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "745c80ec-4f93-4fdb-9b3a-64f40a4d4ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13687759-28fb-4812-ac8c-f280c18af40d",
        "cursor": {
          "ref": "dc2e6416-e2bc-46ec-acdf-6f87deaefa2f",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b2fb58e-2bbf-4b06-be19-fbe96776b8a9"
        },
        "item": {
          "id": "13687759-28fb-4812-ac8c-f280c18af40d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee7b57f3-41c2-4e45-9b30-efdc6b6249cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cb4c24-858a-4bb5-aaca-3fa2d3bc1bb5",
        "cursor": {
          "ref": "a1c60c38-44f6-4b8c-abc2-e45f2f442dd5",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69096f3f-a689-4383-94dc-89816f8a1385"
        },
        "item": {
          "id": "90cb4c24-858a-4bb5-aaca-3fa2d3bc1bb5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d255c3f0-e1c5-4fa7-bfe7-93c4535f0a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc39573f-7d04-445f-8e03-7b233d95570e",
        "cursor": {
          "ref": "9f96c8d9-0314-48d3-ae51-aa5260d3b312",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "58c7cde0-52d9-4da8-b272-feca53cded79"
        },
        "item": {
          "id": "cc39573f-7d04-445f-8e03-7b233d95570e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7757282-bd46-44d5-a3c6-624f0c7cbbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e86441-c1a8-4bf5-885b-793a6d7ea99f",
        "cursor": {
          "ref": "8b116ef7-0d1f-48da-94d6-acc4acd1cce7",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e01bea1-7053-485c-810f-04c5e6546e25"
        },
        "item": {
          "id": "14e86441-c1a8-4bf5-885b-793a6d7ea99f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "39e76c66-7974-4368-a8af-8554aabf6686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fba4f84-0808-4de8-bc13-3662992b9e49",
        "cursor": {
          "ref": "a2d792b9-611f-4332-ad45-dc1f95c74963",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "53ee9617-f996-470f-81a5-461387601fa2"
        },
        "item": {
          "id": "1fba4f84-0808-4de8-bc13-3662992b9e49",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f36f9132-e65a-4162-ac64-73d349f8ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c34e7c-b5ff-4b22-886d-b63b8cbc66c7",
        "cursor": {
          "ref": "edad6450-d8f3-4687-8215-01d4d23e5438",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ce34db28-891e-4c03-8209-d0da845a3fd9"
        },
        "item": {
          "id": "e9c34e7c-b5ff-4b22-886d-b63b8cbc66c7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "18068dbc-36ba-46b9-9d7a-62e29502e499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8c18de-8ef7-42ff-9c66-6355878aaa32",
        "cursor": {
          "ref": "793252ea-ece3-45b6-aef4-5e6f65bfa6e8",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d325967c-69b0-4944-a887-9c8cd86849f6"
        },
        "item": {
          "id": "8a8c18de-8ef7-42ff-9c66-6355878aaa32",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "559530ce-683d-40f2-866c-a3f5fb37b059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4167c-8027-45d6-9c83-3ca1b1e2026e",
        "cursor": {
          "ref": "82814cc2-05b2-4b88-9d83-376c9c967871",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "07d1595a-1a14-4227-88a3-8d3279d56d9c"
        },
        "item": {
          "id": "39d4167c-8027-45d6-9c83-3ca1b1e2026e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9199030d-f956-4724-baa2-022f4ec54d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b82ab-463f-410d-9c76-3b250f1611b7",
        "cursor": {
          "ref": "416214b5-44c3-46b1-bcc2-5bb1ef33b4c4",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "959f0a33-19ea-4eb1-97a5-bb093ec44e64"
        },
        "item": {
          "id": "c57b82ab-463f-410d-9c76-3b250f1611b7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e5facaa-3857-442e-923f-63c808391383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac25848-0b72-4129-9f7b-154aba934d6f",
        "cursor": {
          "ref": "eb7472a6-fdbc-41c3-a5db-9232f5e60f02",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5e638a3c-4747-49de-b43a-58aaa5f21f81"
        },
        "item": {
          "id": "dac25848-0b72-4129-9f7b-154aba934d6f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b5cd58a5-04d3-491f-b6f1-7c22b8e9aad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da2a666-84a6-4ab5-b274-0abfb23895eb",
        "cursor": {
          "ref": "b5a697ab-0e27-4575-93bf-0111ef1d82a8",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ab7f9124-bdc4-4ce7-a0fd-47a83e9bd7ff"
        },
        "item": {
          "id": "2da2a666-84a6-4ab5-b274-0abfb23895eb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2ac7ea4a-574c-4e14-b7d8-318ca4d0d3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4bc52f-0a9f-4a9b-ae9b-ac430e6ec3d1",
        "cursor": {
          "ref": "49297964-32f5-4a30-a26a-cabeabded6f1",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a8639ea9-51ab-498c-bb1d-cdba98308ffb"
        },
        "item": {
          "id": "eb4bc52f-0a9f-4a9b-ae9b-ac430e6ec3d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8c8d2e16-0cba-430d-9cb4-430e2152595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f337356-e6c5-47cb-89c1-76714f112edc",
        "cursor": {
          "ref": "8344108c-f4ba-4058-b031-abca6a4c7e86",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "437445b2-75da-4b02-9f4b-d554f91d8852"
        },
        "item": {
          "id": "6f337356-e6c5-47cb-89c1-76714f112edc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3f19a1b1-d619-4836-926d-75d5783343eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ac3e8e-da3a-44b2-9057-6e8136643e5a",
        "cursor": {
          "ref": "f97bc501-dec8-4584-8bec-6b07cbd057c1",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fd87eb6a-cc4f-4a3d-b1f1-30eb69550669"
        },
        "item": {
          "id": "21ac3e8e-da3a-44b2-9057-6e8136643e5a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "847e105f-dd29-484a-88be-6ad0760b2c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bb8387-d70c-4ed9-943e-30b63c9776d5",
        "cursor": {
          "ref": "5fb8f01a-179c-4942-8c9e-fceb9d41e31a",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "30195a0b-b95c-4402-aef4-f4084577736a"
        },
        "item": {
          "id": "d8bb8387-d70c-4ed9-943e-30b63c9776d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12ef4e6d-0ac9-4641-8919-297f61168629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c0533-0ba3-4761-ab61-48a2d22de372",
        "cursor": {
          "ref": "b0310508-521f-4f59-bd89-b173cc926e63",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "359bafbb-5ffa-4b5a-94c6-32aafba31378"
        },
        "item": {
          "id": "a33c0533-0ba3-4761-ab61-48a2d22de372",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c7fd3808-aec9-4437-a0be-61a103402901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7c4562-c95a-4bf4-aa65-8a9bcf34ee44",
        "cursor": {
          "ref": "1103a905-ac63-443a-824d-c868babd2433",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "949885e2-29a4-4e03-9793-68dded4006e9"
        },
        "item": {
          "id": "0a7c4562-c95a-4bf4-aa65-8a9bcf34ee44",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "353ba912-9af6-4d61-a45a-9e0b05a27b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60c145e-e028-4c63-810a-f499a1ad9019",
        "cursor": {
          "ref": "c984ebff-191b-4d52-ac84-a059c8b2865a",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "db7fff7b-2341-4a85-9036-4c1ac2ee2717"
        },
        "item": {
          "id": "c60c145e-e028-4c63-810a-f499a1ad9019",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fce641ce-2c21-4245-8ed6-75a733a463de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dff690-0477-463d-add6-4f10b68e369c",
        "cursor": {
          "ref": "f7b6c644-64e8-4bb3-a12f-205dfafb7408",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b0c8aa79-bb68-4bc9-b92f-6a0f96fb0fea"
        },
        "item": {
          "id": "03dff690-0477-463d-add6-4f10b68e369c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0197bc72-28e2-46c0-96d6-f1d5cb36f067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6768866-c7bd-454c-b656-a7135315bbab",
        "cursor": {
          "ref": "04b14162-3141-44c5-947e-3519931c7a3f",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ef74eee5-5752-4bde-bf91-b11d6b6d18e5"
        },
        "item": {
          "id": "b6768866-c7bd-454c-b656-a7135315bbab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "21e7fbbc-dcfd-4fdb-a561-6ba968013b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44113997-c311-4215-ace7-b30447985b3d",
        "cursor": {
          "ref": "b9f783aa-d84d-4a8c-8fc5-702dbe7bdb87",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "35251319-9dc1-4bf3-a817-e3bb1886d5e1"
        },
        "item": {
          "id": "44113997-c311-4215-ace7-b30447985b3d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "73a49ad9-879e-4a6f-87a0-27b8645dc127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93892ad6-9342-4f12-aa1c-28e66680e51f",
        "cursor": {
          "ref": "9152064f-fcc8-4240-b92c-b5b69bb35022",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "637e39c0-cae6-48b7-8e2d-9c1bb88f7e32"
        },
        "item": {
          "id": "93892ad6-9342-4f12-aa1c-28e66680e51f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4a45c9b0-086b-4596-8861-428cb31dccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861de280-8317-4cb7-af52-a1e1263c4eff",
        "cursor": {
          "ref": "109de895-0130-4743-80fd-bdcbf756583e",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0b94f045-9aae-4b64-85cc-67139dbf1702"
        },
        "item": {
          "id": "861de280-8317-4cb7-af52-a1e1263c4eff",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1a30b28a-3c1f-4b21-808b-ce446a12db21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a1a431-ae62-4816-9ed0-1a77cae2c4dd",
        "cursor": {
          "ref": "8ba6d202-e9d8-48ad-845f-45b36df1433b",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e3e94438-e242-4994-abf5-815303454747"
        },
        "item": {
          "id": "49a1a431-ae62-4816-9ed0-1a77cae2c4dd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82ca5dad-3fc6-46a2-979f-5edab3ff2bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfb123d-a246-4318-96a5-9a9f897d01c5",
        "cursor": {
          "ref": "ecb7d8b5-cecf-4afa-8797-e1fd0215d2c1",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b1556312-6144-4bc3-a621-0ecc5a0c231a"
        },
        "item": {
          "id": "1dfb123d-a246-4318-96a5-9a9f897d01c5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "89aa82b4-2296-4a7a-a408-6c5322de2f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e42215-65b1-4a91-9016-d66e12cb58ce",
        "cursor": {
          "ref": "995d64aa-4a77-4612-893e-c3bde6a86476",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cf621bfa-27f3-43ee-818e-8b850016370b"
        },
        "item": {
          "id": "a9e42215-65b1-4a91-9016-d66e12cb58ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "61dca670-564b-4f10-b4e7-20bfbc98bf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5647a9dd-d13b-4049-96c8-bc973bac989f",
        "cursor": {
          "ref": "259cbb35-625b-402a-9682-c11b08309686",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3393e10d-c98b-451c-9e93-411eec801377"
        },
        "item": {
          "id": "5647a9dd-d13b-4049-96c8-bc973bac989f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e6a24adb-5007-4d9b-842c-41e492c27273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeb3364-d09d-4fbe-8e2e-8efa72c1e325",
        "cursor": {
          "ref": "3d45d6bd-39c1-48c5-97cf-ba9e941cd36a",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91d346df-66e5-41a4-852d-6d13db3a3f8b"
        },
        "item": {
          "id": "aaeb3364-d09d-4fbe-8e2e-8efa72c1e325",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "126d1669-758c-4c59-9a6b-0ab1f8826163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdd65c6-3d02-499b-9e0e-04352c9fd523",
        "cursor": {
          "ref": "af76f3bb-cb78-4709-8d99-2d6bb8609972",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc8fa479-c9ff-4157-a928-cce8089172bd"
        },
        "item": {
          "id": "0fdd65c6-3d02-499b-9e0e-04352c9fd523",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "32483731-954f-45e1-b50b-facca20e4357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee4f87-d959-4fcb-82c1-6ad104dc5a8a",
        "cursor": {
          "ref": "fcf572f3-2950-4558-a392-524d81169281",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "51264c9c-72e2-4095-bac2-b9732d496fcd"
        },
        "item": {
          "id": "aaee4f87-d959-4fcb-82c1-6ad104dc5a8a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73a4b66d-dfa3-4c35-87fc-b955fa4ec592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbee1ea3-2dc0-422d-ac30-88bd2cecc0e3",
        "cursor": {
          "ref": "b30330b4-b1a6-436c-b869-25489ea18b52",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "037ccd12-64b4-4e27-804a-2bc835f2ae0c"
        },
        "item": {
          "id": "fbee1ea3-2dc0-422d-ac30-88bd2cecc0e3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1fe56cec-fb0d-4c31-b603-bf31589057c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb943a88-d8c6-44bf-a3d7-e4aa856a1443",
        "cursor": {
          "ref": "460e7421-a50e-451c-a15b-004749ba38bb",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "89ddcf0b-2b88-4411-8cf1-f1c3b56d8035"
        },
        "item": {
          "id": "bb943a88-d8c6-44bf-a3d7-e4aa856a1443",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2fa5ff2e-d96a-4e9d-b434-f67203cbca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db409054-2a5e-49d8-8750-567a1dc9151d",
        "cursor": {
          "ref": "3f698143-d34e-4c17-89cc-01c1155eedaa",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9d6f9495-947e-4f5e-87de-28640d0b90ea"
        },
        "item": {
          "id": "db409054-2a5e-49d8-8750-567a1dc9151d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2df49fbe-2989-44f3-8983-4d7c8d1858b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb786b8-8b70-4078-ae02-0b13779be831",
        "cursor": {
          "ref": "25c1f9e2-af82-44e1-a17c-dafc2f08d315",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f51373e9-8128-4706-b6bb-3e8d424e28a6"
        },
        "item": {
          "id": "4bb786b8-8b70-4078-ae02-0b13779be831",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "87b3e01a-2b14-491f-b392-37dc02f1c3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0983914d-c6fa-4ade-8a4f-28a197c564b6",
        "cursor": {
          "ref": "4986b416-c403-4d6e-a48c-bfc065526709",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad0e6b98-c13b-4c1c-878d-6d1cb1df191b"
        },
        "item": {
          "id": "0983914d-c6fa-4ade-8a4f-28a197c564b6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e7e1276a-a92c-4659-bdaf-b7aaf2daf1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5d07c4-afa7-4bc9-b04b-870fd7aaaab8",
        "cursor": {
          "ref": "a7542574-58e7-4a7e-ba2b-607d2109fa3f",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0f6fdf49-801a-4dcc-99a5-b08d17a0f1e3"
        },
        "item": {
          "id": "5e5d07c4-afa7-4bc9-b04b-870fd7aaaab8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ea14302b-4420-43c5-a492-f48bfcbd85a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c63fc-78ea-47aa-8904-61eb7ac928c1",
        "cursor": {
          "ref": "2ec261d5-8353-4d33-b7a5-7b8b655b86d1",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6b2ec0f5-9f71-4640-b0bc-0d23232dbe47"
        },
        "item": {
          "id": "4c5c63fc-78ea-47aa-8904-61eb7ac928c1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc139afb-4621-4a60-9934-29fa0fcf36fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9e2d29-4d55-471d-8029-45229cca213f",
        "cursor": {
          "ref": "ee839326-dac1-43bc-90c3-dd9d6cd2f846",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "54295d74-bd62-4b91-a31b-056cd97d9264"
        },
        "item": {
          "id": "6b9e2d29-4d55-471d-8029-45229cca213f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c705dc5f-264c-4e62-86b0-85a3564cc4d5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 320,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537a8fdb-7846-4157-8404-89745fa545e7",
        "cursor": {
          "ref": "a0ed3975-6d85-4780-8b32-677e83c8f9ce",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "679a39a1-a2fa-4873-addc-ea2ed279f9d4"
        },
        "item": {
          "id": "537a8fdb-7846-4157-8404-89745fa545e7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7fe153c-d847-4fd3-bf5b-11c7192be524",
          "status": "OK",
          "code": 200,
          "responseTime": 341,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc23d9-9dff-40bb-9779-570553f6c943",
        "cursor": {
          "ref": "8196d452-5bbc-4d8f-8e5b-0bea3281386c",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7416883d-cd73-47a5-83b1-5132f0644f03"
        },
        "item": {
          "id": "0acc23d9-9dff-40bb-9779-570553f6c943",
          "name": "credentials_verify"
        },
        "response": {
          "id": "67a45f3c-25bc-462b-9652-cd6bb4a44363",
          "status": "OK",
          "code": 200,
          "responseTime": 2052,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b91572-fb28-4533-88bf-5f4a587e99f0",
        "cursor": {
          "ref": "9aa1263d-b3d2-4683-b9da-d90648424eef",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6bc7d5b9-b028-4fcc-9323-e44140ee5fdc"
        },
        "item": {
          "id": "f4b91572-fb28-4533-88bf-5f4a587e99f0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f39b5a4a-8883-4772-95c3-16a6b23aa7e6",
          "status": "OK",
          "code": 200,
          "responseTime": 1614,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
        "cursor": {
          "ref": "4485943a-b831-438a-9cf7-dc8a2438dabf",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "27700be9-23ef-40ea-bced-fcffe0cb7822"
        },
        "item": {
          "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "062ef6ab-64af-4de3-9107-c9ffcf3018ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
        "cursor": {
          "ref": "4485943a-b831-438a-9cf7-dc8a2438dabf",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "27700be9-23ef-40ea-bced-fcffe0cb7822"
        },
        "item": {
          "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "062ef6ab-64af-4de3-9107-c9ffcf3018ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
        "cursor": {
          "ref": "4485943a-b831-438a-9cf7-dc8a2438dabf",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "27700be9-23ef-40ea-bced-fcffe0cb7822"
        },
        "item": {
          "id": "a3ad34ee-467d-4086-88d0-1c8c1c1d261b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "062ef6ab-64af-4de3-9107-c9ffcf3018ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe092947-b5cf-4a58-ab29-eefde2be5b59",
        "cursor": {
          "ref": "4eae2d74-3bd1-4813-9761-27c4469a334d",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe79f5d0-6f04-4340-9816-6f35cd5d3f23"
        },
        "item": {
          "id": "fe092947-b5cf-4a58-ab29-eefde2be5b59",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4260e33a-e76f-40d3-8869-926ac4c2bba9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 713,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac8ea4-59f8-470f-a783-395d70188403",
        "cursor": {
          "ref": "4c1a6be3-4133-4454-9ca7-58ffa52ecfce",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4464285-290b-4bc7-8ef8-6ed593eada30"
        },
        "item": {
          "id": "80ac8ea4-59f8-470f-a783-395d70188403",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2e51628b-0804-4329-8739-31ab9d3f46ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac8ea4-59f8-470f-a783-395d70188403",
        "cursor": {
          "ref": "4c1a6be3-4133-4454-9ca7-58ffa52ecfce",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4464285-290b-4bc7-8ef8-6ed593eada30"
        },
        "item": {
          "id": "80ac8ea4-59f8-470f-a783-395d70188403",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2e51628b-0804-4329-8739-31ab9d3f46ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee254fe-2c32-43a1-a2dc-ccfb456f83b1",
        "cursor": {
          "ref": "926953d6-698b-4ed8-b398-96c0a9fcf371",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f0b64a7e-e022-4737-985c-d758268c9517"
        },
        "item": {
          "id": "3ee254fe-2c32-43a1-a2dc-ccfb456f83b1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e3f0a7a0-54a4-4a6a-8cfa-f4726ffe721b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85381c-2402-4f59-a461-d1e5c7884c44",
        "cursor": {
          "ref": "2811058a-4da4-4144-a6b8-fce5baee69e3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff3a0989-e28e-42af-97b8-b6e391dc70c0"
        },
        "item": {
          "id": "ae85381c-2402-4f59-a461-d1e5c7884c44",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "caa735d8-7117-47b8-a557-8eee1d394685",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85381c-2402-4f59-a461-d1e5c7884c44",
        "cursor": {
          "ref": "2811058a-4da4-4144-a6b8-fce5baee69e3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff3a0989-e28e-42af-97b8-b6e391dc70c0"
        },
        "item": {
          "id": "ae85381c-2402-4f59-a461-d1e5c7884c44",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "caa735d8-7117-47b8-a557-8eee1d394685",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe20a00-a2cc-43ac-8cba-45861a123c46",
        "cursor": {
          "ref": "00d461fe-36d7-404b-860b-ac948c98796b",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d9de66b7-3cb1-42ab-a2a2-e576d731ef0d"
        },
        "item": {
          "id": "efe20a00-a2cc-43ac-8cba-45861a123c46",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "78a28452-1aee-4d5d-8357-c27d22bb98c4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 945,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}