{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5cc5a48b-d71f-4ab4-99de-a9796d40be38",
        "name": "Clear Cache",
        "item": [
          {
            "id": "77803274-9a38-4f0e-b720-de91551b9feb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "117990fc-a2e3-44c1-8ae9-7970a22c0aa7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0043c2e6-9f20-4e42-9ee7-a6ec004b69b2"
                }
              }
            ]
          },
          {
            "id": "c46114d4-6e30-4332-b4ac-eb158c7b2376",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c11f1cf-ed12-4fa6-8fad-4fc8d5a6d9d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4383ff1a-8234-4fd0-ab54-12c667ee2b90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6a75845c-0710-4a36-8eb2-7c80d44c0d6c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fbdf7269-1f02-4b2b-883f-0da5145480ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3472aa8-36c0-47f1-8069-5113c518648f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49f5632-b6a4-41d3-b1ee-e7ab45ff798f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d181d44-8d4c-496e-b1da-4dd1714c30a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88725ec3-4041-478e-bd25-fa98ae1191f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82777efa-2c2d-4a51-aba0-852815188f54"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06f8fec0-17de-41ac-83bb-66b9d7c51ebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1dba4a4-0c49-4198-8260-63211747ebfe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48e56315-eae6-4968-912e-8041cbf06c79",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "399f0938-e6bb-4b6b-b6ca-242b06eba4eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4444a76-d092-4641-a005-c8a60ce1dfc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a85b3186-7624-4d9f-a349-7ba156b585c0"
            }
          }
        ]
      },
      {
        "id": "a61026c8-d2ab-438c-9896-730bfcce4f35",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a4c1cff-7941-47b2-b8ef-20cdaef5b16a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ac26927-4573-49bb-8e1d-7774f229b146",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad412585-3c8c-41ee-9495-ce006a15ea1a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5730401-7e7d-456c-b179-207399e5f2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebab00f3-ccce-4a5f-b052-62c65ec2ee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18997854-6cc2-44d9-b971-8d6f5cb32deb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38124c61-7680-40fb-a4d9-1333f21d52c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65b5100d-5dc3-417e-b637-6a9b9eda1c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ff77c-036f-4f80-8671-fa7051ba8fc9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7469eb-a784-4a1c-ae06-9441d8ca25d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f130dae-023a-460b-ae21-dad0a6e8915f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d97b0ffd-84b5-4116-a77b-b903e78995e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe169efa-e019-4ad3-836d-6f75ccf7ba4d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44d874-4381-48d4-92e8-85a6a10ebe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5d4d5f3-122b-40fd-a6a5-b5003e6f9e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcb6ddd-4d99-4bf9-aa47-fb04f2a5f3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e1af56-1400-49ca-805e-14c3963267ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "511ea6ab-3d34-49b4-b773-33d14a6b007e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "644200a2-bf8f-4189-952c-d383ab83b2c1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c7d1d00-5da2-44a2-a2f0-1e8973e370dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "588ec2b5-47bb-4fcc-bcab-abdee8eec86c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "833e2c7d-6bf0-4611-a8ae-fa49b4d4044c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c6ed0f85-082d-4d63-aeda-9361de4401aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "742d1250-25b6-4091-87f3-bdd35d1cc624",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64c8ce58-3eb1-4e96-871d-896fe9a9349a"
            }
          }
        ]
      },
      {
        "id": "b8329a09-c09f-430a-a80d-34ddf3a50fd3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b17c29a-2a42-4c37-84d3-219b15b79755",
            "name": "Negative Testing",
            "item": [
              {
                "id": "570c2c11-2cc9-43b7-bafe-0e0b0689381d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0bad6f4b-3ffa-4daf-9677-3a8322388fff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3852d1-7d53-4285-8a1e-10877ede3675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19872e0-fd79-4e29-a8a1-f71b1c023bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85fb6fb-3269-4727-bef4-196f0cfc56eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d528efb-8fdb-4fb4-bad0-69e71edd8a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3c07ef-7381-4d1b-a323-2e07aa0ee47c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c39fe1-4986-425d-81ba-add687cf0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2696fe7-c5da-4ba2-87f8-17076dbe4399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfa6c25-929d-4ad4-a3bd-903d53e8e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed33534-d2b6-4052-b7f3-a597dc450429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab9ef22-48b6-4122-829b-7ced1a7bb171",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35e72a9-7eb4-4c9b-90e6-cdebf06eb747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8e0ee3-5234-4b30-a191-43abbcc02455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9fa272-62eb-4ed3-be68-77339fc04415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd8b48c-0929-4046-b6ec-54801536113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47c6d40-accd-427c-af07-06fe3daa1fec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f4d38f-c3ac-4e6b-b871-4679f07a5884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971aec36-961c-4469-9bb9-d3cfdec4611d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ae6fe7-c842-41ea-9fc4-1c197e27b1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2136bbab-bb6d-4978-8a01-b63f91bbb901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d490dced-eab4-4365-845e-86ea50160ba6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbaad77-6edc-42ff-9d58-bb2d67cdb435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f523a7f6-112e-43d4-8502-fb3b3db49d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd196184-99e3-49a9-acfc-6c343362edb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3670f78-ce80-4f1b-9be5-57688b0cb095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e28c821-91eb-4964-a51b-765e9f4e7c99",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd03c59-bc00-416e-87af-51d134a58450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc280cd1-caf2-47a0-8159-49338192160b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b30a0c-363e-4ca1-a9e5-2f90985191bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a182ff4b-b74e-41f2-bb19-dd25d1e6c740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1487b25a-afa1-48db-ae53-f944d5692c73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48997158-1ab5-4bb8-8be2-2517b5616190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cf4c97-4ff4-417b-b6f4-ee2d58c32646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9ca88-5962-4173-b181-0d7f4a7b8bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80134b78-9c7d-468a-b104-0b298e2211ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9453bfca-9d94-402c-bfac-873f92cf97e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3279617-8f37-4fec-8fe2-9f2330b2c6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2530ea5-b4b7-4d51-9f81-736acfe58215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a482de-cabf-45f7-b201-df740c24c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "375d7590-e8a8-45a7-9f7c-8054787fed84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b481046a-a219-46e7-9549-c2923b7fb402",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0d6bbd-d29b-4703-ad83-fe64362b3685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a870b0bc-ec7c-45c8-a8f8-cf659a16df2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363a1555-8a83-44a0-81ee-264e3920bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a76974-cb83-41fa-b5e3-534467854d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7df6d3e-8811-4c16-93cf-31eb103f717a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0715ad4-98a5-4008-8bc2-82c848203dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab78dca-bef9-4113-935e-1d5cb0242c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260182c6-bfde-4946-b96a-1fb6ccd7eca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6964e059-d0bd-40bc-98b6-c002f28045d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b849904b-a95e-455f-b98f-369f7312ccc5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f2dc91-12f3-4a1d-8c3c-dda57c8eb2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff80050-56b4-4ae8-9743-a99ff7e9a1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c95210e-dde7-4fff-87c0-e1713c36baaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb6bb8f2-73a6-4e3a-9f4a-0f939ca42e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db08021d-058b-47b7-84bb-060668a623f6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080bbe52-01cc-4e2a-8cef-89ce55d9f257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d39fd3-996f-402c-ade2-04db85e2152f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069dcf78-3edc-41c7-9283-e033d72227bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ecb1a58-7350-41dc-bd4e-baa4ee6ce938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f52a71-fb5c-4ef6-8921-2f75af14894d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f4e634-95c5-471d-97ae-e4f151cbbf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b60cd4-a5e0-4b54-86f0-1373e8799312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebb2577-49f4-4ecd-9560-94aa90cd4477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4804aabd-c695-4a3c-83b2-097cbf55373a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbecbc4e-60d9-4d20-8a6d-93a173318bde",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c591b63-d9ab-4da2-811e-ec137ad20969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b2af4d-b7fb-4384-83ac-d114ecf0bd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ddec5c-dc60-44fe-80eb-082b9b62ce0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f07af9a-6f7c-411b-8069-d886d5b9cde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96cafd8-54cb-468e-a122-b0e2b59bb090",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3d89d2-1ee9-49ac-908c-68a68285a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bd52bc-b0cb-40d6-a7d3-51469a1a8555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24c4dfb-3fa1-43d0-8744-b68b819e44f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c28af7e-9e84-44d8-9dc8-d3a2c1594b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb196a8-3493-4a74-aa41-dad627725010",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664554ae-2577-42e4-a5bc-c77d11fb6695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5d23c-e98f-42d3-b002-4ee06ae46b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a93aa89-0f17-4325-b17a-a9132842dc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3bb381d-a82a-4e28-948e-a69fb846476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e145a4c7-dcb6-4a85-a525-f876d3910766",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a95139d-5d47-493b-879c-b183e80046d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02721199-3513-4593-b82c-9a9d10c9ebab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e0f7a8-8975-4001-a93b-6ac2ab3b217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd68b89f-44b5-4ef2-8788-eda06854b535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b17f236-87d2-4fa1-a9dd-7fe5ecfb4601",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afbfe1e-24ab-42c3-ae50-1fc9c9010a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4234fd21-f9ef-46e2-b9d3-7f3fcaa0f3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8c9d3-0d66-4470-9789-dd8c69f55816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f494e302-9f1c-4f30-a2cb-fa3c375b8b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6108ccb-a1cd-4108-8e8a-5366eda6ab9c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe78e0-0e43-468c-8eec-49c9983ffeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f116d6f-a8f0-46a8-82b4-c809ea9ba55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6f54e7-a90c-4269-b31c-3ad19407f0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f530156-0534-469f-8dd8-15efc017b684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c22235-12ef-494f-b918-576bbb5df220",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42e2df6-1931-4884-a043-969b1a5aac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5436c5f3-45c8-4859-a44f-454216c0440b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af2a9d1-0515-4bef-bc4e-c018ac5b3b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75daef63-f336-4bdd-9169-63454b9486b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca48e73-5b44-4233-9aaa-f1c39c82f7a9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c00f2-75b9-480f-9c6e-e06fff75032c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcc901e-bc0b-479c-aacb-f8a31a8e1468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1d1867-edef-4535-a401-9030c193c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f46c00-5232-44ce-becb-4e0ceefb3793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3375824-9095-4636-b261-3e89c2d5c409",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395696d3-ad97-4de8-9b4e-8dc4ccbd5bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a1d5c4-3034-44d6-8b54-6393c4037c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500564a9-2d78-413b-bf5f-f7ee8abae498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8296e061-12f1-4e97-b00f-22fc66a78eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e72ec2e-1367-4b6c-aa9e-3a736e5df4d3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823f3674-bd56-4f6e-bb8f-26f9ffa401ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfc790e-eed9-4fd2-aa38-3a945a5e0416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f68382c-9aed-40da-9f66-cca281166027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a05b0478-927a-42ea-8654-ac04b15078ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab4b85-763c-41d3-a5a0-054718543746",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3ab8e8-63b9-4ec9-9a78-7fc22d793e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772d9b8c-b0ab-4c92-a708-5389870b18e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77ccc7-7d97-4f05-9998-fd050f5ef7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38823264-b0b3-4d0e-99d3-64de033aff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2b4c0d-de31-4200-bc0a-1b57855ee3ed",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2c04e7-6b91-43c8-8f3e-f53e017c2f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669421c7-9abf-4cf6-93ed-d414d628f341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a534d21d-3139-47c5-b689-17a6b443bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fa91b1-6c86-4322-9a05-5189822f801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d077418b-3233-4cf9-aa3b-ca63c6f31639",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e330b648-809c-4928-96b3-ab9ea6a97d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e233589-4f8f-4031-a636-99d3ee394f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddad0459-e17c-47e5-82e3-5360c40e6e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "237a9172-0a1e-4640-9814-f991064c6296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23549e4-5768-4062-aadc-71cc89b24e56",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c251710-61d8-4974-8a9c-43790105b51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb91994d-3dcc-4149-8c2a-7f632711b861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6127a287-c37f-499b-a8c6-b5fd579e913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "782aaacd-40ee-4386-9dc5-9c254b1a2e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2031e17-8a77-4bb3-b575-c6399f261d65",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8691cfaa-b413-4727-82a6-d0f4849153f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad82140e-5c0e-4b30-a95d-5fcbe4636dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80d51bd-4555-4a5a-a75a-87edd6907986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c6fd15-6f78-4c99-b266-92d196f5aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd470ed-5294-4a78-af55-a620346f01e1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175b588c-007c-4dc9-855f-4efafc9b3212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10102362-6c84-4d1e-b474-4c2e568e3540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5383d646-3617-41a9-bb19-160d0a72ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a61430c-aee7-45f4-bf49-272db0f41f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c83653a-fc40-4a24-8630-3dd494c457f3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24525a5-d508-4d4e-ba07-1cafc1495846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c33c495-7b73-4f31-aa9b-7d9431c1c413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2037d8-ce36-4ec8-a69a-de84c07463d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ffabe6-6653-4e88-8036-5faa8de693ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578c73fe-4025-48a9-8880-261205a33dd6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23288ee9-b722-473b-af6e-989f45aa3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3226b3a6-4758-47d5-b8b2-ad67eacd81c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0774bc71-7f14-4336-92ad-d5365837dc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6faf69a9-cfc6-40a9-ae14-6662e1af5af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd2707-e24a-4ca0-84cd-fcd1e2bb2602",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1dc9b2-4bca-4265-8d2e-28a5f2caa1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6b957e-8254-48a2-b8b2-9cc7cf62a106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a494a34f-eaf6-4726-9734-2617475d50ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc18612b-d51c-4762-84d1-ed727eee3303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8893d-badd-45d3-82f5-1f34874ec923",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a43d3-fcef-49bb-b80f-d73f526d597a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08b77e3-8997-434f-b4d5-aad13e0c4159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e65970-94d3-4b32-9823-efe985e783a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb49a228-5b4e-4586-87ef-f02a5e1f5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4469a69-2fd8-4135-8bf4-1c43ac544661",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3eb696-bf08-4185-acf4-cb86a8e319fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cfc091-3d53-4c5c-a037-2304ad84e15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f0c1dd-aa91-4afc-ac01-ec00ce4fcdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff4d63a-62f6-4194-970e-65f0e83fcf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff9c9e2-ff87-4989-8320-c04c4804508a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9e4076-867d-4bf8-a9b1-6f4393afae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af1fab8-92d9-4601-aef2-ddca326d475e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee027c8c-861c-45a5-9467-e4aa5979368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "633c2b47-3bcc-4c44-8332-9353a366f6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f310d8-9da3-4832-bef9-c2414b4b25f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2882b66-72c0-4364-a40d-c6a6e057dfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c5cb502-c87d-4d8d-be22-2ca6ae85a090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68f22f3-744b-42a7-a253-04fd7daa7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3294af10-1d81-462d-94e6-7af7b0ac7593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29005ff5-3060-46e5-adda-66e945d41638",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed94186-9817-40fc-9584-ad01f3a2a961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd6a741-4fbc-4f77-a9ac-cc7993143b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2282c88-72b7-4324-bace-b31b78e01c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc03ca4-8055-4a91-b7a2-e716a9ab6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14931401-d0e4-489f-a87b-e92194890222",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aadcf09-32dd-48a4-a1e3-d355f5407c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92e344c-2f39-4f3c-8a69-52637363f8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5674f4a9-3e3f-4855-bde0-6a53b26cef13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6af5e5-552f-446e-95f6-a312aacaddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f939e6e6-d850-4397-92e5-6db47b51bf39",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ece6b-73cf-4d08-aa60-2b7f20c1fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e150d29-a180-49bb-a7c3-f96eac4cd956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc3b81f-5057-449a-b722-07f2744248f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec0c920-f71d-4a56-9398-8360917b7758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0221b08e-4f23-402b-a11e-0429c0f9d138",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34719167-f8cb-46a6-a674-0c6b479a131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbfdad0-2c5e-4d88-b26c-e51653b7922a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62628da2-97cd-4e6f-bed2-bee7b132c63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d369d7de-60c7-4551-95c4-575c7882fc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee0f6fb-39e9-495f-98e9-374b9c8df3d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a227d959-225f-4af7-bcc3-fab94a838d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ddc6b3-7041-4db4-b5b5-c132390f8dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d912ec1c-5b04-4a9a-9ffa-429dcdcda3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4a774a-c4ba-47d8-b6cf-23881861a926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c33290-5e6e-4bdc-8af6-e8352b8a526a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9da6b1-c919-4311-9745-3d804744003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c6a07b-707e-4519-b25c-44b1d5f40995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916a9903-6701-4b64-b957-79fe9a426898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcfd869-f0f0-470e-9601-e64dad533ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac087ad-2bf7-46b4-9e3f-0ca7694283cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7480b8c-e524-4363-81d2-2a98881a3478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc19b44c-a6b1-4efd-b326-2e1005d235a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf504cf-e6f2-408f-923e-e982157ff482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bb66a7-ef42-4d78-bef3-2d1b0b55a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7f2082-6e9a-4a5c-9cf7-e1892a113ccf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b99df13-095c-43f1-af49-f0cfcafb06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341ec159-dbdb-4dea-b699-f97bf118d182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f458d-beba-43d5-b74a-5e4f520c9cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a592671-c278-4086-9d30-e52c4fbba061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d16d0-8375-4633-a520-67c4c2d455b7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68f5a3d-f5d0-42fa-81bf-711e1d4c13f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32155746-fb91-496c-ba62-3d95a474893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535f2c00-e860-4772-b5ea-15f87a2507d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "637752ec-2dd3-40ee-b2aa-460b0081baaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233299e2-f978-496c-9846-844c90a5b642",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0758a7e-e2c5-4268-9857-7d6cec149250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba9ad4a-32ae-4fa9-b010-60835d2e8015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3915a904-6be6-44ad-9046-e03343360e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45d9810-6581-4637-8f5c-c37b23100ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e418f22-7761-449d-8081-714b648617a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26768286-5daf-456a-a136-b47aa5f11b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63826906-7106-49f4-9af4-b343b71aa285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b7d6ad-7dc1-4dca-b88a-f75818104d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bedef3-24f2-49be-a140-74172aa31211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4745beb8-3a23-4993-ab1e-33c63c4e2846",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7792710-3328-4e4b-9f53-64a6052bcb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec9836d-bfdb-465d-8ba5-350252ecad03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef4f47d-9f1b-4b6a-933e-5dbdb2407fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e996db-37fb-49fb-a49a-13d3ee2ac3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429c92c-f26e-4292-888c-055a55d20c00",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb80f57-5865-4918-a7e1-08eac5589633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb500665-27f3-4b0a-90fd-ce271260590b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1130341-5081-4ed6-8519-5d5e07792f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e916b7-294d-4f74-b5a2-7d32af6f40ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a641df-356c-43aa-bd9b-24e5dcef44e4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b182614-30fd-43be-9da2-7d4a178abe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bac193d-552a-40fe-bbd3-40e6a7397601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2453a2-6f3d-4a07-8601-6322e9c2c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f79ec19d-b083-4554-a5c7-d73a95dda4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc7b7c0-9c3f-4037-9d49-f99778923858",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c25ad60-5807-41de-a9a4-892ddb2f24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96fd8a8-f107-4824-873f-d485666695c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeb6829-626e-49ae-8a16-39c6b2d997b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94dba38-5ed7-49ed-a165-78daf8bc5173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f067f34-59c9-4f33-b3fc-ffd2546a171b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be247cea-c257-4b1b-a8dd-ba15de2c7be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7543c090-35cb-4f45-9205-bf091c9535d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2db2497-719c-4c61-8a95-3d4f3dcbd075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b03698-8918-45e7-b7dc-28b9dc2c6335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444b3d65-c2f8-4b92-87b0-54e9ba56c63d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed79f2-819e-4e7f-8b82-1b84e9d9b988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b58c12-4bde-41ae-a5f0-63e3e0966c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055aff39-33ff-45ca-af0d-3997c0875fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9920fc23-aaa3-4473-a5f8-2652b7e5a447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ef5881-bcc2-40c2-834c-b6e799a75d6e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d381c-6901-42ca-a4ca-8c6af7d029f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899176fd-cfdb-48d8-8ac0-1d620e32c44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1f589c-19eb-45af-aa8b-ebbaf2544154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce953529-7f46-41df-8a6f-8fd5b9553917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34c48b8-39c3-4345-80b3-a0b54fbb6627",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c47f381-53e7-4e63-933f-121311842425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6752dbf-90a1-4314-8cd2-0656aef8cc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e91a6d-ddb8-4841-9f99-b49343e296dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fe6dfa-f367-4ad5-a395-17ddde6941a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a42e497-3118-4829-92a7-ac69e51b2501",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8061ff2c-25d4-405b-85cf-889c50fab83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0514eb-97fb-4741-863a-1e97945bfe08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b706b9dc-bb19-493d-accd-599bc7d15477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99dbb1b1-54ba-4217-9663-9d7e54e2bdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8ab7db-07c1-4ee0-867f-5e7c108bc16f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef221c9-ab28-44b7-af28-b54698d64d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92651b0d-d949-4081-adfd-b8a86d77fdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8872362-acce-48a3-9e63-2e1c6ad8e191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed6806b-e419-41b1-a7cf-81b811f48431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145c320e-bf4c-4d76-a723-7a17ac32b8b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7306314-91b4-425c-977c-47924551a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb851e17-97e2-4d8e-b7d8-f914cd20c37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfddeae2-a1bb-4ac7-813b-55e3fd030c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "253bf05f-137c-48b0-a1f3-ff57d445c033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cb97ba-5fd0-44a9-9099-fd336b6de24e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d77f38-6856-4d82-96aa-8a15b120ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05101f32-0b56-48f4-bbea-bbd29c3b2f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80f4228-b1c0-45f7-a86e-60802c8a7b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "691253a6-1654-441a-a4d7-a62e14a7c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10689ac-fb02-4acd-bb1c-d0157ec77c11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6283d12f-3bff-4b71-868f-07713834ad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb5f8eb-3467-4850-9163-7d57845fc3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab9ada3-ef57-4ce4-90cd-8f5a15a8bb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4014d45e-6373-4e58-957d-dbc2af509136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ffca23-38e1-4feb-9b41-d30b1c99bbe6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac643b-823d-4afc-ac47-0e1b33a7dc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17267443-76e4-40c4-a3a4-8437269094e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726a83c4-6b4f-4996-8c54-83b6fbb30f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71baeb95-eb4c-4ba4-9be0-f8c8f51d8462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cc20f6-e147-4007-939d-b7fd7ba8a847",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6febd0a-579f-41a0-80c2-8dbdaf9a9a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b0a8f5-fa33-4a02-840f-a9fa18c70ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc9be81-cd93-4362-aaa7-20b0cc6565bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7259e7b2-2342-4d77-9fe1-2a5ab7ba8fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06d20f8-aee4-4031-9aa1-bb19f2f12cd7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f614c20b-9fbe-4d7e-b25d-bfcb8f09e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a74f182-d888-4504-a560-33d2a7a6ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c59069-bfae-41ea-95ad-ddbfb401b7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af9ee5d4-a059-4133-bed6-82075eaf9cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cea93d-038d-4906-832d-fa4d45fd505a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c83326a-b2c8-42cd-b42e-850173d97ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e636bf3-03d3-49d1-bf10-a3cf1e4be118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eab40da-c58b-4cb7-8750-465a77e04b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd68a47-4a22-481a-bb3d-337e931166e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a4b92c-4d84-4b8b-8f58-41343045b82e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de30203-c3a5-472a-9ab9-73a409f6faa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95edc8b-24fc-4dc4-8e14-71a4f7a8581a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d04fc57-c219-4293-adff-e11d5e8f15a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d7fa96-761f-4efc-896e-e1c2dff09dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3d64cf-47d8-4ca0-9007-2667e35729b3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c48a9ae-5fd0-48a4-b02f-a4e817a86da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17a1244-c630-43ab-86d6-fa8214eca4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaea90c-d222-4216-936d-abea9eda94d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89934c0a-56a2-4710-8ecf-872187386636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99548bbe-b4e2-4caa-854a-00e2300d25ce",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9091dabc-0c04-42d7-89a4-f7bc0f3e2ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd451d9e-64ec-4ed3-a42b-82742cfe1d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd19b08f-1ec1-4969-9907-eab144d1b105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa470a32-2f22-4c58-90cf-599c6fd6a182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099c4bf8-defe-4a4e-9fd8-a8a837541ec5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770de54-4c2f-453d-a2ee-3c89d5a165d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df37cba5-d895-4315-8a57-654a07cd4933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8040df8-ad29-4d1c-ae66-1dee62e121f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b05edf-872a-4482-9d81-4c6fe3ad88aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346cd349-c3cd-49c5-807d-7d76fa0a689b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc53f1cd-7e50-436a-8485-e0a4ddf56b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923485df-27d3-48ee-bcfe-4d694e6cd034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3defa0c6-317e-496a-a7ae-4274742cafae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b4ffa1-d437-43b2-a941-4d29796b9ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdcecb7-4284-4afd-a920-3360afc0b2a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb43a6e-2875-406a-bea9-5f6066d9f14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e935d82-c634-48ab-8924-da3cc9f01bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef88f5-dfeb-4895-ae5f-039ca4bd68c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be53960-1ae0-4448-ab97-5221f16cc96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851abea0-380b-4f66-97c6-a3654d7c3cd1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf73424-d193-444c-ae4a-db649c25e54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b31ecec-9264-4fc8-a1a2-ae9768583183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c953a37-dabf-4eb8-8ca6-1c9f64305bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "319e91c3-b75e-4718-b569-1b2ca0b1ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db19449-8875-45dc-b494-72f14ad4baab",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f3cac3-f7a1-405f-938a-85f449e585d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4537d9-d7ad-47ad-8437-1201fb8b8901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278a254-c748-4c20-8060-657091fb1d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44709dca-1154-4135-a16b-0ad45556332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d98b88-8fc3-44c7-9366-3b194fed4904",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faeaea3-022a-4542-afee-e74371ffe13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d6db97-ffb5-4286-8b1c-bffc5791b7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b632de2c-2070-47b9-af07-b0371e1a64cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ca4372-bee8-4065-91a5-5841ad847801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73cef7f-5ebf-4d83-9d05-cb7b437ede9e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e65016-105d-4518-b019-beebeb03e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e8bda2-04e7-40db-8937-4cfcb8607c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc8da0d-c23a-4e89-95aa-e2907378c170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5bdcef-09b3-4432-9b43-3e0900e8c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f30a2e-189c-4d4f-a375-9a0e730d9869",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b37e9-f538-485d-a009-19f5eae5e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f45281-0e03-42bb-b7eb-89c0ecf4566b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810acfdd-f76b-41a2-91d9-1fed524c1ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2b78e9-44da-42ec-b15f-43d1ba3982e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9da546-7f8b-4c3f-b4a1-40fc728f3f07",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbab3f9-539e-4fe8-94c3-a981c034d628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146f5a37-2a1d-4903-8dd7-1d2f9b0c001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c53a622-ab74-40bb-a934-2a48eb5956df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8800ae89-23bb-47be-bd60-590e49e95337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909003b0-b7fd-4b58-9990-780b25d35f0c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a9e7a8-13e4-4a5b-8143-c03028f22e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c989dba-c925-45b4-bfaa-440b2c9a377c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f1d9d5-2187-4ea1-8f81-6906d5f57491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30e2788-d282-4c56-99d0-b1a28cfb3065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c55a1fb-7d70-4f17-9ddd-5dfd71f6f2df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29faf4d-65f9-4134-a7e1-b1cd2a7867d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd40990f-42d4-4d54-88f3-bfdf61483492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb20912-669a-43d7-bf84-4f7e7546e1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f45de1e9-5a2c-4b77-8fd7-825bd9152120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6909c0a9-98bd-41ee-9b4e-861d06349f98",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44764b6d-5e8f-4d13-9516-f49385d3663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35a7ff3-0d6b-4d8c-a45f-5fed5dfd7d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5092912-2779-4b76-bad1-3997062ddbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af3d1f1-a948-4b8d-834f-903c1e3c955c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d423c8f6-f56b-4ca2-ba43-7f1f6ca1c524",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b643c724-ed2c-4bb0-b05a-ac927bf6400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0da5bb-a5c2-41b9-b02e-b5d59604e541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c94204d-2782-41fd-bb38-d09eeb379e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b13ba4f-507b-4a18-b644-070c35983431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb2bc1f-26ad-4c90-8945-4f71661c512c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383142e4-7c40-46e3-b7c1-b0af5577692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d176a0-d2b8-4a27-a6b5-2571925b94c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b7860f-6f4d-4a68-ad45-40b756a80895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "245fe2fb-a4f7-4bdf-8150-25c9e202b8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d024f5f4-9994-4c4e-8615-860304f26bd0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017136a0-5014-4911-93c6-cc7b39bbcbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c30db7-4ec8-45ac-a39c-487e96f30055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42898e7b-faf4-4ced-9609-f01b5bb6ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e347fc95-3810-44bb-a86b-f97b5655980e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bcd43a-95c5-4c6d-b8d9-61b3da95793d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a50982-2124-4def-a031-ee0e2df633eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dbdd50-9685-44bb-a79f-874b97263bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728b3a9e-104d-49a9-a503-c5c23d1b8eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "154be58e-112b-4516-aaed-1a27173f8d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c473cbc-34f8-4587-a9b4-7b9a5e8c610d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd46c81-4fc3-40c8-b9b5-87a302e1c557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7900418a-a560-478f-887d-03884b45e70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2626fc99-2694-4c12-8473-7114cce16cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "981103e3-4723-4d55-a5b8-b90f2966bf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b315e9-0b59-49cd-a850-5ffa6f38abd0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ac683-baee-4858-8786-87bd71a85bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f4ade-9e8b-4e70-9bf5-e7f9d5798170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0285014f-53ee-4b6d-92ee-b702f33aee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e77a6a-3bd0-419b-8925-165000957024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef7c8bd-b231-4a4f-9245-4527b2f48027",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5ddcb6-0a48-43ce-ad38-929bc0aa5ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ca21d4-e71f-4d50-a5ce-1c3642602a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abda930-f9c5-486d-9894-67d191f49ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77fddd5b-1fef-43f4-95a9-adf691474a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc56f65c-8c84-408a-94dd-73f85bf792fa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17d70ed-c76d-4e72-8c52-8dca34828857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5f43e9-e655-4e2d-817f-36c51cbba8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc721998-5e80-4361-8b29-fceb87b36991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e72424-2b13-44bb-8f2c-33fb1d56ee74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6299770-aa55-4a17-a2ec-334b112af718",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c1ad00-2927-44c7-9351-c2364492d98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e2136e-5173-460f-9d74-d5959344a685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75ce800-52cf-4a1b-afb8-e25023f7353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0bf8c1-dca8-4645-8294-1635f8b41279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb160ac-452e-4083-80ea-08204949266c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ade3b5-4685-4f66-b8c5-418bc72ccf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3052852d-7b30-4c90-a651-08930da7f7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a99fa02-fcda-48ad-a171-914efd234c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc0918d-1271-47cf-84ac-04a973a97264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923809ad-f6ed-44b9-bd48-f4a208e366c6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a895cf44-0d2b-46f5-9eae-42381d1f48e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054fe4a3-2308-45de-8a2b-a44edf1c2de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f804e1-d803-4191-b80e-bb7bc5194979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2efc03d-7f72-46ee-89d0-24b3656800b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b390a07d-d38f-41a3-9e42-6996b596102c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d8ce7-e150-49e0-b380-552b57be29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff15e419-cc33-467f-be17-cf025d37e60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cbb811-ffb7-431b-948e-85fd45c3d308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2223eff3-1522-4288-bad0-28ca7cae580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39966f7-f591-476f-b7c1-e6c24b116704",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a856ab-bcbb-48e6-9032-494848c1b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5f22236f-ffbf-4445-8fc0-6ba80d2ef3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586140de-e6a9-4400-9d4e-ff9aee27168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb6f1cd-7e91-459c-9ace-890892789b72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "628a332d-4a23-4648-be6a-dc93eba0a332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3acaa408-cff6-422f-b2a5-3e7b5f195797",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877d9b9-ed8d-4f51-a1de-20eb11f66be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60ee9e74-11bd-4ca4-872a-063005e85205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd37f1cf-ddda-4b2d-baa9-bd1ee129c687",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5e26025-305b-4c97-bbcb-383babf06528"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86a96878-61cf-4e5f-b196-391e4f49761b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0d2ef13-662a-4433-a350-1a40c4dfded8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7885d70f-470e-4c88-aef8-dcdfa5561218",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a078fb30-ba1a-46f6-9da1-01e7a4e18e77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58ce23da-139c-4690-9da3-26f8fa27a63e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbedc747-73bf-42bd-870a-493de54f363f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b6fd60e-aaa7-4c4d-9189-33c0a6214d7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06892b0c-b848-4294-b997-416597aa8043"
                }
              }
            ]
          },
          {
            "id": "8ba02bf2-0714-41d5-850c-96df1143eb6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c525d2c-d2ac-462c-9d76-9160720d4afc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9232d86e-ae0a-4a3d-a725-8620237bb5a2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948b25b0-7c91-48f1-b7f5-1a58817ca45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ac7f6276-affe-4b1f-9bed-e9ae8304ccf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eee579-2b8d-416c-8920-98b522d4a2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ca02c8-b383-42a8-a9c6-fd90f5aa55c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "263d7f9d-6794-4563-8b3c-33bbb0a5bafa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b01dba12-e1ae-4d21-b4f6-4f8385ee1321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd060d76-5bb0-489d-ab7b-f49ddd5242a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4130c6a7-91b8-472c-b8a5-4a76b0e399be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afb4bb8c-9c2d-43cb-a7a5-40c10dd446d8"
                    }
                  }
                ]
              },
              {
                "id": "8e886ace-82af-4c14-85c9-ffa223dd8b1d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "684222fe-0e39-4d59-92a2-cbd7e2b0be8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a157bc70-01dd-463c-9172-d9767ad3078a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0ff91a-6036-4dd0-8a0c-69d6b1dd007e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4bdb7aa-9cb6-4e81-b988-f07e30825844"
                    }
                  }
                ]
              },
              {
                "id": "2b5b6498-6be2-421c-a66b-200c7ebeea0d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5279da-5426-46e3-aa14-7a86eba245e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b35d440-cf1d-4ae0-ae30-9685c73d7f77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ee44a4-bc34-4181-a23f-d485b41142c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e56880e-bf25-462c-b52b-39b152581aad"
                    }
                  }
                ]
              },
              {
                "id": "f04c9909-ca00-4a0a-a691-7dfd00127c66",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0703e201-75eb-4b50-b59e-0fd1354e9cee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35d587e9-8674-4462-a261-1d2d4de4a221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edfb1e1e-79ea-4049-9d06-f541d9992c10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "637a34dc-d0c8-453c-aa66-08f2768314b1"
                    }
                  }
                ]
              },
              {
                "id": "33add580-b59b-43b1-a72d-51b0e8cfa3bc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "231ea02c-1e19-48eb-bdc4-ce6f617a8379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64c95ad1-f8c8-4854-84b0-23542f8148e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "949fd70e-4286-4138-a36c-87d85db8d588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "81561447-1c94-4fd8-bac4-1548bf3a116c"
                    }
                  }
                ]
              },
              {
                "id": "6e6fba66-b253-4d06-b269-44f52ba24078",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ec1950f-e0ff-4310-b1fa-6f3834f6e603",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89442eea-a330-41df-a8d7-2b66b596df24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb4bd79d-2f39-4e34-8b89-0be5ca7d44ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25dc0cdc-9032-4f7f-b6f2-c34b24bbd50b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ac6f3be-377f-4fdb-bcba-f40e03f16b34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f33a746-18a2-4b0a-93e8-efa6d0d42c3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cda7c5c9-b208-447d-af98-031619be9bf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3070b72e-b8e8-4494-9ba8-3680e187b5e7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8572df88-4af2-40aa-a704-5a3a78516deb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "70b5e911-330c-436c-8f63-304c8840800d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f742de02-68d4-495e-8a67-86dcf3520017",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2f42068-7854-402e-9f10-8a22f85f0a27"
            }
          }
        ]
      },
      {
        "id": "4a38825c-5f62-455f-8c2f-9bbe7a192744",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "83091442-5951-4a05-857e-bac6c9894f2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcaa4c0d-141d-4042-aeb1-5b541cad745e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89bc399e-1bce-49d4-8613-3d3a7d2d53cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab8b1c-5771-4aa0-aa81-d4af9f1b4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11c7c8a-5d33-4e8b-8eb5-2bde10949789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4899764-2aa9-4b4d-98ee-2e96a34e775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba51a61-0596-4dd5-b32d-56e4cea6a18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23515fe-4a4b-493b-b539-cd6ab8b82768",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ab27d4-e141-47a4-9b3c-3c36fcf0dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc85ef7-a021-4b3a-a0cd-04d2a865bf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955036b5-2586-441f-9a03-f13b8ccd597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b1d79b-220a-4e79-9d4a-8316f4aeb150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7993cd9f-f7d0-4d02-9a6f-999563bd2e7a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed08a20-5f23-4781-bc4e-6e2becd07bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bc953a-f501-457e-9561-d8878dd66ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a12fb4-ec12-4e9e-b9bc-24681d5f54db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff24185-4414-4eb9-a870-ff8be4316a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afe3c93-4111-48e2-bcfc-695713aa3bba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af19d57d-0d7c-4e87-bbc0-cb23be1e3b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019ea445-6c1c-4448-a46b-35e4a0ecbccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82404b70-9ca6-4da6-864b-02cbd9cd59ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f4573f-84ed-486a-a1b9-df0b2311d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b48de7-367e-4690-b64a-cc8659f48108",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e5b254-c9ef-4d72-8487-336d832d6497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468eca22-f0ee-430b-b09f-7614991fb8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c628cc1-5de8-4aed-92fc-97b43c5e1a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "267bfe5f-1562-47f1-9070-ff3d46fa44e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f499c09-e680-4d3b-b2ec-df265cdd6636",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5456ff6e-e827-400e-8dcc-24336f6a8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a014b9-c812-483f-b300-1107cf83b089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f10b37-f06f-421a-b2c3-f700569af296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a1fc63-1da2-485c-93fb-99fb05a1b369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c60d50-4121-4ea0-8604-0221e6b4a8d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c143ff-6036-4271-a60b-a280905c8a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed01192-aa78-46c3-a129-4cbe94ab5622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d69a3-7ec6-4e75-b6dc-e8fe8b923beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaf4e9a-e87c-4d68-880c-ad769ba842fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60c3841-79ed-4335-b465-4d3fd02a7bdd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffc89d-cd8d-4bf9-8973-34ea243eb8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ea450a-0ff7-49e6-8339-325a11a60c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8786b74b-e559-4e14-ab1a-0f254fcc407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "580bd2c5-42fd-49ee-80b9-8a408edfb0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b549fc-d958-4c02-a3cc-524a948fd8d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07196cb2-c6ee-4d8a-ac4d-eec177db9795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349b8dae-8286-4acf-9e2d-92132f1bd5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2c3f0a-b4be-4b3f-81f7-69ec32925d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6704086-0f44-4b54-a12a-31d93d2feab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4243a7bf-bfea-46dd-b9fc-c63717eecd0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d229fad3-fc1e-40e2-bdc9-9a392242e770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f28daa7-4d05-4dce-aae5-64426aac24f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c884b1-6251-41cc-bbfd-12d78bf6c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "313bc8db-c167-42e9-bfcf-61beac07db89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa0519f-f740-47c9-a2a2-ca3b1fa6e7c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070d4fb7-4680-4edd-8b73-a3aa8f87f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fc3401-4b69-44b2-8991-452151d62576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549aced-7f62-4124-9023-ac3e7660384e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24b2e2cc-a95a-4468-b501-308fff705993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152df894-2a89-4389-a67e-39ea77e32975",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd84a41c-c35a-49af-ad77-c411b6fd0709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ba9f23-4fb0-4184-a926-9a160d1888de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1c020e-303e-46f1-9bad-514ec25bcde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8565a8a-376c-4ed9-921e-59be246305ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee0c6eb-3f8f-48da-96f8-58953dd39d3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1492ca-64d6-4ace-af5c-1547e17d7422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c56962-9a0d-4d6a-bc19-9d244efea605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20e1fd0-f100-4985-96f6-61d365f25b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "327aa806-334a-4047-b4f9-f7be7e243175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f745ad8-5661-42ae-9bb5-1050def4166e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f3daaa-b57c-4f77-800f-e3875ba95449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10b2fdb-23df-454b-a137-6ddfffa35a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14558933-70ca-498a-b09b-15878e7ce1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4ae59b-d069-4659-9177-52962ee3f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b2ef15-832a-42d5-9729-606d10e673dd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b9de3-aff1-44e6-b880-544ea26715f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72731a33-50f7-428d-af1d-a290ee833e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1116409e-69a9-4db9-bbdb-810fe1e85ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed2244b-eba0-42fc-b3b8-c599566c57ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7032343-f45c-4bc7-9ee2-bd34b2d7d643",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc39e7-67be-4b73-94b0-744dac3fd1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0924ae-aa92-4b1f-9055-025c952f0d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdf02ad-1b30-440b-9b69-bf7a14a59353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "833abe94-051b-4f2a-a1f5-e54e75c7014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6646b3e3-3610-4ca6-8d7f-68b44ea2c86d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd630a7b-7aef-4c33-98e0-649dd1ff9fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673dbd24-c7b6-457a-b254-8f899286f0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da592c7-d6a7-4710-b7c0-bf4703985fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ca5609-705d-4729-9aea-ddd16d6bfd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ec504-d07b-49a1-8ffd-a0af209f4219",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea3b1c-13ab-4d6d-85fa-8608a6117671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5bbcce-29d7-4f05-9d76-ccaab51b601d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da0eef6-037e-4a4d-903c-a283304ccb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca19dd4-f2cc-428e-803e-4f0cd5bb9fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dafcbb-603e-4e49-972e-2717590367ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37b7096-1293-4762-9aa2-06fac5735db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c142cd6-a54c-4a82-8047-d75e4b01511c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdadda32-3324-4e79-bbd8-8847e30363d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37794502-9464-40fa-9b10-ffe83c589857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45b3e45-04a8-4cf5-a95b-3cf4f6de1dfa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e2577-bbdf-47e8-bd62-f19a7a06ef0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8312ed91-19a6-4b31-92d4-61c2c194ec5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df41469f-5fa9-4b6e-bc1b-e19c44103e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9202c0-bc3a-4ea7-a102-6d78f10de96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b0a744-048a-4420-a810-0f61f25239c7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1ae935-e79f-4e6f-a67f-25d3ee858689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fe597d-24cf-4ea5-a60c-88a9c849c4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92228810-4166-4f90-9c9c-4a7a13accfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5acf6ef-1905-4016-963d-0fcc73be26df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad55f75-22a7-44c7-a032-2402bbbd9f3d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5951f22f-b50d-4fd2-b788-8419db2b9faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e315601d-3bcb-4415-9e3e-6671a373de30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d41155c-afd1-46eb-a385-742ce10c066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9c5100-46d4-442e-8a5a-a6ded0174362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38290e5-2d12-4347-be8c-1ecc7d69c1ff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7856625-a0ca-4740-9b72-1235e8799c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e008a3-2b9c-426a-9bfc-cb12322a4cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f6da9-0266-4da2-a2eb-c40bd194611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f239bb5-2bcd-4f92-a6da-088142133afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0123828f-c0e4-4c48-bbc7-28cb22cbd78c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2853734d-7a6e-4ca7-bfd6-c80d784d4d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44884a05-2d18-419e-8a94-c24cfdbfe4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019ea8e-03ed-4802-b5e9-184e7f42b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92274d58-cb97-4dbf-a328-de009541b360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b47903f-2d0a-4f7a-b450-4fd3b5592f63",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2eb867-7369-4e56-b3e0-662b3adbeb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7849e8-6bfc-452a-ae32-8f2a30ff63c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191ad87f-2eef-4825-aa6f-66633193c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c787300-a286-48c1-8503-9e34de4de456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e396b428-4571-47c6-9a30-6a58834d7957",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877b781f-f9bc-4d57-9129-91af51489330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2886033-d7b0-42a0-b394-5128386f77b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd702632-713a-4656-8370-1e7f56b414cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e03a5b3-5ca9-4ab5-8c60-0265c96bcb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79d54ef-ca7f-4ade-8403-4993a0c10f88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d68ca98-e043-4aee-8cad-35e4909caeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98fc5a0-19a5-4fbe-821e-91fab5e02e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c2de65-d26f-402c-8126-bf5a92c28bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da716151-0832-4386-9651-ca52f34e77e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea911e95-8f0a-41b5-8c33-cbe178a07638",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9deca-97b9-4cba-96d0-1d77fd8ca67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecf0917-786c-48f6-9421-a91944c5b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a101f459-367c-4133-9b5f-10f785fdd282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef17841a-b5eb-4368-b51b-e8053c8760a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb195cb6-da08-4208-91eb-67da6a274001",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d57d745-5db7-4e69-9646-d70ac227ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fc4b18-3a76-4e70-ba3d-1c9ed9f0b427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eb79e0-bfc1-4e6d-b038-4ae27d84de1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b5c249-0584-45d7-8d3b-0fb5d57bc546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e53fd2-4d7f-4f75-92dd-bc0e800200fe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c0f110-3fd1-45ad-9030-aa28dade75bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b850de1-4152-4b2b-aff1-8d1e82f6102e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb5ef91-288e-41bc-a762-268cca70f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59be4ba2-dc92-4551-b6c3-99a6cfb80e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2f3eaa-c58f-4a88-8ae8-669ebc3036e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ca2bac-0959-4306-9343-fccdcc22303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beabd104-3802-47e7-90c1-e4c7087a239c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8776d74c-9b1f-473b-812e-fca53deb8ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f823fb-d107-40d4-92b2-666d1d886d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f86602e-f35b-442a-9909-ca8661597050",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec37df3-e69b-4550-88da-bbb5ed37db93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049a8a5c-2737-4927-a07c-af1a47e7e18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ee651d-6d62-4198-a134-ce6557d37b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94289402-154a-4288-993d-7216c9188979"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d876299c-aac9-4f68-b8ad-45526a61d03d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3520e7a6-b06b-4f0f-88ea-695252df0800",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2318ffbb-b46b-4af9-bfc0-696240bd7c10",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63a9e752-11f3-4e56-9d2d-67bf0716bb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03b599-5552-4033-bc92-e2a308a6e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93ab3ebf-ff34-482e-bd78-59540787ac73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97fae541-904a-45e2-87ce-213c0d70c52f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b05527bf-a88c-44a8-a100-4d65ddfb43ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa14a458-e919-4996-ba4e-c88af7f9279c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f958b69f-8785-4873-914d-e4086f9be1c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad560b5f-59c0-4d1e-8ca8-628b09159b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed190a4b-131d-4213-95aa-72bc8dc12cbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8df8cb2-cd20-4f0a-acb9-24bfad96144b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1db5088-2434-433b-9364-e67aefd0ead1"
            }
          }
        ]
      },
      {
        "id": "2ef6d5e8-aa6b-4173-ae7f-a7361497be6e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "382eb76c-644b-4f75-a9c8-86e3a41fe481",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a341a9b5-12e3-4a83-9189-88fc3965cf0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0bcf587e-d0e8-4b18-b16b-9934d8594316",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c607e1e3-3bf7-46a3-875b-b7a49c507ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0aaaf0-f5b0-43ee-adfc-0ea42bbe284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e31156-0e3d-4688-8f82-f81108d4342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b01b84-2495-4159-a476-a3896d420b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dba7414-5096-445c-bebe-f9a555aa6f5c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f154808-a8a2-4cda-9df7-6dac7de3b789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8978f0a-54f8-486e-b659-3c35b349f19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264d1a1b-9245-46d8-be29-ce0544f93f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd2761a-6f4d-4e96-b9cf-bbd1d5b6752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dce5b3-415b-48bb-8086-2659605b4e6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fe38d1-0a8d-4ea7-8a15-c02c2451c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4280cb75-823d-43fb-85e8-56a1b9af4260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff3f7f7-3b42-4204-b96e-490de763280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e82dbed-c51a-4f02-9afe-473bdaaa722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03752e0e-b41d-4719-a734-261483c6408c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e866587e-dcfb-4ef3-ae7d-37d816f88484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bcd134-c642-4235-8444-f23bca7e611e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2360c4e2-d59a-4429-ac7e-e9249c1a165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e8432a-fc71-4f5c-8892-ed3adc8ef4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908194cb-acbb-4a87-bf7b-a12419a60e61",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f034fc-e20f-4c2b-873b-4ede4d54105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d838da8f-d00b-4605-ba05-ce005ce33549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b7a7f8-735b-4953-bf5d-41364d5cb5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b335de5f-0d03-42f2-be77-e53de59298b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c340dc-3d1a-4786-826a-eb744838fad9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6a7c45-4470-480e-869c-702b18abf7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9eabffa-cf00-4057-8d38-e950689f6a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84d4a71-bd24-4b8d-a45d-1c1cb9fe6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1990ef-1ca7-4473-be92-24ede94f9211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61d721a-bf48-41fd-af21-1878fb945009",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa1eb9-0e01-4703-a127-ab1884b0a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56697f49-0c7c-4652-ae42-7cd439327e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840db643-70ee-435e-850c-05b3ee88b153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88cab9cc-e0ca-491c-9541-d95aab26d959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9e14be-8fa0-4d9f-819a-19be5f4167c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4610c-e2e5-460c-bdd8-29ebc69c071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162720cc-333d-4fe6-9f62-2b0401cc9413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c76df3-d398-4504-aed6-e7dffe3004ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "877b10c1-873b-4564-b770-fe8502edf424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b70ab-c493-44ca-9748-1d8eb8208c78",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3fbdb1-4215-49f3-bc9d-6f7c69c5e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1615778c-f07f-4bf1-8265-b251c57f7dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cca088-72c5-4c09-b237-0d5b1d327b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf38e95-b2ac-44a0-b7c9-d3a9f9350195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae53884-b608-49a3-9b1c-367062b8ac2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a093e-965f-4973-ae34-4ca4eb1e70e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c8b144-f65a-4ea8-88ff-cef8a9d42d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e88fe9-3d90-4081-a583-99b2e2c6c190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "746ba191-5fed-44ff-b870-5de04858c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7695a3c1-25bd-48aa-8fc6-3ed83d616f36",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851d6ed-5dbf-4eab-8115-c5497689b394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e430236-6de5-49f4-9ce7-f851298ca884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db75e9f5-089f-4d83-b86e-950d8655650e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5431f0c-3fe3-464c-a4ea-27b6c3334bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee17882-b97e-414c-848d-21e2f3b01cb4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c067f646-d8e2-4796-8a62-1d5e38865302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ee5104-381b-4908-9c0f-dcb5871cbb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0728b1-24a1-4c97-83ad-7fc2257deb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7facf1-1147-42c9-8eb7-bfe2524d2483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0038c0-59a0-4fa5-9b65-2d79dd2673aa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb3f57a-ee13-4c3a-9332-786a7c371f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959de797-ec69-486f-811e-ac2c1c010115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0b83ee-7694-4621-b29d-630bd82ca392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d763cb8d-dd54-4553-8f09-a6ef1161e1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3e5bfa-4ea8-4c41-900c-f9d690487af2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197b8b54-2dd1-46f7-adf2-418d1b068410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61808cba-3e41-46aa-9200-4d923d2cd7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d66d6c-0cee-4d78-b840-a4cb45198f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10453d25-6374-4469-8dfa-385357d6fd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3949d3-9475-40f0-a94b-1e446e83c877",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b06f742-4dd6-4c41-95a4-ec8c86e02205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bccd57d-0925-4db9-a51c-a0a20b489527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4622cf81-75ec-41b6-8b8b-e76062471f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87bf477-d8b4-4fa2-89c7-5decab11c51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b62cef9-0577-480d-8bd1-e08f9c937db9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbf5679-443b-4b77-9091-df02c0054fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4127af05-4dc1-473a-b161-eca7719371a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10ad53c-ca2e-4f7b-b997-8aa14f24a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9b9f9f-ce44-47ea-9d6f-1593cbccad9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f749b2-9cce-4a18-8fd9-c5b4dee424f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415e648c-0eeb-4abf-bc03-afac1f02c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9729e7-bdac-4019-8d90-eaa25d4bd813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfc82bc-ee20-4a55-8654-7a4f56455215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddfa6ea-e8e8-4bf7-8333-06e621c221ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbba1e7-f873-4de6-8799-6dc4cae74dec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1b19ce-7c90-41e7-85ba-596d857e2852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a2b3a4-11a5-44ee-a2a6-ca2569a9f0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b5aae-f218-436c-946c-8f4fec64d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eef8ded-b2ae-40a1-a311-d5285ea7cd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98468441-e7a6-48b7-82b0-a43791ec10b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd48b1-4036-4de3-adbb-b07dba4d9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8d80c4-c32a-45b8-bbf1-e9d9d77103c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687bbb32-7c4b-4699-8f72-aa0dc2eabec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c78e099-acf3-44f5-bb40-714cb215f281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a367d5-6b08-4572-a5a6-8cf29230b79f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e77c1f1-c5a9-41e5-be13-8fac6cb1eb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef095b15-0793-4e2b-8542-e4ecc5dd6c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea626310-9f3b-4908-b3e3-91dc7aed18ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb96e667-af0d-4420-a52c-ae5db495dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e814ee6f-e5ef-405f-883d-5f7b13024970",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaf2a70-d37e-425d-94e5-7b21ee8ed118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cc4bcb-18e3-45f0-924f-474424992e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638f1cf6-7e34-4568-bd4a-4c878f9c2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e794c606-60ce-480d-80de-2d01576c0246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae248625-8ba4-49b8-b7d4-9d78250969ed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998a1ed5-8a91-498f-882c-764ce56d98ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e667b5b7-e0fe-472c-b172-2cfc48b746e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a2fb77-3d74-4758-a42e-3ed8bedb3069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03577e72-e9b9-456d-8167-1ba4b63ac471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9da2a-3fe5-47bb-9b12-07171eb79917",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800119b0-ee12-470e-90e5-05172e8b016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4852e23-c0a8-41cd-9de0-ae711907b80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487278d7-9672-47a1-a74e-40b8cfc08455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2078fb7d-60bc-4b62-9e2e-996313db8ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1de2d7d-1dc0-44c3-82b9-5e3318de9d0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf648793-0090-4119-ad56-da9131e3d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36ce261-b5b5-4549-a984-d72cd3b92985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab4cc5-e365-4401-b38d-15cb7c09648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e58da74-b1a0-4b7f-9e3c-88a347d2ee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61901b05-8556-4f3c-8a79-a052be33227d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ac98d2-5d95-4975-90c1-a50e918a412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a342805f-924e-416b-a2bd-ed95c02bc5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a493fda3-beb5-41fb-bff7-a4fe6cbec186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b9a7cf-68a0-4d8d-a20b-432e47e13812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894c5d4b-647c-4bf5-99a5-028d1c48db60",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad4b53-50cb-45a0-a6a2-be373eecb21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d320589-a638-479a-b13d-35598bfab375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4658c5e-3ef3-4f00-b2ec-73b3afba7a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f452aa4-07ce-43a4-b3e5-0838e45c8d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed590ad-01da-4055-b334-8f77d8a1c3b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf063d7-7179-4146-bac5-58bd95d19421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcc2bf8-d463-4a93-84ce-c4de5a653cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28081c64-8a19-4932-9d56-c86a5f2f78cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdb0531-26aa-40e4-a4b4-47035cc0891f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fedf05-9cc1-4f09-b749-f93e9c820e02",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd13ec83-e80b-40e9-a8a8-916732022ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d35ec6-a517-43b9-8897-fc2a3aa12237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed5882-762d-4c40-b757-c08ede2e101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fccf9c-f4c5-4160-a7a6-ac05b667e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f409c19-e955-4710-bdf5-6141822ec568",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24817797-cc4e-433b-b12a-a59e7904043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cc5ce8-e156-4891-a623-6bf0f20c6d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532b8d70-8a27-4a60-93b2-8f4ef4c59753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57d9b13-e5ee-4552-af50-1a876a0d0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac7bacc-cd15-4ef3-8261-ff375eb95cb0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f106756b-26cd-4c25-be99-e2ebaf0d5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9636999-f8ec-4906-b418-e5005d76c920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960c71df-1e19-49c6-9e46-da4eab92b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659f6714-e996-4f98-9f74-3e2367290f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fcfc4e-543e-4c2b-8d96-d0f685349631",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84539384-48df-4fb7-9e47-ad3f2f59d211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34183d5-e2fb-4647-8fe4-01386cfb7182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3073b563-08fc-42ad-9da5-2aa28d70765e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1581cc7-1ca6-4d15-83a8-03e5a17e5bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3d8d1-5f26-4b14-8eb0-45bb9d0a1db7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be11b24-cfd6-461c-bd41-d8080f66e4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0215fd22-577a-4684-b76c-a92ad967e3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f97e1c8-170f-4636-96c8-221c9dd2f0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ba780f-d3a0-41e2-ae3a-0a1840a911a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a209600-3ccb-407c-b091-a6825e2eb09d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d39c7d8-eaf4-46a1-a459-18ec35b5b3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9987a4b1-9b14-4ccf-82ad-388d8acc43be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e77b522-217e-45d6-bece-2703685ad73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9948e541-1adc-4dd3-8af7-b1f7bd65891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b511d26-de52-4434-9952-cf2340eebe76",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b6f3d-5eb9-4923-874d-055073f8ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cc51f9-6e42-40f7-a6a1-c731576b2555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5590d0-4381-4ccf-87a3-4b2465e2b479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea931a10-c94c-432b-be8d-ac0d7467af8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca558eb-4f54-49ff-9369-7ce927f2145d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6a5df2-346e-432e-b994-6a77ead7adbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d14fce-8c41-491b-a79f-9543884f8f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5784cd4b-746d-4fe0-beed-8fd8294fdd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b281be-adda-4663-97a4-3e112bbfebbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b544ab7-51c4-483b-805e-a7ff0103aeaf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de95e25-5529-4e72-bc05-8095cc376b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f4d80b-0971-4ca4-aed0-0da9e83d7149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32562f40-81df-436d-a155-1889253fcdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a88768ba-f931-4925-b321-31c00f9bd1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e00b1a-482e-4ce3-8a11-185a7076b852",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314c9b69-bda4-4e68-8f63-325eb75e1a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7effa1fb-48f0-454a-a49e-c42b60963071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b9a7a1-d18b-4913-83fe-aa19e133d193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f546104a-8f61-46eb-b5ba-63a831cc3a8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9568aa2-5ebb-47b1-b432-cb22bb0e65c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf685932-75d4-44b8-ba93-3437a5473e28",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524ce394-a2e3-4a98-b21e-e1511d75215e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a92ab965-f3a9-4873-9cea-083cbbff3dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4824b269-b4cc-46a2-b391-a458cc82ebae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e58fe0f-2493-488c-ba3c-d7da1440d9aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cec38ac2-6a29-4855-8571-76b309c7443f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1435613c-61bf-453e-9b3b-cf6409470194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0461e79b-cf77-4f9e-beae-8b6f7b694d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d753b346-1839-4b67-a017-444719ca7521"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69cdcbc1-2011-4f8f-9025-ad8f8f5ac84b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e35a7e3-e94a-4e9b-890a-1142e5e10922"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd9da505-c4fe-4844-a810-92ee33569f76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d9b808a-593c-42d8-9677-5785ed8bc7b1"
            }
          }
        ]
      },
      {
        "id": "1e7f28ac-0fb9-4d01-91d7-726f83c8589b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2aea8301-586d-4e46-80d8-5633e0c4b42c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd631450-d57b-4319-b64b-3292b9d6e366",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ccc07ae-0524-4608-b6b3-df148c440ceb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6e6ff-539d-4215-9f31-cb46059af50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef01ad11-4ced-4e77-aa8e-792883a18e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08136401-72a8-4caa-aec3-d009bd2d8f0a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd41caf-ca8a-491f-8f24-1ca30e73dcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001209b9-45f7-4cd2-9937-a99e088f1d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdf00a1-3ece-4c77-b08e-8a62c86ccca9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758558dd-492e-41f1-8cc6-85e3a34d5a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4f838b-c10c-4f38-882c-2bd81ba2f90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a08da03-0d45-4714-a350-30cd4e99e1ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1d0e87-1581-4d20-b366-6253b73bfd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c27af60-4fe4-4480-9714-d5922ab9eb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b995890d-6cbd-4833-a27d-1189966f13db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbcf760-be2e-451b-ab22-aed8a0ea4778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b727b6a5-05f8-43c8-a79e-d45102532978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57a1fdd-0a21-4cb5-a74e-0e24add349b4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9e3126-e90c-475a-979c-ddcdb8f235ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae600fdc-42d5-4fcd-a73d-4cfd2df0335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eec5e4-6f6f-4b0a-a40e-a0a6bc82c17e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a02b85-7172-406f-9649-71175159c189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762f0417-95d4-4aff-8ab9-a0269914be02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffee981-b891-4439-8e8e-1cd88d0d8179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed63d026-e8bb-4215-82b0-6b4fd60e639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e425149-1b03-4576-8e8c-59867d81eb18",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c0c203-e3f1-4ff5-91a5-e745835eb356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b03baf-12b4-48d7-b5d8-d7a21e864006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd00c774-f10d-416d-af84-addf37899b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8f91e8-44e1-4e44-a939-080226afae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d725c24-cb17-4365-bfef-5a8c78689517",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea0c2e5-80eb-49c0-bb45-9603b1b96e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb5f047-3eaf-46ed-be80-4cfee563fcb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b557c09-5205-4252-8573-391db9b7fa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857aaebd-e9f8-46d0-9dec-c8736999f40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c33ebf-42a1-4ed4-be7a-5279ea1a7c0b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6873d-5bec-40db-892c-5ac18121cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40157385-26de-4fb4-a1a3-77d1b1d42321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7df5c6-2e2a-4700-af4d-6351c8f386c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72277843-f990-44ac-b8d4-9252581b8f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9556f997-565e-46e4-a8aa-db9ddb11853d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f99432-7339-4630-b404-617d4e495de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabfbbf1-d2c0-432c-b2f0-49b5dd7f2c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d6f167-68a5-4461-9e27-15adb595e2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3d5571-ee09-4087-baeb-bd6cd245667f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1635ecf-bc1f-4d2d-8ce0-bcb9901c0353",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ba4321-5936-4076-b8e9-9d60c0a1e322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3ab7ca-93fe-49dc-8473-bee6258269bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d9185d-1101-4b44-af5f-76c367f381d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04414de6-f73e-46b8-88ae-40d605635be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cb8df7-0e6b-4858-ad55-eb85fd120c75",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4030d4d4-a683-4978-a91c-75c475c4e14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fead3553-39f4-43d0-950b-bfe2090d9f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0571b17d-26c8-478c-8d3f-7d4a5f1c1ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f33bb4-df93-4936-9bc1-79170608592e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2faed4f-42f3-473a-8bf9-9a1b0176de65",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67922b6-cc70-4ecc-b473-f9afa76bef43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce27409-eb46-4fcd-9d70-1b84b9c9321b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fabb4f-8847-4c21-9223-a9b6b79c91db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d283fe-eaad-416e-b340-8d8267fde024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d122e23a-695f-45dd-9d3e-724050399862",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e10372a-75ae-4a1a-a649-59886e074847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ee429f-d022-47c7-9a8a-d94dca833870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743e1039-aa69-4d80-a36d-1dbeffe76307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2da94a6-73e5-4887-b03a-166dc1ee21ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21d91a7-53c0-4730-b57c-fe0fc39e3cb8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec4d224-2cab-42a1-a0e5-9cc50ebdc4b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a47568-25be-4b1f-986e-8a109ad15313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ac621-abfb-46da-b895-9b06f63fcd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163310f5-f88f-420a-aba9-60c6d5b70ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ce5860-8199-4be9-a353-916056836c62",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad5172-8f3b-41e1-8d1e-31a20e2c8abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2178ad-d33e-413d-9d88-8c1fae71419c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac204872-ff66-490c-b4e2-59fa9ac9a51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fde581-76b7-4e08-902d-665802ed31cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf6442f-d06e-4afd-8489-c248ea7af429",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a8133-de8c-4a0c-8d8a-3f3444c8fc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b911d192-5871-4ee1-a68c-716480e085fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb934c1-0312-4575-8d16-68cdff37e0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09860ca4-0ec3-46a1-9281-7ccc7e36e331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abccbaf5-f332-4d63-b67e-6fd7edbec365",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4b3481-3521-41fc-aba7-6f02748030d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80a13d3-51ec-423c-9bb0-bca9fd4ffd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1142e4c-7609-492f-962c-588a05bd9bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fc1c9d-79c3-434d-9b4a-ab90830a6331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920affab-946b-4f78-98f6-727b658b94b2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2579885e-b1fd-4a48-ab72-dc28d7fafeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a0b651-d795-446c-8d08-dfe227eb53d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428fbd34-6118-43d5-b659-ad765984d96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0db9d52-e055-4b3a-b6c3-f9205ff5a60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c085492c-9bb4-45c2-9d59-8ce7c60b25be",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c307ca02-f178-48fb-aeae-6d68be8caaf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1bf046-b863-4f76-9ef2-65d14ee7aea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c649a90-f26d-4cdc-a49b-b8a5a0752b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700a6f4a-de63-4b91-96d2-07a5c658504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a48405-c139-4d59-9be5-7d241a9a698c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814d6a0f-1b60-486d-99bf-c2d8b40a3444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be78419-a9fc-4345-b1c0-ce8cb58a0124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deb8ff0-1127-4e1e-8f88-9ac4052267bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c729530-3999-41b1-9cb8-3d0dd40df6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752caeaa-ed87-475b-867f-0c01f025540c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcbfbf9-108c-450e-93f3-dfd6662f62d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edaa21bf-a9a6-41cf-af37-b900d140ccca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4066df22-fcd0-4a19-ba75-a226e5373d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cfc92f-6f89-498e-bbba-249f02d34dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c07049-5757-4219-bdb6-4f376fefd15e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04386f88-256e-43fd-b834-464134d6b65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b343ac2b-5b21-473d-bffa-400fa9fc9567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b6de4c-dded-4ce7-a9c4-3e19de1ae3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9d88ce-845c-414c-84a8-9f84e6e8a9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a73bd4-d233-43e3-a0ac-89f27cf3da1b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f43d8e-68e4-42c1-a8e8-ca54914f0142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e77a94-65ed-42b5-8d13-d81137d3c53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcac7e3-77e2-4c02-978e-362e4e36809d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b99e70-b72e-49c1-ad6e-996b063ae56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba79874-416d-4106-a5ef-a1d63316f644",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5397473-e07c-4825-a6ce-7131e7da3ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddaa6eef-f9ce-4746-b9d7-a4422302ea42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f900d8e2-11fc-4031-98bd-90f7ad3714c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b13dd2e-5c0e-43ac-be7a-80e16b800f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af158072-b9d8-408c-b181-c3c5a93f4a53",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee98ff0-f9d8-438b-85cc-a6c5199a293d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdb6e3b-a5a8-4f92-ae73-556d8c5d00c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e47634-3588-4b04-9877-c23530ab5193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538090dc-b7a5-4918-ba7b-546452512e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2d9dee-7d10-49a4-bde5-6cc078ca174f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486dfd65-95d8-433f-9a2b-5969dc4395a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387c222b-00c6-4286-82b2-376316083857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f2052-70bc-483b-9650-8df47ad841ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b974ebf1-0782-48de-b653-ef9204aba2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26ee20c-6808-400c-81f5-86df54ad9331",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8edf86f-cf08-4a06-95e5-1e8e957fbb7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4cd8c8-803e-4392-859c-fa92b19412a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811c618f-1955-460e-b17b-fdfb6d506ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22941652-96e5-4e4b-8854-b52ffbeae476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e6c95f-b575-450e-991a-8c5afbc88101",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d1f459-74f0-4a52-a634-6e3e4b303a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151d9a3c-8195-407c-974c-5c6fac2f7910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2545b35-fd80-4910-b47e-eaf31aef6048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1adc8b-e1a3-4e3f-8828-dd0b883b5989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65249074-3274-452f-8984-9efd8813cc55",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b915fba-ec1f-49e7-a61d-2e9331753ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3136ae44-a71e-449a-98d8-7eb2d5381e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7494ab7-0204-41c4-8f8e-3723eb0da8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b9113b-b0dd-4119-9556-e74fd6673a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b14952f-d772-4a46-9f3a-dadde9256209",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fefaad-780d-4f47-9db1-50d7ba380095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e1dd67-320b-4d24-acf9-503a403097e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4cbca2-0bae-456d-b525-03ebf94f46d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9ed4d3-d616-4ba0-a46f-874899d53109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b040671-7e22-479a-ae1d-8ab73d7e5d5a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f5308e-87f5-4a78-9616-ebc011dfa7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fe498a-5d5f-4daa-9a98-f5a1235cbe97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e1b81d-d940-4da3-9354-8b7c92bd4338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cb2ce7-f252-4e93-8df4-76d12f9deddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d0cff-9db8-423a-8c4a-6696d72b1082",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f596b45-3f4c-43cf-854f-91d2aa742f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701a6a60-cea9-4637-a569-7d97be3d31f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d48623-883d-4908-839e-7e8074123556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfe59db-e06e-4be6-b3c9-b4f31e2572af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b3e15c-248e-4e3c-8ebe-b1c7e227678d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724e45df-2202-4d9b-a258-b1adf718891d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41eec3f-f682-4836-a045-f40ec3c3c26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe42f0c-7269-4860-bf19-a2a5c5aae5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f382bb-3f54-4853-b02d-ced88fa6b467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac2274-d20f-4f14-a6fd-ce64fa093b45",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f94412-bb99-4ee0-a56a-7a11381dfbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d524ab3d-af9b-4639-bf8f-2f95c7b6efce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f8386c-b41b-46d6-a696-f98799d006c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5c90aa-8359-45e5-ace9-5c117702a531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05537ad-e22d-4e95-91c5-b9e1a1275e17",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dfd7b2-5be4-4674-aaac-322d9885f409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5707eaa-e82e-4f18-8a21-9ee2e77666e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c18f406-ebe8-4ac1-8183-ab65b4c462b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad734a3f-b828-4c1b-b454-a89a26835a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2364fb6d-0262-4406-afb8-7e0b51578e6f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facd0e92-eafc-4cdf-9ec3-d4f1a5f38aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078361a4-f8a9-4409-8b19-ab6703170c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e95e4-1407-4e6d-97a5-4d91595aafcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e204856-75cf-4414-b1dd-eb6b23d0f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1337f1e-0c3d-4c10-9e86-10b61eaaba26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa7d88-23f8-49fa-bd64-6113dbe60f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beca7310-c232-4b0e-ad2c-d57a0850f1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f5cc7d-3581-485a-8ebe-62d737230c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c019237-0f5c-477a-8a3a-80011705088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944fbcb2-7839-4ca4-b3eb-7c249459c0fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d2358c-a3ae-4877-ad8e-166724f9cf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c45822-1e34-46b5-a0e8-5f1cb64c1db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a28de7-a043-4db7-bae8-38dc40744c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6ac1e2-9881-4032-bb18-503b6f42e07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6da83-e1cb-4772-aad7-af9c8d99af98",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27e0b59-11c6-4b91-98c2-d8f91433c16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e131ea-1633-4049-923e-e05ea6d96e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b322a0-78b0-4a37-b36f-e0def97bd9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc80b96b-7ff9-4066-85e2-fd3a0a5ca19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bac77e-d0dc-48e4-a997-55033575a313",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427ad111-168a-47f1-b340-e76518cd5fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29bf447-c69a-4514-8b3c-9ebf2ad87d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c1962f-d5ed-4288-a6d8-0f275f647aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92486eeb-2975-4a62-828d-2c79f5542e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe0a7ce-1226-4500-9b49-bc1c4ea74498",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1134796b-2e12-456b-8fef-c1441638bd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3835d509-2080-460b-b8de-7426690677c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d5ff8-ae4d-4bcb-9222-75e356bb8695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a844daa3-e8ec-4185-ad52-a3666d78c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6ab1d-6bca-4232-81f2-ce7491c06132",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfb671a-5cc1-4dd7-9890-2665cf5e5aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62db14ed-6919-441d-b116-6bdec9d1279f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffceeab7-1707-4bd7-81ab-aed92a637ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a547fb5b-0a7d-4fdf-baac-296bce716914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ceada07-684f-4e44-bc31-73a46376a1a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e709745c-2fbb-4e2f-aca1-a4a9b40b5fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c14f135-e798-4d58-af90-3d3b6457d20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1eb086-a608-492a-a26a-37387fe4db90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81481ea-0ac3-4947-b844-4b54d947bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b5380e-5574-4b84-b26d-31b8f3cc179b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3028bc-c8f6-43ab-9b9b-a50b8d8e66e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edef37b-0539-49d9-8413-42e69650f1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e049391a-aefe-407e-bbed-2cd3f7f30de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49d66d5-a492-4f67-82b0-520b80ca69f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3344f-ea9d-4aac-b9ff-269f674a17d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872c675-b7a9-44ff-83f7-cfacbca788b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805c35f1-8374-48f9-b2fe-6b026eee5822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18403560-5b27-4618-ad50-138670e6a322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6f8190-6a87-4b00-a4c2-0e6cf8b6d03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926b9da7-e525-4a68-aab6-70830f769327",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd5b890-11ce-473e-917c-d3c9cfb2617e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc143436-347d-45d7-bd93-72709b406edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b37afb0-101e-43f8-bfa1-d679552f983b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df9d6a2-8c51-4fe3-9d03-2fb13cf8ae87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e557ff-c51b-4797-8afb-28500b90e710",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f52b6-6c42-4837-a982-0ff84f326ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ffa786-a35a-4f67-b958-90f5ca550345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6483bf45-9f7b-456d-a865-26f6f9080996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20dd900-356d-419b-9bc7-07c73d59c905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0284d225-300d-4d25-a445-61e36b2c939f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8068fc60-18e1-4b5e-9412-32d68ae48e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14984ae2-9ed4-482b-9c1d-0d5c115509d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42b155-86e2-4d01-8cd0-fe0cbdf4cab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc9d4a2-8da9-4358-9c90-95065f60525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217f70fa-8488-4a3d-949b-edc6e4b3a2e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dd6a07-a79d-44d3-a25f-626e301175ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5039f68-31d1-4748-9b70-3ba818dc997a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2485fe1b-51c4-46c4-b978-f8f6b6ccacb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0757c905-ede0-4fd6-957e-63e7c9dc9060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8093c3-b86d-46ec-81e8-3c5718bf5ce7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63706bd4-2c02-44dc-bd9e-d586ec00e75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fae89f2-e2cd-47f8-838a-2fa013922052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6a4f9-383a-4627-8ad1-28557dcb0582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a864b1ef-54ff-420a-a21e-9c9aceeeb82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecdfb6e-3449-4fcd-a805-59f849978b73",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f954ed-ffa6-4730-bf1e-29a197eaaf3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3a6ede-99db-4647-949f-2ca22e6d966b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c61d48-2c7d-46a6-8a22-4e4a3fdeb584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d1ee7a-9a0c-4529-86ca-a509e9fb1590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09907733-e12f-4f03-9c89-7e43cabc32f8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb596df-8257-4528-a023-7ed2bca92e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee91f7e-f54f-4fcd-934b-a5a88a4bc1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d977472-f1bb-4326-8cc6-a097d675bea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cd8103-e653-4693-8831-309c11b1705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783b299a-efbf-4a2a-a412-5971b92aee53",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9ea73d-201c-471e-9570-7e6dd1a6fd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679fd40f-3b08-4b2b-9260-9c2c1fde6a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad48eb6-0203-4e63-8f85-2aac7d83c539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fa86d9-902b-4e65-a799-4905a60255a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc6dd26-e8c8-46a9-a91e-b18c8e8a18d3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1395fd-2d1e-4023-9531-0549c4fb3107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06e5cd2-fb92-4a81-a6d4-c6257f096271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e5003c-d7cb-4deb-83c3-dca1fcc99e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78781240-afb1-49c1-9049-46d6e420c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fccd55-3c82-43a1-8eab-fbf75d9adb11",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ad3f0-0e41-4a5c-b4b4-54ba34a4bf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7286db-c845-4f63-9266-2323260dda52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9160e32-724f-4fbf-930d-a87e8ec7a1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b05d21-3313-47b2-afe4-7ba99c5045dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb26a4f9-b69f-47d1-80cb-4f768ac8c59a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5349c519-3e89-4d94-b3f9-5ee2fd40bdd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d20f9c-822a-4127-a5a5-f46b329c0730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b29005-72c7-46d2-ad18-1aa1226652bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb2695f-8617-4dfe-a48e-8b3edb60c249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5622c8-d8f9-4a42-a6b9-50a78c5ed4c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481001ba-4138-47d7-954a-e7fa579581fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83596e38-f0ac-49fa-ab5e-e4169978bd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c29d7-14d5-4ebf-b799-984478c3a22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3b876f-f514-40c3-ba61-e0445f0aedd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9378032-d803-4785-a460-4235d88e0d72",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7501330e-5db8-4e10-a6cb-8823a11f5070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deddfcec-bdad-4b7c-8e9b-40a807017ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01992be7-42df-4a75-8fdd-8299261798c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeffc85-a713-477e-8aa2-03b68ff9aeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31233fb8-677d-4a6a-93c0-2f2ee6dc5903",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedcdc02-5227-4e48-a823-e5b77f498df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2590d611-1ba0-4b23-a0ca-1abfd6dc3bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6efb639-9309-4bbd-b07a-e12678fa7f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c248db9-2336-4e3f-b72c-0bb729cec539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87413d1a-ddf7-49a5-967b-f41ac952adca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e7401b-2694-4f6b-a619-4adf4f9f707b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e78120f-deeb-48c1-b715-e10467fe7adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fd30f1-632f-4a76-b8c4-02abd3374a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a9f966-763b-4978-b036-10d39a3a652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a4409-969e-4fea-8d13-23dfd55f6a01",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bab8647-60dd-435b-b87b-fe6e80e0fb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e2375d-6fc0-4959-96dd-d747624e0aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd1bff6-927d-4190-a3a9-05a420073a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bde525-61f2-4efe-9583-e71e52700b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edc9945-972b-47ab-b020-9ffd7bd29159",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c0b0f3-5eb8-4fab-a19e-e50cff3cd8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769fc951-6f9b-499e-892f-e991321a4562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0f680f-0641-410f-a228-78efc1e3b702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4a78a7-5137-4caf-be76-9f46ad98f522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6e51f6-4bf7-4b03-8b7f-878e14c4682f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659d0e60-a5c1-42de-aabe-f3a3b2be89db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f214bf6-d206-4f1c-9ed4-268f9e8c2ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8831d69-5371-4a77-8c1a-3c6744800b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35e5ad8-3044-43d9-ae4e-07caf941926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35117254-8984-4ada-89c3-ae0fd29ca550",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca47f6b2-6f60-4f35-9fb4-fc7e207e5789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aec9948-0332-4bf8-913d-fd98e08702af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fc593f-66e1-409f-a98a-dc0bb73709ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2002d0-0a54-4691-8208-5b65404464f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728d683d-15e7-4d70-80c1-5b2cf5833f8a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450b7cb0-3a86-498a-a89e-81ad6aaf5708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc14f40-6d02-4b60-9f3f-a393c2290663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87896a4-ec27-48ca-96f0-436e13fd8efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176183a6-1e8f-4aa3-80e9-13f19968eeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc6ef1f-7211-4a2c-93bb-b0519c8cc1ed",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b5ea32-bee1-476c-830f-9a907f834ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895d072f-4867-42cc-9d59-8f8a54dff9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84190f6-140c-4d71-9ec4-0dfd556f0c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07253cd-9462-44d6-95a3-98d3bfeee126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783f94d6-c2ce-4b0f-aa65-ff0701f4f76f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09272ac2-93b7-44b4-8af0-9dccedc1508d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297fa0ea-3cc1-4fac-abf4-045b5d8d8c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098808de-feb1-46e6-aef5-6929ec3e19b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff07235b-09a9-4d70-b075-543a9a8bf7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd988df8-a2af-42d0-bb03-fa4d863a3d5a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e590b2-6ed1-406d-b67f-41c3c81a8758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5630df4-b10c-4cee-9ed0-27523bf408ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aa7963-e991-4646-96bb-987c2279e714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5362325-5d6f-48d7-ab00-9e24b0598c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5be433-bfac-4f14-8cb7-a12603ba8d4d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d143f-90db-42f6-9bf3-adc0c8118a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80aaba66-2ec7-4fa0-9aee-38d110773515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e245e5fb-dc88-48a3-a31a-46b9c180f273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9e54b2-7500-48cb-ac0f-eaa03f4f12d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf3ee25-581b-4342-b7b9-3b1ad28f550d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1d673c-25f1-4ef2-90c6-e69523205caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ae1d95-60e5-4c80-9422-08fa54bd4d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d59d3-b502-4058-85f2-bba293fdb6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dff30d1-0a49-4681-951b-4125d03c37b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7e5c07-3dca-455b-b637-f87b783c6d08",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d9b85a-8cc6-49ac-ba29-d2af8017a719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67024ebf-07bf-42ef-952a-d0b62bb916a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012bdf8a-da5a-43ae-947b-1d5cfcb60f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56315e34-ade0-4869-9a88-9771bfae4c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37289e7d-e361-4508-9046-9cfb73f5313f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da46f6c-ef66-40fa-bab6-fb1b2398829f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4185600-17b8-47b0-99eb-342dcd83a865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ce5ffa-2746-422f-9abc-190119980a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2a928c-ab71-48ce-90ba-0dc9cade7cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85aa46a-88a8-432b-a4ed-8a2d614c72de",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47454b8-e13e-4ed1-a426-f2f25f8521ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21517465-3ef8-4f79-9c60-15d9e6ce6f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0557e6-e03d-488d-a095-2b212194ed3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e63e73-b338-43cc-9fe6-13afc5ce8596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fcf60c-4610-447b-9683-09a4d037686a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe200560-b22f-4a73-9762-f82df9c58093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2727f5d7-d941-4c52-8505-7cb9dbe2aa58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde9e774-19ac-40c0-93a9-0e3f59f1133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32605bfe-ddc0-46ff-99c8-a70a3ced80e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f09cc0-72fa-4eee-86d7-ba7efa406b40",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07954f95-b256-45d6-b568-939b64ca5edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d186c05-fa39-46c8-81a7-e0bd25f3df9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e287ef12-bb83-4b05-adf4-76e3a4f9087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db991c96-47b5-477b-877e-0ff59fba4bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a31b8f5-4c99-46c8-bf99-78ab4358283d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11c1284-8e3e-4ad3-998b-869fd04079fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb50bfb-b43d-472a-9f71-a71ab2b76362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d49990c-1d27-4de4-bed7-2d3e10539fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087b7b29-a48c-4528-beff-d79b038ecc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a46c644-bd88-4d31-9e40-9a698e340683",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408e169c-5f03-493e-b1a8-59c868f19f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612085fa-6d31-4fe6-a052-12280c41b8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83212e4-2452-45b6-9485-1e6eef7d9907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797fd701-60a4-475e-9602-3c54fe5826df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ec20e2-2ce2-4dd3-8097-ca67f8871e29",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2618c-79a1-4db3-a9f3-6553d56e96be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fe7ede-4404-48f1-8a9b-daff019f7a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdaa8a5-1375-45ec-871b-cde700ef0bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21794fbf-b8cc-4324-a86d-5784cbe7a8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c8038d-278b-4641-a69f-56a31e1bc04d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d2b4a2-b67c-43a9-9022-62353cf0b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5c97f5-3434-4d00-8813-06229c29d07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801f04ac-fed8-4677-9702-036db176d70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff545d10-fab8-448d-93ee-61d5ff85ff1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bdde7e-7a2e-41e5-adb9-4e378b261470",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5727ab72-a4d9-4e97-b48d-3833ec264058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114bce5e-642a-483a-975f-8e38a38cbe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b10ec98-6eda-4e53-99d9-f54379991bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13e5054-da5d-4d73-922f-3883b362dd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463b3393-292e-4f1e-8dba-9d47824de076",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e07ba1-33d4-43c5-b143-548fc32363e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c39a1e-8901-421f-adc4-a31ab5fb5714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38e4d64-055e-4882-9254-2a08d8ed4748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852f0f6b-7656-4fbb-bf8f-6dbf26bb4a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a21b6f6-100d-4b25-90b6-801e6c80bdb5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c61e87-fe12-498c-a767-687df75c03e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe888517-e5a8-4526-9cfa-9c8a3a3b190a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341cff06-35d1-4b64-b156-2891d229da00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c06b85-e035-4a75-b60b-badf353ba409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0c9241-59f9-4bf1-92cb-4cda4a98ca50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86c227-1e1f-4138-8168-14d2dedeb7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba7bafc-8e6c-4f22-b117-05ce14652282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbcd25b-9b33-4200-bf92-66310754d8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed36fe32-96a3-430d-9ae7-ab2ac077dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe9cc0f-9f1e-4561-8d17-0703a0059e75",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd83a4b1-746c-4aac-8373-d8a8fdb338ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a39d69-5d40-46e1-b1a7-6230ff91c469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345411e3-2b61-4be9-b9ca-8d4cc83cc118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb06afe7-9d5b-4b2d-8b38-63554be9014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0558a978-ab07-4789-a066-a5b92f49dbdb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0626e078-cda4-4bcd-b466-511be8343d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db248ef-dbcf-4f0a-9bf2-89dce02fd6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa48f8e1-cc35-4fdb-a8a7-2c850097562a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86989a69-2b95-4cc6-9d44-6fbf98c3bd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd60b4-1d6d-406d-8873-b7702e59323f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af5e01a-142a-48d5-b7d0-360cf80cdad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d04495-a320-4ccd-b268-de80409ffd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07067927-ce67-44a4-b90a-0d30ae37c913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af837281-e457-4d99-825b-7aeddd7f8a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be6bbc7-0a01-448f-98d0-9d8bc20bca8b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c534b4-e15c-4464-bb50-dcce2751202c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1740fb91-a2b0-4a7e-8526-4af59ee62e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185ed880-6868-4de9-8609-9ca714ff3a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb54d26e-eedd-4c63-a798-2cf02244ac70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef9125-6280-4763-b747-170deb1a0e88",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a39aa0-38fd-4793-aaec-390487b439ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced865c8-6d52-47ce-a51a-abde8c07ec65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf021b2-0888-4557-a8ee-9e67f58aa89f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d156d58b-fabf-43a0-ae07-253fba9d59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ff8bf1-02dd-4a50-917b-c1acef4629d7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba57d04-7838-4adb-8fee-35cbe51d4308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb2ebaf8-c2ae-4b59-b327-7831e8fc29a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41db3b55-d4a5-4859-8621-4513fc1e1dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3755fa-11bd-4a17-81a9-be7254bd279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa65bb0-54fb-4f72-920b-fe059f92a1b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e739796-5d07-4747-9dcd-8bc6fcde4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4899fd65-a7ef-4286-9b56-1fd7805cf587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7953bf-ff3f-4f3b-bc77-718eaa86c567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617250b0-833f-4573-b48c-1f5ae06d6274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc477b6-b05d-4de8-8306-d92235c7d5d4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcfa38f-25c5-41c3-ac4f-f4c4fe2249cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a97cbc1-e7f1-4b58-bc3a-09c5f104775b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b9779-06b6-49e1-a441-ad3348ebb3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832d5eda-d23a-4298-94a4-4e950cfb60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f195f08-ac90-46f6-b929-392eb46ec1b9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24a5f34-ec16-4b23-b280-e5a73f3df52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3758241d-003a-4ff7-a2b7-ae1682f44f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758d9196-d0ee-4cd2-82ac-83e303b074ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e35b98-96d4-4209-9d58-fb463a17faeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d5ddfa-e86d-4482-8af6-abb8a68112d6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda6672-e97b-4e8b-a7b3-da7f690e710f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2302a280-4e5f-4100-bee6-39d971297eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1347cdc-45f3-4551-854b-107937a6bb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063e382a-875e-4b10-ae2b-f70a23dbb74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a46283-541b-48fc-9f2f-4cf13b557f97",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0bac1f-6aa5-42e0-a83a-f6a0f9bb425f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c24034-5555-4ccf-9799-22b256da6b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b0aec-7834-4ac9-8b10-726a14989da0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3c75ea-9ab8-4ebb-8fa6-d1b4adbede24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a8eef5-03f9-45d4-b807-b080021f0116",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae0d39b-4afc-419c-9743-a90d0628341c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0b83f9-e8c5-498d-8f13-56108fb89d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eea7635-96e8-4359-b647-b634e99fa3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6eeea1-193f-480f-8a0f-16541ebe0149"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2498625-b20c-45d9-93b4-ee33814af51c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63209ffc-017c-4788-be5f-024332291eed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34b6aa76-470c-4f8d-ae4b-a9c66d070ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a25a3010-db25-4e33-8477-25934630c8b5"
                    }
                  }
                ]
              },
              {
                "id": "19162ed0-3753-4f0d-a3a7-afd0beeeeeb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e67e0386-ec3a-46f1-b8a1-a20bd03545f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1261cbd6-fd76-41b5-a1f1-7cc8111bcbb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fa31d56a-f96c-4a1b-b44d-17e2992761d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c01d12-c8cf-4650-8946-009508fefced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "939e340d-28ca-44df-b716-307cb6ba8ea4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7302e8-2fb9-42d1-93ff-23fe0be80d18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c7277e9-7e02-49b5-9ca7-960e31a97825"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e13eb63-118b-4181-b8a7-b31ae875651a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e54053-fcc1-4248-8c57-58daddad3003"
                    }
                  }
                ]
              },
              {
                "id": "48767d54-81d4-484a-8cb0-36ae5123f3bf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "49acf1aa-3889-4b27-865a-fcc2a39472e7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5005c54-3e08-4221-8c73-04ba57e77cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3f20c52-be8e-4508-8fa7-30fc50e38e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4522452c-fdce-48e4-805d-850ac0eb0759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69c0edb-894e-457d-9cee-94ef419dc3cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ed70773-fabf-44f5-9840-ab8461b60757",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf551be9-1cbf-492e-a8e4-a390d5e3c31c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1eaf89f-1d09-4d73-85fe-f26f725e3b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4be4d0ea-c289-461b-afb2-67999e63485d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74775424-5772-487f-948b-f85a96a81955",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52c25aa6-a3c6-406a-b4b9-7421f98890fb"
                    }
                  }
                ]
              },
              {
                "id": "41404d6e-8738-4080-b6a3-c99066eb78ba",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcf709ca-8b4d-43fd-a7ad-0a506a27eac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1cdf2bc-925e-4fea-a2a2-447e5a2d96cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7623470b-2338-4a6e-b53f-3f3415f3fd5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbdc7826-6681-4d5a-aed7-f9ce093765e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dc80b09-88d4-4637-b642-e190f7443db1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "438cc4e6-4439-41ee-95b9-c620855eb0a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "621242ea-bc37-4a4f-b762-2cc083634491",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e5a5ea4-b355-4e24-a9e6-454e1ee5611c"
            }
          }
        ]
      },
      {
        "id": "583f0ae3-1c07-4a0e-975d-0d8760ca1ddc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "76106bee-5b2a-43f1-98fe-80095ce7e4bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4403badd-5239-4470-94c7-b2f406e70aef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84bdb53a-147a-4272-ad93-6a78daa63537",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cda301-993b-4ecf-b5cb-26a6bffe7a41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d04e4822-5599-4480-97a1-50b8473b10a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e722fdb-67df-4b5c-bde1-d174cef18653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69eb93cf-7242-48e4-88be-23c58e308d32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afade64a-9623-45d2-9ef4-6eb49bb23e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d3f21d4-5476-48ff-ad45-a9a5097a2560"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf6eedf1-135b-41ab-8a75-b53c778a6556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc002b5b-0f02-493f-a89f-f87dcaa86d07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89cc0452-6bb2-45b3-a1aa-316fdb92f140",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "163485ed-319e-4c41-9a02-de2dfb2a5467"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd1b3e46-d198-405a-ab1c-840f757a1b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65309d14-755d-42af-af30-427af729a604"
            }
          }
        ]
      },
      {
        "id": "d6e81cfd-d092-4c0d-a734-249cc43ced31",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d0266f9e-5354-437e-af07-fb883ce01342",
            "name": "Negative Testing",
            "item": [
              {
                "id": "185ef13c-c6dc-4660-8206-417f2436cfb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ff477fc-ddb4-4fcc-9921-e2789c587aa1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e9700-6473-46a0-99c4-df016b94f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe25d957-e86b-41bf-b819-76e10db66e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d49bfb3-fb2f-402a-b1f6-265c238af226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d891ba7f-a0e5-455f-a92d-1dc5b913265c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a984612b-7674-42f3-ac89-ad0a851743ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8fb127-0319-43ed-a896-82b2d8debd18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f9805ca-28b9-4390-a2cf-2c82b16d56ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0abbf314-573f-449c-b28c-33a1d02b8938"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "680b39a0-9c5b-4f13-9786-10575c4557f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17ca513f-3776-4544-a088-034979682066"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb9fb6ae-bc02-46a1-b242-59ae3df0f132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06d773c0-58e4-420e-b8b1-0147bd4a8838"
            }
          }
        ]
      },
      {
        "id": "c64f466d-13d9-4d3f-a021-8d0b7e91a81a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "24777fff-1d0d-41a0-b7d1-cc0f1b62775d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98341d3a-03a6-432c-9bfa-f5e21166dbe1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33b0cbcd-6acb-449b-b8fc-9779ea85770e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4abdf1-ece9-4c27-a8a5-cb5470320d4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c450bee-9145-4da3-8e2e-f73a70fd7725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fb9b3d-c025-43b7-91da-a07797caa322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b69c6938-8832-471a-beac-0c2952bfee6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "837ab5b9-b2ed-4136-bf7b-ca701fba7396",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "460440f7-ceae-4b30-ba4f-8d5d7cb78fc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2e06620-5e9c-4b51-8cd9-17ddbdd68c60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "473bf6f2-0093-4a87-b5ec-0c4fa71920ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04bc3542-1879-4a0f-894f-c3b621c01dc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93ab3943-c87f-41a7-a888-01f6619535eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebc49004-ca02-4e21-8822-2bdffbc4078e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b8d73ff-c565-4dc6-a004-68dd17399679"
            }
          }
        ]
      },
      {
        "id": "d2258361-3395-4a51-a0b8-2d68c23eeea4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38b70fb0-e3ff-4583-bc4e-174115228bde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8010d9d5-582e-4808-82ed-675239bdbb89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "222ebf03-665c-4f72-8cb7-f19c35cbe1fd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c174a2-6cd4-4bb6-aa75-45b22abb79e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e478a9e-dc7e-4526-8466-9f3540e077df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.80701754385963,
      "responseMin": 5,
      "responseMax": 7160,
      "responseSd": 492.5758446754901,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707698086658,
      "completed": 1707698123565
    },
    "executions": [
      {
        "id": "77803274-9a38-4f0e-b720-de91551b9feb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "23cc0363-d540-4412-8660-62895a16e0ad",
          "httpRequestId": "ef6a953e-adba-4e48-86fb-fd3fc49783dd"
        },
        "item": {
          "id": "77803274-9a38-4f0e-b720-de91551b9feb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e8a06117-e906-485f-a016-2819dbdcc813",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "c46114d4-6e30-4332-b4ac-eb158c7b2376",
        "cursor": {
          "ref": "5fcad7b2-b3da-4df6-859b-fac1a05b4822",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bb0af2eb-a5e2-496f-a964-c8a8ba6b1847"
        },
        "item": {
          "id": "c46114d4-6e30-4332-b4ac-eb158c7b2376",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2fc0519d-8534-4103-b5c7-f6461f9476c3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d3472aa8-36c0-47f1-8069-5113c518648f",
        "cursor": {
          "ref": "f7b46fe5-0232-4095-a831-77098e346286",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e89ddfd0-7214-42f8-82be-a546a7261a22"
        },
        "item": {
          "id": "d3472aa8-36c0-47f1-8069-5113c518648f",
          "name": "did_json"
        },
        "response": {
          "id": "fc66a86f-fa2a-416e-af0a-67cad21bf15a",
          "status": "OK",
          "code": 200,
          "responseTime": 162,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad412585-3c8c-41ee-9495-ce006a15ea1a",
        "cursor": {
          "ref": "34bbdbd3-a561-47c1-a7c4-6879b81445b7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "441f44a5-c294-45e5-bce8-a074025726ca"
        },
        "item": {
          "id": "ad412585-3c8c-41ee-9495-ce006a15ea1a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4932904b-8820-4ae7-86a2-e71b88ed233e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 566,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad412585-3c8c-41ee-9495-ce006a15ea1a",
        "cursor": {
          "ref": "34bbdbd3-a561-47c1-a7c4-6879b81445b7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "441f44a5-c294-45e5-bce8-a074025726ca"
        },
        "item": {
          "id": "ad412585-3c8c-41ee-9495-ce006a15ea1a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4932904b-8820-4ae7-86a2-e71b88ed233e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 566,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18997854-6cc2-44d9-b971-8d6f5cb32deb",
        "cursor": {
          "ref": "646e061d-0c00-4867-a831-7a59538eedca",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "da37d3c7-92d0-47d8-abd6-b0cc2e436771"
        },
        "item": {
          "id": "18997854-6cc2-44d9-b971-8d6f5cb32deb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e67c17b3-e49d-49e7-84b1-a2dc1d3c349d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ff77c-036f-4f80-8671-fa7051ba8fc9",
        "cursor": {
          "ref": "4cb8a0d9-af1d-45d0-9011-f9bf428e4e1b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fdb22da3-ac9e-4884-bcb3-8726a5f186ec"
        },
        "item": {
          "id": "f71ff77c-036f-4f80-8671-fa7051ba8fc9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7c483310-4b8d-4bb9-bbb3-e0ab51e87489",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe169efa-e019-4ad3-836d-6f75ccf7ba4d",
        "cursor": {
          "ref": "33806684-1821-44f6-ab40-d25fe83108ff",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b9688b5b-3983-4cc7-9c74-d4ff9b25dcbf"
        },
        "item": {
          "id": "fe169efa-e019-4ad3-836d-6f75ccf7ba4d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "80c904ad-8ed5-4619-8ae7-73ff4f3cd5cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644200a2-bf8f-4189-952c-d383ab83b2c1",
        "cursor": {
          "ref": "db097361-344b-4486-8c02-22357c4d7237",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "512d185e-4b82-4365-b27b-d0ed32ef2ee9"
        },
        "item": {
          "id": "644200a2-bf8f-4189-952c-d383ab83b2c1",
          "name": "identifiers"
        },
        "response": {
          "id": "d26e5b0b-b5fc-4d21-9220-9bd58c5901a7",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bad6f4b-3ffa-4daf-9677-3a8322388fff",
        "cursor": {
          "ref": "d260710a-4aba-4952-a6bc-6600f3264964",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fe7a3651-237a-40a4-a020-8fe90b00f6d7"
        },
        "item": {
          "id": "0bad6f4b-3ffa-4daf-9677-3a8322388fff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f6dbdd41-1898-463f-8e46-d6834cbdc9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c07ef-7381-4d1b-a323-2e07aa0ee47c",
        "cursor": {
          "ref": "8309c3cf-03cd-4702-b40d-2c4c70436462",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c69d87ff-b96e-4dc9-8642-c7056bdb4a0c"
        },
        "item": {
          "id": "bb3c07ef-7381-4d1b-a323-2e07aa0ee47c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f38c3817-f2d0-4bc9-ba2f-f5e1743c02bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab9ef22-48b6-4122-829b-7ced1a7bb171",
        "cursor": {
          "ref": "74ccc946-4387-43a1-961d-426c0ca978cc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f95d0c9f-118b-4785-943f-786f47bd8a3c"
        },
        "item": {
          "id": "8ab9ef22-48b6-4122-829b-7ced1a7bb171",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7bceacb5-0a00-44d2-ac98-aa2afab24659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47c6d40-accd-427c-af07-06fe3daa1fec",
        "cursor": {
          "ref": "9205525f-954f-48a7-b8b2-58c5e03b6bce",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d365ea20-d51d-492a-a9bd-babd3f20ebdc"
        },
        "item": {
          "id": "d47c6d40-accd-427c-af07-06fe3daa1fec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ed05518-a3c9-4935-8c9f-c06e20681fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d490dced-eab4-4365-845e-86ea50160ba6",
        "cursor": {
          "ref": "58712282-bf81-4c58-adb6-1d877c9e49fa",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48ddc6a1-7b3a-4304-abf9-a627ca051efb"
        },
        "item": {
          "id": "d490dced-eab4-4365-845e-86ea50160ba6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2ec542f6-2953-4dc1-b4ea-ea0f1d6d0bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e28c821-91eb-4964-a51b-765e9f4e7c99",
        "cursor": {
          "ref": "2bfb6558-058a-43f8-8fb9-a0ceb070c642",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6a4578c3-d2cf-4c04-b72f-771d4fb0bac7"
        },
        "item": {
          "id": "1e28c821-91eb-4964-a51b-765e9f4e7c99",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3109b7df-b5ec-4c4e-a842-52434673fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1487b25a-afa1-48db-ae53-f944d5692c73",
        "cursor": {
          "ref": "a19f30f5-82af-45c1-b16f-237ea72f340c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "30050763-dd45-400c-860c-eecfe90c1ad5"
        },
        "item": {
          "id": "1487b25a-afa1-48db-ae53-f944d5692c73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d93694d1-4f6c-4d44-813d-93d546390c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9453bfca-9d94-402c-bfac-873f92cf97e2",
        "cursor": {
          "ref": "2a45e405-89e9-4a7d-bf10-02abd1aa793b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "752d5849-8cc0-427b-b2a6-7e5242298259"
        },
        "item": {
          "id": "9453bfca-9d94-402c-bfac-873f92cf97e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5f760f34-2d48-40c9-ad9b-584e3c799118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b481046a-a219-46e7-9549-c2923b7fb402",
        "cursor": {
          "ref": "39094634-7b39-4bd7-85b0-588b9c492aa1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6e0b224a-05ec-4261-920a-ec88e66860c3"
        },
        "item": {
          "id": "b481046a-a219-46e7-9549-c2923b7fb402",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "64930e67-aba6-4a0a-8188-50685c09cb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7df6d3e-8811-4c16-93cf-31eb103f717a",
        "cursor": {
          "ref": "67c59973-164f-4fc9-ac5c-50308c8ba9c7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "89b03ab1-423f-4411-85b8-e9f85e701c0e"
        },
        "item": {
          "id": "b7df6d3e-8811-4c16-93cf-31eb103f717a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5665deb4-dca3-42d2-beef-6491b2a60171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b849904b-a95e-455f-b98f-369f7312ccc5",
        "cursor": {
          "ref": "c742f907-c5ca-4d2f-a674-e1e2d074ceb8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05e448de-6f9e-4412-82c8-7f85e4161f81"
        },
        "item": {
          "id": "b849904b-a95e-455f-b98f-369f7312ccc5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8211aaeb-e3e4-4ac8-8966-d13232cbe44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db08021d-058b-47b7-84bb-060668a623f6",
        "cursor": {
          "ref": "6baf3ecb-50fa-436f-af05-250131c5e35e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2eadbe53-a9aa-4aec-a2e3-f07a2711de64"
        },
        "item": {
          "id": "db08021d-058b-47b7-84bb-060668a623f6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4a62d8ca-0e54-4127-b546-e86f45d735d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f52a71-fb5c-4ef6-8921-2f75af14894d",
        "cursor": {
          "ref": "b94c423b-63bf-4523-9a8a-99ae5b0385e9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f5d2bb15-88ba-4667-8a45-61bfed5025cf"
        },
        "item": {
          "id": "43f52a71-fb5c-4ef6-8921-2f75af14894d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "aaa2d6b0-84b3-468b-aac4-322a426bdc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbecbc4e-60d9-4d20-8a6d-93a173318bde",
        "cursor": {
          "ref": "a740bc5b-e064-4af6-b5b3-a720eb9bd64f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e901779a-627c-423d-b440-cca499098f51"
        },
        "item": {
          "id": "bbecbc4e-60d9-4d20-8a6d-93a173318bde",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11aecb51-f229-4beb-b2ea-a32a2b8b3593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96cafd8-54cb-468e-a122-b0e2b59bb090",
        "cursor": {
          "ref": "096d64fc-700b-4434-8fff-c2758f88b282",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a2cfed7d-4aa4-4e67-b004-880871595430"
        },
        "item": {
          "id": "b96cafd8-54cb-468e-a122-b0e2b59bb090",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fec6b86c-38bd-4d01-9da8-64fdffe53a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb196a8-3493-4a74-aa41-dad627725010",
        "cursor": {
          "ref": "74ea7625-498f-4e15-aa8d-12cff14b4527",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "deaf26ef-589e-4a4c-acc8-57ed9e1cea4d"
        },
        "item": {
          "id": "5eb196a8-3493-4a74-aa41-dad627725010",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1edc68be-5ec1-423b-87c8-4089e8727903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e145a4c7-dcb6-4a85-a525-f876d3910766",
        "cursor": {
          "ref": "bb5468fa-88ba-401a-8a76-b5d9f1d3f9cc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "436d82d9-fa5e-473e-9eff-d436f8eefcd3"
        },
        "item": {
          "id": "e145a4c7-dcb6-4a85-a525-f876d3910766",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a39150d5-9570-4164-aba4-5c5bc9e38d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b17f236-87d2-4fa1-a9dd-7fe5ecfb4601",
        "cursor": {
          "ref": "1c4e03f2-c066-4137-b2f9-42fb04c653e9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9e55deb-3afc-4a86-9a71-803a5b62163f"
        },
        "item": {
          "id": "5b17f236-87d2-4fa1-a9dd-7fe5ecfb4601",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b103deac-f470-40a5-bbb9-db7e4e8cfdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6108ccb-a1cd-4108-8e8a-5366eda6ab9c",
        "cursor": {
          "ref": "564d64ce-a71c-426f-b326-2870c2c22f44",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5cd7b7a8-20d8-4698-b746-1305f397e45e"
        },
        "item": {
          "id": "a6108ccb-a1cd-4108-8e8a-5366eda6ab9c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "55c070dc-8823-4287-8504-460b63c6c5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c22235-12ef-494f-b918-576bbb5df220",
        "cursor": {
          "ref": "df118e5a-4afe-453e-9bbe-a6e14b426f16",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d3de9a2-f267-4640-8e1b-ea73fc2c5a03"
        },
        "item": {
          "id": "92c22235-12ef-494f-b918-576bbb5df220",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "72ccbab9-6256-472d-8267-ad8305f91058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca48e73-5b44-4233-9aaa-f1c39c82f7a9",
        "cursor": {
          "ref": "0d219f61-32cb-47db-95a0-5cdf736329c8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2d05840d-3e86-4eb4-bec0-f30651e44543"
        },
        "item": {
          "id": "4ca48e73-5b44-4233-9aaa-f1c39c82f7a9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ddcab7e9-4914-4716-bf2d-bf92d613cc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3375824-9095-4636-b261-3e89c2d5c409",
        "cursor": {
          "ref": "9d4d6f54-16c8-4771-925e-b4cab63d4a30",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ee8ed515-3f7d-40ed-ad04-852f347be38b"
        },
        "item": {
          "id": "e3375824-9095-4636-b261-3e89c2d5c409",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bddb8021-a23c-4906-aed6-7b5ac5a1045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e72ec2e-1367-4b6c-aa9e-3a736e5df4d3",
        "cursor": {
          "ref": "9fd943e3-75f6-4189-919e-008ff2a9a620",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8690533-db31-41d3-826e-b75b0b02f489"
        },
        "item": {
          "id": "8e72ec2e-1367-4b6c-aa9e-3a736e5df4d3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d43e92fb-e92b-4691-a8fd-986974d4ee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab4b85-763c-41d3-a5a0-054718543746",
        "cursor": {
          "ref": "d4f79256-2424-4716-8a4f-73b8f59595da",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a7a0ed6a-66c8-444f-a13b-e89ef57d6049"
        },
        "item": {
          "id": "49ab4b85-763c-41d3-a5a0-054718543746",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a68aaa3a-a197-40cd-a30e-541109474b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2b4c0d-de31-4200-bc0a-1b57855ee3ed",
        "cursor": {
          "ref": "af894f8d-d910-4728-878e-75e66cd4add0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1acc7822-3374-4667-afa5-da8f4c1b15a4"
        },
        "item": {
          "id": "9f2b4c0d-de31-4200-bc0a-1b57855ee3ed",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "225b7dff-d6ee-43d1-84c9-1f2783ba46f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d077418b-3233-4cf9-aa3b-ca63c6f31639",
        "cursor": {
          "ref": "37eafdd0-4bc1-4a44-99fc-8dacea2ebc88",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b8217ca-9844-42dd-9d4e-d29106397f0a"
        },
        "item": {
          "id": "d077418b-3233-4cf9-aa3b-ca63c6f31639",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bc6fb001-00f7-4f9e-af47-fb70ee326b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23549e4-5768-4062-aadc-71cc89b24e56",
        "cursor": {
          "ref": "148eecda-8232-4d66-a0b2-abd0f00d6782",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "658163d8-c9ad-4dfc-8e32-bd061b274808"
        },
        "item": {
          "id": "f23549e4-5768-4062-aadc-71cc89b24e56",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cf13cb4a-5c33-403a-9889-eb297c392d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2031e17-8a77-4bb3-b575-c6399f261d65",
        "cursor": {
          "ref": "f7097d82-602f-49e1-8315-6dba79c5901e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0003d4e-dfce-4ea6-8824-f49d8c440cc6"
        },
        "item": {
          "id": "a2031e17-8a77-4bb3-b575-c6399f261d65",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4ea6137d-93d0-4d3b-bfd5-bad2cf9bad5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd470ed-5294-4a78-af55-a620346f01e1",
        "cursor": {
          "ref": "8486a9be-5350-482d-ad19-5bc29d97b499",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "33b40e2c-f95f-43f0-bb8a-15d11c1e1b2b"
        },
        "item": {
          "id": "afd470ed-5294-4a78-af55-a620346f01e1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d2ebc1a0-69d2-4914-b17f-c56456a79e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c83653a-fc40-4a24-8630-3dd494c457f3",
        "cursor": {
          "ref": "29ac1bc7-44b3-4e13-b5e1-1bb4a5e4120a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f0ba215f-643b-4b3d-bfbc-030a9763da05"
        },
        "item": {
          "id": "6c83653a-fc40-4a24-8630-3dd494c457f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "38804f52-e596-4136-8b66-09d9790da602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578c73fe-4025-48a9-8880-261205a33dd6",
        "cursor": {
          "ref": "5898d128-abda-4360-91b6-85aa9a68ba92",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0882258d-00ef-4209-80b4-6f2c8a249109"
        },
        "item": {
          "id": "578c73fe-4025-48a9-8880-261205a33dd6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f5e8e749-bfe5-4b36-bbd8-8b72604e778a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd2707-e24a-4ca0-84cd-fcd1e2bb2602",
        "cursor": {
          "ref": "36f21cfa-678e-4cf9-9213-0b0a1b59f986",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "89a90dfa-1f88-41e6-b461-80673d999e15"
        },
        "item": {
          "id": "efdd2707-e24a-4ca0-84cd-fcd1e2bb2602",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8923fbd6-b911-49f7-96f7-c0849a354c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8893d-badd-45d3-82f5-1f34874ec923",
        "cursor": {
          "ref": "233eaa6b-25f3-4097-86f4-87622c8ed660",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0d9b483f-39e4-4e99-b6ad-fc638ba0599e"
        },
        "item": {
          "id": "fbf8893d-badd-45d3-82f5-1f34874ec923",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "695a6f5a-bc6f-4a95-9e47-22970aee014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4469a69-2fd8-4135-8bf4-1c43ac544661",
        "cursor": {
          "ref": "df146775-2ddc-45ce-b4b4-6167bba2683a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "db9da58a-0bbd-4cd4-a6ab-3f8ca9a8cdde"
        },
        "item": {
          "id": "f4469a69-2fd8-4135-8bf4-1c43ac544661",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "25b78a8a-d837-48d5-8310-b6557aa9f8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff9c9e2-ff87-4989-8320-c04c4804508a",
        "cursor": {
          "ref": "b44bd69a-194f-42ac-90aa-cced9f4bf2f5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5b75495a-f3e8-48e0-9e42-b5709e435c1e"
        },
        "item": {
          "id": "2ff9c9e2-ff87-4989-8320-c04c4804508a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad3280f2-2a4a-45fa-a0d7-6c9152853b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f310d8-9da3-4832-bef9-c2414b4b25f9",
        "cursor": {
          "ref": "0c19cbbd-74a6-4de8-9f1f-6f58809a3b18",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0b1b044-6f46-4d0e-9bc3-09e5664cc716"
        },
        "item": {
          "id": "b3f310d8-9da3-4832-bef9-c2414b4b25f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "faaaadf4-e055-44d0-a55a-8ed5f27f8ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29005ff5-3060-46e5-adda-66e945d41638",
        "cursor": {
          "ref": "0d83bc21-1ad8-4773-93fc-dc7bc9264527",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "011b97b2-b17d-4f8f-bed2-771ca5cfc76d"
        },
        "item": {
          "id": "29005ff5-3060-46e5-adda-66e945d41638",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "183f93fa-a1e2-442c-8b8a-8b2b5c72c95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14931401-d0e4-489f-a87b-e92194890222",
        "cursor": {
          "ref": "f6047cef-98d6-4240-8c0b-0a36b589dc7c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "08a1f2b5-ceba-4e03-8b1e-e98d3e7b6c41"
        },
        "item": {
          "id": "14931401-d0e4-489f-a87b-e92194890222",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9eaba93b-7dcf-4faa-acf3-703d49a5d50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f939e6e6-d850-4397-92e5-6db47b51bf39",
        "cursor": {
          "ref": "1c8a56de-0c8b-45f4-9bf0-5acd6810021d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2048615f-940a-43d7-94dd-b3d71c4526cd"
        },
        "item": {
          "id": "f939e6e6-d850-4397-92e5-6db47b51bf39",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "733f008d-3c7b-44a2-a111-3bd204fae334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0221b08e-4f23-402b-a11e-0429c0f9d138",
        "cursor": {
          "ref": "17645a27-88bf-4c13-9ae5-175b76a1c36e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "76484c29-8a75-4ad6-9da6-d98f0d335173"
        },
        "item": {
          "id": "0221b08e-4f23-402b-a11e-0429c0f9d138",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ad3700c-149c-4cff-836c-a91ea3d71a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee0f6fb-39e9-495f-98e9-374b9c8df3d9",
        "cursor": {
          "ref": "5ed0e307-af76-41d4-83a8-24d2a85caf81",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3db65c20-9111-4eba-b1b2-98847d485207"
        },
        "item": {
          "id": "0ee0f6fb-39e9-495f-98e9-374b9c8df3d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "083e938f-ef4e-40af-9e17-668888ebb8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c33290-5e6e-4bdc-8af6-e8352b8a526a",
        "cursor": {
          "ref": "e353409e-ec3d-4d6b-8a53-2e8f24eaf490",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a800d7ec-332f-4403-ae22-d466182d535c"
        },
        "item": {
          "id": "38c33290-5e6e-4bdc-8af6-e8352b8a526a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "625920bb-f80c-491f-bebb-5fbb8e79c92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac087ad-2bf7-46b4-9e3f-0ca7694283cb",
        "cursor": {
          "ref": "049c5541-0f6d-4b83-82ba-0c4030e5165f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "377ff1be-f8cf-4fd8-af72-48b52003271f"
        },
        "item": {
          "id": "6ac087ad-2bf7-46b4-9e3f-0ca7694283cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "371585d9-c844-467a-ad9f-4faaa064fde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7f2082-6e9a-4a5c-9cf7-e1892a113ccf",
        "cursor": {
          "ref": "bc427530-b573-46e7-8203-3c8e53ab556c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2de9ebef-e9a0-43ab-b8ff-50262c05684c"
        },
        "item": {
          "id": "fd7f2082-6e9a-4a5c-9cf7-e1892a113ccf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6e7f0495-fc77-42e9-ac0a-2737126a7c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d16d0-8375-4633-a520-67c4c2d455b7",
        "cursor": {
          "ref": "6720c78c-2749-4810-a6c1-bd0b0bea2dc8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0269ad77-93c4-4e34-839e-86b71cc20678"
        },
        "item": {
          "id": "a82d16d0-8375-4633-a520-67c4c2d455b7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e2505023-8d6a-4263-874d-17780a1e0821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233299e2-f978-496c-9846-844c90a5b642",
        "cursor": {
          "ref": "424cb5fe-318b-47db-a845-42472c726679",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b5acc3d8-589e-4da8-909e-5a15f7ec643f"
        },
        "item": {
          "id": "233299e2-f978-496c-9846-844c90a5b642",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e2d6ebd4-4d32-4922-96e4-6d784885cacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e418f22-7761-449d-8081-714b648617a2",
        "cursor": {
          "ref": "fa035cf4-ac70-4ba7-9247-cb481cc7e616",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b22864b6-2aed-49b8-90f6-15ae0a02f56c"
        },
        "item": {
          "id": "5e418f22-7761-449d-8081-714b648617a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d0d894a9-ee77-4611-ba19-4bd37918d972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4745beb8-3a23-4993-ab1e-33c63c4e2846",
        "cursor": {
          "ref": "4edf2fb7-6d8e-4d85-87db-2550d5e847ac",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dc18f9f0-311a-4e49-918f-0565bca352ca"
        },
        "item": {
          "id": "4745beb8-3a23-4993-ab1e-33c63c4e2846",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8981292d-3600-451e-8a09-69cdc28f33f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429c92c-f26e-4292-888c-055a55d20c00",
        "cursor": {
          "ref": "e72bd44d-c1b4-4d49-952d-12fe3eceb2c3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "93088966-5e0b-4abf-95e0-4d6f424fc1d9"
        },
        "item": {
          "id": "5429c92c-f26e-4292-888c-055a55d20c00",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "534ed954-47fa-4ef5-a792-59599ad21f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a641df-356c-43aa-bd9b-24e5dcef44e4",
        "cursor": {
          "ref": "3b7dd3cd-d023-4e09-a13a-d22e248d7a9c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b28d6677-8cfa-4f1a-bfea-813c05ca0386"
        },
        "item": {
          "id": "56a641df-356c-43aa-bd9b-24e5dcef44e4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f53f8959-8944-44ad-a0ba-53e20cab24c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc7b7c0-9c3f-4037-9d49-f99778923858",
        "cursor": {
          "ref": "aa6f1315-f644-48e2-bb89-4f0e513b1ef6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a9231c75-9e80-4972-ab0d-3448f65bddc9"
        },
        "item": {
          "id": "2bc7b7c0-9c3f-4037-9d49-f99778923858",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9131411-ba51-4fa5-94e9-c10d164acca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f067f34-59c9-4f33-b3fc-ffd2546a171b",
        "cursor": {
          "ref": "b80dd4d0-8190-4829-9287-9498479937fd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f2389949-661c-443b-8688-7f914ebf4563"
        },
        "item": {
          "id": "3f067f34-59c9-4f33-b3fc-ffd2546a171b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0566e591-b7c3-44c3-b7e6-d34084720710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444b3d65-c2f8-4b92-87b0-54e9ba56c63d",
        "cursor": {
          "ref": "03b2ceab-9560-4ea0-80ca-7fb3cc88b905",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c1c46dfc-e62e-434e-84e5-e6ee005d0de2"
        },
        "item": {
          "id": "444b3d65-c2f8-4b92-87b0-54e9ba56c63d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0f4117ec-3f8d-4ef7-92d7-45aa8843681e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ef5881-bcc2-40c2-834c-b6e799a75d6e",
        "cursor": {
          "ref": "cef6c0b5-1da8-446c-8238-65f7a15c5d67",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9f561846-4d5a-4ccf-80d2-d88cab972f39"
        },
        "item": {
          "id": "74ef5881-bcc2-40c2-834c-b6e799a75d6e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "984dedcf-3f8c-478f-9ade-c3429bd584e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34c48b8-39c3-4345-80b3-a0b54fbb6627",
        "cursor": {
          "ref": "816a1a16-4c05-4fd0-93b9-8feb6c7e0cfc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e417cc26-6fb4-4b1d-8923-1e98e5727263"
        },
        "item": {
          "id": "e34c48b8-39c3-4345-80b3-a0b54fbb6627",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9562fdcb-2746-42ec-80e3-569e8b652ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a42e497-3118-4829-92a7-ac69e51b2501",
        "cursor": {
          "ref": "b5ee8f32-9d8f-49f9-b683-a7e02f6294bc",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3dba425-f838-4262-8673-61f3a1d51c35"
        },
        "item": {
          "id": "3a42e497-3118-4829-92a7-ac69e51b2501",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "79c39763-81a4-49d6-b561-1a300024f02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8ab7db-07c1-4ee0-867f-5e7c108bc16f",
        "cursor": {
          "ref": "4cca8aad-bee9-4dc1-92f3-e148e94b5993",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a4460801-b3e1-4ee3-b292-9c77d3078014"
        },
        "item": {
          "id": "1d8ab7db-07c1-4ee0-867f-5e7c108bc16f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5f97b010-bf0d-458a-9648-e48cc3ee9de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145c320e-bf4c-4d76-a723-7a17ac32b8b8",
        "cursor": {
          "ref": "93fe166a-c630-4c1a-8656-38f424b5b648",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c02a4018-f728-4be7-82ae-6e5c960c22bd"
        },
        "item": {
          "id": "145c320e-bf4c-4d76-a723-7a17ac32b8b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ddd81f04-f4e7-4153-8ebb-e2c1ab417ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cb97ba-5fd0-44a9-9099-fd336b6de24e",
        "cursor": {
          "ref": "f16680e3-40ec-4b92-974a-e73b745b65e9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "44a98c7e-849d-4a29-b3dd-8b9e3832e0eb"
        },
        "item": {
          "id": "26cb97ba-5fd0-44a9-9099-fd336b6de24e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "804b8ad0-808c-42c3-9a8f-6757877e55c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10689ac-fb02-4acd-bb1c-d0157ec77c11",
        "cursor": {
          "ref": "1c0933cd-78d6-4583-afd5-4bca137a6a88",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f97fb429-fa25-4f08-b7a1-eabb438148c0"
        },
        "item": {
          "id": "e10689ac-fb02-4acd-bb1c-d0157ec77c11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "31922709-9b6d-4b59-884f-0cafb1245646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ffca23-38e1-4feb-9b41-d30b1c99bbe6",
        "cursor": {
          "ref": "237710d4-24a5-45be-91d3-aa5ff20b67c5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b6f9aca0-f411-467e-bf79-6a85b7a823e2"
        },
        "item": {
          "id": "25ffca23-38e1-4feb-9b41-d30b1c99bbe6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2b3fc870-bb29-4ac4-b9db-1e2b892cb102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cc20f6-e147-4007-939d-b7fd7ba8a847",
        "cursor": {
          "ref": "e5effa50-f6f5-4c0d-858a-6dd49dc98261",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a79442cd-87ce-49bf-b0c4-9c6aa01bcc3d"
        },
        "item": {
          "id": "71cc20f6-e147-4007-939d-b7fd7ba8a847",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ce36435-5979-49e4-a666-8efffcac3b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06d20f8-aee4-4031-9aa1-bb19f2f12cd7",
        "cursor": {
          "ref": "e6c66e4f-2550-4d24-9bd9-babe25b76377",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "00dc90d3-fd27-42f2-8701-a25489a0ba09"
        },
        "item": {
          "id": "a06d20f8-aee4-4031-9aa1-bb19f2f12cd7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3f3a9bed-62c1-4b43-93a1-8ad14b0bd17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cea93d-038d-4906-832d-fa4d45fd505a",
        "cursor": {
          "ref": "e7797c20-df5a-43b7-b884-f780dce03e99",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "02357ad6-8e8c-4bf9-91f7-4d47b558250d"
        },
        "item": {
          "id": "24cea93d-038d-4906-832d-fa4d45fd505a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "66e200f0-c0f1-4a12-94df-6e2ae2e87c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a4b92c-4d84-4b8b-8f58-41343045b82e",
        "cursor": {
          "ref": "9716dc10-6fec-4762-ad9d-f096b2ab0caf",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "549f3f9b-f958-4ed4-a18f-f3da9be41beb"
        },
        "item": {
          "id": "18a4b92c-4d84-4b8b-8f58-41343045b82e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0a0438f5-ac1c-4520-94a9-5a8c1be95ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3d64cf-47d8-4ca0-9007-2667e35729b3",
        "cursor": {
          "ref": "d8a6d124-f5ce-4ec0-8de5-a1e7a9238ad1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93949b91-7c88-44f2-b028-a4ff36469f9d"
        },
        "item": {
          "id": "0d3d64cf-47d8-4ca0-9007-2667e35729b3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7d756f53-67dc-41e4-b5ee-4dfb8bbb032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99548bbe-b4e2-4caa-854a-00e2300d25ce",
        "cursor": {
          "ref": "fd4901ce-9e31-4eb9-a329-ddb4030e868b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "acbcdfeb-a467-4eaa-829b-3f08a46355f6"
        },
        "item": {
          "id": "99548bbe-b4e2-4caa-854a-00e2300d25ce",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e72cca4d-1256-459d-9acc-dd626b6b9d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099c4bf8-defe-4a4e-9fd8-a8a837541ec5",
        "cursor": {
          "ref": "da55932e-c668-44b9-9df8-ac86ad65ba15",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f39ef0f5-c9b5-417b-a8db-c8ab1d63baf8"
        },
        "item": {
          "id": "099c4bf8-defe-4a4e-9fd8-a8a837541ec5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "864c905c-b1be-4650-a611-dc82bf8a4ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346cd349-c3cd-49c5-807d-7d76fa0a689b",
        "cursor": {
          "ref": "54dd9af0-77b8-4848-877f-469d813cb776",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c2d8296-3b2b-4772-969d-3f8e27aebe76"
        },
        "item": {
          "id": "346cd349-c3cd-49c5-807d-7d76fa0a689b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "024a448e-0b64-4cfe-b2d7-e77509e3284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdcecb7-4284-4afd-a920-3360afc0b2a5",
        "cursor": {
          "ref": "70f87061-a0a7-4ece-8c44-e6d93c8a9dc1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "096093d5-b772-41ab-9579-6ff5a8c94b7e"
        },
        "item": {
          "id": "8bdcecb7-4284-4afd-a920-3360afc0b2a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0fc4145f-0ce0-40d7-b4df-a1369fa61548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851abea0-380b-4f66-97c6-a3654d7c3cd1",
        "cursor": {
          "ref": "9960fc07-fc5d-421d-ad84-ea99b02c41cc",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8bee42e2-881d-4b08-ab35-be42ce67aa78"
        },
        "item": {
          "id": "851abea0-380b-4f66-97c6-a3654d7c3cd1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3aff510a-c961-4f73-8b73-38d15edcfe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db19449-8875-45dc-b494-72f14ad4baab",
        "cursor": {
          "ref": "1ebddce0-e348-4019-9319-f6890e66dea1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c5b81aca-ba06-47cd-9cb6-2a3c62c30d98"
        },
        "item": {
          "id": "2db19449-8875-45dc-b494-72f14ad4baab",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b68caa3c-cc36-4225-ac8c-97d2bf850cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d98b88-8fc3-44c7-9366-3b194fed4904",
        "cursor": {
          "ref": "3e3571ac-a0c2-41d6-8e08-48b5492c1f76",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "67939060-b562-4115-9ad2-f94c203f211a"
        },
        "item": {
          "id": "c2d98b88-8fc3-44c7-9366-3b194fed4904",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49b5185d-64f4-4b13-94d4-b4402a8f5d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73cef7f-5ebf-4d83-9d05-cb7b437ede9e",
        "cursor": {
          "ref": "618fac5d-6602-4460-ac68-9601846d4cb3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bda6bf43-c606-4615-9a71-05d4ff0b2727"
        },
        "item": {
          "id": "d73cef7f-5ebf-4d83-9d05-cb7b437ede9e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0e59f169-bb8d-4d85-9564-77c03aa8eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f30a2e-189c-4d4f-a375-9a0e730d9869",
        "cursor": {
          "ref": "e77a5f6e-d8c6-4576-a288-dcea0c228273",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fc8b9fd4-6640-491d-99b1-7583f365a193"
        },
        "item": {
          "id": "72f30a2e-189c-4d4f-a375-9a0e730d9869",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3fb45f31-78b7-4f09-8ff1-8b391bbef5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9da546-7f8b-4c3f-b4a1-40fc728f3f07",
        "cursor": {
          "ref": "6a52e13e-977a-472b-b52a-4e7c4eede99a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "059532d2-238d-4960-9ac0-4ad82dfb6c39"
        },
        "item": {
          "id": "3e9da546-7f8b-4c3f-b4a1-40fc728f3f07",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "434e896b-0121-472a-bc2a-db14ea1aa7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909003b0-b7fd-4b58-9990-780b25d35f0c",
        "cursor": {
          "ref": "1bbfb0ef-3056-47c5-99dc-1ca122443544",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de08b14d-01a7-4e0c-972d-d0223e5d575c"
        },
        "item": {
          "id": "909003b0-b7fd-4b58-9990-780b25d35f0c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "16994ebb-35be-425d-a286-9c08ec4d22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c55a1fb-7d70-4f17-9ddd-5dfd71f6f2df",
        "cursor": {
          "ref": "68bc9e1e-38ad-4306-a110-afdbbde8bc81",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a5d45ae7-b192-4d20-9c40-c453d93eae73"
        },
        "item": {
          "id": "2c55a1fb-7d70-4f17-9ddd-5dfd71f6f2df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "60c91b8f-f463-4518-bd3a-56539fcc3e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6909c0a9-98bd-41ee-9b4e-861d06349f98",
        "cursor": {
          "ref": "f36813c0-a81a-4711-9543-4e4c5734ba75",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0cce9972-d79d-415f-8852-200338a4e271"
        },
        "item": {
          "id": "6909c0a9-98bd-41ee-9b4e-861d06349f98",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e12e4ab4-a9c3-413a-9649-04893ebed324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d423c8f6-f56b-4ca2-ba43-7f1f6ca1c524",
        "cursor": {
          "ref": "f0bbee8e-2e25-429b-950d-302955071dca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3d02c9d3-74d5-4f05-a838-8c2d675be33d"
        },
        "item": {
          "id": "d423c8f6-f56b-4ca2-ba43-7f1f6ca1c524",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "083dfe17-8a55-4786-b6df-245d415bfa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb2bc1f-26ad-4c90-8945-4f71661c512c",
        "cursor": {
          "ref": "b12affeb-651d-4fe1-a386-12093995f568",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c45f496e-3bb4-4332-b4c0-c085f659d813"
        },
        "item": {
          "id": "edb2bc1f-26ad-4c90-8945-4f71661c512c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "03ae778e-3c81-4f42-a37b-ae0c1b13abd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d024f5f4-9994-4c4e-8615-860304f26bd0",
        "cursor": {
          "ref": "d0a3c855-1b15-4cc6-a0a8-de9ecfabe665",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb952a59-ca68-4a47-9c1f-f34c70106226"
        },
        "item": {
          "id": "d024f5f4-9994-4c4e-8615-860304f26bd0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8aba854a-27f5-450b-9ee8-e6c22e862cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bcd43a-95c5-4c6d-b8d9-61b3da95793d",
        "cursor": {
          "ref": "c01846fb-990f-42b8-bd2e-cd8bbe2c25a0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "15de6721-0536-483e-98d3-a9ffaa92e40a"
        },
        "item": {
          "id": "83bcd43a-95c5-4c6d-b8d9-61b3da95793d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e1a8c20b-e7e5-4fbd-907e-5d32e5d99639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c473cbc-34f8-4587-a9b4-7b9a5e8c610d",
        "cursor": {
          "ref": "548c3891-3b5a-4c60-b681-59333ebf2d20",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d0688580-6a67-4bcc-a9e6-7e1b3d81be3f"
        },
        "item": {
          "id": "2c473cbc-34f8-4587-a9b4-7b9a5e8c610d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e90d4358-a887-4e18-8d9f-2b7adcf7dbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b315e9-0b59-49cd-a850-5ffa6f38abd0",
        "cursor": {
          "ref": "4c91a454-97ea-4a82-b710-0586c403d3e8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "258d65f2-5e18-4283-93a1-fc6706dcffca"
        },
        "item": {
          "id": "98b315e9-0b59-49cd-a850-5ffa6f38abd0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5d547543-4450-4f3f-b96c-8998ec393c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef7c8bd-b231-4a4f-9245-4527b2f48027",
        "cursor": {
          "ref": "048ebe6a-f0ed-486d-a4d7-229029779837",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d407279-5409-46a3-9a4a-744ba0e92054"
        },
        "item": {
          "id": "bef7c8bd-b231-4a4f-9245-4527b2f48027",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f02e56f0-7c36-4eb0-8172-9d20fcc8ec84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc56f65c-8c84-408a-94dd-73f85bf792fa",
        "cursor": {
          "ref": "81e44966-553d-4388-89ae-0e30278a8b54",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dcd51193-043e-41e6-b580-ca34031794f6"
        },
        "item": {
          "id": "dc56f65c-8c84-408a-94dd-73f85bf792fa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd1114c1-6f9b-4567-acbd-538f2024d4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6299770-aa55-4a17-a2ec-334b112af718",
        "cursor": {
          "ref": "a1c11b31-4e58-4002-be66-2b78485daa9f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6ccda8a6-ae03-4afd-8ead-77aa990cd7ac"
        },
        "item": {
          "id": "b6299770-aa55-4a17-a2ec-334b112af718",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b409ea5c-b14d-4952-8162-b2d5fac0c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb160ac-452e-4083-80ea-08204949266c",
        "cursor": {
          "ref": "7ca0c916-964d-44ae-ad8d-77036f23e657",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ccbafc34-7baa-4580-a3d9-8adae53de161"
        },
        "item": {
          "id": "ceb160ac-452e-4083-80ea-08204949266c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "71673d62-272b-466d-93ef-e58647f9f69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923809ad-f6ed-44b9-bd48-f4a208e366c6",
        "cursor": {
          "ref": "f865bdef-999d-4768-9746-e2589b59ad4b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "127d19d0-ab73-4fd1-8085-a3f0be0e9d2c"
        },
        "item": {
          "id": "923809ad-f6ed-44b9-bd48-f4a208e366c6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "16711c0c-f9ed-4211-a227-4117b03482d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b390a07d-d38f-41a3-9e42-6996b596102c",
        "cursor": {
          "ref": "eba4b044-1026-4499-bcb3-446054d31768",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "68a352e8-aaae-412e-a7fa-ce6315d3d14c"
        },
        "item": {
          "id": "b390a07d-d38f-41a3-9e42-6996b596102c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e29b0b53-68be-4a9d-9e24-754e64a75db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39966f7-f591-476f-b7c1-e6c24b116704",
        "cursor": {
          "ref": "9f74d5e8-578a-476f-afa0-a8d2cf20e3f7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "654ec346-96fc-4463-8b8f-b65da3687033"
        },
        "item": {
          "id": "a39966f7-f591-476f-b7c1-e6c24b116704",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "03ffdae9-75cb-4bb5-bf6d-868dd945c12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acaa408-cff6-422f-b2a5-3e7b5f195797",
        "cursor": {
          "ref": "e401a23a-0cbf-43f4-9769-989bebf8a8b0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9e129b2d-3675-4f49-a381-0a6d0a74f16a"
        },
        "item": {
          "id": "3acaa408-cff6-422f-b2a5-3e7b5f195797",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e0704e68-98a9-47d7-8ef2-8053849002ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9232d86e-ae0a-4a3d-a725-8620237bb5a2",
        "cursor": {
          "ref": "405af83d-8d2b-4ee7-bde3-d99230fb609d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0c1d3f4-2a45-43b5-ac98-a3df30905ed3"
        },
        "item": {
          "id": "9232d86e-ae0a-4a3d-a725-8620237bb5a2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "975157dd-8b60-4f43-bb13-0a7681cd0afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "263d7f9d-6794-4563-8b3c-33bbb0a5bafa",
        "cursor": {
          "ref": "1800feef-6578-4b53-a126-7400166f1881",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "92184e6c-fac0-40ff-85ac-f0a16996be10"
        },
        "item": {
          "id": "263d7f9d-6794-4563-8b3c-33bbb0a5bafa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "86390321-3c5b-42b4-9553-3cb0fede9d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8e886ace-82af-4c14-85c9-ffa223dd8b1d",
        "cursor": {
          "ref": "e9d8becf-ccf3-4755-b0ac-bb5634a82b0f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3daa3c73-50cd-4905-a64d-ffae2ee37d03"
        },
        "item": {
          "id": "8e886ace-82af-4c14-85c9-ffa223dd8b1d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5fb676c6-0871-4a7f-ab0e-1aca90af9ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2b5b6498-6be2-421c-a66b-200c7ebeea0d",
        "cursor": {
          "ref": "094e0ec5-21d8-4e61-9ca8-ca14f14f55f9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f7bb8075-30c5-47d3-9a59-f1ef9f87bc9c"
        },
        "item": {
          "id": "2b5b6498-6be2-421c-a66b-200c7ebeea0d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a5470155-85a4-4f71-b7d7-2249f11bb014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f04c9909-ca00-4a0a-a691-7dfd00127c66",
        "cursor": {
          "ref": "2a72c024-2137-4303-846a-01b3a49e7e03",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a05041e-0121-4b63-841c-d87be7710559"
        },
        "item": {
          "id": "f04c9909-ca00-4a0a-a691-7dfd00127c66",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "733cf81f-cb8d-4fe7-8b4a-d4594f382a7c",
          "status": "Created",
          "code": 201,
          "responseTime": 7160,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33add580-b59b-43b1-a72d-51b0e8cfa3bc",
        "cursor": {
          "ref": "e53330d2-c1d3-435f-b132-42b81b6bb68c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3132b66f-ba0f-4382-a6f5-5f576781682b"
        },
        "item": {
          "id": "33add580-b59b-43b1-a72d-51b0e8cfa3bc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25b871bf-cc87-499d-87bf-015228b35664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6e6fba66-b253-4d06-b269-44f52ba24078",
        "cursor": {
          "ref": "32992a52-e6b9-4086-8277-976b98e95ecf",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e5ea4c48-8d3f-4e1b-b29f-4f805c9a8b11"
        },
        "item": {
          "id": "6e6fba66-b253-4d06-b269-44f52ba24078",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a8b6cbc5-dbc6-4a18-8614-58eb1e9c2d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "89bc399e-1bce-49d4-8613-3d3a7d2d53cd",
        "cursor": {
          "ref": "3036cb60-b37d-4183-bcc7-1817f19c7da5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1dcf7c36-5231-4f7e-a480-93f80a183d26"
        },
        "item": {
          "id": "89bc399e-1bce-49d4-8613-3d3a7d2d53cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "836dce79-40a0-400f-a450-80dd02479da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23515fe-4a4b-493b-b539-cd6ab8b82768",
        "cursor": {
          "ref": "d61f8003-1814-4953-b7d0-63a0a467e278",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "396fc8f3-8ac7-4d90-ab5b-cf067f3671c9"
        },
        "item": {
          "id": "e23515fe-4a4b-493b-b539-cd6ab8b82768",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a36c0efd-16f5-498f-9e04-78ac530c7a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7993cd9f-f7d0-4d02-9a6f-999563bd2e7a",
        "cursor": {
          "ref": "3812ccab-6dcd-4217-aa74-2aad4ec6ff20",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1e7b0570-e3da-4d74-b76a-7a675f98fb4f"
        },
        "item": {
          "id": "7993cd9f-f7d0-4d02-9a6f-999563bd2e7a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "615d629d-bf6d-419f-866f-5a262e96d8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afe3c93-4111-48e2-bcfc-695713aa3bba",
        "cursor": {
          "ref": "073d79e4-ed79-41dc-99e4-69b46e115c6e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fffb5dfc-ad57-41d2-b427-81929479ac48"
        },
        "item": {
          "id": "0afe3c93-4111-48e2-bcfc-695713aa3bba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "45cfae4a-40f5-482d-a7df-49dae6c75454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b48de7-367e-4690-b64a-cc8659f48108",
        "cursor": {
          "ref": "4db1c43a-151d-4c73-ae2f-48754c7046d5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "62b597a3-e4d2-415e-b081-84a854b7550d"
        },
        "item": {
          "id": "04b48de7-367e-4690-b64a-cc8659f48108",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3a1c9428-4218-4bd3-8546-49c8c0a86c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f499c09-e680-4d3b-b2ec-df265cdd6636",
        "cursor": {
          "ref": "740cb8f0-6afc-47cb-a02f-60e97a55c837",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8f6dd3e0-87b8-4a67-bf91-2e03e1427ac4"
        },
        "item": {
          "id": "6f499c09-e680-4d3b-b2ec-df265cdd6636",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e6bd5f00-36e4-47bc-a1b0-a31eb9143568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c60d50-4121-4ea0-8604-0221e6b4a8d8",
        "cursor": {
          "ref": "9feea719-e518-42ce-8a49-8c23b7920651",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0e6e1048-9534-4fe8-9463-8780137d0967"
        },
        "item": {
          "id": "d8c60d50-4121-4ea0-8604-0221e6b4a8d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dbef3215-d20b-447c-938d-8814f7d219ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c3841-79ed-4335-b465-4d3fd02a7bdd",
        "cursor": {
          "ref": "512aed9e-16d6-4b82-87f2-b3d7739df655",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a796686-8d18-42d8-bbfb-857a4038348b"
        },
        "item": {
          "id": "b60c3841-79ed-4335-b465-4d3fd02a7bdd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e8f482da-c60e-4bf9-abbb-46642e0adccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b549fc-d958-4c02-a3cc-524a948fd8d1",
        "cursor": {
          "ref": "f50216d7-f0c3-4706-a4de-3bab0b8f91de",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cf530e0c-64f9-4edd-9838-6af08fdae20e"
        },
        "item": {
          "id": "71b549fc-d958-4c02-a3cc-524a948fd8d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7339ae98-d28d-4b4c-a058-5d47e0264109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4243a7bf-bfea-46dd-b9fc-c63717eecd0e",
        "cursor": {
          "ref": "59a0a758-3530-4ce8-aad3-1253370f577c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d033c370-3be1-483b-95c8-90711a1fd5d2"
        },
        "item": {
          "id": "4243a7bf-bfea-46dd-b9fc-c63717eecd0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dad367ff-09b0-483f-aa3b-95b44f286309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa0519f-f740-47c9-a2a2-ca3b1fa6e7c8",
        "cursor": {
          "ref": "efde0891-bf2c-4b7b-bd1e-40f606d5bcf4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9af4e3e4-1274-4651-8a72-e803250ea356"
        },
        "item": {
          "id": "8fa0519f-f740-47c9-a2a2-ca3b1fa6e7c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7afb7ebe-82e1-4058-9ac3-7b437e2a84fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152df894-2a89-4389-a67e-39ea77e32975",
        "cursor": {
          "ref": "e93cb58c-5d4e-462f-83bb-dd97eeca1cd0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b445fa50-984d-41a4-a1c9-5d2b6cecec80"
        },
        "item": {
          "id": "152df894-2a89-4389-a67e-39ea77e32975",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a92f12d-abab-4d64-bb6f-8473c1f5a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee0c6eb-3f8f-48da-96f8-58953dd39d3e",
        "cursor": {
          "ref": "8317c658-e2ee-45b9-83dc-760adb820ca3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "12ecb11e-4f08-46dd-824a-91465dff1c14"
        },
        "item": {
          "id": "fee0c6eb-3f8f-48da-96f8-58953dd39d3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c90fe7f-a64d-4c5a-a456-cb777bb10b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f745ad8-5661-42ae-9bb5-1050def4166e",
        "cursor": {
          "ref": "194fedd5-57a7-45f5-b3b2-ce7bad8dbda7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2e1d9456-6bb3-4c52-85c5-83c87373213e"
        },
        "item": {
          "id": "4f745ad8-5661-42ae-9bb5-1050def4166e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a2b69ce9-9c7b-469e-98df-8c13dc7441d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b2ef15-832a-42d5-9729-606d10e673dd",
        "cursor": {
          "ref": "e7f62e97-b5f3-4eb5-bf54-ca02cdba93d9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d5c589a3-8335-4816-87a8-c1c429f1bc6d"
        },
        "item": {
          "id": "b5b2ef15-832a-42d5-9729-606d10e673dd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53f16e81-1099-41c8-b9e8-c12bbbef2037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7032343-f45c-4bc7-9ee2-bd34b2d7d643",
        "cursor": {
          "ref": "161b2291-494b-4e52-a871-2ca5651470a9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "63dbfb5d-e267-4f35-90bd-b31de2e055a0"
        },
        "item": {
          "id": "c7032343-f45c-4bc7-9ee2-bd34b2d7d643",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "546c65b4-2874-43d7-bf64-392f696dee7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6646b3e3-3610-4ca6-8d7f-68b44ea2c86d",
        "cursor": {
          "ref": "7a5d7372-14ca-49c8-bd15-bb523c56ce61",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82856028-55c4-4902-a5b4-590d810d2aea"
        },
        "item": {
          "id": "6646b3e3-3610-4ca6-8d7f-68b44ea2c86d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dd7cacf8-7197-4e91-b43e-9c932e9c63f8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fb2ec504-d07b-49a1-8ffd-a0af209f4219",
        "cursor": {
          "ref": "a2e64bcf-faaa-4119-afbe-97787b2c68a7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c89431c-bf73-4204-9a76-c746af425779"
        },
        "item": {
          "id": "fb2ec504-d07b-49a1-8ffd-a0af209f4219",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5fa36163-7997-46ef-9bc8-7f24f923ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dafcbb-603e-4e49-972e-2717590367ef",
        "cursor": {
          "ref": "afb5105d-48d0-47bd-a466-872b24870e1f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fa1dee21-c142-45e2-9d55-a1c63eadeb7f"
        },
        "item": {
          "id": "39dafcbb-603e-4e49-972e-2717590367ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8c5a7a42-6d99-4a31-9c4b-ae76ab786ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45b3e45-04a8-4cf5-a95b-3cf4f6de1dfa",
        "cursor": {
          "ref": "1ca11ee4-0efd-4fa5-a67b-039d13328d7d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dcdf4f8e-bdec-4ad5-a364-50191b67f20c"
        },
        "item": {
          "id": "a45b3e45-04a8-4cf5-a95b-3cf4f6de1dfa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "719ca257-c06f-486e-a120-476d56f07a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b0a744-048a-4420-a810-0f61f25239c7",
        "cursor": {
          "ref": "28aeb968-e607-452e-85ef-7ece344d47a6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9420219d-b3b6-473b-a60f-a9b55107d5ce"
        },
        "item": {
          "id": "68b0a744-048a-4420-a810-0f61f25239c7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a14bba09-a2bb-492a-9397-d4a3893abda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad55f75-22a7-44c7-a032-2402bbbd9f3d",
        "cursor": {
          "ref": "8b19ce83-0a10-4ab3-a1be-7de778377bcb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ac7a4252-b4d6-494a-84c7-6e1c22adea2e"
        },
        "item": {
          "id": "aad55f75-22a7-44c7-a032-2402bbbd9f3d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e3c10a81-182f-481d-be20-87ae200f207e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38290e5-2d12-4347-be8c-1ecc7d69c1ff",
        "cursor": {
          "ref": "a11dabfb-7d39-4822-95aa-8415cbc152a7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4dc7c5de-b958-4e88-a7fc-4dfdca800eed"
        },
        "item": {
          "id": "c38290e5-2d12-4347-be8c-1ecc7d69c1ff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "881b29d3-f36f-4c5e-82eb-8be48ee2a8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0123828f-c0e4-4c48-bbc7-28cb22cbd78c",
        "cursor": {
          "ref": "a7fdcdbc-717b-4ed3-a549-63af787a6376",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e8773f24-a183-49dc-b3d4-120fda6d10d3"
        },
        "item": {
          "id": "0123828f-c0e4-4c48-bbc7-28cb22cbd78c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d0ab8d23-5141-4bcf-93a7-68f0ca9de324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b47903f-2d0a-4f7a-b450-4fd3b5592f63",
        "cursor": {
          "ref": "3a0abc22-5cf8-48ff-8a2f-986c8364d2be",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "98a74652-c328-4a95-9800-d06ee94cf9a2"
        },
        "item": {
          "id": "4b47903f-2d0a-4f7a-b450-4fd3b5592f63",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1ecb18a2-5cd1-4a1b-b611-758511a551b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e396b428-4571-47c6-9a30-6a58834d7957",
        "cursor": {
          "ref": "1a6579c0-9570-4f5e-a419-1156d42c8754",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4de7125f-bfbc-4e34-a22d-2d0bcd4d9e37"
        },
        "item": {
          "id": "e396b428-4571-47c6-9a30-6a58834d7957",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd330580-ad8c-4cc1-9e94-3ec753d00447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79d54ef-ca7f-4ade-8403-4993a0c10f88",
        "cursor": {
          "ref": "1120c52c-8b50-4627-95eb-95b5e9efced9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bd4a20e4-0965-42b7-9e18-2cc1a9050eed"
        },
        "item": {
          "id": "a79d54ef-ca7f-4ade-8403-4993a0c10f88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a4704d22-c599-427f-ae3b-75e3f51430bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea911e95-8f0a-41b5-8c33-cbe178a07638",
        "cursor": {
          "ref": "53bf1900-d9dd-4890-b4d1-2e3bab1db19f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "037c222a-f04b-46be-b876-6524e1b76a99"
        },
        "item": {
          "id": "ea911e95-8f0a-41b5-8c33-cbe178a07638",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9cfabc77-2eea-4955-80f1-d3d9b5217c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb195cb6-da08-4208-91eb-67da6a274001",
        "cursor": {
          "ref": "52874106-1ea1-4e66-989c-107671dcf14e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e6bd6a21-d253-4db9-8bdb-74a691d6f3e5"
        },
        "item": {
          "id": "bb195cb6-da08-4208-91eb-67da6a274001",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb8f34c8-72cd-4358-beed-3c46b2232122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e53fd2-4d7f-4f75-92dd-bc0e800200fe",
        "cursor": {
          "ref": "9e8e5e77-d505-4063-a10f-ce90c1fbbc85",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de6b2982-fe75-4b7f-8606-44f7589ed3fd"
        },
        "item": {
          "id": "82e53fd2-4d7f-4f75-92dd-bc0e800200fe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8e30545-9778-420e-8c07-47118fe63201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2f3eaa-c58f-4a88-8ae8-669ebc3036e5",
        "cursor": {
          "ref": "3528f55b-e6ba-4e8f-acdb-cead86119a37",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1445f269-defd-4291-a3ff-9f83e18912e6"
        },
        "item": {
          "id": "1c2f3eaa-c58f-4a88-8ae8-669ebc3036e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dbd5d70e-1b20-403f-a7db-9884a3a69b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f86602e-f35b-442a-9909-ca8661597050",
        "cursor": {
          "ref": "94eadb4d-ac5e-4b49-9153-d2a566d24729",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b335199-8f07-495b-80d9-0e997a22a8d2"
        },
        "item": {
          "id": "0f86602e-f35b-442a-9909-ca8661597050",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb557400-2f4e-4952-b0b0-38ff3dd4dca0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3520e7a6-b06b-4f0f-88ea-695252df0800",
        "cursor": {
          "ref": "adb85f31-d672-4698-8736-83f483e68f31",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "14adaecb-a70e-48a4-9d0b-b20f63c8bdde"
        },
        "item": {
          "id": "3520e7a6-b06b-4f0f-88ea-695252df0800",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8b826b7-3a4c-4249-9738-16cc0eaa53b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf587e-d0e8-4b18-b16b-9934d8594316",
        "cursor": {
          "ref": "def146f4-59f2-4fd7-a148-413e2f657f8c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5cbe1e8b-c4d0-40af-be31-84bb1102b9e7"
        },
        "item": {
          "id": "0bcf587e-d0e8-4b18-b16b-9934d8594316",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9ed1718c-757f-4755-9969-a2d0bf74e85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dba7414-5096-445c-bebe-f9a555aa6f5c",
        "cursor": {
          "ref": "b0fbb1f8-4139-42a0-a878-fac1644264ff",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "06f73c9b-6802-46ac-98d2-da3024f62c24"
        },
        "item": {
          "id": "3dba7414-5096-445c-bebe-f9a555aa6f5c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d77ba081-5dac-4e9d-853b-f293cc3d9969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dce5b3-415b-48bb-8086-2659605b4e6d",
        "cursor": {
          "ref": "5c2dfc6e-f5c7-4cb2-98e3-dccfd0a201ba",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6bedab79-57a7-43d9-93be-b90b5a363137"
        },
        "item": {
          "id": "f7dce5b3-415b-48bb-8086-2659605b4e6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7598a790-235b-4469-b3fb-ce0784c471bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03752e0e-b41d-4719-a734-261483c6408c",
        "cursor": {
          "ref": "58e067f5-6f7f-45ed-aec4-edb4346d09e1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4094a4f7-b7f0-49bc-b681-d6d57d7d2a21"
        },
        "item": {
          "id": "03752e0e-b41d-4719-a734-261483c6408c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6d945daf-f8a8-4ad7-b332-f942aa021f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908194cb-acbb-4a87-bf7b-a12419a60e61",
        "cursor": {
          "ref": "0893af72-56d8-4aca-8e20-34408b595a17",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c57fc662-418d-4e5f-96c7-701f46599133"
        },
        "item": {
          "id": "908194cb-acbb-4a87-bf7b-a12419a60e61",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5993b311-6fc9-4b4a-8c12-284db4bca6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c340dc-3d1a-4786-826a-eb744838fad9",
        "cursor": {
          "ref": "b493c219-65ab-4662-a032-559626ce1959",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ef387c52-5222-4eb3-95ef-c69bbdcc9522"
        },
        "item": {
          "id": "51c340dc-3d1a-4786-826a-eb744838fad9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "362a13b1-d3a8-4b03-8aba-4218d8d96d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61d721a-bf48-41fd-af21-1878fb945009",
        "cursor": {
          "ref": "e8c37bb8-0ef7-4d28-a267-a3eca466d91c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cb1e6a8b-2180-47e5-85e9-3e7cbdf53c98"
        },
        "item": {
          "id": "a61d721a-bf48-41fd-af21-1878fb945009",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a8e6ee1d-86c7-454e-9c05-0e0cf5586096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9e14be-8fa0-4d9f-819a-19be5f4167c6",
        "cursor": {
          "ref": "efbdabda-fce5-4f1f-af70-eb70e5761794",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d1a4bd64-dfff-4d01-98ec-81652bdf67fc"
        },
        "item": {
          "id": "cb9e14be-8fa0-4d9f-819a-19be5f4167c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f37ec83c-2032-4556-911d-bc22cae57aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b70ab-c493-44ca-9748-1d8eb8208c78",
        "cursor": {
          "ref": "25b81473-671b-478b-9fdf-3d29e8bca52c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "98b9ea21-378a-4412-9822-414c16133bd5"
        },
        "item": {
          "id": "234b70ab-c493-44ca-9748-1d8eb8208c78",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a67999b9-4a8d-4255-ad26-dd67242d4eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae53884-b608-49a3-9b1c-367062b8ac2c",
        "cursor": {
          "ref": "a8870b3a-5506-4d84-ad21-02f599aead22",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "daa82655-1b9b-4717-8189-d9e8b039d319"
        },
        "item": {
          "id": "dae53884-b608-49a3-9b1c-367062b8ac2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61e816af-590d-450e-8680-b5644684d959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7695a3c1-25bd-48aa-8fc6-3ed83d616f36",
        "cursor": {
          "ref": "f2473a71-be43-4d7c-9857-34fe04c04e4d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fdafc0aa-5b08-40a3-8449-8e5692d76dce"
        },
        "item": {
          "id": "7695a3c1-25bd-48aa-8fc6-3ed83d616f36",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5abf1b9e-28d7-4c6c-994f-926937b0ce18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee17882-b97e-414c-848d-21e2f3b01cb4",
        "cursor": {
          "ref": "7fe45049-d6d8-4502-896e-ae749b33e554",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "65b4a9e4-d107-4478-8a82-856b73487319"
        },
        "item": {
          "id": "1ee17882-b97e-414c-848d-21e2f3b01cb4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7d02a9a-2bde-40eb-b482-6ef6c3ed1df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0038c0-59a0-4fa5-9b65-2d79dd2673aa",
        "cursor": {
          "ref": "5089fe00-70e7-4f1f-82d6-e0551da68a19",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "da1269ed-c1e4-4e48-b06e-5223a73719d4"
        },
        "item": {
          "id": "6d0038c0-59a0-4fa5-9b65-2d79dd2673aa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ef50f97-bfde-405f-953b-4e7b45455cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3e5bfa-4ea8-4c41-900c-f9d690487af2",
        "cursor": {
          "ref": "3b2cf36b-b286-48aa-bb36-a39038aa7035",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1896414e-f220-4083-9a8e-f7b0ae45c375"
        },
        "item": {
          "id": "af3e5bfa-4ea8-4c41-900c-f9d690487af2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "386707ad-ccf8-4b4a-8e5d-99c6b895eef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3949d3-9475-40f0-a94b-1e446e83c877",
        "cursor": {
          "ref": "0e84685e-cca1-4dd8-a262-042f109f4620",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "77731982-65b9-4d08-8f75-ae622c023c14"
        },
        "item": {
          "id": "fd3949d3-9475-40f0-a94b-1e446e83c877",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77de44b6-f903-4986-901c-2903b3309955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b62cef9-0577-480d-8bd1-e08f9c937db9",
        "cursor": {
          "ref": "8f9437cc-0730-4bd2-9863-690415e4ca22",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e17e265b-2e1e-4c89-99a1-997142044f86"
        },
        "item": {
          "id": "4b62cef9-0577-480d-8bd1-e08f9c937db9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7dde3a8b-39e0-42a4-8b03-c60700bdbdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f749b2-9cce-4a18-8fd9-c5b4dee424f3",
        "cursor": {
          "ref": "d4995e84-6c58-4be8-9494-aa4aa11eb649",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fdd9ff42-0451-4466-bf6d-ec791d56dc6c"
        },
        "item": {
          "id": "f5f749b2-9cce-4a18-8fd9-c5b4dee424f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c26cf882-d9c6-4fde-b121-9188c81b6253",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ddbba1e7-f873-4de6-8799-6dc4cae74dec",
        "cursor": {
          "ref": "787d5216-db1b-447c-9b2e-57ee93d9ecd0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "abef1faf-8760-49ff-ab6d-3a370407b4c8"
        },
        "item": {
          "id": "ddbba1e7-f873-4de6-8799-6dc4cae74dec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c66b95e3-83b5-49a1-b08d-0f2177580f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98468441-e7a6-48b7-82b0-a43791ec10b3",
        "cursor": {
          "ref": "dc363e08-6c4a-47d7-82b2-985f7d018fa7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "09d0bad8-4983-44fa-a6c9-33cab3340d44"
        },
        "item": {
          "id": "98468441-e7a6-48b7-82b0-a43791ec10b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83568d1e-15b2-46a5-9951-2bbcad30df05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a367d5-6b08-4572-a5a6-8cf29230b79f",
        "cursor": {
          "ref": "6a5453d1-b8b6-4a2b-8186-767a33eaccf4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "51f6de5c-ec91-49fe-b0a7-e62939d3b1df"
        },
        "item": {
          "id": "05a367d5-6b08-4572-a5a6-8cf29230b79f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "361f5eee-3a7e-4bb1-bb98-db2085e9a566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e814ee6f-e5ef-405f-883d-5f7b13024970",
        "cursor": {
          "ref": "af4afada-41ec-4121-ad67-70cbc430d060",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "10e82ea2-2fb3-4d00-b322-3c7c13a3e8d8"
        },
        "item": {
          "id": "e814ee6f-e5ef-405f-883d-5f7b13024970",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8c785599-1473-47e1-9782-137c85a98764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae248625-8ba4-49b8-b7d4-9d78250969ed",
        "cursor": {
          "ref": "0e638ee1-57d9-4d04-9a15-e4ebda8e9147",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ada8318-fc82-42ca-a6b7-bdd9fc6795d9"
        },
        "item": {
          "id": "ae248625-8ba4-49b8-b7d4-9d78250969ed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cc4a34f5-27e7-4ee7-938c-17b7cb9ca0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9da2a-3fe5-47bb-9b12-07171eb79917",
        "cursor": {
          "ref": "507bb0ca-b382-4b18-a51d-df930117f7d5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d1fcc924-4332-47c7-ad86-a5441c7da257"
        },
        "item": {
          "id": "0db9da2a-3fe5-47bb-9b12-07171eb79917",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dd34698e-6293-4d4d-9769-db488165648d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1de2d7d-1dc0-44c3-82b9-5e3318de9d0f",
        "cursor": {
          "ref": "37c16ab9-72aa-4650-9e07-7ff3c5610d91",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e74ef683-25d4-4ec8-8859-fbfb592caf10"
        },
        "item": {
          "id": "a1de2d7d-1dc0-44c3-82b9-5e3318de9d0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e126e90f-5a8d-4830-a831-a37f6332a445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61901b05-8556-4f3c-8a79-a052be33227d",
        "cursor": {
          "ref": "22f74070-d873-4340-891d-8c2792ff4fe2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d1bd101b-6a89-443e-bf46-f582009fa872"
        },
        "item": {
          "id": "61901b05-8556-4f3c-8a79-a052be33227d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f24c00ab-54ba-4991-b3ef-97718083f30e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "894c5d4b-647c-4bf5-99a5-028d1c48db60",
        "cursor": {
          "ref": "39761c02-ffab-4d70-9eff-d3fd5f83fd12",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8cdbe8b3-cbbc-4b8c-b883-93b982bca1cb"
        },
        "item": {
          "id": "894c5d4b-647c-4bf5-99a5-028d1c48db60",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4045252e-54cb-4209-86e6-16600f0b2468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed590ad-01da-4055-b334-8f77d8a1c3b8",
        "cursor": {
          "ref": "7a342b01-0713-4be5-a421-3e6b17784c9e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "752344c2-70de-4c64-8055-9b44023cb6d3"
        },
        "item": {
          "id": "fed590ad-01da-4055-b334-8f77d8a1c3b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f4cc1a8-87c8-4a1d-8fdb-8f511117fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fedf05-9cc1-4f09-b749-f93e9c820e02",
        "cursor": {
          "ref": "e7cc1c01-174d-450a-94c8-0f706ef4f038",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5bc8a1eb-952f-4549-84c9-fcee36f025e8"
        },
        "item": {
          "id": "e8fedf05-9cc1-4f09-b749-f93e9c820e02",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b87d7b6f-c152-4b46-abae-e7ec4930536f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f409c19-e955-4710-bdf5-6141822ec568",
        "cursor": {
          "ref": "598aaf28-47f9-49ee-8184-f6319ba4337a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f88657d6-386d-4f22-bea7-7c1f20e75179"
        },
        "item": {
          "id": "2f409c19-e955-4710-bdf5-6141822ec568",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b648cef-1345-44a5-b1bc-30e9b00b7a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac7bacc-cd15-4ef3-8261-ff375eb95cb0",
        "cursor": {
          "ref": "ff94b360-74f2-40bb-8436-fb096645be9c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "98f62c8a-84de-4e2a-a6eb-cecf53c781a8"
        },
        "item": {
          "id": "9ac7bacc-cd15-4ef3-8261-ff375eb95cb0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f173642-8b36-4e37-bf42-4e0370f84582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fcfc4e-543e-4c2b-8d96-d0f685349631",
        "cursor": {
          "ref": "963d7d91-98be-45f1-9010-95eb0a1ee776",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18feb281-0ce8-413d-bb7a-ebe906f220c7"
        },
        "item": {
          "id": "56fcfc4e-543e-4c2b-8d96-d0f685349631",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e53c43ca-9c7b-4a3e-b1b1-cb2f6afde33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3d8d1-5f26-4b14-8eb0-45bb9d0a1db7",
        "cursor": {
          "ref": "60383b20-cbb6-41cc-ac51-938be89d186b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a1179866-1011-4638-aa75-8cb76b1e5cf6"
        },
        "item": {
          "id": "bea3d8d1-5f26-4b14-8eb0-45bb9d0a1db7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2dd34430-f174-49f0-9d5c-a656251634ec",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "5a209600-3ccb-407c-b091-a6825e2eb09d",
        "cursor": {
          "ref": "d23c1f5d-a9b1-471d-96e6-e9e428289705",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7f770b36-193b-4c78-b9ef-3fbf7ed81068"
        },
        "item": {
          "id": "5a209600-3ccb-407c-b091-a6825e2eb09d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "365958f4-de10-42a0-98fe-d99632007596",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "1b511d26-de52-4434-9952-cf2340eebe76",
        "cursor": {
          "ref": "bfe570bb-da49-4dc6-bdca-f0ec6bb9c974",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "40b0e59b-b525-4f3f-a41f-1ff37b5bf637"
        },
        "item": {
          "id": "1b511d26-de52-4434-9952-cf2340eebe76",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "028a73fb-d39c-4730-8789-073c9c363d3c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "3ca558eb-4f54-49ff-9369-7ce927f2145d",
        "cursor": {
          "ref": "989fcda1-e5b1-46a8-9aa3-768e8806b6f8",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f253c88e-4b6e-4052-b436-01a8271b01b1"
        },
        "item": {
          "id": "3ca558eb-4f54-49ff-9369-7ce927f2145d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0a671b8f-e0b0-44e1-943f-833824360bc9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "5b544ab7-51c4-483b-805e-a7ff0103aeaf",
        "cursor": {
          "ref": "5924c661-6a80-48d9-aa6a-d47b57d92cbd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a984379a-9f48-4e50-94c6-8803cc3f6891"
        },
        "item": {
          "id": "5b544ab7-51c4-483b-805e-a7ff0103aeaf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3daac91c-7d97-4bc1-8dc5-af77270c0bee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 93,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "b8e00b1a-482e-4ce3-8a11-185a7076b852",
        "cursor": {
          "ref": "08fd9432-fce0-46aa-b899-811c711f3b4e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c778efc6-3c2a-4b3f-895b-d0656ff8b37b"
        },
        "item": {
          "id": "b8e00b1a-482e-4ce3-8a11-185a7076b852",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4f7017cf-ed57-4da6-82ed-ec5f0648cd54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "bf685932-75d4-44b8-ba93-3437a5473e28",
        "cursor": {
          "ref": "1096eebf-2964-451e-8aa3-3029a55ff626",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4986342b-677a-451a-90f1-ffba24594cf5"
        },
        "item": {
          "id": "bf685932-75d4-44b8-ba93-3437a5473e28",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "82c1f452-9dcf-42fa-988c-7399c712c9d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccc07ae-0524-4608-b6b3-df148c440ceb",
        "cursor": {
          "ref": "83e12cda-835b-4963-8fff-65644d99f013",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "afca19fe-edf7-44b3-87b7-c4f4bef9eeab"
        },
        "item": {
          "id": "8ccc07ae-0524-4608-b6b3-df148c440ceb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cd0a8af9-63bc-4fb9-8d78-de828297d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08136401-72a8-4caa-aec3-d009bd2d8f0a",
        "cursor": {
          "ref": "84e2894d-9f0d-4915-9d48-a521fc7ba890",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "60a55888-e7e9-48d6-b31f-6b4ec9bdfd91"
        },
        "item": {
          "id": "08136401-72a8-4caa-aec3-d009bd2d8f0a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a3d1e056-166d-48bb-86dd-bce2ea253117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdf00a1-3ece-4c77-b08e-8a62c86ccca9",
        "cursor": {
          "ref": "84b730c7-10fe-4d08-a6d7-72cc2db38e67",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d6d124e9-3383-4fc9-a11e-4861d1cba9c0"
        },
        "item": {
          "id": "afdf00a1-3ece-4c77-b08e-8a62c86ccca9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e206d8dd-46a6-4aba-8da8-fed820c4fe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a08da03-0d45-4714-a350-30cd4e99e1ab",
        "cursor": {
          "ref": "cfdedba6-5ad5-4b2a-901d-9c607a66d9e1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f209d2e0-f058-41b3-9f3c-0718b7f548d5"
        },
        "item": {
          "id": "3a08da03-0d45-4714-a350-30cd4e99e1ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e0ef3b48-2350-49d1-892d-d441e8e57b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b995890d-6cbd-4833-a27d-1189966f13db",
        "cursor": {
          "ref": "d3aa7cbf-86de-447c-a630-06ce777b021d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ada0d053-52c2-4c9c-841c-79cd79ed8196"
        },
        "item": {
          "id": "b995890d-6cbd-4833-a27d-1189966f13db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cf095517-d952-4e23-947c-20b49595b8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a1fdd-0a21-4cb5-a74e-0e24add349b4",
        "cursor": {
          "ref": "e8f0dbbb-cf8c-47e2-95a6-a175ae1f4d30",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d39dae8-2e44-42fa-9a02-7da831e5afbd"
        },
        "item": {
          "id": "f57a1fdd-0a21-4cb5-a74e-0e24add349b4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3e246a6-da36-4c7c-9bb6-5a84169685dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eec5e4-6f6f-4b0a-a40e-a0a6bc82c17e",
        "cursor": {
          "ref": "ee862012-eca5-469d-9a4e-10895c3ea9c9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b9591cb5-5a1e-47d0-9b68-d0f5b50a142c"
        },
        "item": {
          "id": "b7eec5e4-6f6f-4b0a-a40e-a0a6bc82c17e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4c966778-f1e3-4281-9927-6087d961fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e425149-1b03-4576-8e8c-59867d81eb18",
        "cursor": {
          "ref": "75732046-9ffe-4ba7-8ff7-2fdde58ddf92",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b61fcd5a-1b5f-4732-9480-690b928a6530"
        },
        "item": {
          "id": "7e425149-1b03-4576-8e8c-59867d81eb18",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b119ccfd-f1aa-4395-b868-cc2b01aaa1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d725c24-cb17-4365-bfef-5a8c78689517",
        "cursor": {
          "ref": "0eb60b6c-a8c3-4ac8-9539-ad8a12693bdd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4799ed1-11fa-439b-a2ad-8aedcdc63ce9"
        },
        "item": {
          "id": "1d725c24-cb17-4365-bfef-5a8c78689517",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c25129f1-6fdf-4f3d-8f47-4b63bc8697db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c33ebf-42a1-4ed4-be7a-5279ea1a7c0b",
        "cursor": {
          "ref": "01e3a323-7162-4ee9-9bb8-3ce1e888d07d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3889648e-5a5a-403b-b29a-d5073b3f019d"
        },
        "item": {
          "id": "c8c33ebf-42a1-4ed4-be7a-5279ea1a7c0b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5b5f084-b7cf-46fe-8903-984883a78f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556f997-565e-46e4-a8aa-db9ddb11853d",
        "cursor": {
          "ref": "38411c11-b3ec-4fce-a84b-e75c1ab6a17e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "65a09723-d2f9-4650-afd1-eeccb8c4ac28"
        },
        "item": {
          "id": "9556f997-565e-46e4-a8aa-db9ddb11853d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3cd39533-ea59-4214-b941-1cb404127030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1635ecf-bc1f-4d2d-8ce0-bcb9901c0353",
        "cursor": {
          "ref": "493a5ca4-5eb8-4d62-8c87-95e5ad47a31a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "db247cb4-2a52-4cbf-bde3-01ac25398909"
        },
        "item": {
          "id": "b1635ecf-bc1f-4d2d-8ce0-bcb9901c0353",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e677af07-a6c4-46be-9354-d27c7ec198e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cb8df7-0e6b-4858-ad55-eb85fd120c75",
        "cursor": {
          "ref": "6ffd6018-dbf2-452c-a4bb-ead312d3c9b9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b5196c1d-5586-4c9b-98cf-93821c8f0d63"
        },
        "item": {
          "id": "c2cb8df7-0e6b-4858-ad55-eb85fd120c75",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7800e7b8-853b-4e77-a48a-f3e2a531c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2faed4f-42f3-473a-8bf9-9a1b0176de65",
        "cursor": {
          "ref": "db08541e-4c39-4598-b79c-568bcae63178",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c6d7179c-01a4-4b3c-8d87-b2c85b131fcb"
        },
        "item": {
          "id": "a2faed4f-42f3-473a-8bf9-9a1b0176de65",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e186cf51-fd48-4011-8441-4beddff17928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d122e23a-695f-45dd-9d3e-724050399862",
        "cursor": {
          "ref": "39beba09-3705-4bf1-8325-41a22755525e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "66027836-24cc-4a6a-9e03-b6800135effa"
        },
        "item": {
          "id": "d122e23a-695f-45dd-9d3e-724050399862",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "efbed51c-c964-4c8e-9b9c-aa9b444ec456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21d91a7-53c0-4730-b57c-fe0fc39e3cb8",
        "cursor": {
          "ref": "7e08e4dc-5cbb-4aa0-8aa0-c6ff833581ae",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "818effea-d790-483b-88eb-756b376193f5"
        },
        "item": {
          "id": "d21d91a7-53c0-4730-b57c-fe0fc39e3cb8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bba74a2f-994c-431c-95be-de465d2f5895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ce5860-8199-4be9-a353-916056836c62",
        "cursor": {
          "ref": "e3421eb4-2e8a-442f-98af-a8b3efe0310f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb1a74c2-b951-429a-aaa6-9d3502c249ab"
        },
        "item": {
          "id": "80ce5860-8199-4be9-a353-916056836c62",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3650a846-9ab6-47a0-8e0d-41e082bdcabb",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ebf6442f-d06e-4afd-8489-c248ea7af429",
        "cursor": {
          "ref": "980e6d8d-0b05-42b2-9d9b-72ea6c1d4405",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c48d1fc2-b5bd-4717-b0e2-d0e3ed52da71"
        },
        "item": {
          "id": "ebf6442f-d06e-4afd-8489-c248ea7af429",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5337d0d6-30b4-481c-9b85-e77f28ec3a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abccbaf5-f332-4d63-b67e-6fd7edbec365",
        "cursor": {
          "ref": "7567efcf-520a-4a31-94d9-8f40e13b5337",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4bd033d-c459-4020-a4a5-eb39b2d2f6bc"
        },
        "item": {
          "id": "abccbaf5-f332-4d63-b67e-6fd7edbec365",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "073ae462-952e-43d2-a1d0-4c87c3163abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920affab-946b-4f78-98f6-727b658b94b2",
        "cursor": {
          "ref": "e76edc86-b6db-418b-957e-8c0d9a5d79c3",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ee792667-6bda-46a7-b9a6-5a2f3e9bab75"
        },
        "item": {
          "id": "920affab-946b-4f78-98f6-727b658b94b2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "09292d14-0816-49f2-8b20-e8fbe7529c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c085492c-9bb4-45c2-9d59-8ce7c60b25be",
        "cursor": {
          "ref": "6dc8253b-375d-42e1-8f04-b8f98c02fb58",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2c4df7a-f741-4082-8513-6de6ac295f47"
        },
        "item": {
          "id": "c085492c-9bb4-45c2-9d59-8ce7c60b25be",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e6bc47d2-1e12-4fcd-81e2-83a0b031e2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a48405-c139-4d59-9be5-7d241a9a698c",
        "cursor": {
          "ref": "e574704c-adeb-4cd8-88b3-17a4379d4d73",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5d5848a7-56af-4d1c-8024-a67766bb0bae"
        },
        "item": {
          "id": "a1a48405-c139-4d59-9be5-7d241a9a698c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5cb6d28a-659a-477b-8dac-5296d3039c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752caeaa-ed87-475b-867f-0c01f025540c",
        "cursor": {
          "ref": "4d23b994-2cfc-4ba7-bc77-c0e6c2a83caa",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61ae3f6d-7c11-4aa6-99a9-afaa3b278904"
        },
        "item": {
          "id": "752caeaa-ed87-475b-867f-0c01f025540c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "298d96ac-f57f-4d0e-8dca-0fc37fb60990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c07049-5757-4219-bdb6-4f376fefd15e",
        "cursor": {
          "ref": "5e7b8510-9b91-4a81-a745-2b69389dcb50",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9d8186c6-fc39-46eb-9e17-1f68d721286f"
        },
        "item": {
          "id": "29c07049-5757-4219-bdb6-4f376fefd15e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99faa6a4-3343-4728-affa-6a604933af15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a73bd4-d233-43e3-a0ac-89f27cf3da1b",
        "cursor": {
          "ref": "3f5cebba-5123-48f6-902e-74a232a14b8d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d44de9b9-36d1-43f6-9c6b-6b5e5ffd75fd"
        },
        "item": {
          "id": "b2a73bd4-d233-43e3-a0ac-89f27cf3da1b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2745d6a9-7f75-4cad-9dd2-8f8e0ae6b543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba79874-416d-4106-a5ef-a1d63316f644",
        "cursor": {
          "ref": "415ccaf9-ee1b-40e3-a248-153f20ee8d84",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9dde9c18-ae13-4aed-b131-d04b5351818a"
        },
        "item": {
          "id": "5ba79874-416d-4106-a5ef-a1d63316f644",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c2a2be34-e5ac-4b41-9337-1287abec41c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af158072-b9d8-408c-b181-c3c5a93f4a53",
        "cursor": {
          "ref": "d9788812-2243-4309-8ea7-5238dffd75c7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2e0e045b-39f9-4f41-9534-084694eec5d4"
        },
        "item": {
          "id": "af158072-b9d8-408c-b181-c3c5a93f4a53",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6686068a-7b3e-405a-8657-e00eff545cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2d9dee-7d10-49a4-bde5-6cc078ca174f",
        "cursor": {
          "ref": "441e95b2-642c-4acf-95f1-9382bac30317",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4fdc193d-3f5c-4cdb-b359-de9807f1abaf"
        },
        "item": {
          "id": "0a2d9dee-7d10-49a4-bde5-6cc078ca174f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2090875e-f09c-4400-9566-fb71bd546b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26ee20c-6808-400c-81f5-86df54ad9331",
        "cursor": {
          "ref": "62ad9c76-b150-4281-97ad-0167f729bfa9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b6427740-469b-42ca-bc42-59c60d22f5db"
        },
        "item": {
          "id": "a26ee20c-6808-400c-81f5-86df54ad9331",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2cfbfd2-547e-4f07-8200-bdd2790454dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e6c95f-b575-450e-991a-8c5afbc88101",
        "cursor": {
          "ref": "7ab960fe-73ea-4b4b-af77-93f83253c0c1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "563bd185-f613-4ff6-a3c6-0f6d6268e82b"
        },
        "item": {
          "id": "c6e6c95f-b575-450e-991a-8c5afbc88101",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9ab25e8b-144a-4913-a1f7-3604343772fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65249074-3274-452f-8984-9efd8813cc55",
        "cursor": {
          "ref": "f1055094-24b4-429a-bb87-5076a665efee",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "17787bb0-c1be-4053-a61d-94c0e0470182"
        },
        "item": {
          "id": "65249074-3274-452f-8984-9efd8813cc55",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f5460162-cb97-4565-a77f-3b1c7d3739ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b14952f-d772-4a46-9f3a-dadde9256209",
        "cursor": {
          "ref": "8fab005b-4ef6-4374-843a-372ac000db8f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1d441116-1305-48b1-8f3f-f5cfa66d9973"
        },
        "item": {
          "id": "3b14952f-d772-4a46-9f3a-dadde9256209",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1c2fc8a0-08c0-4752-9664-bf15cb370952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b040671-7e22-479a-ae1d-8ab73d7e5d5a",
        "cursor": {
          "ref": "c3bcd9b4-9142-4155-a5a8-93e0afb9ec3d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "76d4f19c-77a8-4397-b933-e6f1d38e247c"
        },
        "item": {
          "id": "7b040671-7e22-479a-ae1d-8ab73d7e5d5a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0df114e2-c550-4ae6-82cb-98eaf67ada7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d0cff-9db8-423a-8c4a-6696d72b1082",
        "cursor": {
          "ref": "d5de020c-d531-4646-ab19-0848f2dc731b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93db4716-52fd-4131-a1cc-7e95f1a9fc54"
        },
        "item": {
          "id": "928d0cff-9db8-423a-8c4a-6696d72b1082",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "62737d2f-d72c-4a4c-9384-9591a054f5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b3e15c-248e-4e3c-8ebe-b1c7e227678d",
        "cursor": {
          "ref": "651f28a0-2bc1-4450-b52e-79f37592b503",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eca179a2-c095-4bf4-aa31-7b377e54baad"
        },
        "item": {
          "id": "73b3e15c-248e-4e3c-8ebe-b1c7e227678d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9e7a7d0f-381e-4bee-a438-a90ff84bcee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac2274-d20f-4f14-a6fd-ce64fa093b45",
        "cursor": {
          "ref": "169f0f69-ad4c-4e35-912f-b572d0a88de3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b476149a-fd6e-4bc7-85c2-3dca399ea9f2"
        },
        "item": {
          "id": "95ac2274-d20f-4f14-a6fd-ce64fa093b45",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "234fd6ea-bd53-49a6-9374-71c7f20617fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05537ad-e22d-4e95-91c5-b9e1a1275e17",
        "cursor": {
          "ref": "cd1231c7-bdb5-4d63-ae86-4c7376200103",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bd6383ff-a8a1-4060-bbd1-25ac899af50d"
        },
        "item": {
          "id": "e05537ad-e22d-4e95-91c5-b9e1a1275e17",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f404ef45-3b1a-4d3a-822e-676889376736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364fb6d-0262-4406-afb8-7e0b51578e6f",
        "cursor": {
          "ref": "53c38ce4-754a-4f6b-8014-9ee67ce2c406",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a376d635-9e7d-45a3-a742-17eb844d74e9"
        },
        "item": {
          "id": "2364fb6d-0262-4406-afb8-7e0b51578e6f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c96fe967-a9e6-4826-96f0-1bc6f8d8aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1337f1e-0c3d-4c10-9e86-10b61eaaba26",
        "cursor": {
          "ref": "ab486b62-1dab-408b-b4db-16323aace205",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f0dbabce-e0c1-4eaf-9204-b9d96d1b9948"
        },
        "item": {
          "id": "e1337f1e-0c3d-4c10-9e86-10b61eaaba26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90e6eaaf-8a56-4653-ac12-4ce904ee8c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944fbcb2-7839-4ca4-b3eb-7c249459c0fe",
        "cursor": {
          "ref": "5a115bf4-b701-440f-a802-3d281491a3dc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4cd6b7c4-1093-4f62-b9ff-3f4753e37205"
        },
        "item": {
          "id": "944fbcb2-7839-4ca4-b3eb-7c249459c0fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9665641c-6c2d-4a24-9280-192ab103847e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6da83-e1cb-4772-aad7-af9c8d99af98",
        "cursor": {
          "ref": "aae5c397-9489-4886-bcf2-90bb3407866b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8aacd0ec-d8ea-4abb-80fc-431d85b3f999"
        },
        "item": {
          "id": "26f6da83-e1cb-4772-aad7-af9c8d99af98",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3ea9d1c5-f8da-4b57-8762-37a8a29eae61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bac77e-d0dc-48e4-a997-55033575a313",
        "cursor": {
          "ref": "150c6cc0-cf35-4c13-b56f-81a494054f7e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "25433dd2-ea94-4801-8288-6cbca85cb998"
        },
        "item": {
          "id": "f6bac77e-d0dc-48e4-a997-55033575a313",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f9393c38-6ad3-4f85-bb40-644f61a11a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe0a7ce-1226-4500-9b49-bc1c4ea74498",
        "cursor": {
          "ref": "871b0c30-bf2c-4ab7-ac0e-ae0acee20812",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f803507-15b8-4864-a962-b175e3282a19"
        },
        "item": {
          "id": "4fe0a7ce-1226-4500-9b49-bc1c4ea74498",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "11981610-1aba-4bdc-b699-789f0a200cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6ab1d-6bca-4232-81f2-ce7491c06132",
        "cursor": {
          "ref": "dca795c0-4576-4bfd-954c-2bcee9488efc",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1a08fac-b4fe-4e54-93f9-d4693ef7af0a"
        },
        "item": {
          "id": "e4e6ab1d-6bca-4232-81f2-ce7491c06132",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "327bf6c9-2ab3-4168-8ffe-7a9d6c2a156c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceada07-684f-4e44-bc31-73a46376a1a4",
        "cursor": {
          "ref": "c0051e12-5f20-4ec5-8e9d-3457a92322ce",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8a3496a5-2425-4fb3-9b71-1b56ad656efd"
        },
        "item": {
          "id": "7ceada07-684f-4e44-bc31-73a46376a1a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "966dcc8a-d9f2-40da-82bd-c372c6626d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b5380e-5574-4b84-b26d-31b8f3cc179b",
        "cursor": {
          "ref": "60c5473b-182e-4c8f-a392-cc849295631d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6ee3d1df-ad99-4251-bc70-989a4627bc44"
        },
        "item": {
          "id": "09b5380e-5574-4b84-b26d-31b8f3cc179b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3d51b420-dfbd-4d84-a7ca-5fabd9a881f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3344f-ea9d-4aac-b9ff-269f674a17d9",
        "cursor": {
          "ref": "c450acb6-17c8-4c59-b00f-791517772492",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4e2f9435-8e82-4704-9815-7cb36cb21c38"
        },
        "item": {
          "id": "33c3344f-ea9d-4aac-b9ff-269f674a17d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "45feb60a-a1f4-4ec5-a555-dd3ed399b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b9da7-e525-4a68-aab6-70830f769327",
        "cursor": {
          "ref": "1f71c2a8-3954-44fe-9632-0372c9ac82c0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5a05058c-8958-499f-b4d6-944fa799f685"
        },
        "item": {
          "id": "926b9da7-e525-4a68-aab6-70830f769327",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f9e80783-3fcd-478c-871b-92ebb857c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e557ff-c51b-4797-8afb-28500b90e710",
        "cursor": {
          "ref": "5c0ff056-3398-4477-af72-cc120d2ce676",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bdd97725-5d2d-46ed-bfb7-3416888c104c"
        },
        "item": {
          "id": "b1e557ff-c51b-4797-8afb-28500b90e710",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a5ac89c6-4663-4566-99e5-35d3938408d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0284d225-300d-4d25-a445-61e36b2c939f",
        "cursor": {
          "ref": "cb350a11-d136-4b2e-98b8-1fb4a1288b58",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e52715c7-cc39-4edf-b679-211f095cfc1b"
        },
        "item": {
          "id": "0284d225-300d-4d25-a445-61e36b2c939f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "16c0e8a1-14ca-493a-a964-c414b028d577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217f70fa-8488-4a3d-949b-edc6e4b3a2e6",
        "cursor": {
          "ref": "f835b1ae-9d45-4e95-91ca-89a50a3c133b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "94625473-83d8-4ce9-ae93-9cb2624dcde2"
        },
        "item": {
          "id": "217f70fa-8488-4a3d-949b-edc6e4b3a2e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b47e6eb1-9531-45f6-ace9-bb5d963584b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8093c3-b86d-46ec-81e8-3c5718bf5ce7",
        "cursor": {
          "ref": "02574841-9ce5-4dd3-bbd3-69833aa5e18c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3cfaf288-1549-4e07-b5ba-d9f6e765b1ae"
        },
        "item": {
          "id": "fe8093c3-b86d-46ec-81e8-3c5718bf5ce7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b64c8f29-1552-4726-9e78-28042d395b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecdfb6e-3449-4fcd-a805-59f849978b73",
        "cursor": {
          "ref": "0681eb2b-5505-49b8-a678-0a9e8a519bfa",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a315e4d6-a0b9-4f1d-93e7-d5675d9bb93d"
        },
        "item": {
          "id": "8ecdfb6e-3449-4fcd-a805-59f849978b73",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2497d78c-0d18-4f7c-bbfa-9355bf899ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09907733-e12f-4f03-9c89-7e43cabc32f8",
        "cursor": {
          "ref": "a53d0d95-50b1-40aa-ab06-2c3049b7dbe8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "da138c27-ecc6-491c-87f1-43d9593712dc"
        },
        "item": {
          "id": "09907733-e12f-4f03-9c89-7e43cabc32f8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3a2298cf-31e3-4cc0-98e7-91f242c6a643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783b299a-efbf-4a2a-a412-5971b92aee53",
        "cursor": {
          "ref": "ab7d8d05-aecf-4329-8757-36e4210c7c45",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "329137ca-17a2-4a35-a474-da3201445890"
        },
        "item": {
          "id": "783b299a-efbf-4a2a-a412-5971b92aee53",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8adbbee4-f7e5-4e62-a2fd-1cf538a7f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc6dd26-e8c8-46a9-a91e-b18c8e8a18d3",
        "cursor": {
          "ref": "2f87d9e7-0ebb-4404-9363-36aad1ee0d1e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2664d654-fcf9-429c-9092-6015a965fe82"
        },
        "item": {
          "id": "7cc6dd26-e8c8-46a9-a91e-b18c8e8a18d3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "994fdb93-2fef-42a7-a166-1005056c8a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fccd55-3c82-43a1-8eab-fbf75d9adb11",
        "cursor": {
          "ref": "0d638bb2-a37c-48b7-aa0b-af1129e98c6b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "595bede8-9545-4c24-b6ca-c388af46da61"
        },
        "item": {
          "id": "d2fccd55-3c82-43a1-8eab-fbf75d9adb11",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a49f1b49-0832-4017-aab5-8ba7e011e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb26a4f9-b69f-47d1-80cb-4f768ac8c59a",
        "cursor": {
          "ref": "4b2bdad1-7360-4080-9562-3eba08625b66",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b2092b65-653e-408d-b425-eaa761d8b5fa"
        },
        "item": {
          "id": "eb26a4f9-b69f-47d1-80cb-4f768ac8c59a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6caedf7-40e2-41fa-ac99-3c80db0c77b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5622c8-d8f9-4a42-a6b9-50a78c5ed4c8",
        "cursor": {
          "ref": "bbc75340-0a08-4d59-820d-e4b0834d856e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f36fb9f9-a691-420f-a967-7ffba12d7032"
        },
        "item": {
          "id": "cb5622c8-d8f9-4a42-a6b9-50a78c5ed4c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "07cdf164-9645-4f9c-8a7d-bc6934ca8365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9378032-d803-4785-a460-4235d88e0d72",
        "cursor": {
          "ref": "b419c0da-7087-411a-a0e7-66b7f680adf5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b70af1c6-4260-4cf7-b1ac-1ccd2061315b"
        },
        "item": {
          "id": "f9378032-d803-4785-a460-4235d88e0d72",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba254abf-3768-4bf3-8beb-edc739815519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31233fb8-677d-4a6a-93c0-2f2ee6dc5903",
        "cursor": {
          "ref": "6bd193c6-4a49-4e37-aefb-8bc2df152d8d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3c3c188-978c-4e1c-9d3a-74d6f36dc086"
        },
        "item": {
          "id": "31233fb8-677d-4a6a-93c0-2f2ee6dc5903",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f2f2b58-d039-48e0-91ae-06b07f5d5848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87413d1a-ddf7-49a5-967b-f41ac952adca",
        "cursor": {
          "ref": "15fa7753-377e-44c6-95e4-1a6e6526f4b0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f0fb86e-55f1-4230-ad97-cf6e146ca52f"
        },
        "item": {
          "id": "87413d1a-ddf7-49a5-967b-f41ac952adca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3e90084d-23f5-43fd-9906-e6462e13aeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a4409-969e-4fea-8d13-23dfd55f6a01",
        "cursor": {
          "ref": "2b602f97-831b-4415-8db1-3f21a533e51e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ebe0fb85-4dfa-474e-8364-e8f8bd204234"
        },
        "item": {
          "id": "d02a4409-969e-4fea-8d13-23dfd55f6a01",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ec7ea2d8-53df-4702-8bf9-eeeba6eacb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edc9945-972b-47ab-b020-9ffd7bd29159",
        "cursor": {
          "ref": "d5dc8219-ca23-4d95-88b4-45cfb8d836cf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "daae3ff3-5f38-4445-852d-49ca5380dbe7"
        },
        "item": {
          "id": "2edc9945-972b-47ab-b020-9ffd7bd29159",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3b4cf805-5234-41a7-bf09-f155f8f4f94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6e51f6-4bf7-4b03-8b7f-878e14c4682f",
        "cursor": {
          "ref": "aaa72271-4f44-4d68-831d-ec31d35680dd",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3c50d183-a7eb-4634-ad5b-d96743e6a2f8"
        },
        "item": {
          "id": "9e6e51f6-4bf7-4b03-8b7f-878e14c4682f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0034e790-c128-4c17-a793-f99c52bbfcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35117254-8984-4ada-89c3-ae0fd29ca550",
        "cursor": {
          "ref": "cf66551d-3ffd-496b-ac0d-75241897726a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b0b40c0c-c03f-4eb6-981e-a3d2210caca2"
        },
        "item": {
          "id": "35117254-8984-4ada-89c3-ae0fd29ca550",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fe841476-01b4-4263-b910-28e294ed285f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728d683d-15e7-4d70-80c1-5b2cf5833f8a",
        "cursor": {
          "ref": "86f2fc6e-2487-469e-812c-db68289b252c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "68c31fa9-4b40-4e3f-a69a-8f750f0888c1"
        },
        "item": {
          "id": "728d683d-15e7-4d70-80c1-5b2cf5833f8a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "44b5cb1d-ff2b-4f15-a261-e1728416e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc6ef1f-7211-4a2c-93bb-b0519c8cc1ed",
        "cursor": {
          "ref": "565dde9f-3619-47ef-ad18-605ebf2b78c0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "68769158-15bf-44a4-93e5-3d7ede8aa827"
        },
        "item": {
          "id": "edc6ef1f-7211-4a2c-93bb-b0519c8cc1ed",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d48d055-9ee3-4bcf-b7e7-38ddac52a741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783f94d6-c2ce-4b0f-aa65-ff0701f4f76f",
        "cursor": {
          "ref": "fa251584-1238-4d8a-ae22-90ca869d5f97",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7bfac5f3-e14c-4c43-a22d-9c155f0de17a"
        },
        "item": {
          "id": "783f94d6-c2ce-4b0f-aa65-ff0701f4f76f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8ae93183-cfce-4fc0-8a62-41e57362ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd988df8-a2af-42d0-bb03-fa4d863a3d5a",
        "cursor": {
          "ref": "3476625b-9fb7-4977-ae7d-56698d6befbc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0eae6052-1d94-46c9-8af6-c70d15afe23c"
        },
        "item": {
          "id": "bd988df8-a2af-42d0-bb03-fa4d863a3d5a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "470f54db-5f6c-453a-a428-4260362f47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5be433-bfac-4f14-8cb7-a12603ba8d4d",
        "cursor": {
          "ref": "3be6d274-347c-49a3-92f5-d5528bd397b9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8b463459-bde0-43eb-a200-68f31aa4073f"
        },
        "item": {
          "id": "9b5be433-bfac-4f14-8cb7-a12603ba8d4d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "19a13c30-d6fb-4cf7-9698-af6739c1bb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf3ee25-581b-4342-b7b9-3b1ad28f550d",
        "cursor": {
          "ref": "23b2858d-a040-44c0-98b8-069af8f91be2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bdc43397-2e7f-4c94-8ad9-5cdab5b4a364"
        },
        "item": {
          "id": "3cf3ee25-581b-4342-b7b9-3b1ad28f550d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d9d98403-0125-4019-adcf-3d79c4cda3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7e5c07-3dca-455b-b637-f87b783c6d08",
        "cursor": {
          "ref": "c4c42373-17d9-495c-9725-61800a3e462c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dbb6eb9d-a298-483f-8947-fdef825f3ac2"
        },
        "item": {
          "id": "5b7e5c07-3dca-455b-b637-f87b783c6d08",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "05290f30-a46e-4cd3-88c8-cbd052dde372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37289e7d-e361-4508-9046-9cfb73f5313f",
        "cursor": {
          "ref": "7d7772cf-d692-48a6-a26a-8fca855197b1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d6fdefd6-76fc-4606-809a-ca8f13922d36"
        },
        "item": {
          "id": "37289e7d-e361-4508-9046-9cfb73f5313f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7e5a46ce-c6aa-4dfe-854c-cc74f91ee71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85aa46a-88a8-432b-a4ed-8a2d614c72de",
        "cursor": {
          "ref": "a2a4f854-6b6d-4c4e-add4-99774c8522e0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d863df6b-ef23-4215-8c55-484ec4d724e6"
        },
        "item": {
          "id": "a85aa46a-88a8-432b-a4ed-8a2d614c72de",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "77214cb1-8b2c-4079-b70f-430dffe6840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fcf60c-4610-447b-9683-09a4d037686a",
        "cursor": {
          "ref": "b0b7e151-8664-4b29-85dd-67a3c5b08532",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0d6656d8-a625-45ff-8704-11aec83707ee"
        },
        "item": {
          "id": "f8fcf60c-4610-447b-9683-09a4d037686a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79c4b033-5b83-49b5-ab1f-c9aaa9c4b696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f09cc0-72fa-4eee-86d7-ba7efa406b40",
        "cursor": {
          "ref": "360ee64a-0220-4b36-aaa2-3663b5a5784c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9ff3a081-6bcf-4fd5-93a2-85f44f2a6cfd"
        },
        "item": {
          "id": "c1f09cc0-72fa-4eee-86d7-ba7efa406b40",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae5c7e99-028c-457c-8419-d067fff74125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a31b8f5-4c99-46c8-bf99-78ab4358283d",
        "cursor": {
          "ref": "7e209960-1458-4d46-88b2-6021d115880e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "04f2f1ec-e876-48d0-a84d-44d418614ca4"
        },
        "item": {
          "id": "3a31b8f5-4c99-46c8-bf99-78ab4358283d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2307b18b-ff58-4a50-ad35-46781a78441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a46c644-bd88-4d31-9e40-9a698e340683",
        "cursor": {
          "ref": "cc01a6eb-2336-4b2b-b44c-ffdcc1bf5db5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "613fb2cd-1700-49ef-a570-44802fb164cb"
        },
        "item": {
          "id": "9a46c644-bd88-4d31-9e40-9a698e340683",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "96d9b92c-ae3a-4901-8129-5b49d372b08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ec20e2-2ce2-4dd3-8097-ca67f8871e29",
        "cursor": {
          "ref": "820ca4cd-e721-4f62-a06d-9f54b895d433",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a2158210-a3ae-4a1b-8739-283b7c04ba4a"
        },
        "item": {
          "id": "c2ec20e2-2ce2-4dd3-8097-ca67f8871e29",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fc2983fe-86a3-42b9-bcb8-debda6dde5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c8038d-278b-4641-a69f-56a31e1bc04d",
        "cursor": {
          "ref": "9a8ad54d-790f-425c-8c3c-f3bf1f3bedef",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ff124ac-1b34-4653-a683-b4b639b8ac62"
        },
        "item": {
          "id": "27c8038d-278b-4641-a69f-56a31e1bc04d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "322f5728-9296-4cc7-9435-964d6995eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bdde7e-7a2e-41e5-adb9-4e378b261470",
        "cursor": {
          "ref": "56ef6766-95b1-4a6e-a321-79daefb733ef",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4d7edfed-5434-4611-b68c-cb5065670d13"
        },
        "item": {
          "id": "83bdde7e-7a2e-41e5-adb9-4e378b261470",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75a37f10-b169-42ae-90b8-499e50ffab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463b3393-292e-4f1e-8dba-9d47824de076",
        "cursor": {
          "ref": "95753207-d86c-4f72-9d93-07ba7eea09bc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3a57e81c-c52b-4aa2-b663-d3ce79da6dab"
        },
        "item": {
          "id": "463b3393-292e-4f1e-8dba-9d47824de076",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0c03f1ee-4f32-4fb2-9807-ce1cfa97b6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a21b6f6-100d-4b25-90b6-801e6c80bdb5",
        "cursor": {
          "ref": "de198d7b-a2d3-4b21-b773-980d15c76e6c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "378a7845-e93b-4c5a-81ed-3c74afa8daac"
        },
        "item": {
          "id": "4a21b6f6-100d-4b25-90b6-801e6c80bdb5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0fd30fd8-2045-4f56-999d-ea238c731241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0c9241-59f9-4bf1-92cb-4cda4a98ca50",
        "cursor": {
          "ref": "75843e31-936a-47e0-95a8-33d45daa095f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ef9ad595-973f-457b-a60a-4cb6227ecc56"
        },
        "item": {
          "id": "3b0c9241-59f9-4bf1-92cb-4cda4a98ca50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1aed0fd5-fc3a-4925-aa70-08aa4acf552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe9cc0f-9f1e-4561-8d17-0703a0059e75",
        "cursor": {
          "ref": "451920bd-e62f-46d8-b089-4428d581e5bd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "abd016db-8cd3-487c-8428-957511d246b8"
        },
        "item": {
          "id": "fbe9cc0f-9f1e-4561-8d17-0703a0059e75",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cddc9e39-cd9a-4fad-a51e-49004f02acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0558a978-ab07-4789-a066-a5b92f49dbdb",
        "cursor": {
          "ref": "c0f306d8-e7b8-4eb6-9f88-ff5d6ac0b131",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2f48a16a-d6ea-491f-9ddd-9514b69d88fc"
        },
        "item": {
          "id": "0558a978-ab07-4789-a066-a5b92f49dbdb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a9d583d9-47d3-41c4-b300-6cce12f389ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd60b4-1d6d-406d-8873-b7702e59323f",
        "cursor": {
          "ref": "2da756d0-7ec0-4d84-a0a0-84e62abb1f88",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a45e690f-5ad2-4cec-9229-aa436514029f"
        },
        "item": {
          "id": "2fdd60b4-1d6d-406d-8873-b7702e59323f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c008c7ff-12c4-429f-9976-e8efea931b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be6bbc7-0a01-448f-98d0-9d8bc20bca8b",
        "cursor": {
          "ref": "333e8a31-589c-4f8d-8416-24c3948de1ff",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c879a1f7-2a01-4c6a-ae36-cc5de241376d"
        },
        "item": {
          "id": "0be6bbc7-0a01-448f-98d0-9d8bc20bca8b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "552efc79-d4ce-4bd6-b2d4-07a5b8ca8f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef9125-6280-4763-b747-170deb1a0e88",
        "cursor": {
          "ref": "e911fd58-cc51-4d2c-9036-6a1d0b4ef835",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dd4bedac-d200-4a9b-8357-b5b353836e60"
        },
        "item": {
          "id": "7bef9125-6280-4763-b747-170deb1a0e88",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "00927918-e9f3-4780-8b35-b56a884d0f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ff8bf1-02dd-4a50-917b-c1acef4629d7",
        "cursor": {
          "ref": "6c73cf7b-d6cb-454e-9d13-fd1a9f9f8b69",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c00cd2b7-ab3a-416c-92e2-029063ff75ce"
        },
        "item": {
          "id": "95ff8bf1-02dd-4a50-917b-c1acef4629d7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3e05d3f3-9bd1-4df1-9bd6-8043af034309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa65bb0-54fb-4f72-920b-fe059f92a1b2",
        "cursor": {
          "ref": "53a35e56-0311-44a0-85eb-62460c42be63",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ed1de55e-1c58-41ed-8ef6-b537e6b7dcff"
        },
        "item": {
          "id": "2fa65bb0-54fb-4f72-920b-fe059f92a1b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9a5d0b9a-a724-4def-8a69-200970907362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc477b6-b05d-4de8-8306-d92235c7d5d4",
        "cursor": {
          "ref": "362377c9-c30e-4b48-905f-e5041014619e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "110f9e7e-eb52-4609-9011-39a35988f21d"
        },
        "item": {
          "id": "8cc477b6-b05d-4de8-8306-d92235c7d5d4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ae0e337-4c00-4d5c-84e2-1c43acb5f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f195f08-ac90-46f6-b929-392eb46ec1b9",
        "cursor": {
          "ref": "051811bd-95c6-45b7-9d86-141f1902b8ac",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d232a27f-64ad-4fa0-8749-90e35e5d7a4c"
        },
        "item": {
          "id": "3f195f08-ac90-46f6-b929-392eb46ec1b9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6b00fe5b-f7f1-4bed-ac63-3bb9e1ae2271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d5ddfa-e86d-4482-8af6-abb8a68112d6",
        "cursor": {
          "ref": "d2ae2f40-641c-436f-b1df-c4eb46a97c2a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "06a28ecc-682f-4e7d-8944-6d159022a6b3"
        },
        "item": {
          "id": "11d5ddfa-e86d-4482-8af6-abb8a68112d6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77f3de6b-3121-4821-a305-3a62869923a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a46283-541b-48fc-9f2f-4cf13b557f97",
        "cursor": {
          "ref": "87a6e248-bc3c-412d-a380-1ff930080b99",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b978c22b-7e00-428c-82c2-2f076428cd45"
        },
        "item": {
          "id": "78a46283-541b-48fc-9f2f-4cf13b557f97",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f28192ed-a86f-47af-9f12-c4d95d56c8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a8eef5-03f9-45d4-b807-b080021f0116",
        "cursor": {
          "ref": "1cea66db-8640-402e-ac21-7f85e5c1d0b8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7bb9b9d3-dc67-468f-8aef-17715ac0458c"
        },
        "item": {
          "id": "b1a8eef5-03f9-45d4-b807-b080021f0116",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e098a916-3071-454a-b226-dab8732a12dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67e0386-ec3a-46f1-b8a1-a20bd03545f7",
        "cursor": {
          "ref": "48dad505-058d-487c-8442-79bc17ae599a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "62c2d62b-517c-4356-9a12-f05592653a8b"
        },
        "item": {
          "id": "e67e0386-ec3a-46f1-b8a1-a20bd03545f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7cc18e85-fcb4-45a6-a8c1-333f4e424607",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49acf1aa-3889-4b27-865a-fcc2a39472e7",
        "cursor": {
          "ref": "d432f1b2-6054-4ec8-b909-aa85dffa1679",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6df61b08-8118-464f-a8e6-7515e14dec48"
        },
        "item": {
          "id": "49acf1aa-3889-4b27-865a-fcc2a39472e7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fc7c33e9-cbe8-4ad4-9bdf-3b4a61a0b5d7",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf551be9-1cbf-492e-a8e4-a390d5e3c31c",
        "cursor": {
          "ref": "1a1198ab-d3d2-4a8f-809a-f42d0b8886b2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "00bd8a2f-7990-4ab5-97a9-eda6057079e8"
        },
        "item": {
          "id": "cf551be9-1cbf-492e-a8e4-a390d5e3c31c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fce2b997-4a73-4a4c-9409-a4962731d458",
          "status": "OK",
          "code": 200,
          "responseTime": 3136,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41404d6e-8738-4080-b6a3-c99066eb78ba",
        "cursor": {
          "ref": "a1aa1ee7-dcd6-40f6-96d1-852650af0be5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b58b5861-a2dd-479e-86e5-5a50c6ebc1f7"
        },
        "item": {
          "id": "41404d6e-8738-4080-b6a3-c99066eb78ba",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0763cb83-3fb2-43f3-ae65-244a1b569804",
          "status": "OK",
          "code": 200,
          "responseTime": 2781,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bdb53a-147a-4272-ad93-6a78daa63537",
        "cursor": {
          "ref": "8bd4ba2c-fb13-4c87-935e-3b54a8b5419e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d068fe21-12c7-488c-8392-ea716739eeaa"
        },
        "item": {
          "id": "84bdb53a-147a-4272-ad93-6a78daa63537",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4c2408cf-1fa4-4b78-92f2-da9f2e2dfca7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bdb53a-147a-4272-ad93-6a78daa63537",
        "cursor": {
          "ref": "8bd4ba2c-fb13-4c87-935e-3b54a8b5419e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d068fe21-12c7-488c-8392-ea716739eeaa"
        },
        "item": {
          "id": "84bdb53a-147a-4272-ad93-6a78daa63537",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4c2408cf-1fa4-4b78-92f2-da9f2e2dfca7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff477fc-ddb4-4fcc-9921-e2789c587aa1",
        "cursor": {
          "ref": "f249d3da-431f-45f5-922e-5d01b034bba7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d740b403-61be-4d72-8e55-0dc8e24f174c"
        },
        "item": {
          "id": "9ff477fc-ddb4-4fcc-9921-e2789c587aa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55c63363-eea1-4128-abb2-ebcfaf30f459",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b0cbcd-6acb-449b-b8fc-9779ea85770e",
        "cursor": {
          "ref": "590cd783-a93c-4b28-ae13-17131affbf49",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a444fe54-e838-44fa-a590-d2becd9adf0d"
        },
        "item": {
          "id": "33b0cbcd-6acb-449b-b8fc-9779ea85770e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "847e3acd-3066-4e50-b76c-ecc682f4a22e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}