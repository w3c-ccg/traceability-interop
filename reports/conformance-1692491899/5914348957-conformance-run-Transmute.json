{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8f352f83-b17e-4ebd-9215-1e52aa5c527a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5fffc8bd-8b7f-43d7-8920-91224c2781f9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2de19ed8-104e-4315-b67a-157e8b9e18b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05b25947-0b99-424b-be0d-ab2ddfafa1db"
                }
              }
            ]
          },
          {
            "id": "7c27289f-c697-4555-a894-4bf594e92d15",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51583e1c-c151-40cc-b92e-befb80521ea8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa79d42d-5c4f-4319-a102-f454ae1f22e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5070a7e0-7286-4336-8a7f-48b95fb3245f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3514fac1-0243-4e0b-bb64-a3c48599e3f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "577478f1-e459-46b0-a833-0ced31c20ef7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ff904f-564c-45ab-83d4-5d283d725ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fda6867-a011-475b-9ec1-03fa98588c47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1498ec0e-2704-4267-8050-eb08be7e134a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "326b8055-51f7-4629-8503-d13b702e6a2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ccab15a-18d1-42c5-be84-0d04a1149fe1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a71d1e44-dbe8-4eb5-a67a-d44dea52d88d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854eebcf-5116-4eb1-a60a-7f1b9648c7fd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8282b1fe-2397-4254-98cd-ad31b651c9ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b98d4c1-646c-4c4c-8eec-ae2d669bd445",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b91e2359-37d2-4f57-9753-07c26726f0ee"
            }
          }
        ]
      },
      {
        "id": "1bb8f242-5586-4767-9598-9adfa0e4d4a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2afc8364-eab5-4d47-84f8-3f1e55a3fe31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42ba2458-326f-4d69-bc57-34495f013931",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6ae678f-ca5e-4e76-a559-ca22f93ea94a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a495854-0684-4f07-ac23-03512ab2c44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20acf1b8-6cd1-41c0-9b37-366bf6339cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d59a0-398d-4c60-b7ad-3eacc258abe3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e96529-c25c-4785-951a-ac8e28dc3377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "168295bf-a1a0-4a89-b344-34e3dfeb41bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a45a39-a218-49f4-a667-503dc2729a13",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848d5267-de4b-4524-a197-fe4a6c280896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd5a6e25-7a85-4aa3-ad55-b23053176b65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6c0a03f-24f0-4451-9f05-c66a95292fe4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99d0b6f6-bedf-41a4-acba-920f989b17b6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99b5f34-a2c3-405c-afbd-2e3de3018634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb1d0bfc-fb16-411b-b48b-b22f322aa44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051cb141-9c61-4cab-b5fd-21c020e36923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef12aed-a5e7-40de-858c-b15641971602"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53316c1d-dbad-47fe-ab47-4436c407a40b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af14a645-9d39-41fe-a041-0325fad8f0d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "493af4bb-a87e-4f58-8ca7-2a32e3286549",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f0a0a43f-171e-4b81-9091-427212923a35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d6744fd-5bb2-4c59-9a0e-98857d9221b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "71b131f9-1945-46bb-bb9a-b9321a02c355"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dcf4549-0a8a-4ea8-afde-68cbc670e5e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "444effaa-fb53-41d4-95ba-faffab0b72e7"
            }
          }
        ]
      },
      {
        "id": "485b4d32-6af2-4b19-bbff-e86f3033e464",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "defddf38-dd0c-4c27-b82f-e6540311ec27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af69fb5c-2378-44b5-ba52-d08653d4de2a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "315ad38a-53de-49cb-9c7a-da7c131ea4e8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def6efed-c397-4826-b3a7-5da03d657094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6acdcb6-3f04-43c4-8053-ece5cd044b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de4fdec-d2b1-450d-b4f4-54e1f39f3d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6498434-905f-4015-a08f-9faa5fc42bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd263bec-cb65-4782-9c4f-325688fa3679",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513ff259-7abc-4726-aa26-d472a358f20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6818256-c798-4853-bf05-57e8725f0002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a996cd2-624f-40fc-b993-f9cf8fe454f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b78791b-3565-4697-b896-f3b7f0311c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46979dd-7f8d-45eb-a90d-7c26fc2824de",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d5bd9a-a4e0-4e8e-9b86-17c63392912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0050d2df-7679-4c2d-83a6-5b882696feeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33902380-92b7-4f81-9b36-f0b7c2e10c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9688dcb6-7d82-4ec2-bc8d-945927f30e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486c1ec5-76f0-47ca-9174-d74d0b22c998",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0d80d1-9f3b-41c7-8221-37810dc28aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dc788c-2ff7-4af6-87ec-f7e8f03c7da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe33f0db-ddf4-42a9-8abc-1f097e106546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03c2350e-6571-4cdd-9e6b-c301e1e8a54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6908d2a2-b671-4547-a3ee-b2e30ce9919a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc6a74-4dfc-4a60-a100-842ea4ce09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b19f88-21bd-44de-ba70-3fd304a6189f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f47f4d-95da-4923-af8f-de818d05f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9e80c0c-1725-41a5-92f4-7646b8cf4b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59486437-0d9c-4c65-8d21-6f2ef600c033",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df121ee-b611-4c01-b414-dddf9a5b0795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac953274-0603-4ab3-a25f-2872793ee39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b97b7c-a884-421f-98f6-b6fd9a1c8d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a42896d4-f925-4d92-944e-b9bfce7b1032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2797177-f098-4f75-b575-883b10660808",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94926160-38f2-44a3-9898-a5f3c54b3b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3199bde-2ae2-411e-84d6-ed80f1c63436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67e0e38-7d1d-4160-b11e-84c17b2ed324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7355ddb-f489-45e7-90f7-255784e1ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54768836-470f-4472-9b9c-69f968e2d444",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96584b12-cb92-40d4-9ce6-9cec0faa0afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f72d504-2d8f-43cc-9027-123d2f07ac79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d765e06d-b625-4e8f-912e-8ba99838d555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c788ef-c353-4935-b2e5-c90ed61c3414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b9386c-0828-4543-9ac6-9507fb9560e1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed1e392-9c3a-4451-bb2d-2b6e54d48cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7046ee7f-b19d-4450-9e7e-da3c27461c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15052214-f1eb-4066-9975-6de3abb9f559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2c23de-bc66-4372-b458-0d1b538d2ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c14ccd-25b7-4ae6-a577-5b53c653dff7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30184bf2-e951-45b0-80a0-eadf9596b41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd0c80b-ea87-49a3-9433-e29933f2fdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534aaa01-134f-4437-a6b4-3a8eb8f8d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a5e0ed2-330d-432c-a206-6f675e755964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda1590f-016a-4bf3-b205-5df69be07c87",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0ddf26-bb10-4db6-a8a3-ef24eb2b62b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493b0cc0-9708-4304-94af-3522b903724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cddfec-9ed3-440f-83e6-d3f118e48257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "788bab19-cd2e-41c2-b5c1-ccd41797ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a51bc-9441-41c6-a31c-9cae5becbf57",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b960953-9023-4453-b6d2-5e14d14f5e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b18afc2-dc8e-44c1-86a2-1b1ac37fe8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8ac05-a8f6-41c1-a4fa-9ccf431b5b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f0aaad-2b85-4853-b8a3-c2449ecb16bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9bb4ab-866f-4a58-afcc-545d25be53b1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f130d3-5fa9-44f6-9883-6e867b925c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77596361-7074-46a1-889d-0ae32114b177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66e3e44-6ee7-4f13-8d78-117e9fec7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b760e0c1-61ea-48f5-9229-9c31b6599749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b9468-1001-4aba-877d-ed5ccf4586b7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ae0b1d-1a51-42dc-9d35-939c4dd1c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487e9cf4-d52f-4190-8f84-146b87a8934b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6223e59b-e6b2-4b1d-a0ae-1e5ea15c3a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df38a037-16fc-441d-9d25-bb1adf2c380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256183dd-e6bb-4c59-add4-5a9c790664d4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbb522c-cba6-4d89-9397-96d899b15856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e956ad-c65e-438c-af8b-401b9996680a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a445bd-6962-40d6-9548-5f9a129ca68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e464e062-3f7c-4669-9eeb-bbf18340212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918f9f4e-7967-4197-bb26-8f61f249852d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aea0a5-6bc8-46ec-9ec6-85f89f07eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08c6500-71cb-44a9-b58e-70f784aeef3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2224dbe9-7dce-4c00-a968-ffcc23595466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e242328f-1172-4790-b550-154d2edf3370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613d0f08-5b58-44d3-8a15-9534e0e56104",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0767ac0-52d9-4d0f-809c-9f51d36b71f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa6d5e1-5376-48a6-90d5-19fafb49bd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd64be52-eedd-4e97-b981-d06b22078ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4415205-7a1b-484b-b438-a18d1df22c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bf4135-d2ab-4d17-a7ef-1ac3256e944f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f8948f-fb4e-4d30-ba3e-7486cac31b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f746908-aa28-4239-b018-bf9b4f0b1f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e980e-a0aa-42b8-9cf3-f32f91f91ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2552d6d3-00b0-4a12-8478-7aee28d54f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcae564f-6136-42aa-97ac-8cc1476d4599",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b1c7f-2932-4d65-838e-2611f74ed5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad40b15a-c12d-47d3-a20e-457ae73be0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4729fb31-0876-404f-82dc-784fec9aec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e76a9e8-9b35-4a08-8159-8fb691745083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4e2fe-0540-4406-9855-7f3be86dbcec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b3a4e9-97bf-41e1-b966-ec0dbd62f3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d7e49a-2a32-42c4-bae9-142b5b354e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d566a7d-d151-45b9-93e1-3be6d7d519be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7ef771-0278-47d4-9aac-c45bda66a64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115dd42-d58e-461a-9f04-70b650ee16f4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff197b-2e61-489c-867e-5ca46c45c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4d8175-dc8f-4198-9ee9-84e00fed7452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5604af05-6102-49d9-b0fd-ac1cbcacb3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2339e0f-6a89-46b4-8ea1-8c4bbb666222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d42bd0-25ff-4ede-873b-b5e4ade4f531",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb36bc-ef2d-40d4-bc32-8fa269555fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbc909e-9634-46eb-8740-b9f27856c9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c902e-e291-419d-a875-ce22abf1360a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0730dc-bdde-41dc-a8d6-cf90897a08a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d115d-7ba5-44bf-9010-9cc9c3fca38e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a4a878-ea4c-4a9c-9b3f-0241aff629a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4c26bb-8bad-4d71-9cc5-e05304535791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b361027-2766-45bc-bab2-4ac82243b07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e37f2177-9155-4928-b886-7cca32af60d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0881bd5-7cc1-4306-91c0-76c5e68ac429",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3deaae88-ed66-4e1e-b425-0897407d0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b720ccb1-514e-4c9b-b358-d0bfcf25bd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4ffe35-cf47-4263-a365-39d2997f46db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3575e82b-1232-4765-9fe4-900d0a50314e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3007a2f6-ef44-4434-95d7-c86488719e87",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da20173-941c-49bf-8079-6ceec11bc319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774d4258-2dac-4202-9e10-761e5ffb5be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a75835-00d7-4a91-a549-9fff2f775cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf5b365-6f62-402c-a324-355d23dd7fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a329e-83f9-45d8-a332-592f3d989348",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170388b3-f534-49f2-9268-5082afd1fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16be69c8-8d69-4469-8b95-b788ac4be7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f824ee-c3f7-436e-b6fa-6659f93206c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d853d1-6425-4767-8906-c8665985a9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3390885-3c68-4441-94bb-85d6683fc940",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23765190-4aee-4a03-a30d-8084539f5c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42551e3-1b22-4b50-9e9a-008dc5ac87ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f474770-64aa-4351-b121-4e3c492ad2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac331db5-86bf-4f09-bb89-d29ca8fd816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cae1a93-87fb-4b70-82b5-7b3a91981520",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1405dffd-b8d6-4892-945e-7a40a9f968da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f107345b-b608-48e3-818c-8398f149045c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f5ec48-9594-4735-8910-267e5800b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc7b744-9493-4232-969f-98f2ddf7c2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a1ddf-e90e-47ef-90d6-26f401118a10",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ecdf3c-ea9d-4153-b5d8-835eb3265857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a9ba6c-4c5c-46ce-be04-92f761f15451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7fd16a-5610-46a1-b844-3f39dd253d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f074ba-ac48-4fcb-9ee6-09259f01a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa70cf3-7f01-44b5-9f63-33093518ff87",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007c8c34-6145-49ae-bf6a-ead4c680e354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b355248a-f5e1-4036-a554-35ae81e094cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216c69a-478b-4485-b823-1fb73f5265c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc39bf5-78f4-4267-83b5-59303e34bcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b0201-edeb-418f-a32e-6c4ba8a97e5d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bd6d69-4902-4464-9558-030812c163a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db43f1ca-c2b9-43c8-b573-cc4533c41b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a80d511-d567-4711-b612-e66d9a31f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e438c93-6b5d-4005-9bba-edfe5957b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90251cd7-343b-4748-8c0e-73078756f08f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0eae2d5-c3c5-4656-9951-c009411b7f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9cab12-af88-4a95-a0e0-76df4c1fe290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b44bb7-f92b-471d-bea4-51684304b006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "984a62cf-6f2e-4ff7-9422-cdf811f0bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d81fde-0757-4480-bfaf-4f80efcfe25a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f155d81-e74a-46c1-a547-70981dd5d99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42508db6-fb4d-4dcc-a8e2-9155138292a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e208e2f7-bf35-4b0b-9d5b-6bf1933ebc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "204549dd-ea09-494e-9557-689d5d0f0afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867076be-a6a3-47d8-ab76-995dc11f62bb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0328d-e8b2-488f-b77d-4ee7687be59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceb47f9-dfcc-4b3c-b9f7-9d34428b11be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5f8091-70b4-4c21-a108-2b2d8d8392e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e76d820-74f4-4b7f-b875-25fb3ed8ffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ac2c4-b6b3-423e-b061-092a9d08e1ed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b23d4-4a91-4289-b911-3d05c82d92bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60980786-4fc1-4fa0-bcaa-e989e1e180a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9463f387-d2bf-45f5-813d-ee7f60dbc425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4f27e41d-ac42-401d-a82a-2d2b12a6b607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e597c0f9-097b-4f6a-9104-ffccdc2ff4db",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b2ff3-1d2b-489c-a1be-0cbba15f3d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b74428f-d75f-48af-af8b-4042c961789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167a54b6-20be-4e09-9358-03f0bb8bea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "662e68ce-f01a-4511-bf74-9fe9fb5c91fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664b22a2-e414-4a52-b12d-2e0b2471821f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16093cd-9a79-444f-94ba-b4862860a369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980ef1f7-0241-4466-8bd4-20401e4067d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaac4df-7cdd-4f3e-98e5-1989a3447190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3374f4c4-308a-4315-b160-1ec09d8e73b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cef147-1896-4112-b8a9-b29a584e78c3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a42d6b-f141-4302-aa29-e3393da2c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b1fa18-1af2-4597-ad76-0cbb1885a498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78de3dc4-e694-49ad-a58a-6ecbcb32d401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af6650fb-da4b-47af-81d7-da4c2be59dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7125f311-05de-4548-b8ba-453fe1880fb0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64fb270-66f6-4ca4-8fda-cd3b90e5cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c1fb5c-14cc-4ab6-9384-a655d70c4962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942fe1bf-12a4-4d13-a019-6d140086a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4164a23-1e54-4d4f-a900-8f04ca3feb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169ced20-5b23-4b0f-b05a-ad86e55b88d1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daecf13b-ed9f-4e5e-86dc-ef1cc82f26ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54bc687-2cd3-45cd-9cf8-f973260c0b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f515316-78fc-4367-8094-2183c610efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "966967a2-f1fc-4ead-bb9f-163656b100c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c947a373-259e-4b9d-961a-f15e70e4767a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd8cd8a-403d-41db-8472-449435462653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4bb71b-5f79-46f1-b93a-8a0451ca6797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235f5556-ff05-4973-adfc-7d2b052874db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73f826e-7ac9-49ef-9a74-914be46b9238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418689d-df0d-4f00-997d-4c1b07b37518",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e42747-2c69-4812-8e1f-bb412313e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f6c980-4fd2-43ff-a7df-e898af32a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cf32d0-860b-4cd8-b032-e561695c804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "742523ba-ea33-4642-a7f8-4b05861d1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233402d1-7f3c-4ad6-b74b-74964e399273",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6ce999-33fd-47c1-8f0e-923936eff6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329db9a6-2c90-4927-ae04-ae34e1df0e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0047b5e7-e9ec-4233-8470-41aa22c80588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcd24c4-e13d-40ce-899a-e309b2132ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9782f27-0756-487c-a6c5-f13b5a17642b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c697a1-f275-459a-9d83-af78a0487140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058de386-ab5d-46ef-88ab-b80ade74164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4b0fc3-1564-40b4-b807-cc27f9f13e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "746fa82d-0fc4-40e5-ab45-6b0e0fce4812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c797b35-9cb4-4d4f-a148-0e50766ec3eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2caa8ce-074d-43a7-8135-9500a3d4c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e87f07b-22ae-4f20-bd84-1f922e08fd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36674a5e-ed0d-498e-b77f-5f66da3907d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b386a9-a9f5-40f1-8fa4-c906590d072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0930ae2a-a6de-4bec-8fa3-3f37c1cc5bb7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e301438e-d644-48df-8b01-6fc8763f3b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fd3e43-dc86-4c34-ac60-7c4e2421ce44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adee4c5f-83b2-46b6-9027-a733fb875bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f518dbd5-c59e-433a-9fdd-5342ce801d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efebda29-53c1-47a7-beaf-d0f39acdc5d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bf9138-8a43-4a16-93a2-4d95b301f516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546a2a2b-0115-45ca-b785-f7c3c79a991b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dafc72-fccc-455d-9bf7-52af71ca9764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e76a28-ebdd-4494-8d2b-288cd4417111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525f1200-8c3b-4e27-ab3a-b6003be64789",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9050414-e702-4c03-a8a0-b139b6fc9641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cb26d6-6a22-459d-95eb-0b367dcd6f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff0aa31-35ed-4cee-8363-277cd4e967ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0fe1ae-d230-4caf-bb0e-56ffc4474509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd8b649-5f72-4515-b8e5-4ae498ca7aab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c49ffe-8a8a-4698-9ed5-27d1dfb54720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4f01f9-fc50-4fc3-afd5-c78c31f9dd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc4f43e-af3c-4842-80f2-43eca7f69809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4849e47a-8dc2-45fd-a782-093f6acaa199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33699703-41fe-46c5-8b94-e415cc308c00",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580289c4-d698-4975-add9-36133d725b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d6d4af-4aff-4eb7-b225-8634b9b8c514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17147db9-bbed-4cbd-ada6-a205b068d304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6ee9df-6907-4eb9-a659-8e1989de9087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b0bb54-6b20-4434-9f90-5fe2a28cee76",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e480ce64-c2a7-47c8-800b-5fc3481eadd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beff0b54-34f7-4578-8827-78592d764b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a2dffe-2149-4048-a93b-606d5c45bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef60687-dc67-4c7a-afeb-e4e036ab366e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b467a6d-4f34-4ce4-ac7e-d08e43b24e53",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa56c70-a9dd-4e92-96b3-789008027eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58795ce3-ee23-4347-bc21-0be98468dfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3498d9fb-4708-4d10-b823-4d8087475781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72c3a86-fb6d-4de9-8422-5e22907665b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6ef4d2-e2ad-459d-9d02-3de7f85676d0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17de053-6c79-4191-9f44-9720fae32aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7097f6-9b47-4188-8dae-e80573a9693c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbea7da-922f-488a-ae15-83f7cc050950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7bafdd-e996-4209-a3f4-da6d2a33843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb0fd8-209c-46e6-8eeb-aea3dd5f3504",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed605b9d-bab8-4402-abaa-39be5f25a76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e038ed0-8679-4806-8f7e-13b68e4a7482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05781495-e0de-465b-9520-537567397cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0380a2cd-5dde-469d-ab95-bdeafcde2468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7355fa4-2c63-4c36-b774-831255bb48d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9b1f9f-0b52-4883-bd97-0aabfd23a096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df68d8f-1683-4af3-8686-6f1102ac2b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87705b1a-3f9f-447c-a9cc-98fefdc88e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6f3133-22d4-4c64-85ca-f0ddd87889ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397dedf8-904c-48ff-89c7-3f6b229ff15f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b7e293-67da-4585-b62f-6f310239a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cb852d-cc74-4f32-acdf-226fabb4b3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988e7313-eca6-4508-a03a-b565cdaa00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1133ab5c-8ead-4b92-b6a3-19f7cd75b6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a688bac-50a0-47d1-b28d-cf8a7f6f7727",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0531c2c5-4817-4db7-8d9c-d5379c13a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd747c67-7946-4ccb-bd66-d62a0ab35165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a6d9c-0fa7-47b1-aa76-3adf5846630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c547e495-ff02-4a6b-ac8e-5ecac9dcfe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49097e4-12fa-424b-be40-c5e35f2ffde0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634f85f-6248-4a96-b190-3bdbf79b077d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e36b56-f6c0-4533-b04f-294ce9b13d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df760171-9d34-43be-8255-879d4ccea663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1980e1cc-8650-4fac-8e3c-81af9bca7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477f2c0b-f818-4ffd-acb2-41d63e5a1bd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f4bd8e-034a-463a-94ed-289c247a5b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6d32fb-a30d-4ba1-bd2e-48718b9dd01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720b6d1b-ef2c-4580-8116-ce9018981db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8562c4b-b5cc-43a0-b7d1-53a59aaf412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b663cafb-4300-4db1-bbb4-564d5616f8c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90438544-dba9-4634-a19d-b20e2981a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f7506d-d80a-445c-aac7-18ff68d138d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3347da0-dd7d-4167-b18d-819637890368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c08b777-ee63-42bd-81b0-aaa6bbdb31ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16bce1e-a369-412e-bbd5-4cf71113f98d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf710a5-26a1-41fc-9b7b-ddd7fad543db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae76b77-9f62-4f23-a67e-5d45f9e3a555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07476e4-d558-44af-bbe9-0c794f354fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4226eb1-cd88-4948-9e43-3b632c3d32a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7198ac06-3a6b-44b6-baf2-de01d01c5289",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a8b37b-4129-4056-9ed3-73b2e56322c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5a3f97-198f-41b0-955d-5d6de9843e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7598d968-8cfe-4312-8b91-e4c4d6477b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1903a6ed-1566-4bdb-9d8f-1f2b67e44f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06bf807-d8c7-4f94-8df7-8d748b82674c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337f56b5-4826-4088-9784-aff1fc5dfa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a83d6cb-78b0-49cf-817a-5072ca487bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0817d1c-dff4-4165-b0dd-29cf1b20ae70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb50fda2-36c7-48a3-b952-7b84609e2767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4224c09-6522-41e3-b7e6-b6b4271fd75b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871594da-fa09-4b27-a64d-0990f149090a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92790e4f-2877-454c-a31b-c5c102e8f3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1015bfdd-620d-498c-adf5-0829c2dfe5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6462dfe1-e4e6-4506-83c2-f04950a91386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0769f32c-937b-42f5-9278-7bfcc954e2ca",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cc3ac5-97b1-46b2-8316-f05c7726bd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8938c60e-2f40-41e8-ae81-a16ce53415e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b6e52d-4a5b-41e1-a58e-2d6ff773f9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0daa4bc9-890e-4d8d-9682-a391e4177610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfeaa58-7671-4123-a5ff-6cff1b3b6feb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd2cd9-ce95-4769-9007-6c3cf77577c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368789aa-6deb-494e-820f-1b84e9d45572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3440bb59-072d-49af-9bda-c28584da95df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f691292c-6c26-4bbc-9714-2f61c7f95b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f6dc79-e43e-45ca-a959-d9c9eec6882f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3582a317-25c6-4296-a688-38f22c5abf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398da317-9c99-434f-909a-e07e9031d853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b40cc-324f-4449-b664-d867535ddc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abe00e9b-cedb-4751-8c42-e00bcae9da6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f407946-293a-4732-8ccb-46262362c9d7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7060b3-80c5-4209-9eab-e1fa95846e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bfabaa-30c1-4358-9a12-4d843dd790e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1f959-bec5-49a0-a75e-b7770881aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "063f090b-0745-4565-a1db-19e198aa1f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a988bb-29fc-4a66-a043-846022ed502c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71419a7c-742f-40bf-a199-231154308cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49430d83-d742-4e48-9933-e4e5d99dfe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b9a5b-afe6-48fd-8402-964a1259bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21119d27-0e9e-440b-9983-282ea0ee798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3543e-0567-42a5-bc49-492ed77ae63e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1ac975-6367-4cd6-9a99-c2d63286f90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9b3f32-3688-4421-b11a-e5a3dc4232d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b089e095-932f-476b-a44b-7dbf3504057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4af712d-2a96-4422-8dc7-182fa2c92ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cae264b-f4f0-4be1-afea-7949327081ab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5670d755-2a4b-4567-866e-f270457eb490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea9187b-c102-48cd-be01-43f5016c20f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc4b2f-8b2d-4117-8ec6-6344861568ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8018dccf-936f-4c6b-a694-c2647ed33b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88d1f8e-01a7-49dd-a438-b5e2b191b0ce",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4938333-53b6-4f96-b8cb-bdd1e4da8ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39170e9-5ab3-44e2-b736-22f085ad2903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7336041-df03-4852-a005-bd10b189813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "511b5056-743d-438c-9b3b-9a38649eb2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5802b88e-4f1b-4de1-8201-c18e6d3cd41e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf06e9e2-8f3e-4771-8fbd-08924b6a169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe604e7-d0dd-4f42-b81a-74d442379d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00317c2-9f73-42df-a84b-ec3e4e30fd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "944657d1-4154-4054-93d4-163af227d0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a626b-855e-40f1-9981-2bb784f508db",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cc1215-369d-4aeb-8579-7c4854299355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b07a37-8097-41b8-b081-abb78720557b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e223de22-1185-4b0a-a868-8ca920ecc934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c29554fa-0da5-44cd-a4d2-26e9b13e3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e8564-ba54-47bf-9c98-6b3fa06e6322",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876f761f-503e-4c66-a652-629c602276a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74518b87-b87f-401e-af75-650e1b04dd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f001a047-171b-4466-9187-c7cdddc1c327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0429cec-0c13-4d80-816b-b396e3a21471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8650656f-3a61-48bd-b616-1c2fdb9c0ca0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bedc997-bf48-46bd-ae4a-d03fd5237467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8e5365-8f1d-45cc-b475-0bb8845c1de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbb787c-aad4-4ff9-b1ca-76d738c31a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2b7e0a-19ec-4023-bc8e-66277ee1f958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b058e06-f1c7-44cc-a4e2-4888df78a995",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178fd7ae-4b78-4ccb-939e-07f4999076cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c009902-ecb3-44c2-b7f7-eabb4ba398a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa46aa7c-6565-4305-a853-52fa91222319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acec7450-1923-41ee-80fb-89c7a1b1364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a2235-e661-4820-bb92-4e336bef9054",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d606f47c-1352-4a79-83a7-60b0eb99029f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03968c77-000c-4eb5-9f3b-72c92b8d9802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae13bc5-8c33-4ec0-bfa3-0f945feed502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94cb885f-4262-4349-9ba9-bb1a01968c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3ddd07-00d7-4c88-903e-1b020d787e66",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aa1a6b-38d5-4575-b6ac-32e3d775d791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef274075-7360-488c-b14f-31895df27f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c1393a-826c-431e-9faf-806a9f5bb71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ecaa82-c995-409e-95ee-690bfbe903ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35d394-931d-40f4-a538-77aadd4cb00b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de8a94a-3138-4460-a981-0f9470547574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f6615-215c-46ea-90e7-0ca14a467cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be422f5e-f035-4ab0-a204-5e22f2f4c8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fce79595-542d-4c8f-a2f0-40039a1c3299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9d68ad-ad9c-427a-9a3d-942bd927a6ff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9866a55a-3053-4471-87a4-5d2b18652481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee8a401-a646-4b9a-8a8e-f173699603e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638245a5-1813-4fd3-a2a1-35385e8f7a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea87a927-742e-4118-b2c4-199e09a706a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaf6f41-4f9f-4e52-9cd6-bfb0299ab4a6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6367ef59-26af-4dec-b33a-9429cd22e3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dade743b-1dfc-45f3-ad1e-b2f4e4df1ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ace5f2-3dab-4591-a745-94f284c77554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24f9968-1a1e-4cdf-9218-8a997d7fb548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e34561-cdee-45a4-b921-03edd6611446",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51bee3-443a-4a59-9cde-fa4362c5b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db016a2-5c29-404e-b747-d173dca3d65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fe5093-0feb-4703-b74c-68d23f02169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "248ae554-65c3-4785-a5f5-aab3bdcb8cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90370d69-3640-4af1-ab59-0eacff4e80bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d89c804-1601-4804-9209-551d0bfb0cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39bd036-a7b7-4e91-a959-51cb0c9af645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30950d6d-7750-46c5-aefb-05a85998c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d70d6e-53fe-4a69-8a59-643befd23c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06702e91-3ab6-459a-82cb-ac34db754b69",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541531db-f77b-4397-a38c-db5a45c396c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6741760b-4545-4984-be34-25e9bd7364c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219fceac-9b84-46bc-a16a-e9f091b2163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d56a7e75-8a33-44ae-a7d3-728d7e2fc010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f2fbc-9983-4d12-9bd9-7ed3c1b53197",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e058b696-bbe4-4c67-8bd3-18c112d6dfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39721ac1-4adf-4f46-bc04-a145d85a6960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda65522-ee0c-4ae5-aa44-88495863ea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b817ee03-e460-4e7a-a746-afd34133fb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccfbd33-3d03-4013-970c-befa3f5ad5b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c55a79-f8d0-41cb-b729-a695c83d859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8c0fbd-e463-4a4c-aa1d-c64b8e02fc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fade0a7-0db8-47ef-bf3d-213ff5d6f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d537a910-d1fa-40d4-8df5-f85be5b4fd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6577949-e71b-4116-899b-0c4589742013",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba4ecf-18fd-408b-8cbe-b5045517be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b8601e-e41c-4f70-b936-4a15ce9f54bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e7ffa5-06a6-48f1-b65d-637dfe60084c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8c2c2b-07ed-443f-8eb4-b5ea2702e61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907bc13a-dbee-407c-9b33-7c449294c2e5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b83f5d4-014e-41cf-9bf6-d791fe847ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0f928f-0d16-4354-b321-1b92ba8bee6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7f8535-51c5-4277-bf3a-228e15f79231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed85b5b8-e0db-4f15-8f3d-7bd8f8479fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1ed68d-1cee-4a43-a5b7-1fd3943c674e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4682312-ba89-4d86-a35f-d075bb32a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a792e9f-c224-408e-bce2-ab85835d69fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d5722-db45-45d4-8aad-d494bb6e177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6ce52-a262-4c25-acdc-31bd768adcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72be0a7a-a581-4f43-b286-9a3459abc73f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d0da6-053b-4d17-ab1f-db85e365a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c77d5d7-463c-4e63-b14b-efbfc67d92ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c208f460-0c34-46b1-b19a-cc84b9baebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3f5510-5615-437a-a15d-aa40fdc3f0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f8463a-6716-4f4a-bc4d-5729baafea8c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a8e8f8-0003-413d-9e65-2aab83313484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b86c856c-2300-448c-a6f9-dbcc64660ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2da95b-5f74-4fb2-b62c-423121685921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "764bc62b-0c36-4bd0-b4ed-b29e4f980a2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8230b78-80b1-4fe8-b4e5-6d6ee581fda4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f4913de-b5b3-4444-91fa-ab2dc43e8ec9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0730e-b11d-4cce-8a72-3e6058499af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "976d6b9f-95d1-4a6d-8278-6d4470dd1b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231fa0c3-834e-417c-935e-4ce5fac8f4f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e292442e-e448-4cdd-b313-ef714a3a7804"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bb0ffaa-de74-4a79-8799-d281f856086f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ae268fe-11fd-466b-822a-2457842db403"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3bb53db-1002-4b6e-bebd-9475825fa792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a1f019-34f1-4c7c-a538-f7b3f97648ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96f0f84b-a87e-4781-ba9b-04343f00c532",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "159df503-3cbf-461f-8a07-dc452fdae44f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60b951ec-e0c3-43f1-adcf-668c52c263d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5da87d8c-50d5-463a-9535-02b30b5ed306"
                }
              }
            ]
          },
          {
            "id": "6e565039-61a6-488f-8a69-a0e86bb62d61",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44c1d4dc-724e-4879-9a06-a8c5160a5812",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be3cb7c-05d7-4906-842d-c33f5a3233fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23680447-0850-41c8-893e-fd4ffa2b80bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4330fa9-e1a8-4697-8a9f-eae3d780c82d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61fc8c1b-7b9c-46ae-9fd4-896245211eab"
                    }
                  }
                ]
              },
              {
                "id": "97bc0365-60a3-4a51-b9c9-cf204a2e4e2c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41c094c0-e2a6-4578-8fc8-d991e02b6eb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a5f6de3-cdfc-4550-81f7-c100847cb34f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df89d2a9-7ae5-470d-9db7-3d0f3ebbc54a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e81548cb-d0db-4147-97c2-8a691e6b49c5"
                    }
                  }
                ]
              },
              {
                "id": "7c2a59f6-b009-4785-a9af-cd00795bdebb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9e5825-84a1-4206-89f7-d39796cf8736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86d6354c-f90d-48c9-9a47-b5e1859f4b43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d7f3cde-2ac4-4e26-a7e3-0468a1539373",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32644eb8-c4b3-4d02-a21d-dec507ed17eb"
                    }
                  }
                ]
              },
              {
                "id": "41f6b4c1-dd47-4e79-846e-0a60bf8213c8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7af50e5f-685b-42ae-bb54-c16231b0f049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66cb1e6c-e50d-42e2-85f4-8aae8ed86119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a6b185e-2436-4cd2-afee-dae2fc89365e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "661dbbd8-bbe6-4f79-8d42-0911a39b5c3f"
                    }
                  }
                ]
              },
              {
                "id": "56281e51-abf4-499d-bf4f-7393c718db96",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32c5e9ff-38ef-47ad-b82b-32658aa4a1fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08fe2417-4a7f-4be5-b9fd-0d364c9d06e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "750e896c-7cf3-4bdc-9bbb-a0a869a6bab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fbfd23a9-87e5-4246-b400-a8ca481461f1"
                    }
                  }
                ]
              },
              {
                "id": "486f138d-b66c-4352-9a06-0a4c730d3b3a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2348cd8c-fa69-439e-94e0-3a3279879e81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a205d5b-376a-4c8d-9c06-07c4077ced7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a23ef073-25cd-4b0d-bb18-81511aa7aa42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe7f293e-3fc2-4633-99c1-767a8d1fc093"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4faa3585-500c-4b79-88d5-a8f32bc4e188",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63c5af94-9e4c-4993-bc82-85b561c1aaae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea5fe835-a340-4128-83f1-608a4fbdc1d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b041c037-544f-4887-bc86-0517e8d4d11e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "319523bf-4f5a-4c26-9b5f-80223adca976",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1286af2d-0d67-42fb-92aa-a10d2ecbf025"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb5b8e6e-1bfc-4361-a2a9-431e387e641b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "347f2e9a-c5f0-42ea-b202-08c9f29ab461"
            }
          }
        ]
      },
      {
        "id": "722b24d6-bab1-4f8b-9c71-3521fb61a87a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a8e1d948-e0c4-4e23-adb9-67bf38b0b5c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8561336c-6f66-48e2-a955-3b6227bce35e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73674dbd-d1c3-445b-aa28-1ea24d5a6e23",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1060cbc0-10a6-435f-aab4-7c8604872517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703b8359-8273-41ea-a737-ec50f18ba558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec08d7c3-c1d9-40c4-9314-b5334d021bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a35cb7-1617-447e-a8d9-e977a8c3cbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faca755-a85c-415f-a845-870ad2066166",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d788a0fa-c01e-49bd-996b-0fc37e09fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2f5a59-ba1e-40d3-b7a2-343879e5c597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a390e4-4436-4308-824c-1afd7f3c7991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "727a2c4f-5e0c-4ddd-8fb1-d6cc7667aaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ec7645-a3b6-4298-8da3-793c8aab6fc6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e63ba-6611-4e7d-8a7c-723135c80d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80be6b49-7a8c-46de-9847-21305cfb7a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1d46a8-2f16-433e-bb32-6d19d5b80ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4eaed9-7892-4219-891b-6c767b8eff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a0a573-13eb-424e-9f14-057f688e83e2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15782fe-bc3a-4fbb-a852-4250c4c5db5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b9bd40-7cae-4f26-85d2-94163590eec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccdb2e4-e165-40eb-94cd-6e94c5448674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29dbb1bb-3ca5-40dd-bc9d-239935eca1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcdc6fe-6896-475d-bd86-ff43d34f23a9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eaa1bf-650b-45fa-bd00-ef3f66346b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d996ffbf-beeb-4733-8996-2d6b22c49394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648786ab-b7f2-4b9a-929d-90568cf48e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8aa945f-9669-4d5d-9626-c6fb3c43dba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36c502-2286-4705-a082-547063d74c8c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0215233e-2f4f-4c27-821a-b645715a160d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49500b16-864e-4393-b73f-15a5c7fcf99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24128029-5b77-434b-9315-9e2f8e5f6d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8e7c6e-6a8f-45e1-beff-811be32c1ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01f5177-f84c-4c74-822e-73852193e46d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667c3cf-191b-4665-be29-ce7a57efe8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6a7024-e1c2-4303-ae29-92c603093149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4388de97-165b-4b21-bad3-5bfc1f6f994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1994577-3381-4267-9cbd-65029995e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4d1573-32b1-4614-a21e-658394423219",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fec944-6a88-4cb9-b86d-8ebd45b39f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1613f563-8f95-4341-9451-7e06b1d70b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b622c8-923c-4077-a80b-126ae36614c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d8e274-7d73-4178-940b-de7517ad1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bad5624-bb4f-4f51-b758-3838dfcd4443",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8aae59-31db-4cb5-bcc9-446a9aa46d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e4dc45-cdd9-4d78-850a-c5f8287ba1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7303f6-a8bf-472a-a2a0-d7fb90c1d40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c08203-f987-438c-8d16-6889c09d6197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bebd20-b1e3-4127-9f07-7ae454e3039e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be50be20-d1e7-4b79-9909-7f0c75afa023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bfcdfb-4d04-4656-8c67-217c7c197a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea23f4d-cab0-41a0-a86c-7d68de33b80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebcc3af-6d7d-494c-89cc-8590602e0d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5247b6fb-3879-41e6-bdaa-b47a703acd44",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee340ce-2be1-4af7-b5fa-1514f1b96d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425dbc91-1068-4b8c-b07c-766b7d547077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977d8e44-00c7-4336-abc3-1453d9f33386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "feb7604a-5b9d-4143-b56e-c279c4d8be6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b213de2-02f4-438a-a895-50e58629e06c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac6bc9a-e114-4406-9ea1-4e283731f06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c230e0c9-be27-45ac-96a6-c6671a7d54a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f8ac92-5cc8-4191-badd-1d581f6c18ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f915d235-8f55-4d9a-95f2-19f4c3d89ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e23a9c-193d-4cf7-87bb-4656c15b4367",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d4a81-9c70-432e-80e1-9ca60163f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff80208-b04b-4330-9011-13a1835d64e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a22129-a897-4b7d-9220-16d7bbd2e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fba3ed78-2d86-4eaa-8795-bbc01424e8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5649f309-c228-4b33-8bc9-b0e592139b6f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa856fc-bcc4-4c1e-96db-15b126287e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916c6263-ce57-46ab-b238-2ea3a3bf3e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c6828b-2a66-445e-bdba-044038ff4a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e404a05-58b0-4553-84f7-ed9fa9db8f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d60746-ba28-4e56-b994-7c9cee2de5d1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116fce69-22a0-4277-a432-65db15b1c000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aeb1c1-4368-405f-ac51-5533bebece6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125e1abb-74fc-4b61-8050-55d4c29df92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6441587-8a2b-4b43-be7b-206a41c521b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eab983-81b3-4e07-a3fc-34fdda5f40a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0925845-e150-4ce3-a5bd-6224a1897a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a19faf-012e-4c12-8341-42f414e1e98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842b2071-4ee4-4d37-9f6b-c773c7ed86cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "049d5e40-0833-4d0a-9420-8b5a0b2e6ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4c009e-fde0-4ae2-854c-3707769edef7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d587c7a3-b723-4028-982d-b8aa46e744c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af36ca0-0664-4cf0-ac3e-9d80ec7b8d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74d569-dc10-432f-9e48-6413ac30bc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ce2bd0-b85a-409e-9d6a-82e44f409318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad295b83-e6ec-452b-94fe-77fd444bb0d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74132e11-df41-44c0-9d07-460311377079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128a188b-20c8-4c36-99a9-5f81d4b36bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432d35d3-d7e7-44aa-b961-d8ef2131059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e17561c-8ed9-4709-a90a-92fb6f7269a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f06034-2354-4c0e-bb29-303c45cba27b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0811b-6c93-43be-bf5b-6d027e8cdc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c7607e-7a15-4599-a8d4-a5c1e0dec4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61b8b3c-1d6e-4120-a824-70a90c577186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54cf193-20d4-41e9-81bd-5da5690d978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e717e4-0b70-48f5-9f05-d9a322df11d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b0020e-128b-4594-8591-41438ebb4282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e6325e-1af9-4098-9a64-0185292edb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad218b7-3c4b-4ab0-9688-8103ed4c56fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42973205-1be6-4756-9ede-43aa3f856b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e42484-ceb0-4a8c-b542-71abb1248a14",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f0fdf4-5f1e-4113-ac84-8cfc82fb4e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b23163-5d14-4f18-9da7-9d61f749fb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bfce0f-395d-4ac3-9939-85a1e65a84a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbaee30-94e5-44ee-93b0-01233b2985d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4adc0f-5e32-4b6b-8855-57b69482fc1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f06bc9a-9fd5-4c6c-9e82-bb853f616d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abe7e95-01cf-49cf-badc-006483fc8554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d41cd9-f049-49d3-9da9-f781f3d76781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab9fd8a-37e7-492c-bc84-568e0f54b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571b1546-a225-4b94-b804-e1ae9dcf92b6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06ede2-62e3-45a1-b8df-63313883bd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7aa64c-fccc-48f6-ae35-cfc6e49d31ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f387d092-9bd7-46ec-9e50-39f96dfddf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32abd02-b516-493f-b1be-a70de2ff2032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b3058-94f4-4db9-8600-e1fa12b7cbb1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0b969a-f1ba-404f-a6bb-92e4858be221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9b40bc-4900-4129-b0da-4a88a30f7558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1fd510-dea3-4b83-845c-552dbd324757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c10e2e-b5c9-42d3-803b-e38be780808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dd9fee-e95f-4e56-99b4-f9524f4afe01",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29950c6a-c523-4ee0-98bb-df1fe320dac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60bad03-4c09-4295-b6d6-dd18e1a383a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b964c8-210a-4a30-bdb6-c547704f598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d238fed-513a-44c6-bdde-dbcb0334d348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590d57d0-7aa8-4407-9a91-d152d94c3cd7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f8c723-17f5-4043-af10-b5ec60c28280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0952b0b2-9073-4547-856a-0c9b5461ec36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed86422-b06e-47a5-9dbc-b997ea9dabfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06518e1-2323-4cb2-914f-c9d00b067ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b73753-c859-4b9f-8d97-f29c60821ad4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64342362-010f-4a1f-97d2-43422a129917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a58ff7-b90c-4151-8243-d0d9084a3f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66b6bb0-8412-4b11-a03b-676ae19de219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d09d0d5-acc2-456f-a030-b3263b06f87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29690707-26d7-4af1-945c-3d5722619dd0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd336066-73bb-460b-b57f-4c2f40be5d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77141c5c-7806-43c2-a7e2-6752a0d003db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f687248f-22f3-4892-934d-7725508446b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4a17ac-db44-434b-8f88-8fe1cb081017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac74e72c-e7e5-49d4-afc7-5ba142d18626",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32baa7-7587-49fa-93fa-6cea47135c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbd3ad6-a080-45a0-bf2b-333cc2657738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be859fbe-c05e-46bd-8eac-92fb113eb1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74ff42a-d3ae-4ed4-9a63-2d58a24f925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10020af3-dc6d-4bfc-b9c9-1d3ab768afd9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba549072-10e8-47e8-b9ea-f18102791fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3949a75f-4020-417f-9f57-09b164d6b062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232dadf5-26e6-4b7f-bd47-d5761a785f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116f8f35-bf3d-4020-b5c7-7a33e18550ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263b4b1a-6a4f-43fb-b0cf-0921d2099730",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f006328d-1812-440c-be25-e813da9dc217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5d54ff-59de-4963-bbdb-188af1153260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cd6155-cef6-4ce0-bae1-fa6ff0468c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22970ee-3d01-4fa1-9d99-227b9bfd3b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab31504-b332-4b13-9bb7-d4d5352e6492",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92181cb-d2df-4c97-a5dc-1926a1d2aec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ea5eae-6426-45b5-8535-430eefc792ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6014bebe-20b2-4cc5-a5e8-d62d6835b5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "141de283-63c0-4be4-aa79-bb06c867b33f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "919800a6-ceb6-4403-8f06-fa32f37918fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7a44a5c-97d1-4f9f-bd7e-95b2a9ce927a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf69997a-458c-4a89-bbc5-3e10292f9b2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeb9971-9ee6-4e51-8e3e-61acf03f6de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6ba03b-fc59-4738-96a0-449d0d0c822c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e60854-0861-4163-a13b-3ec1529a99af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18674c1f-a83c-4637-a2d8-0ed2cd012bcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1e517ca-74a2-46de-8c1b-45f7b22109a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc735bbd-eb9b-453b-92c6-67f928b718c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0a47cb3-f679-40d4-8115-66022a5298c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f912c2c-ebe4-433b-9211-695fe6e27b9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18c6046a-98be-463b-ab41-1a5ab12940bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14582e39-2e16-4efe-a35c-3805252a23df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa08c4e2-8f34-4fb5-ad93-3aab9f20a522"
            }
          }
        ]
      },
      {
        "id": "9d00a0b9-47e5-41cd-aa69-0ab66abbec4f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "94b79138-c67d-442b-97e2-713a0e331b12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ab197ce-893b-45b6-85f2-a8402f8e4323",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b23c31b-cfc9-42b4-a41e-dabf57ca3b1c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c159d7bb-3f0a-466d-b2ae-60c5bbfa975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe29b1a-f9fd-4df8-bb82-229504483004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6640c5a-43b6-4f1b-b872-049ec1b0c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7590328-145a-42eb-8408-7428ae3ed305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e167d0-e5eb-4be2-a86a-3d7a49ab6995",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17ae942-fe2f-4101-9e04-dacb0b977a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25ed203-4b19-475b-ad30-82f8d21d2e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235db882-c06c-4d3a-bbb3-02736e39db41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ff39c2-7138-4b2c-9db7-bbbd4f373300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774a83b-27c9-4c20-98ea-2e323168ecf4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c44efb-729f-4cca-bd22-da8e3aa17f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd56de6-5e12-4a3f-8988-bd51ab850da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae64116-47ca-4463-b99c-0a7af48ac6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "821bfb77-35da-4ac0-8316-49e54b413bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5399cf6d-c4be-4a68-971a-e7674981c101",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fe2604-012a-449f-aff0-83a1abbb7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d0b72a-56ed-419e-8af4-7eb6ef0fd7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a40c5b-cb47-4c12-a398-afe5d57fc4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef01b2ce-0ba5-458c-9640-84df34ac9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a8851-2523-4102-9d6e-4c7669254501",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cec5a2e-ebd6-4402-a992-56ab8960d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9a88c1-7c64-49b5-8db8-7fc67fc28408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4662d264-6632-4f1f-a8bb-64498d8d789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "789e8a3c-0b8a-467f-ba8e-a8c1534c8190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce67a61-f21e-42b9-8a8d-80e1dd3ef46b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd374db0-69dd-4830-8ada-c39aab284e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a1cb1c-5af0-433d-8393-d455f127236d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8beee21-5ffa-47c3-bca1-b3a112fc2129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf5b4a5-426e-45fd-a0aa-f32831210393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff2e817-a825-46f8-9439-16ab318e1ddf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c829541b-7ef5-4fb5-94b8-888753e45cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02dfefa-1344-4aff-8327-6a7e38d9485b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb421af-2e36-4833-9a53-da907cd9d31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8468aa24-8088-4b18-9958-0c2b78fc2c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cc2c59-6af7-48ca-8e84-f74ba9dd0c25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7cffe-e08d-4146-86d8-13db34b8490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c869c0-4b77-42e6-a4b0-aeb1b7d4ef53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3817130-6b58-4a69-b637-7bfb1e060685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e27354-4f7d-4d56-89d6-6615be4411a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e5683-4413-4fc9-96a2-3159f61f9661",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c8e853-74d2-41d0-bfda-5f5e06f26fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe837a4-9d7a-4fe2-88da-d2b598e46972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e5413b-8b61-41bb-b488-3a2eb83f4544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e9638b-9d17-44ad-a88c-3a9b8a30a84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4d8c1f-5aa7-4127-82c1-cfd579483f8f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a211cb-f949-42d6-baad-4cbc5ea11d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85343a31-e1e3-4d92-8de2-f4e2f28c20dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bdc3d5-9ced-4b8b-9e62-a3ffc34bff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c132d5d1-6aba-4d6f-ae08-781660ce7ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9e3dde-db48-411b-b1fd-7adda63bd779",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e38f52-812e-45a8-8870-0bda5e3d9233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38af793c-5302-4068-9252-17417992734d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ea7f93-1c0c-4c9c-9e37-4eaf676f896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebea529-8ed2-452c-8845-6d6a9e309e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41bdf24-23fc-4d6b-a1da-ef42c8a9bb22",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a04da7-8cfd-499e-ac38-bf1687023000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5ef4cd-ffb3-41e2-b1b6-3a8d7933ce9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14070498-6a7e-45db-b147-24480055a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3886a88b-8029-4ef6-ae39-5db8ec1effa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192d38d-9511-4437-aa17-a5fa4db0bfc7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85327d54-24dd-4407-aef7-5aa812d237e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a05db7e-71e1-49b0-a30f-df94d3c06033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4876b5-0468-4b85-9e3e-31d6edd9bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f44d3b-b7ae-472f-8f6a-b97005de71e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088b6e4e-d666-40f8-bc32-4feb1cd50d75",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0ea714-33ab-42c2-a54e-efe80ec4defb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60697aff-e0d8-4c5c-82d7-41fece4f653e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d318c798-7b4b-4037-8a5b-c9425a1293d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8225bff4-9380-4082-ba19-91d1fb677732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ff7ae6-990c-4fee-bbf1-9ecf8f4f9e0f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9adab0-b2aa-4849-bca5-cd9877200adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612e8ee2-15af-449c-86bb-016719714012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9e61b-f66e-4673-b975-e6f21ef7f7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "731be39e-bc55-4154-aafc-f0c652901da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b55036-1c22-44b1-b568-1a74501b0feb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fedd768-e055-4f70-8d8f-ba39998f84cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c70beb-e88e-4229-bd82-74d99757cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc5be43-1bea-4a46-8607-f6ff7d9fc0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82197530-2be6-4cca-bc2b-2883febb8791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d44428-4692-4dc2-a848-b52ea3158e9e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fa6592-5689-4da7-8489-6270808a9e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cb2818-4b0d-4d08-8ac8-b9465eadebcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c371e7-0484-480c-9872-0fbb5e64a935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86efb649-bd0a-4506-b89b-96650937f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb692ec-09a3-4e53-939b-9f6faca7ad16",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eaf9c4-3206-49ab-ad06-3b3fec36cd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca96d43d-a6cb-4ff0-9181-39c5a43a712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2b575e-d75d-4b23-a12f-f9a05398dc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "797feeaa-0f4d-4d33-99ac-d60233971e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3edca6c-b91f-4130-9046-71e83c4d1f23",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b325f4-6627-4b98-aafd-486bb080a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f4fcc2-4588-4aa3-bc21-eb4dba828ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89068f05-7cec-4005-bcb5-a0c985247b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38873f81-e368-401a-899f-1e760650b79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749ca67f-300a-4e9b-8347-bf9edcd0bb75",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a04fb8-fe69-4d22-8474-dcec4e6c07f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337079ee-0d00-4ce9-a108-85384b3a4220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e065da47-f131-4ea2-a737-9531f8fa84e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2aa868-ef43-4391-8e93-e268333247ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b1b11a-dad7-4062-8aa5-0d23f4d60788",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d79f7e4-a0b4-4574-866d-e1f2bc52d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf8bcac-4e28-48b5-aa9f-45268fdbcee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c088d984-cc89-4ebe-acaf-1b03cc5ceb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c546936f-19f0-4f90-9427-24a588330640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f473169-1765-4788-a0bc-d568cee9c06c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796d2ef-d2a7-487d-a572-ab7cb26030e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff3b53b-add9-4c88-83fa-cd8caa2d687b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdf8626-dff6-4bc5-afb0-b0a4899520e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c26c18-3bd8-4687-8e72-903f5da86930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48ac1b0-10b3-499b-9df2-af6ee52a60de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07de1e73-a31a-4376-8782-c52c84375c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f5125f-0f33-4fc4-bac4-7ed789b4cbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343b8348-bd9d-4073-855d-4eb3b1df499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6248d2ca-0183-457c-8967-83a281713d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a9e04f-e44d-47fe-a0a4-bdec9a2216f4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86c6e36-ae69-4bc4-9a98-f44bf12b789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262919e5-3b69-4213-976b-a03de078c7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a58160b-5111-464d-9cb0-44f97a36b589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7d4a95-bff4-4c13-92e6-f94dd0aeaa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a7d6d-f225-4d25-96a6-3084db046292",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea68e222-a152-432d-9840-8280eac6c03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e388b6ca-94ef-4fe1-a2bd-5247b0222928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58de1184-6b8c-4116-98b7-f5add986b3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89314f7c-5276-4c77-82c4-fa34f840354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c21511-f56c-4617-a83f-64c9e116054c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201d61bd-7b9e-4306-8685-3027ae82bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7cf75-c77f-48f3-8196-5bdf1a6c6e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e23fc-0991-4ffe-9b18-8e7b8d3f01b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e027bb2-d296-4e8f-87ff-9ca6c2bab211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a0f24-73c7-41e4-b5d5-b5f43bf42d1d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0194132-efc7-4b02-9268-d2ae120017ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587022cf-782e-4591-aa62-535a3df6b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c3232-764f-4859-9e1d-097ace860e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa0685d-1f88-4379-84cf-3fdce33492b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67901221-266e-4ba3-9619-0fdc860813b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1060c47e-1b36-4507-a2e7-49d8a4107320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5504b2bd-5b09-47f9-a2db-767721a22dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de87af21-32cd-4342-acab-92060d882169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad3d3c0-6add-4dc0-8fbd-e86cf5dcdf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bb095d-5a25-4702-a90f-17e4cf159d5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40035e4e-155c-451d-be7b-3ba4145b3cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bd6777-adfc-425e-884d-f06ef2c09c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc276b8d-3139-42b2-a870-b292600e9dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a3ddda-da0e-4324-86a4-764bc090aef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59295e57-ef97-47c5-bf84-985453069e0c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b59a47-a92a-40b0-8ac9-5ac3670d87ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb84dbf-b985-413f-a10b-2607539c2bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07d42b4-7ca6-4ba7-ac89-5aa691700604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2776f574-89fa-4e3c-a051-9ae2e9b0722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd164e-b614-4911-b70b-7334a38224b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc96b086-d07b-47cd-98cf-50a4ddb6bf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6cf339-42f9-4ac1-87fb-78fbc257f865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f170e8f-c320-436c-a5ef-7997165d5c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6c8c24-087f-4496-84ab-dd564f034c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d69cde-e2df-4fd3-950c-4316b3aadf48",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0e9545-310d-4778-8ff2-219a1f8becd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29843db6-6430-4465-bfac-e1ec87bd251f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3709ef8-ff34-42c7-984b-09a5feda02b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03246e72-36e4-423b-a120-156043f96431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec104e2-c78e-4803-b176-201c56a58dbf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba13d6-2a1e-4da5-872b-ce868458ed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c577b190-6670-45b9-a1e0-b4ac587b4085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698f41e-a234-4b06-b397-ace40997d032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08c84d1-bb0f-4066-98be-e521b40538c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768c4481-64cf-4c3b-8cfc-f6fb65d1391e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5a1517-bf63-48e2-beb1-02886ed0ed69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5127542-42ed-425e-852f-08eb39aae044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df59d3c0-5aba-49df-b557-4f0bfa592bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff88b433-e4e3-40fc-bbea-f242e93d9401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41739226-da81-43ee-ac48-639376c13774",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8ff055-fb81-4487-b9a9-b6bcf18bb34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4180d320-a857-4f80-be88-5dd12d78ee98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9796c6-70ee-4cb6-99a7-1ed7915c2ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2365f5-0d2e-43e1-b472-7ad35d1895cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21267574-70c4-4674-b5ac-97e258b5fdbc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d67cd64-9e3a-4cbf-8fc4-0791c5c5c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f60fbb-b5b5-4505-8d1a-68df8eef94f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b130d56-72bc-480e-a09c-126428954a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d46851-e9db-43dd-9c54-54b1a7cf4cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a560c744-a65b-4aa7-812a-3455f34aa5b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f8c61f-ccf7-43b1-a1b9-f1b94bb81174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f72f5c2-b1b3-4a92-bb68-424e12692b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1911b44d-1bb7-4e1d-8e96-784b5cf5d40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e950f2-9cfc-49a2-84e0-a8d1d9de7d65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c71ea65-ecd2-4f5b-b87c-bf97561355cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd2ae9ac-bfbf-4601-bf48-c53604efe41e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c3551f-2add-4b44-9cf0-3384ac19e618",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5475cfd4-962a-4963-9771-6bc2111f3180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dddb8f-c58e-4b2d-b9c1-a6b774d4429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19a864a0-790e-4fbc-bc1b-33310ccf264c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7579510-7b6f-4451-a8a6-06a160a2e0a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4748e905-8811-4d8e-8471-2b6c258b1ad9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ea4ca9-4c27-44e9-bdd2-5927d3ec6776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5dc65cf-3ffd-43c9-a1a8-70ff1a734fae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b30e9e90-e024-4b93-97ad-08ff61139933",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e274c30-407d-4abd-97b5-be4c0cf80f84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ce6c729-0594-41f2-9f7b-8b120863506b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2548811d-3a5c-446d-a2f0-87398a5ec1c4"
            }
          }
        ]
      },
      {
        "id": "2bbdc049-cebf-4dd3-960f-6d9e53e4b30b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b5ea786-0a21-4ade-819f-2d5be5d15d6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d370362-00b7-4909-84e3-ca3bafeb6ea3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1a3cfe3-5c5e-4fc1-b169-7f70c13b12a2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce6a931-bed9-4f72-bef0-236e5c74e85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f63cc7-288a-4349-8e10-02302d8bd959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35c90d7-d38e-47f8-9b27-f1f5eb0437ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce58a0-0c0a-4c0d-b8b7-a82fb3f06a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7977a6e-361d-413b-b88c-0ae0c613ca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00e55b2-2999-4cd6-af0b-3d14bcb9852e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21fe7ca-82d2-4372-a163-df8412d911ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5c756d-da23-462f-a28b-2dbf82a9d5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2666bd46-b33f-4ac6-a0d8-7642d21ca6ac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48403253-64da-4800-8b56-55c7898b68a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0ef425-54cb-42aa-9f79-3502a4d0ffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d925764f-6de4-4bef-87cf-f9e0d918ed74",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debdfedb-dea1-4d38-8646-ecc9f0043a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21de3fe-0b2b-4b74-9a76-5bf1731a1170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe632222-004c-4bf2-aea4-366e4a577949",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7b4816-5a96-408c-90e1-007a7a9aa2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a248e4-8254-401b-b04c-133ba1c6baed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04d1be5-6a79-4675-99d5-57bf92f305ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc9e898-9d05-48e0-9659-cc7d9b5325e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8584e4c8-d523-458d-92d8-b9dc1f47f07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8ec145-2b3f-4502-868f-524dadc82393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cf1a7b-1646-4de4-874b-7eb5d9bef3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ebc7c5-5a0b-4242-bcfc-16439f94e793",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7370dc4-d565-410d-a5f3-0a6d94d2e24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba05aa1-59fb-415b-a037-dea23f4f17a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a163b2ec-4d23-423e-810f-0619ac67eff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6700fea7-76ea-48c6-bf77-24588746bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9efaf7-50fe-4b16-a70b-04de308b8db6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad33d244-3612-49f0-bb19-b61566d6d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39841cb-284c-4ac5-ac18-576d3b168e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33be44a2-0ee5-4b88-876f-ffa5a39bf1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e98102d-bdc7-43de-abcb-767756587f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ec31fa-b826-4a71-99de-9a4e60c9a0ac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2109c39c-5b9f-4451-9012-7eb2eff2be55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ddc2d6-1f9a-4fe7-bac1-bfd7ae06a093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8fb8b0-4fa9-4ffe-8b21-5cf0b9897a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0a3174-23f5-4820-b215-acc585d6c59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfe59f5-3068-478f-a3b3-10403b1fb8a8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676cc849-b49c-4933-89d6-cca0b362c5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97995624-5519-40b4-ba86-e06f8c30cb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df15279-0d74-4c94-8d85-52b7045ffc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0caf4771-0eb6-4122-96fa-0d7bb8670525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b31bcd-b074-47a2-9cfe-a4f8c6f51833",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a948607-abfd-4b11-8c82-7a732ff7272b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50642dc-d8ad-4349-a3c9-6bcee9918228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5985383d-3aff-4be3-845d-604b99f9fee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6412dd95-f6d7-4299-962b-6fa64ac84082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db7b732-935d-407c-bd91-01a080a868b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0748ec1-ce26-4ff8-870a-51f84c400c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec08090d-e1df-4c44-b612-08d25d0b4620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db5ccd-668e-4806-9536-b521ac0889a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e35e92a-c992-4f97-a819-f07f6c79dd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedfbb34-0b9c-4d0c-a402-d8cb30b80e7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54937145-2a78-4a1a-9cb6-752171e2854d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4934089-b753-47f3-9ef4-5eadcbd92101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76c46d2-82df-4a2a-b8a7-556b35b92031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd5aad4-0ad1-4a62-80d9-54e5a97a8a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e770b9a1-8306-411a-a68d-9a2edc0cc590",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37946b2-da3d-41e2-b37c-c6a8402766c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3836578b-3e22-4277-b757-e119a6aeb43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0428e821-8e04-43bd-8211-7b485f7bc2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b0d0b8-4615-4534-8a43-226905a2b571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e99826-720e-4081-acf5-54dfd515cdde",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae54983d-3ff7-4b98-a0b1-7502fa996589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8d9ec4-6ebd-4c75-afbc-224b84b09572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13f45e2-a848-44b7-814b-db781e2a35cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f427e7-8277-439e-b5d6-7ccfede6d0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00907c3a-b28b-4b4b-858b-f964e7f325b6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f27f8e-fc2e-4b33-b6f5-33637a2d3f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b00e489-c52f-48d5-a915-08f742dce03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab924295-9727-47ce-a0a9-383de8278fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841dff75-a53a-4822-9369-d3f9515bfb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d958d4-09ee-4c8b-97f0-885a96db0532",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7a0dab-3692-4cf4-ab3a-7762337525bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e490b847-5356-404f-b524-6caf9187bf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd45df4f-f6d1-4bbb-9bfd-517f7f82a502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38845ab-7372-417c-9d68-ff33bc7eed85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c71b991-4d8e-4a5e-9d0d-8db81847702d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17072bb-405a-411c-8357-e64d137ae653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37b975a-bebf-4fb4-bdac-23d72d3b0b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23db0603-7404-4f4c-b3db-209b8547d372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934c2a3e-6366-407e-a5d8-046fee4b0c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bab789-2c97-4e75-ac94-ea7be68a34b0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a83cafd-4134-4a79-ae1c-a71709d1f6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826f6785-8663-4bed-81c1-a57330ad61da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3368b8aa-82c1-4d09-bdb1-c6af2f949386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9571d2-036d-402e-a93b-0c24d993325f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d27933-dfb3-4eef-a309-2e28489c6a06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511acd10-3cc1-41aa-a3c0-782e04052d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27e3f72-6bf2-4075-911b-a7ed20ddc6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de635456-9c6c-4715-b598-6e0c3272df80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0054ac72-c9ae-45bd-95fe-0cf6be047749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1fdcb2-b852-4055-a271-8cfa61af7a98",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2949a08-032c-403b-89a6-44cc53016796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4b740f-d19e-4a1e-9d0d-55ed500013b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebaf6a3-e14d-48e2-9ce1-63e5a422e44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6e177d-59e0-4218-82d4-c2d7124ab67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c4c242-591c-4f92-a8c1-0005ca9fdab9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36306d0e-dd64-44bd-848f-659b2fcddce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2b1c42-e6f2-4371-86fc-7d5e2a1132ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346a2dd4-74c2-463a-9e65-b2b2308fb01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5191377d-5f53-41b4-bbe4-29294f64d9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8ef7eb-bf0f-4b06-bcb5-6fe2bc3acb5d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a114bba-cf85-48d0-9eb1-d7e6e03a07ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4671aa4-f855-4199-872f-4d8a1353c2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d5a4e1-acb5-4dcd-a79e-be657f34be9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fca6a2-1f82-47fc-8990-5dd1481de4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89af2d5-e887-4897-a23a-e3f893405281",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd22fc49-7c30-48bf-8772-59b892dc4721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90462192-0346-4c38-b132-5f5fffbb0c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc92a83-fda4-4bbb-ae83-5ac02fecf35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47db2feb-32be-4521-ae30-7434e85eefad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9212b2-34a6-4d0c-9abc-a4c36fa2db2f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9394c072-45c7-474d-ad91-b34fa5315d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140d4f71-2d95-4ad8-89c9-4df7bf15e1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb9b4b5-ba8a-42a2-911e-1f17bf791a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99837d7-bfe8-444d-995c-67c2304e6427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62cee71-9264-4318-8358-d3faa839116d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a611a45-dc31-40c4-ae3e-1ca30d1493f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d235e1-cace-409a-b398-83c5ba82f33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a76814-a783-4d88-839e-cf89f79f0522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862f9d11-a192-49d9-84f4-3b9e3d1b9e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c049a79e-1c84-4c20-9f3a-c66e4040fe81",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb0971f-bcab-4724-a229-e1d68d48e2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e8f9b8-aa5e-4734-ac19-b510b81a607b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ff7b6-bed6-4fc1-89f4-aaf8f7804d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d879ee73-52f4-4838-a90d-3b0c942cc67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8145f2-b6f6-4e88-997a-23e1922fe34d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3c3797-fba3-453f-b5df-4be9a2f3fcc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b847f3ea-ebb2-4b83-873c-bf7d07a5309a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f7ecfc-2582-4361-bf0c-a1110ddd17cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0282b345-9f47-4e31-a258-ef12df8e0992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed55956-5a2e-4769-b050-5c35098e6947",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bac0f8-297e-44ac-9eb1-a5f445fb1de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422c5eba-2c5a-4395-adac-05261e4f1b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e5c59-db4d-4b27-8d4d-644c00ea40ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e8068e-2acf-498f-acb8-b3696fe8c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb7ff3-0ab4-4e40-b782-25e5910fb397",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b172bd1d-8b5b-4ff2-8ac6-689574b4ac06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aea6af3-92c6-4e19-9a20-1bfc874466bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b9800-3a7f-4503-b414-e64dfe7f8868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603d86bc-334c-42a3-97bf-99236ccffff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a4b0d0-525d-428c-a3ad-4de6e59a152f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab2217e-2269-4711-a9c0-46ddcce4878e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958273f2-6f2d-4856-887a-384b2b3e023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3ca171-196a-4431-a266-3c6012e9b9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da69ded7-57dc-4050-a965-35ab29f658bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8131c6cf-0a66-4dc9-b56f-145d38ca84ba",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e20f9f-2aaf-4856-b0b2-f08db4c10ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be11c7c-22bc-484d-8954-a09a0e1a60ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c665ea51-2862-4dfa-8982-4197b7e4046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d53ecc9-9a6b-4078-b815-2a8ab3664994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e043d13-4669-4f39-b8d8-93ff2645bd06",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f3c515-860c-4c26-9f9b-2763f00eac57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143c758b-c550-41fb-aee3-969e38751062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55141c8e-6899-45d0-8fd6-b1933fe27b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506bfa78-7208-4c85-bc4d-50e0c2e6ceb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f44c8b-4dbf-48a6-afaf-b3905e88ce72",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d302d2-40af-48b9-bf23-0713aae411ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d032ce58-84fc-4700-a4c6-3dd1b9e972cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fbd95e-55e7-42e1-ba8d-ed7a27d4d306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dd97ab-6d49-4ba4-b1ed-b773a3d73b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c699be47-c2cd-484c-880e-d8f5e608c102",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d95f6d7-8c1d-4f3d-be98-e4bc2a6c68c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477088ed-3f3d-4c8f-8ee3-6e0dc8cde17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091418f7-851d-4fa8-94f0-0dc47204532b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9558c27e-b249-4dd5-8961-f4c804f3021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09395105-4cd2-4b14-b226-120b6731a5c0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78edf91-d599-4a19-80e5-41988652e36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81deddc1-a967-4dcc-89c7-b3fb147ea0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e3b4bd-d4c6-43bd-a365-32491247193d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766d984d-5d40-426f-9679-8ca51f728bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae666ad-0ed9-4830-95ff-1fba0f43fabc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37f640c-b882-4c97-a4f8-0b29d6e6a94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cb91b4-f9f2-4381-a83c-940eb2130629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da434c-e370-4a2d-9233-d18b8e6efdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d7b9bf-5c03-47ae-b009-f6324f8dd02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782264bc-5420-47ab-b5da-d52f55f88507",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f16bbe-d759-47d4-abfb-a7f6027aeb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f1e50b-1da8-42bd-bdb6-a0f7587263f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732b0848-7476-40ed-a4a6-0e2e94fb1107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b896f1e-5286-495f-809b-ec0ae24e7432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d47a923-01e9-4fcc-a2c4-25af76cc1e85",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c81ceb-7dbf-49a3-b7d4-253254c57f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946c2903-88e4-42e4-b2ed-c9189c402a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aba18c-12df-4b9c-8666-cc9de3534a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659b405c-e9d9-4056-9e80-dd70fdc15b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d35a2-86c6-4a9b-b7bd-3edf848fe739",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb003998-024e-4728-be26-a295861c6394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3e845d-0928-44ba-9868-2ab7b2ccf664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d399d-c74c-4665-a660-a546ac2e458c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcfd1f9-3a78-461a-b659-d751ef714fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e04de7e-f605-4f11-8561-c8f78c0bdb2a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea09774-d4ed-48b2-8c3d-1ae783501024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b69b7c8-bf96-421a-b77b-442818a766f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fced67d8-873f-4fc1-a693-49092baa3d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d866aaf0-951e-42d9-adee-f2ffd7fa3151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3359a550-b7dc-4e39-b1d8-4dbadf5b0ae8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e02c28-cf85-4234-b8de-0bdd12ecf34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9292a7-2e27-4675-ae83-842d11f7e7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71643d34-8c11-4850-adbb-30671fd947d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29787d4f-48df-4751-ab44-8896e7b23552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806ce1e4-4351-4f73-8771-65ff07197263",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b13f1-6137-4c4c-b348-3f6ae7e4328c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a53590-ee1e-472c-b7f9-245aba9e9507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb643b4-fc68-4b2b-8d53-153987f26a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f862df0c-b511-4219-bc03-f437e64f6874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e90b5b-5a96-4317-b0c2-2ff652f1219b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8684b75-bbff-40f7-842f-c8de8ae20ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866b33c3-6183-416b-bf7b-4265bb936148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a84546f-eec0-498d-8779-9ec5dd33434b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db050de-f9d2-4460-ae35-1c0c5aa44e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716bae30-e5ac-477e-8c00-8381b7967940",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b0f60-ea6c-4b6e-a9b7-9960a7a4a382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2b4cf8-2750-4c40-922e-f816c529bdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8fed32-8a12-4a13-a3c9-6989c6fc50fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6087381-4d82-489b-a7b1-840a532d95b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f20ac9-c55d-4259-89b2-e8a502d5d4ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe0ce5-1810-45ec-8955-2d4c8c131b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec451cb-85e2-4552-ac76-816145f73cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b392f0b-a203-4518-b1e6-04ac50f23279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65497eba-ae93-47dc-bee0-5f00dfb9128d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a09837e-f357-41d4-a92a-057d66f2b377",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6c5c05-0fa0-437a-9d61-4c8d6b31925b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a09843a-d6a3-444e-b6c1-5a4cc8f9857b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef66db21-98e3-49fd-b35d-b072b31a401b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32cdca8-4010-49cf-8de0-8c33a50422a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb537339-3a28-4cb0-a5b2-5c54054ccfb9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddebdd75-b65b-4ef3-b904-d319a6d2eebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c5bb15-386c-43a7-a286-c128b6e4b97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5100639-577f-4773-a668-1fc0a03296f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdee513-eeaf-4f5b-beea-4f0684d789b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fd1868-e33b-4bad-9949-181c1584b074",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf66fe56-0622-4608-b0b1-ef483d331645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aa9d59-7887-455c-8979-817c6b47d264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047b3ca7-cbfc-44a0-9949-9fc885728993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee6b334-5927-4ce4-b97c-18d8e0cece81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad18f7b-59c7-459a-84e1-e03749c60f20",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fefd6c5-422b-4d07-9383-6a846dbec33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f96561-12ac-4531-9f94-74b88e0a61f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b15a8d-2ac2-45e8-9afa-4a083f823bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098b26de-ef8c-4aba-b2f5-62528b0eacae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beba4dd-f12f-48f1-bbf6-a9b89b7609bf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a753f48e-6fce-42b3-9b29-80c07ddd8f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59084101-a418-421c-901d-031dfe65f763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92382cba-c273-4407-97d2-554eef2935af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23da01f3-165b-49e3-9c84-d8e8baff3d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc1d22-c2cd-4125-bafc-a1535e25268f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166f4c7-4a0e-410a-9b70-a5b2dc9433e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b7ee93-b5db-4718-93ad-1241a5080125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc37cb0-3e1d-4424-9ff4-f224c74e3077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dcb67d-3559-4e16-8c68-ee4129f3a873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28796af-0878-483f-8539-6721497e9241",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc184b-4ce6-4434-8924-9cf5ac6f54bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c246231-8ea6-4810-b1a9-d956df2a39c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91867a7-be36-42cb-93fe-15bd3a77281a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c23ed3-f34b-4504-97fa-28313b610bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62aca6d-7837-4f45-b754-888e75c7b46b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79be02fe-d307-4167-9980-88f09d5722d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc18bf2-9b15-494e-9c6d-04f8c16b5872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0574060a-c6c0-48c2-962d-2d74bd59f7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356d088c-2047-4fe9-ae88-cfcaa71d2d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e257dc-856d-405d-9bf5-72ad3ca36043",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e30b8bf-1e57-4263-9807-92c80901eda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3333832-931d-4e49-98ef-0be7db59fc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8749aca-8218-49e0-ae0d-723b653b7625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fdb603-92f1-45f0-a0e7-1ae53c1e94a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f34430-1294-4ce5-97b0-3b3bf3c249a6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1ec2a6-9202-4be7-acc2-e44d9cd40ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0481e53-1ed8-4c2a-831b-4ac4f5a56ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85baaa8f-9d3b-44fc-849f-d6c75f404943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3167b8e1-9a34-44b8-addf-da767e77d17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c7a9cf-dd6c-4068-9909-d7ec86b64be7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f518b41-bf48-448c-b2d1-0afcf4942c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9be8ca-37b5-4243-911d-7801f69899e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367344e6-d354-48b9-a9d2-a1c7ed36afd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bec93a-4d6b-4f2f-908b-2cc1dfb1d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34de3700-2731-46e4-b109-c491e1064a1f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b8d8b9-613f-426d-8089-256ab59bfd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7caf12-f017-465c-8a5c-a6dd5075b410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8135e0-17c3-4740-b7e6-017a38f8810a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa61bda-6b88-48ae-bed2-378ad338040d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057e01df-5ee1-4f1e-95da-207c91599a05",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92e6cde-49f8-4aca-8b85-94cf8da573b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fdffc4-e14f-4d77-9d73-099982885b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8956ec-f871-4c46-97c2-100a5f28ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084751b3-d906-4ad8-96b0-b893137b2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e56c6-298e-433e-9205-46ea89153206",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f83b08-59d6-4d64-a9a0-c9bfe51341b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be486cb-0ba0-485b-8507-dcba4dcca82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20151e53-d619-4069-926a-a81e97d3bb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c188358-ab9b-4917-b5bc-cf89c1c2820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2ecd44-f186-4c06-8d94-4d79438a8ac2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e792da7-ee69-418f-84e3-db6bfe3e8231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb94430c-1bfb-4100-b149-b7396fbfa9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eed994-74f9-4660-bcfd-f4cde6a63022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e4ebef-46b2-41d8-8c22-83167922c613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07af8efc-d436-4425-8c62-764dc64786fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b66c54c-15a5-4694-aa75-21b206fa2358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66673798-670e-4fa6-849e-6a894c6eca4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a39c5b5-6f1d-4080-bb63-92d533ec4b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7162d3-3d41-4a09-a577-39046d983d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8630ff9-2c2c-4dd9-8cdc-7cdb5cf32cec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f839fe3-b30c-4641-9a41-af968d0aeaa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aab9391-7d8a-4190-890c-fb34653e6dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b1ca0-702b-4af3-b76f-547c4a042282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906ee464-ffe1-4e5a-ac4d-60acc0eb27c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c33fca-6264-4986-a649-72d99f7e729e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd6a0cb-470a-4684-81be-5071a2ace328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66aa4ce8-fcde-4274-b92e-5b6f5b7fef6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eec4033-638f-41fe-b782-f95876b744a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8568595-9581-4da1-affb-76017afcc86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f33cbb6-bde7-44b5-a48c-258dc47cc1c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7776f57b-e8e5-4714-a81e-2cfd3c57f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11935e0d-091a-4d72-b460-c88f871ada1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c79fe90-60e3-4089-9b47-0de87673ac51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b50d67b-7110-4427-88de-98234bfd87c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ce2827-f51a-445f-98c4-8bb74ea30231",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23395432-2186-47d2-b619-badb7ba22669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d2d2cd-ba8e-418e-8a2b-610d6ff9a1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed3647-178c-4f88-91cd-b02f59d2cb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7db385-b651-4b28-ada8-948752dba413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328628b1-ae69-4b99-a591-22bebea59bc4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14696e87-78ae-4d6d-bf48-129d95aa7d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8389a388-3b37-4fb6-9c5f-9082ffe30c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e0f20-b8ba-416b-bd60-f274377c7b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07ff4d2-f9b0-4ecb-a0b8-e758d7a9b632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47b01db-bfb0-4cf3-84f0-a419af231796",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a489306-50e6-4965-a07e-4bef78d18dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddc480b-0da8-49f8-9bec-8d1235194d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433151df-f617-4905-b6de-5ec4a6163d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c70bbce-3a75-436e-8128-02554dee6b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5376a7d-2cfc-42c1-aa04-8243e4023c9a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d479f-668d-4c43-a007-7e1468331683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2872bb10-0b69-4500-8c7d-c07abc2b50d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c522c560-3db5-4091-b6a0-fdbfc31dc184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab1fd6e-b9c1-4dae-b880-87ffca62429b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fd49db-4136-4de2-95f7-376c5680ee55",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b95236-6eeb-47e2-bdf7-324d6ef62a9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe6f970-5050-413a-b010-baf18df563f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17af849e-de94-426c-81a0-8367461aae5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a75d041-49eb-4686-9b20-cfa048ab7bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756789e2-42b7-49ed-aba4-9f06996550a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c7e274-bc30-4468-ac64-72ae15e7e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8c4d14-9511-43aa-840c-c2a7ec1baead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32608779-411c-4283-bef1-591366393bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a714ed-68d9-4b66-a360-24e330258dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b86e69-bad2-49ce-bf45-631f7fe62664",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be2c368-b5cc-42ad-bc65-bff7f8b3d247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b5509e-0ea7-46fa-90ab-d78c91b28a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373fb77a-eb05-42dc-b85d-825a13b4a58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c32ed78-d3a8-4fd9-a3ee-2b6fafe43a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948a5cbc-c2e8-48ab-85e6-1649c3f52792",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69228fd-0907-441a-9b4f-5752b6a9e203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deece7cf-9d05-482a-80ba-66e0d84033a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3cd7d9-d335-4ba8-817c-b4a70084c045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d4cc1a-a3ac-4c33-b75d-16f99d47c4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948f474e-05d9-491a-a5bb-7ffc7b07c316",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e73f4b8-6793-4aee-ae79-3cbd2a867b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac2bcbc-04d3-4ad6-8529-09719b32e4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b7a7f3-8bb2-43ce-9a77-0a93341bcfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd36b1eb-feb4-4dda-97cb-e45f87b8292a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7526c942-55ee-4466-abdd-c371a1694b7f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b06af7-1530-42a9-82cd-fc3985667368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bef3ce-74dc-40a9-a5e9-5ea0dec59098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495af4b7-235f-49d3-b70d-06a528fe3f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821b3efd-c789-46f8-a12f-2bc29c5424e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6e6c9-6b48-4f50-a8b0-d53dfd83ca74",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e4957a-6912-4cd3-9c9e-1ed78c8c8898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad903b6-5503-4651-892c-af6e091edbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a2fc30-02ae-4ea5-819a-7a47d19391d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309e8693-8d47-44d2-baf0-052cee314bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bca7db3-548c-4fc0-a447-fd88e6fa5b3f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afcc22f-4261-4567-9183-594ccf7773e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f55ec6c-45b0-4d3e-8636-0854687cf91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d113646a-7987-4585-952c-6cb2be1334cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ecf37e-ec57-4318-b5d0-812605b97ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723a5fb1-cf27-4670-9d5b-9f839efe56d3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02fe677-e62c-409f-ad11-cbe933b53c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b070937-a88c-4c9f-ae5a-11ea57646688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41d8e63-d537-40df-861f-b7dac7ed89f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a2489b-8cd2-43eb-93ec-490d2b466e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1586f-f548-4cb5-8cb8-67b75cded831",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906fe726-713b-4916-b4de-abc733ae5044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85cad7e-9ad4-4f3f-8188-ed71fd7e74ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e347375-e2f4-4733-9446-01476b1ce6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4daa3329-3bb4-414b-9d7d-742f00e42d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b7de7a-7702-4ba3-b400-70a594bcb7bb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90a7430-09dc-4680-a68f-0f0aa4a65ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1712a2-bd71-4c97-86c0-3686af99ced0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b8b531-d928-4895-b919-afa641d6e45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2e6bfd-50ab-4441-9b57-65bbd3163dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c240e-e999-41af-8ba2-c532ad36ef24",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c808a43-f506-4e20-bb37-f6fcfff3881e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9796ef-41ae-4df7-9718-0a37bde452b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d261e7f0-e8ab-4880-b18d-689b56ccf6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c653f5-d181-4af5-9245-ef05e46db07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a3e2ce-b5b4-4987-a753-0f6db9d014f3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07896060-8893-47a4-a261-7368c01fb53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53205ed-7b78-43a6-84a3-46464eb3f96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4440379-d255-4a1b-a7a1-50bb54d6e3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953798ef-b403-4e4a-a41a-5e2b8d343966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0e5c50-2b22-46d5-9571-d45c0fb76e31",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5942316d-d5f3-450b-820c-1f334bc97d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9b447b-9f71-431a-836a-1d8a608c7b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f86346c-fd1e-46ed-a005-c72e3cf70085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1541be-1753-485d-a35d-3e8592dd5741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8c7523-b712-45bd-9acf-d4276bee5fc3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a80e768-eb91-4721-bc62-4b67a8b4e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f92626-2436-4276-8ffa-475553746e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9171cfd6-25ed-4704-b88f-c16769604219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a747f95-6f98-40bb-83cc-7d871e8bddba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf22d368-8f07-4085-8095-c44722e1a7f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc61f70-42ed-47eb-96df-81d6ff11b285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99071cde-2154-43f9-8965-3797d9f70405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d6ec2d-9951-4710-84fb-6b9a73b729ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850efc05-47e7-4ee6-a175-1f1c7528936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f1045-27f4-485c-abe1-6452d53022c2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70570724-9f22-48ef-ab73-4c783832cd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecff6c2-8693-4c72-81a5-de821dd82603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeed0b74-7e19-46d9-9898-f487195a4601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10d94f9-267b-4d60-97f4-5f28438fda6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1fa6e7-13b0-4250-876f-eaf3f8e118d8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016d170b-27b2-400b-bda9-034cce54dce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4497e0a8-eb83-49d8-b9d8-4de6c81e7c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6640ba2-41d1-41f8-aa09-614effde95d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f07f5c-7bce-4965-a630-f9f2102f80d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474acdd6-52e9-424b-aa4b-9be25c5d91df",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272afac0-e416-477b-8c70-cd447d2a91c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f333cc-02a8-4578-b1fd-e3fb0584c2f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2871b9-aa4b-4a01-a6e3-ab8a86432bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8e1239-007a-46fc-aed6-58c35da83220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946e82e-a25d-4e6d-8f04-f435b7fb1cc8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e858f8-3d10-45eb-8453-7331b60ffd64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa5e53b6-1a7a-457b-9651-59cd2d930e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8416353-0eb1-41b2-9508-14f9c3d9845e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0faf8c-22a0-4987-8b76-e534e2c48b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329a0a72-0de3-422a-8915-900fe41f1757",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0538d445-884e-47b1-ad91-cc30f1a72860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21f53ac-2ce9-470c-89ef-b24b22a8057b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165ea2b6-9e71-48c7-976f-d01a485f2e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2061bbb6-4830-4801-8dfa-900df00a754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d1221e-a4ac-48ae-8184-78606af3c508",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d80d57-7002-4489-9efd-ef701ca8d308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4b3f2c-1120-416e-b79f-3ab77d50adf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2998de3-db94-4f6b-8bef-b72136ec6c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24daee13-5883-4a6f-985d-53fe9b0cb16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fecbffa-c25f-4c71-9311-ef948c8dcbf8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1388e17c-1fb6-4c17-b84a-5c2ec6fc5501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fd8c51-59ea-4eaa-ba37-7ef4dcf05d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5922fd9-7d01-42ef-9c22-f89eadce9140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d94d5be-e14d-4531-b565-a54399908fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f816b-fd09-4d32-9937-843b0a6066b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b940fd1a-0260-4036-bcc4-34926b3f51eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ee159a-6a47-4b03-8268-dac6259bcabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ae1c6-32cb-4b06-8204-51820df92845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70358c3e-7b7b-4a85-927f-d505af3047b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4311a4-afb6-47ef-8bc6-8fc31bc35b53",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d8b284-1105-4e22-9d57-5ccc7b1a5841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113f8dfb-74d5-495d-97be-40e45a3578e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1337bff5-526a-4938-a667-b171f1827144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b83141-6f4f-442c-afbb-16c48ace3bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b15bdf-2c16-4a12-a07a-57eb9b6b7d87",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3bc881-40b6-42bd-a296-82dd2471c26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8da951c-2513-4d97-9ede-bb1423122a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc6dccc-b67f-4d7e-84f3-6e7dc5f00a17",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfe5e21-5105-4534-830a-1456bf11fcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe376f50-f686-46ee-973b-87358e2e43c7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4db639-2b8a-4c54-a546-0c8bb09c6f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e98899-8252-4b5e-ace0-e97b1cd65bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e78d341-5675-45c2-ac6d-0c4c914a03be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0624dc-cc41-42f2-8238-e2034c6efea1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc148075-4bfe-4e49-824c-9150571a36f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d25b71d-f62c-4551-928c-0526c7a6e7b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb882007-5e5a-459a-a2a6-f2ab34c46631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58aa39cf-0e68-4f4f-ac1f-cf866cd8df44"
                    }
                  }
                ]
              },
              {
                "id": "71542e9b-c1df-4cb8-8077-36ebfc538be0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5eb04f8b-26d5-423f-b915-cbab337fe08a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ca2aa-deca-4604-8179-d7a0c93d32e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e1c2af67-f779-496f-966f-07a572ccfd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eaff7c-503b-4872-834f-91d2f905cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82d8fc50-fb6c-49fb-a3d4-fab194bea8a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77889add-aba5-4ad4-b78f-f1bf2885277e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cf7bf44-7d37-44b6-aa52-6ca6477996e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "844006ec-bde4-4a28-b8de-a5a438886762",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "840b4944-04ce-4a9a-9d2a-9bccf525b9ba"
                    }
                  }
                ]
              },
              {
                "id": "ed6c1a49-8e22-469c-8527-0058b5a068c1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "700d8546-0676-4107-9f01-11897f5e660e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc87fe3-4bcc-49d2-8f38-49fafc35d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "31936157-d135-43fc-8b7e-8ee6c8b436d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa37480-6e11-42c3-b7e6-8f1055ed53a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4b9871-638b-4574-aa0c-9934d31f3d86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de4233ed-a5d0-4257-9879-b6114a642928",
            "name": "Positive Testing",
            "item": [
              {
                "id": "131cf9e8-253d-4883-9da6-4a3d71eb9083",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2eec6b47-8011-4cf2-8ebf-03f45863b9fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31e0efbe-40ef-441b-bf71-f01774f5411a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1021e03-b617-42ac-9907-63e6b1431551",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "324a49c9-fda9-43ca-9364-11578c1ae1ee"
                    }
                  }
                ]
              },
              {
                "id": "3ff41db7-cb42-448f-b24b-08facdf43214",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e230c286-e688-45c5-87a9-3f3f001e84f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "924f1b83-88ef-4ade-8328-29631dd358ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17d79254-9ddc-4b3b-9eb4-e453cddfe1d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761b50bf-2778-4218-b6ca-ae65dd12852a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ae99a35-f1a8-4898-b0a4-27453c7b5ea6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7c63f960-277d-4866-a64b-79b967508c1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a05d9d8-9567-4865-bf9b-d7d8b39edbb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92e5fb78-5778-4f2b-a2de-0e2491133694"
            }
          }
        ]
      },
      {
        "id": "373f3d42-9aa1-4346-9c85-655bb6fefdd5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42b3d668-5965-4935-8dd8-dd538b873347",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76d8cf68-0e4e-4838-88d7-16ae013ba526",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de514fd6-46d4-474f-a36c-b413c04053d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c1849d-2c9d-4e93-8cd9-b468ce6ae633",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e0d6147d-23b3-4719-8c8d-67829ec5e8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44d55fe-e6f0-43e2-99cd-ef9fc3ef6222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "273faf48-f550-4ee9-aadf-19bcdce613fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "739afb9e-1c4c-4366-a0b7-b05f93663e11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49109208-728f-40dc-9456-f63a70f17bb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8a12c4c-e76e-42fa-9f69-f643ce351950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d08f410-4933-4f0c-944d-4e71963bac18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67151dab-8b44-4ac9-9dd2-5e357ec18d48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5be2a025-e759-41d4-8adc-efc4b9b72a5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "649366b6-fde8-4008-af7d-6bef7d5430ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d36a16a1-4ea4-4f4e-871a-9ec0830e86d0"
            }
          }
        ]
      },
      {
        "id": "05b91a96-32da-4c26-9ed8-2fdd57a477e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "36a32fba-bd08-4759-ab70-528f8b20d57b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ce52508-a168-458f-9585-1a041bbde7ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e515b69c-0f8e-4b57-a9e2-3795f8d28c5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a6c3a3-2e79-466a-85db-cc9f6b064d01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "041f846a-2065-4923-b82b-8eb5141c9b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63ac886-172f-4b8d-b66a-5d5217158639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0485337-4f5f-4632-9998-6175041c4843"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4230882e-1c20-48a3-830e-c0306ed1d4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55ebafa8-10c6-45e6-9553-3d651f61b512"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0f6345-6da3-40fa-bc20-56abd34f08eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd7ade47-4877-4899-8dc2-d02485b247ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1aea1c2d-29a9-4adb-8939-635886987faa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30162e97-6a53-4af2-80db-2ee207cc0cb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8a47170-59cb-400a-8c36-46b596c4f79d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bba1e7e6-b28d-461f-8494-02d57bb7c5f8"
            }
          }
        ]
      },
      {
        "id": "4b08deee-ded1-4d23-9463-5b2ce0eca4d5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cf539879-e93a-4d82-9e32-1c76fa149319",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a0ba435-a36c-4ea6-9626-b155354fb528",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a8a4e8e-99d2-4d03-8f14-e7b85589e790",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8add82-2461-4951-ad46-f533f3944949",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd980644-51f7-4ca5-932e-871e57a08c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4983a26-3000-4c7f-9b22-7382f45b758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "978c6aee-998c-41b1-b571-84e5c9cb30fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be7a2c91-fd9a-4b4e-8da5-f07ba366cf69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2793fbfc-6b59-446e-ae64-13a81b0eefb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b079838-1d92-4f57-858c-65d6d5209774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "107663c5-e307-4de3-9427-1732fd0e2d81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "291e6f78-0edf-4535-8649-3a1e9f0fda0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6038179f-6a4e-477c-a7de-0b2a1489494d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f22d9d0e-a189-440d-b976-9c27aabc4f22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a5940c4-55d2-431c-8a70-d14c0b310ac3"
            }
          }
        ]
      },
      {
        "id": "12ecd4be-9ab3-4cd6-b456-024cb98e848a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46a7cc91-2f41-474d-84a9-3a775746b704",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c9e29ab-097f-4be9-a7b1-6b4c0bc13fff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "92f980bc-0c57-4a6c-bacc-1318f9a2990e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25cf8026-d548-401a-9ff0-b671d6323378",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2d67ce0-9b1f-42de-9a45-e15dfcb4dc6c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 300.2781690140844,
      "responseMin": 13,
      "responseMax": 6824,
      "responseSd": 786.0265312527735,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692491606829,
      "completed": 1692491704165
    },
    "executions": [
      {
        "id": "5fffc8bd-8b7f-43d7-8920-91224c2781f9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e4de5853-8703-4245-a71e-1a736bdb1f7c",
          "httpRequestId": "a8dca910-3f63-45f9-8c2d-94afbf64c5cc"
        },
        "item": {
          "id": "5fffc8bd-8b7f-43d7-8920-91224c2781f9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aa9cc0ad-7c82-4840-8efb-e6b073963f72",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "7c27289f-c697-4555-a894-4bf594e92d15",
        "cursor": {
          "ref": "4a86ef1d-7377-4d79-b237-a3ee7b3c5c83",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "80f53793-8766-4d88-bf0a-6b5d0d000ec4"
        },
        "item": {
          "id": "7c27289f-c697-4555-a894-4bf594e92d15",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d2325d39-07b1-4725-8742-ac6c2f288036",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "577478f1-e459-46b0-a833-0ced31c20ef7",
        "cursor": {
          "ref": "f1dbdabd-446f-4fc2-8c6e-ff4e81b1e080",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0887a466-5138-454f-bdbc-f78298214298"
        },
        "item": {
          "id": "577478f1-e459-46b0-a833-0ced31c20ef7",
          "name": "did_json"
        },
        "response": {
          "id": "f0500b05-d424-486f-b851-57fb0b9ea6ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1273,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae678f-ca5e-4e76-a559-ca22f93ea94a",
        "cursor": {
          "ref": "6076ea44-f042-4c81-9a21-81181d0db167",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c981599c-e264-4c4b-bc84-e6b8802369aa"
        },
        "item": {
          "id": "c6ae678f-ca5e-4e76-a559-ca22f93ea94a",
          "name": "did:invalid"
        },
        "response": {
          "id": "671d79c7-4963-4435-8b07-435d288998ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae678f-ca5e-4e76-a559-ca22f93ea94a",
        "cursor": {
          "ref": "6076ea44-f042-4c81-9a21-81181d0db167",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c981599c-e264-4c4b-bc84-e6b8802369aa"
        },
        "item": {
          "id": "c6ae678f-ca5e-4e76-a559-ca22f93ea94a",
          "name": "did:invalid"
        },
        "response": {
          "id": "671d79c7-4963-4435-8b07-435d288998ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d59a0-398d-4c60-b7ad-3eacc258abe3",
        "cursor": {
          "ref": "42ac7132-f684-4023-ac12-7bde72780de0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2da513b2-bce0-4678-9391-f9de612fabd4"
        },
        "item": {
          "id": "eb2d59a0-398d-4c60-b7ad-3eacc258abe3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe1e6745-0735-46eb-b144-e4f0dde857d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 442,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a45a39-a218-49f4-a667-503dc2729a13",
        "cursor": {
          "ref": "92462aed-9e8d-4cc4-9b8b-e4395e84ee14",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "988235ba-3bf5-4e0b-af6a-966eae1c6815"
        },
        "item": {
          "id": "d6a45a39-a218-49f4-a667-503dc2729a13",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "be4ec435-6673-4ca7-ae75-7e6d5d4a5c11",
          "status": "Not Found",
          "code": 404,
          "responseTime": 267,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d0b6f6-bedf-41a4-acba-920f989b17b6",
        "cursor": {
          "ref": "a741a92f-945f-40a4-a7fb-b67d21c5b09d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8979075d-d09a-41c5-94e2-29633495f02f"
        },
        "item": {
          "id": "99d0b6f6-bedf-41a4-acba-920f989b17b6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "49c8d14c-3df4-4a98-b501-e46c34ba6fd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af14a645-9d39-41fe-a041-0325fad8f0d5",
        "cursor": {
          "ref": "4f9f93a1-535f-44d8-abb2-60acb364cd68",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b39728a5-423d-45bf-8cc3-dd0b0ed61e68"
        },
        "item": {
          "id": "af14a645-9d39-41fe-a041-0325fad8f0d5",
          "name": "identifiers"
        },
        "response": {
          "id": "29d3a7c9-c616-4900-aa74-739e45272d77",
          "status": "OK",
          "code": 200,
          "responseTime": 1155,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ad38a-53de-49cb-9c7a-da7c131ea4e8",
        "cursor": {
          "ref": "d708bb9f-1c16-4e14-9271-2656d5936d65",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c565784e-7e1b-4488-942f-ffa912e6d973"
        },
        "item": {
          "id": "315ad38a-53de-49cb-9c7a-da7c131ea4e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e61c34e-f738-4372-8deb-db798af72f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd263bec-cb65-4782-9c4f-325688fa3679",
        "cursor": {
          "ref": "250e4a35-369a-48ac-b54f-3aa674c2b978",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72f71c6d-f165-4c53-8387-1c6220c3d7a7"
        },
        "item": {
          "id": "bd263bec-cb65-4782-9c4f-325688fa3679",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "368e47e9-afbe-4dc9-a07f-8df3c652adbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46979dd-7f8d-45eb-a90d-7c26fc2824de",
        "cursor": {
          "ref": "1f7159d9-139a-4062-8cb0-f3e5a32bf66a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dea104dd-9171-4389-a824-9bcca3d17180"
        },
        "item": {
          "id": "b46979dd-7f8d-45eb-a90d-7c26fc2824de",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df975543-f7f0-402f-9165-ea02e942255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486c1ec5-76f0-47ca-9174-d74d0b22c998",
        "cursor": {
          "ref": "cbd6f0a3-0414-41ce-b6b2-3e6552f82e9e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "684a07c3-cb69-4d81-8309-c1817f767d2b"
        },
        "item": {
          "id": "486c1ec5-76f0-47ca-9174-d74d0b22c998",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1288f1f1-bb93-41c8-8cfc-fa01774ba666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6908d2a2-b671-4547-a3ee-b2e30ce9919a",
        "cursor": {
          "ref": "7a3a46c7-b815-426f-a037-7aa7741d8987",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eb57547c-b807-4c58-8f52-e78a0deb891f"
        },
        "item": {
          "id": "6908d2a2-b671-4547-a3ee-b2e30ce9919a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc962af1-3040-4172-98cd-91f1391aa151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59486437-0d9c-4c65-8d21-6f2ef600c033",
        "cursor": {
          "ref": "e53aa498-8a39-46db-a416-58b52b7910a2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "34dfe0e6-ecc6-46f1-9999-44d12f16e558"
        },
        "item": {
          "id": "59486437-0d9c-4c65-8d21-6f2ef600c033",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5224304-fae4-438e-89ae-e50d56acefc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2797177-f098-4f75-b575-883b10660808",
        "cursor": {
          "ref": "33913637-3de1-43ab-bd86-1e4dbc70bc8f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3a38c39a-ce82-45ae-9121-1dfb47d780f1"
        },
        "item": {
          "id": "a2797177-f098-4f75-b575-883b10660808",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e9cb2937-0804-4d96-a1f2-47aeb35c0acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54768836-470f-4472-9b9c-69f968e2d444",
        "cursor": {
          "ref": "3795e1dc-a873-4fed-bddc-cca559f7e763",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca63b7ae-89a5-47a5-9f60-8d2add21a3c5"
        },
        "item": {
          "id": "54768836-470f-4472-9b9c-69f968e2d444",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a7528ad-ed47-4f7c-bb1f-9a1cf3b674f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b9386c-0828-4543-9ac6-9507fb9560e1",
        "cursor": {
          "ref": "4e913a25-773b-43d6-88a4-731b0677c254",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9fbac085-ffc9-4e14-9294-5b35297d16e3"
        },
        "item": {
          "id": "78b9386c-0828-4543-9ac6-9507fb9560e1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc88995f-69b3-498d-933a-4d88b5edfbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c14ccd-25b7-4ae6-a577-5b53c653dff7",
        "cursor": {
          "ref": "30538bda-2d06-4e7d-830a-1c8b48d37345",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "31896356-1f40-4fd6-8c91-5ef38efaab7d"
        },
        "item": {
          "id": "00c14ccd-25b7-4ae6-a577-5b53c653dff7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c3df0a36-e2a8-4894-bb38-7fab76936c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda1590f-016a-4bf3-b205-5df69be07c87",
        "cursor": {
          "ref": "f132e719-1b8a-452b-9b28-0f1e549b99ce",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b06601fb-8364-4380-bf86-c76dcfd48b22"
        },
        "item": {
          "id": "fda1590f-016a-4bf3-b205-5df69be07c87",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0e69c1c9-2b46-4d9a-982f-ea7232873a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a51bc-9441-41c6-a31c-9cae5becbf57",
        "cursor": {
          "ref": "c5f4790d-38d0-4d0b-8c99-bca9c91a58c7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "781e5728-848a-4f2f-9261-0f7c22e0bac6"
        },
        "item": {
          "id": "571a51bc-9441-41c6-a31c-9cae5becbf57",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "56cf1182-b89f-449c-bfb3-1d7b2c7dc879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9bb4ab-866f-4a58-afcc-545d25be53b1",
        "cursor": {
          "ref": "15354202-d37a-449b-9b33-58032e68c286",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1c4de012-4b00-48d9-9bce-eb85edb4b40a"
        },
        "item": {
          "id": "8d9bb4ab-866f-4a58-afcc-545d25be53b1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "72b497f1-c98c-483c-9638-4980ae9fe52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b9468-1001-4aba-877d-ed5ccf4586b7",
        "cursor": {
          "ref": "dcfbe0c2-8601-44a8-b662-0717a8e5c7de",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2843d906-9742-4c99-b4c8-a749570a6437"
        },
        "item": {
          "id": "b15b9468-1001-4aba-877d-ed5ccf4586b7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c09ad6b2-24a3-4f7b-a17e-e03cf8b6a93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256183dd-e6bb-4c59-add4-5a9c790664d4",
        "cursor": {
          "ref": "0254afc2-d80d-4476-b770-4b7741004f52",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "070a8721-f5b3-46e8-a725-d709f12f5755"
        },
        "item": {
          "id": "256183dd-e6bb-4c59-add4-5a9c790664d4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d66027be-3d9e-454e-80a7-40db97efba9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f9f4e-7967-4197-bb26-8f61f249852d",
        "cursor": {
          "ref": "f6b5e9d3-9c0d-4e14-a651-634cfc40ad95",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8470d62d-7b3b-451d-b0d8-9fd3a81c1173"
        },
        "item": {
          "id": "918f9f4e-7967-4197-bb26-8f61f249852d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e1597ca-01ba-4131-8f68-4248f4836a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613d0f08-5b58-44d3-8a15-9534e0e56104",
        "cursor": {
          "ref": "45d899e7-e9f8-418b-b8fa-c6819ea84455",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a6ad0312-b68d-41f4-bd47-38a8910d0337"
        },
        "item": {
          "id": "613d0f08-5b58-44d3-8a15-9534e0e56104",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8fb7ae9b-c2fc-44f8-b331-83ea65a3aef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bf4135-d2ab-4d17-a7ef-1ac3256e944f",
        "cursor": {
          "ref": "c04706a9-30ed-4072-87f5-acbca53d8248",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "171385d8-88f1-4b7a-a266-6f9396b514e2"
        },
        "item": {
          "id": "b6bf4135-d2ab-4d17-a7ef-1ac3256e944f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e872ccb1-3ce2-4679-bf3d-71d9f367f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcae564f-6136-42aa-97ac-8cc1476d4599",
        "cursor": {
          "ref": "02462434-0496-4cde-afe3-19dabad32924",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a2e3b69d-de6d-41c9-af42-2974cca9cab9"
        },
        "item": {
          "id": "fcae564f-6136-42aa-97ac-8cc1476d4599",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "472f302e-4139-4b2f-a250-6d604af81c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4e2fe-0540-4406-9855-7f3be86dbcec",
        "cursor": {
          "ref": "cf354bcc-6484-45fa-94e6-d9cd3f1cd88a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "70f50863-cb88-4402-b6b5-8c665e3ee275"
        },
        "item": {
          "id": "fbd4e2fe-0540-4406-9855-7f3be86dbcec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "611befad-2c68-460e-b388-aef2aa55553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9115dd42-d58e-461a-9f04-70b650ee16f4",
        "cursor": {
          "ref": "4c1c3ae6-5c79-4d53-80b0-e875ec4b7651",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "366d41f4-fc8b-4520-a11d-8ef3c3afc57e"
        },
        "item": {
          "id": "9115dd42-d58e-461a-9f04-70b650ee16f4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "95e48f7c-b1d2-4d02-be85-fa55b462d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d42bd0-25ff-4ede-873b-b5e4ade4f531",
        "cursor": {
          "ref": "dd4c347e-705f-485e-96d1-773d822175a4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b7fe9dde-6a6a-4676-b94e-36e8097d2682"
        },
        "item": {
          "id": "a6d42bd0-25ff-4ede-873b-b5e4ade4f531",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4bafa3e4-f6b8-4603-a522-6c85c873ff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d115d-7ba5-44bf-9010-9cc9c3fca38e",
        "cursor": {
          "ref": "d9dd2ed2-eb9c-4b34-bdbd-dd1ba9e0da3c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "76863a52-9f34-43eb-8637-e239f98ff3f8"
        },
        "item": {
          "id": "3b2d115d-7ba5-44bf-9010-9cc9c3fca38e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b38adfa-1b3f-459b-8c9b-b79b56230271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0881bd5-7cc1-4306-91c0-76c5e68ac429",
        "cursor": {
          "ref": "43e44bc8-88ed-4452-b530-ec75b06357fb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "86d9b27d-8f4b-4274-ad74-ef8cb80cf3f1"
        },
        "item": {
          "id": "c0881bd5-7cc1-4306-91c0-76c5e68ac429",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c6ce982b-d9c6-4153-900f-904cba4e7ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3007a2f6-ef44-4434-95d7-c86488719e87",
        "cursor": {
          "ref": "d69bfe20-7f38-4c09-bee3-518e2b3015cc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7c8982cd-0f3b-4588-ab80-05679dc92eb2"
        },
        "item": {
          "id": "3007a2f6-ef44-4434-95d7-c86488719e87",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d2af0d1-3d88-4993-8b01-842856df3278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a329e-83f9-45d8-a332-592f3d989348",
        "cursor": {
          "ref": "1bac1a28-6f1f-42b4-9141-fc35300f90d9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "42daef9a-682b-43a2-877c-8a9663330c15"
        },
        "item": {
          "id": "765a329e-83f9-45d8-a332-592f3d989348",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2cd76170-9ce8-42e3-b6a3-ee0111e657d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3390885-3c68-4441-94bb-85d6683fc940",
        "cursor": {
          "ref": "0c0daf4d-234b-465e-965a-1f5cc29375ea",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "12423731-71bb-4576-9831-89b9c56a4316"
        },
        "item": {
          "id": "b3390885-3c68-4441-94bb-85d6683fc940",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e8a9e962-174a-4ab4-adfe-a9f00fa3d0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cae1a93-87fb-4b70-82b5-7b3a91981520",
        "cursor": {
          "ref": "72c29460-9ccf-4eab-b404-f8385a7254ae",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2f682a8d-9c95-4862-ac4a-9d8bce1d4544"
        },
        "item": {
          "id": "1cae1a93-87fb-4b70-82b5-7b3a91981520",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "01c2a227-52f9-4d95-9769-6f0f3474f41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a1ddf-e90e-47ef-90d6-26f401118a10",
        "cursor": {
          "ref": "e7689193-682f-41ab-a8b7-ca3ab520603d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "96e747ee-44a7-43c9-858b-a3ccf1ae82ea"
        },
        "item": {
          "id": "543a1ddf-e90e-47ef-90d6-26f401118a10",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7b201459-c212-42cc-b921-5a0a3bdff9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa70cf3-7f01-44b5-9f63-33093518ff87",
        "cursor": {
          "ref": "31892c0b-3ead-4bbc-bbd3-85e49c320cbd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cbee6cd0-cfdf-4881-9559-12691fd398f7"
        },
        "item": {
          "id": "9fa70cf3-7f01-44b5-9f63-33093518ff87",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a3ed61d1-9347-46b9-81a1-f9f2193874a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b0201-edeb-418f-a32e-6c4ba8a97e5d",
        "cursor": {
          "ref": "04aa37c3-9f5a-4f95-a23d-31ec7f555d27",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "15ae8422-3ddb-42ec-a5c8-554e0bd54d77"
        },
        "item": {
          "id": "052b0201-edeb-418f-a32e-6c4ba8a97e5d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ef450757-e9eb-4838-94c6-6909a141f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90251cd7-343b-4748-8c0e-73078756f08f",
        "cursor": {
          "ref": "2ca35cc2-a516-4b3c-a382-7f1a13d86e38",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c1a732bf-07b1-4dc7-8bac-9904d3c29fdb"
        },
        "item": {
          "id": "90251cd7-343b-4748-8c0e-73078756f08f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b9c76642-9b8e-4b4f-a368-c3498b0a0d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d81fde-0757-4480-bfaf-4f80efcfe25a",
        "cursor": {
          "ref": "c310d866-9fea-48ac-9178-71e4309d8112",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "775e7682-f07f-46b3-abd3-60342df9a06d"
        },
        "item": {
          "id": "30d81fde-0757-4480-bfaf-4f80efcfe25a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ba5ba8a2-77ea-4eac-9d3b-f2f869379246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867076be-a6a3-47d8-ab76-995dc11f62bb",
        "cursor": {
          "ref": "16a20797-2953-487b-a6d7-4164caf8019f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "12730016-b5a1-49de-81d3-d09c1dcae941"
        },
        "item": {
          "id": "867076be-a6a3-47d8-ab76-995dc11f62bb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "749736a0-07b6-45f2-8c98-f4c6af148400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ac2c4-b6b3-423e-b061-092a9d08e1ed",
        "cursor": {
          "ref": "28d0cff3-eee3-4265-b44b-9468836ec60c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9c2e2fdd-88d8-4f04-a82d-d6d923ccaea8"
        },
        "item": {
          "id": "a76ac2c4-b6b3-423e-b061-092a9d08e1ed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "72b01dd0-6448-4e30-86ff-83dd8fa0f9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e597c0f9-097b-4f6a-9104-ffccdc2ff4db",
        "cursor": {
          "ref": "4f75ad04-b5d1-4536-a77e-7b987101f933",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ff391470-d842-4710-9014-a190e38e959f"
        },
        "item": {
          "id": "e597c0f9-097b-4f6a-9104-ffccdc2ff4db",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5bc399d6-96c8-4d4e-b5e1-9751d73e4b9f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 583,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664b22a2-e414-4a52-b12d-2e0b2471821f",
        "cursor": {
          "ref": "1702fec9-c07c-4460-9925-d3938c54076a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "01e290c3-427e-42bc-9c8f-38baade750e0"
        },
        "item": {
          "id": "664b22a2-e414-4a52-b12d-2e0b2471821f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "04fd1647-30af-4aa9-826b-dc13ffbf0f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cef147-1896-4112-b8a9-b29a584e78c3",
        "cursor": {
          "ref": "058ce980-a519-4c0f-9058-10205c35dca0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1125ebe-9f8f-4b5f-9e01-07b7043787d6"
        },
        "item": {
          "id": "a6cef147-1896-4112-b8a9-b29a584e78c3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b580c1fd-8169-4e2d-bea6-2d1bbdcd4a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7125f311-05de-4548-b8ba-453fe1880fb0",
        "cursor": {
          "ref": "a6398bf8-e131-4619-befe-eb03ab46168a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84fddc44-3647-48f8-98c3-2c369077679b"
        },
        "item": {
          "id": "7125f311-05de-4548-b8ba-453fe1880fb0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5f9ed3e5-df7c-4627-b709-ec7eee5d021d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169ced20-5b23-4b0f-b05a-ad86e55b88d1",
        "cursor": {
          "ref": "2e6a2eb9-0ba6-4b57-ac3a-c686a117b7e4",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "26522f8d-f926-43a1-8185-89b1565ceb9d"
        },
        "item": {
          "id": "169ced20-5b23-4b0f-b05a-ad86e55b88d1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2871df87-c55a-468f-b3cf-ca4068c0a182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947a373-259e-4b9d-961a-f15e70e4767a",
        "cursor": {
          "ref": "b4b2af3c-57d3-46ce-9f77-d4507846d7d0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1fb63636-2287-4532-90e1-672889df0c66"
        },
        "item": {
          "id": "c947a373-259e-4b9d-961a-f15e70e4767a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "29518452-d71a-47c5-9294-6ed96d66b359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418689d-df0d-4f00-997d-4c1b07b37518",
        "cursor": {
          "ref": "27281c77-c2cc-476d-b6a1-0535e4775129",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "282cd7a9-ee60-4a2a-bab3-5bdbad6f71eb"
        },
        "item": {
          "id": "d418689d-df0d-4f00-997d-4c1b07b37518",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c71d549-b08b-4d9c-a68a-d691bdfa95a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233402d1-7f3c-4ad6-b74b-74964e399273",
        "cursor": {
          "ref": "be85131e-1dd5-4ae1-8c7f-d23d2968e574",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f0279764-9811-47b9-a12d-b7fa2e580edb"
        },
        "item": {
          "id": "233402d1-7f3c-4ad6-b74b-74964e399273",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "727e0890-6b4a-4cfe-8cd5-c94413888031",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 589,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9782f27-0756-487c-a6c5-f13b5a17642b",
        "cursor": {
          "ref": "c0562095-4954-4a14-a781-96d92428941f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3317a878-713b-41f0-8717-b8a7cc2ce8dc"
        },
        "item": {
          "id": "f9782f27-0756-487c-a6c5-f13b5a17642b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9abaf59-435a-4e5e-9a38-31b5fa47616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c797b35-9cb4-4d4f-a148-0e50766ec3eb",
        "cursor": {
          "ref": "e70282ea-3436-43e1-a5cf-d8b639361dfc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c8cf6cb4-7c5a-4629-abd7-f5f641601397"
        },
        "item": {
          "id": "5c797b35-9cb4-4d4f-a148-0e50766ec3eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1b653e5a-44fe-4074-8b57-11d863020db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0930ae2a-a6de-4bec-8fa3-3f37c1cc5bb7",
        "cursor": {
          "ref": "9596ce44-1271-489d-8f4c-706c974c09c9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5d1f663c-b276-483f-83ea-334ac608491c"
        },
        "item": {
          "id": "0930ae2a-a6de-4bec-8fa3-3f37c1cc5bb7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7e8c40ab-8382-47b3-9270-1618998760bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efebda29-53c1-47a7-beaf-d0f39acdc5d0",
        "cursor": {
          "ref": "a0cc1729-77f3-41ea-9db3-2eb2d0382638",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fbd0d8c7-33e0-4a60-827f-b7b3bfb4d878"
        },
        "item": {
          "id": "efebda29-53c1-47a7-beaf-d0f39acdc5d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "557bc7f8-f8b1-4ee4-9f27-1a00d7fcc721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525f1200-8c3b-4e27-ab3a-b6003be64789",
        "cursor": {
          "ref": "46738389-9826-4704-85a2-867a7b1321b7",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c4141898-5a81-4115-9ad5-a55844898ff6"
        },
        "item": {
          "id": "525f1200-8c3b-4e27-ab3a-b6003be64789",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b940b6cc-beaf-494c-ad33-192ee4d77a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd8b649-5f72-4515-b8e5-4ae498ca7aab",
        "cursor": {
          "ref": "31185684-7ca3-4719-bfdd-46f410e8f578",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ff14ac3a-b445-4c38-b306-ecb97ccf0cfa"
        },
        "item": {
          "id": "9dd8b649-5f72-4515-b8e5-4ae498ca7aab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72a6bbcd-c431-41e6-8923-ad5f78276abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33699703-41fe-46c5-8b94-e415cc308c00",
        "cursor": {
          "ref": "5792600d-6006-415c-89af-4ad597b6ebbe",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e377f382-e159-486f-acea-dbd92fb79cd1"
        },
        "item": {
          "id": "33699703-41fe-46c5-8b94-e415cc308c00",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4aca181d-040d-495f-b66f-f274002c5946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b0bb54-6b20-4434-9f90-5fe2a28cee76",
        "cursor": {
          "ref": "e3a6c913-fd9a-4e82-a331-083524410836",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d812eef9-0f64-4037-b864-0efed524a63a"
        },
        "item": {
          "id": "d4b0bb54-6b20-4434-9f90-5fe2a28cee76",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2b8db0d5-11f2-46e4-951d-1ff7a540b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b467a6d-4f34-4ce4-ac7e-d08e43b24e53",
        "cursor": {
          "ref": "2e95733b-48b6-4a21-ba02-95dca7989d81",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "504be6ff-0575-44de-b56a-17dc21ee53ec"
        },
        "item": {
          "id": "6b467a6d-4f34-4ce4-ac7e-d08e43b24e53",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e0f1ca7b-1bea-4d31-8cb4-9a0de5b2c609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6ef4d2-e2ad-459d-9d02-3de7f85676d0",
        "cursor": {
          "ref": "1072bc5e-1d2b-4fb9-a143-911dd82b6427",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "85d46e21-5868-420c-a747-442805bd4e27"
        },
        "item": {
          "id": "db6ef4d2-e2ad-459d-9d02-3de7f85676d0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e1740e8f-26e6-4f9c-beb0-b0617a3ea7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb0fd8-209c-46e6-8eeb-aea3dd5f3504",
        "cursor": {
          "ref": "ed215a6d-5719-4bc4-92cb-165b533b26b9",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad90589e-53a0-41c7-bc7e-058f34aa9ab8"
        },
        "item": {
          "id": "54bb0fd8-209c-46e6-8eeb-aea3dd5f3504",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8a7019eb-e2d1-4cf6-b414-b048f01d222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7355fa4-2c63-4c36-b774-831255bb48d9",
        "cursor": {
          "ref": "3f2ebc8f-2394-4c85-bcc7-72be6e7e4f3b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "62a86fb4-9378-456a-86ec-1eab12004b3b"
        },
        "item": {
          "id": "f7355fa4-2c63-4c36-b774-831255bb48d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3442c6d3-63ce-4e10-b7ab-1a62b9760ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397dedf8-904c-48ff-89c7-3f6b229ff15f",
        "cursor": {
          "ref": "013695ca-3ab4-49c8-9e12-be1d23599178",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "955e9e0a-b2df-4dbb-80b0-c3efb4a30b5f"
        },
        "item": {
          "id": "397dedf8-904c-48ff-89c7-3f6b229ff15f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "848962e9-91ba-47ea-850c-59a16aff7e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a688bac-50a0-47d1-b28d-cf8a7f6f7727",
        "cursor": {
          "ref": "7e3768ed-1f2a-417b-b956-61359a09365e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dfc8fac7-8f63-4483-bc51-865b4b40cf48"
        },
        "item": {
          "id": "9a688bac-50a0-47d1-b28d-cf8a7f6f7727",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ab53a2da-cb56-47aa-a432-15ef2c82a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49097e4-12fa-424b-be40-c5e35f2ffde0",
        "cursor": {
          "ref": "008c6eec-b2e6-4837-a773-c735fb91ce88",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0d465091-f2ad-47e8-bb74-5be43867b195"
        },
        "item": {
          "id": "f49097e4-12fa-424b-be40-c5e35f2ffde0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91a338e9-3d13-4cb2-9385-c365b452dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477f2c0b-f818-4ffd-acb2-41d63e5a1bd4",
        "cursor": {
          "ref": "6b8159f2-73c8-421d-a3a8-e531d5ecd7fd",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ee1b6e4c-566d-4a28-861f-a867da9162a1"
        },
        "item": {
          "id": "477f2c0b-f818-4ffd-acb2-41d63e5a1bd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e6d3672a-3576-4922-a720-9b80c1eb7eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b663cafb-4300-4db1-bbb4-564d5616f8c0",
        "cursor": {
          "ref": "a96dd30b-583b-4bdb-99d3-876b98ca9ea2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8cc5dadb-e7fc-48c4-b683-656bbaed6ce8"
        },
        "item": {
          "id": "b663cafb-4300-4db1-bbb4-564d5616f8c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8b6990ad-aac8-4754-b61f-0751889aab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16bce1e-a369-412e-bbd5-4cf71113f98d",
        "cursor": {
          "ref": "b4fe24c1-4de5-49fd-8a2e-09da9bf4af73",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1b59bdec-a005-44c6-b553-0a0a861a2978"
        },
        "item": {
          "id": "e16bce1e-a369-412e-bbd5-4cf71113f98d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6bc90c3-a7f2-4ef6-b8e7-7ac962abf7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7198ac06-3a6b-44b6-baf2-de01d01c5289",
        "cursor": {
          "ref": "284c093b-b555-4fd7-b9f6-4a8d02c2a427",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "deb8be82-9fb3-42eb-bb55-09e00bfa0853"
        },
        "item": {
          "id": "7198ac06-3a6b-44b6-baf2-de01d01c5289",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d4f6bad-d4da-4a2e-860d-efd2c123e914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06bf807-d8c7-4f94-8df7-8d748b82674c",
        "cursor": {
          "ref": "87e05f26-0579-4ed7-844e-3d4c42783c14",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "73daef88-6ef0-489a-8a9c-ead687d0bb9a"
        },
        "item": {
          "id": "d06bf807-d8c7-4f94-8df7-8d748b82674c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "67393bf3-94db-42da-942f-6cbc20800e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4224c09-6522-41e3-b7e6-b6b4271fd75b",
        "cursor": {
          "ref": "c127efc9-5c6c-4a5e-8ed2-63664f69b11a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fec6ef87-ca7d-460c-a4a8-6e92df57c055"
        },
        "item": {
          "id": "c4224c09-6522-41e3-b7e6-b6b4271fd75b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f34af66c-0b75-4a8b-b69a-e9c94647b000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0769f32c-937b-42f5-9278-7bfcc954e2ca",
        "cursor": {
          "ref": "27148e07-fb4f-4d68-8f68-3c606ae04f78",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "251552fc-5a40-492f-a434-de96b77b1fb1"
        },
        "item": {
          "id": "0769f32c-937b-42f5-9278-7bfcc954e2ca",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "66ff0234-6e46-4aba-94f3-d08e55e4973e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfeaa58-7671-4123-a5ff-6cff1b3b6feb",
        "cursor": {
          "ref": "aa0da768-bea1-4f9d-ade1-e0c486b4c548",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "084d2d4b-1af3-41b6-b3b6-3463c42acd91"
        },
        "item": {
          "id": "bcfeaa58-7671-4123-a5ff-6cff1b3b6feb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f5e34a47-c50b-4fb8-81bc-07a983676068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f6dc79-e43e-45ca-a959-d9c9eec6882f",
        "cursor": {
          "ref": "8be2849d-d704-4704-a21e-63be79f94efd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2a230de9-d7a2-4437-9be3-2fd95c31cdca"
        },
        "item": {
          "id": "a1f6dc79-e43e-45ca-a959-d9c9eec6882f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d994a216-401d-4825-954e-4f4307d1b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f407946-293a-4732-8ccb-46262362c9d7",
        "cursor": {
          "ref": "fc64f108-18fc-4e9b-9083-56dc2a3368a4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce81fcb4-abd1-4a83-bdc4-1f2bc2a87700"
        },
        "item": {
          "id": "3f407946-293a-4732-8ccb-46262362c9d7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f3255cf4-d969-4bca-bed2-8b360cda84d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a988bb-29fc-4a66-a043-846022ed502c",
        "cursor": {
          "ref": "db47568d-0ad7-4f56-9e47-92a0bced4cab",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4bed6c84-e285-44e4-8e0f-f1267c8cf1cb"
        },
        "item": {
          "id": "11a988bb-29fc-4a66-a043-846022ed502c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b2a4e341-ea8f-4dc8-995b-05d88ef3b837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3543e-0567-42a5-bc49-492ed77ae63e",
        "cursor": {
          "ref": "95a64d94-f479-4cb0-8e99-e13e24f49928",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68d78653-7d5f-44fb-8a65-26811f7713f7"
        },
        "item": {
          "id": "e5e3543e-0567-42a5-bc49-492ed77ae63e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3eea2bc3-1cf8-45ad-8ddf-501c5012d77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cae264b-f4f0-4be1-afea-7949327081ab",
        "cursor": {
          "ref": "94ce6077-027f-4596-b4d1-baf36c3cbe1b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e826eb0e-c308-45f7-84c1-847b0609249c"
        },
        "item": {
          "id": "3cae264b-f4f0-4be1-afea-7949327081ab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a2ea57fb-319e-436c-95e2-0e8fb5c46b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88d1f8e-01a7-49dd-a438-b5e2b191b0ce",
        "cursor": {
          "ref": "4c4edb39-2ae7-483c-b4a1-8605e37e14bc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b1d82942-85c0-4887-93aa-419f918c3ef5"
        },
        "item": {
          "id": "e88d1f8e-01a7-49dd-a438-b5e2b191b0ce",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7fd36ff1-006b-4bd5-95b4-bb8045aed6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5802b88e-4f1b-4de1-8201-c18e6d3cd41e",
        "cursor": {
          "ref": "1052f904-421b-40e9-b7c2-b061eb682b34",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad8012dd-c8bf-438e-a0a8-2c89c1f31731"
        },
        "item": {
          "id": "5802b88e-4f1b-4de1-8201-c18e6d3cd41e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f78c7222-445a-4704-9d38-b07f5683a32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a626b-855e-40f1-9981-2bb784f508db",
        "cursor": {
          "ref": "31cc6a3d-660b-40d6-83bb-b12d6a2d06bb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a55763b2-0deb-4385-ba26-ae61025b5868"
        },
        "item": {
          "id": "e46a626b-855e-40f1-9981-2bb784f508db",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "67229b0c-3c22-4410-af4a-f9e0f3bec046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e8564-ba54-47bf-9c98-6b3fa06e6322",
        "cursor": {
          "ref": "b41e702d-c8a8-491d-99b6-3c843b79ea94",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "80efa47f-896a-43b6-90dd-d465fd7fc57a"
        },
        "item": {
          "id": "ad9e8564-ba54-47bf-9c98-6b3fa06e6322",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "51c39e23-8e5d-4ae2-9c01-1fcbc886b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8650656f-3a61-48bd-b616-1c2fdb9c0ca0",
        "cursor": {
          "ref": "a319c1e8-8f97-4e4d-a1f6-ca7255f0554a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2ba4aaf6-81e7-40a2-9ee0-3879e1b37478"
        },
        "item": {
          "id": "8650656f-3a61-48bd-b616-1c2fdb9c0ca0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "21e3fb6c-d875-40f7-9316-66e5cb512ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b058e06-f1c7-44cc-a4e2-4888df78a995",
        "cursor": {
          "ref": "34dca1f0-1084-43b3-bee9-4680d167b758",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1feeb7c0-b00e-4703-be21-9b4144d092e8"
        },
        "item": {
          "id": "5b058e06-f1c7-44cc-a4e2-4888df78a995",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "29ffc059-b1ac-44e6-9e23-5f38d0403fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a2235-e661-4820-bb92-4e336bef9054",
        "cursor": {
          "ref": "38cb1ef2-d45f-4cd3-b5aa-dae8bd326758",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ecefa8b-bf96-4e84-861c-4816bbf700e9"
        },
        "item": {
          "id": "922a2235-e661-4820-bb92-4e336bef9054",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "713d097b-971a-418a-ac6a-f94b1a6eb690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3ddd07-00d7-4c88-903e-1b020d787e66",
        "cursor": {
          "ref": "2b8fcd61-f3a6-440b-8b38-77e58c735952",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8c3850cd-2b1a-4cac-8755-1280e9c3c72e"
        },
        "item": {
          "id": "de3ddd07-00d7-4c88-903e-1b020d787e66",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "240b9392-ecfe-41fb-8a3d-11106d0fd0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35d394-931d-40f4-a538-77aadd4cb00b",
        "cursor": {
          "ref": "79650f04-dd73-4a74-a197-43ae69ef4078",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "78b712c0-fca8-4778-a31a-57e32081b06f"
        },
        "item": {
          "id": "2a35d394-931d-40f4-a538-77aadd4cb00b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "95e63374-e730-4dca-8ff1-8b77ae05b0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9d68ad-ad9c-427a-9a3d-942bd927a6ff",
        "cursor": {
          "ref": "ac70da1a-3e40-4afd-ade6-0ba1df642667",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "935a0449-1a32-4589-a45a-9a368299e2f3"
        },
        "item": {
          "id": "2a9d68ad-ad9c-427a-9a3d-942bd927a6ff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7bd0c8d-b741-4210-b906-f076a44964c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaf6f41-4f9f-4e52-9cd6-bfb0299ab4a6",
        "cursor": {
          "ref": "3bfe4347-6f2b-401d-9625-167e991fcb86",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c15c931d-6123-4b2b-b728-7cbca466827c"
        },
        "item": {
          "id": "ddaf6f41-4f9f-4e52-9cd6-bfb0299ab4a6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04daa457-9b5b-4e5b-a432-ef192d6207e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e34561-cdee-45a4-b921-03edd6611446",
        "cursor": {
          "ref": "4daf37ca-c345-4156-94f2-613f13b473a3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "97ceeb78-31e6-48af-aba4-3aa7ec098c4e"
        },
        "item": {
          "id": "a4e34561-cdee-45a4-b921-03edd6611446",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cad3e9ec-243d-4429-a66f-a8a9bf1d763f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90370d69-3640-4af1-ab59-0eacff4e80bc",
        "cursor": {
          "ref": "ec9d427c-3d81-48b7-a248-fbf44c7fac27",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a6dfe61c-099c-4b4d-a283-9cd5b2962ad5"
        },
        "item": {
          "id": "90370d69-3640-4af1-ab59-0eacff4e80bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3aea3aaf-041c-4593-af06-b11d044b666c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06702e91-3ab6-459a-82cb-ac34db754b69",
        "cursor": {
          "ref": "dc58002e-2db8-40eb-97e2-234ff447e5ce",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8a038559-a1b9-48d9-843c-f0b0e2492cbf"
        },
        "item": {
          "id": "06702e91-3ab6-459a-82cb-ac34db754b69",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "136fc4bc-1f49-429e-9b1b-427820d4cc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f2fbc-9983-4d12-9bd9-7ed3c1b53197",
        "cursor": {
          "ref": "54811939-96de-4204-9b56-2ccdb63b25c1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fba06435-86b4-457b-ba6e-b6046cca1575"
        },
        "item": {
          "id": "cf1f2fbc-9983-4d12-9bd9-7ed3c1b53197",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "11d2a5c3-ea19-401d-8217-9fbe548b3a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccfbd33-3d03-4013-970c-befa3f5ad5b0",
        "cursor": {
          "ref": "bb638d02-2d02-40b1-a875-48d09160b823",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca389be7-a46f-4d6e-b8e7-62f577fb3637"
        },
        "item": {
          "id": "bccfbd33-3d03-4013-970c-befa3f5ad5b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1bea7b5a-5993-466d-aeab-9b1dac1ad80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6577949-e71b-4116-899b-0c4589742013",
        "cursor": {
          "ref": "2a2c13cf-28bf-4cc5-aae6-f1d65fada1fc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4ee7e30d-75a3-4d45-a93d-47ad4af11188"
        },
        "item": {
          "id": "e6577949-e71b-4116-899b-0c4589742013",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f258b17f-acd0-44d2-a8ad-9f5556c66b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907bc13a-dbee-407c-9b33-7c449294c2e5",
        "cursor": {
          "ref": "a2da97db-8b3f-4a23-b01b-9c040bbdb4c8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e40af6a5-6854-4c98-b9de-57da046ac26b"
        },
        "item": {
          "id": "907bc13a-dbee-407c-9b33-7c449294c2e5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "037cf73a-8fc9-4bb9-8699-e94c0cedf1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1ed68d-1cee-4a43-a5b7-1fd3943c674e",
        "cursor": {
          "ref": "2d006709-8f67-4429-96f8-d1cbd89b11b9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f22d8eba-6554-40f0-b748-fd4c18b45d65"
        },
        "item": {
          "id": "be1ed68d-1cee-4a43-a5b7-1fd3943c674e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84fbbfb2-7569-4f16-b6ad-296eaf6a9cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72be0a7a-a581-4f43-b286-9a3459abc73f",
        "cursor": {
          "ref": "3cfcf65f-b946-45d7-9e08-9a4288b6e30a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "205add36-5b11-459f-b28f-28e83265f8c0"
        },
        "item": {
          "id": "72be0a7a-a581-4f43-b286-9a3459abc73f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "475ffae3-a1d9-4386-9955-40f08bfd72ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f8463a-6716-4f4a-bc4d-5729baafea8c",
        "cursor": {
          "ref": "7d86f0d7-ce33-418a-a96e-cdecb946adcf",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7ca550b0-f9c7-4471-a00e-eb9dc7a60dd3"
        },
        "item": {
          "id": "a8f8463a-6716-4f4a-bc4d-5729baafea8c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0bad9832-57dc-457d-8ea4-00091c562c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4913de-b5b3-4444-91fa-ab2dc43e8ec9",
        "cursor": {
          "ref": "eefd1380-7aa8-49ff-a076-3799f29db161",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1346b516-6143-4a3f-92f1-064e0ab41451"
        },
        "item": {
          "id": "1f4913de-b5b3-4444-91fa-ab2dc43e8ec9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61d0e426-5af4-4853-a28e-65ad003aa993",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c1d4dc-724e-4879-9a06-a8c5160a5812",
        "cursor": {
          "ref": "cc921118-fd94-4e9e-a3fa-75d422785068",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "36e71010-4187-4c92-8735-5eb295fb092a"
        },
        "item": {
          "id": "44c1d4dc-724e-4879-9a06-a8c5160a5812",
          "name": "credentials_issue"
        },
        "response": {
          "id": "170a2e82-6df2-4536-8cfc-2e09c52ed529",
          "status": "Created",
          "code": 201,
          "responseTime": 6824,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bc0365-60a3-4a51-b9c9-cf204a2e4e2c",
        "cursor": {
          "ref": "115f280a-0cc7-4467-9f71-873eb7f42a9e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a8fe476e-3293-413d-b84a-309f9a5db725"
        },
        "item": {
          "id": "97bc0365-60a3-4a51-b9c9-cf204a2e4e2c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8c8f27e6-8ec6-4081-beca-6b9f8c8672ff",
          "status": "Created",
          "code": 201,
          "responseTime": 5712,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a59f6-b009-4785-a9af-cd00795bdebb",
        "cursor": {
          "ref": "8acbeb5c-5a28-419f-af41-8d47ca57ecbf",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "55f3a176-38c7-4017-b6fd-01622a553035"
        },
        "item": {
          "id": "7c2a59f6-b009-4785-a9af-cd00795bdebb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6da5cb7e-2dc1-47a2-bc91-9f17f52ce9ac",
          "status": "Created",
          "code": 201,
          "responseTime": 6494,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6b4c1-dd47-4e79-846e-0a60bf8213c8",
        "cursor": {
          "ref": "8e5c9103-aeca-4ecc-b096-fecf5e624f8c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed15fa86-d387-470a-b0f5-60bc5d12e5a6"
        },
        "item": {
          "id": "41f6b4c1-dd47-4e79-846e-0a60bf8213c8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1dbdcfab-1f91-47fb-9d40-0f74029e5dd8",
          "status": "Created",
          "code": 201,
          "responseTime": 5643,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56281e51-abf4-499d-bf4f-7393c718db96",
        "cursor": {
          "ref": "68ba7bf2-e299-4631-8edb-fc70e1e05c5b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "207af97e-964c-4f71-a080-396bb3350327"
        },
        "item": {
          "id": "56281e51-abf4-499d-bf4f-7393c718db96",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19b9d136-3a32-4dd8-8a6d-f3a973ccbc74",
          "status": "Created",
          "code": 201,
          "responseTime": 5198,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "486f138d-b66c-4352-9a06-0a4c730d3b3a",
        "cursor": {
          "ref": "d0356797-5fe0-462b-94bd-40aceec83ea4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1ab3eb82-9eea-47db-825c-13d11276834e"
        },
        "item": {
          "id": "486f138d-b66c-4352-9a06-0a4c730d3b3a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "48973939-c672-43e5-ba05-5518d83f0424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "73674dbd-d1c3-445b-aa28-1ea24d5a6e23",
        "cursor": {
          "ref": "5d1af478-a9d6-44f5-8fe8-97896977cc56",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c8ebc1fb-ac70-4af9-8861-df8cbe434a2e"
        },
        "item": {
          "id": "73674dbd-d1c3-445b-aa28-1ea24d5a6e23",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e16f23ea-d8d3-4efe-91b4-2da2dafb3439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faca755-a85c-415f-a845-870ad2066166",
        "cursor": {
          "ref": "0753a33d-28e2-487b-beb3-5813d48cada9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1dba44ce-e815-49ad-b6bd-11410025a9ea"
        },
        "item": {
          "id": "9faca755-a85c-415f-a845-870ad2066166",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e4ca6b60-16ec-490e-9cda-57261dba3fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ec7645-a3b6-4298-8da3-793c8aab6fc6",
        "cursor": {
          "ref": "43a069f0-be51-4d69-a697-20447dff5ae6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0765509c-9378-4970-9fc8-632c0510a194"
        },
        "item": {
          "id": "f8ec7645-a3b6-4298-8da3-793c8aab6fc6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a173adc9-753a-4ca8-960d-d9b0b3ff6254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a0a573-13eb-424e-9f14-057f688e83e2",
        "cursor": {
          "ref": "00904841-1f76-4445-9b5c-ae4b0c0d303d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ba1b0b97-0a4c-4c72-bee9-3283733bb6b7"
        },
        "item": {
          "id": "91a0a573-13eb-424e-9f14-057f688e83e2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4ad11221-7da7-4824-8a5b-f203c48695a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcdc6fe-6896-475d-bd86-ff43d34f23a9",
        "cursor": {
          "ref": "d43df108-9e4a-4c7b-9e97-8bfa6f14ea29",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "643a5eb8-0f8d-45b2-b449-5b0ce124df01"
        },
        "item": {
          "id": "5dcdc6fe-6896-475d-bd86-ff43d34f23a9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1be586fa-da6b-49bb-814a-7510cd8c1377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36c502-2286-4705-a082-547063d74c8c",
        "cursor": {
          "ref": "52d933e7-7db6-46c7-b4b3-03a84196caaa",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "39be0eb4-045f-4046-b10f-cfdb118fac98"
        },
        "item": {
          "id": "ba36c502-2286-4705-a082-547063d74c8c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "edc61b6b-f1a6-4b25-88de-6108e20e50fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01f5177-f84c-4c74-822e-73852193e46d",
        "cursor": {
          "ref": "f2d3f0e1-ebfd-459c-ab5c-39583b014e23",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c0dde294-848d-4658-b166-e16c5432bacc"
        },
        "item": {
          "id": "d01f5177-f84c-4c74-822e-73852193e46d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5db8a2d5-64b2-4218-82ce-aef58069574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4d1573-32b1-4614-a21e-658394423219",
        "cursor": {
          "ref": "ea125d33-d63a-4d72-b531-2852b0caa8ec",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2d31e12-6405-4e4d-bd14-4deba66b9518"
        },
        "item": {
          "id": "3a4d1573-32b1-4614-a21e-658394423219",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "93012518-d24c-4495-b95c-fa0b1dc7803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bad5624-bb4f-4f51-b758-3838dfcd4443",
        "cursor": {
          "ref": "ffb3494f-5507-42d8-b898-1353b13291cd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6c705583-b605-4090-8861-e479a8e41525"
        },
        "item": {
          "id": "3bad5624-bb4f-4f51-b758-3838dfcd4443",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d828260a-8a60-45a6-8a81-f77b30a536fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bebd20-b1e3-4127-9f07-7ae454e3039e",
        "cursor": {
          "ref": "d31fc8f8-544e-4d88-b932-cbb69790d778",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e820278a-50c8-44c5-ac93-92864d9af276"
        },
        "item": {
          "id": "c5bebd20-b1e3-4127-9f07-7ae454e3039e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62a2660b-adb6-4133-8aa8-0a2bd9e5ee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5247b6fb-3879-41e6-bdaa-b47a703acd44",
        "cursor": {
          "ref": "67ad7504-0391-4a0a-8cea-2fd5cea6cf1e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ea687f69-58ee-4014-8991-26ed7ee57feb"
        },
        "item": {
          "id": "5247b6fb-3879-41e6-bdaa-b47a703acd44",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed295e8a-9e81-4d07-b198-27695aa90cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b213de2-02f4-438a-a895-50e58629e06c",
        "cursor": {
          "ref": "d09873a3-fe1b-4f28-89c5-1176dc5b86ca",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a02858ff-e955-4988-8490-28296edffca4"
        },
        "item": {
          "id": "4b213de2-02f4-438a-a895-50e58629e06c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "497cd974-c1b4-41ba-9817-49255c566bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e23a9c-193d-4cf7-87bb-4656c15b4367",
        "cursor": {
          "ref": "fe5033c5-729a-4d06-ad7b-a94287f39eed",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e625603f-8c5e-49af-a516-92ee126ea2dd"
        },
        "item": {
          "id": "a2e23a9c-193d-4cf7-87bb-4656c15b4367",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a95c5656-e947-4c27-9dcf-1bca02e5f07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5649f309-c228-4b33-8bc9-b0e592139b6f",
        "cursor": {
          "ref": "586427c6-df89-41ec-b910-69dfe16f73af",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0c7c2bbb-c8d9-4687-a5d2-5c3cabbf3615"
        },
        "item": {
          "id": "5649f309-c228-4b33-8bc9-b0e592139b6f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5ef02f4-1fdc-4ddb-b522-86b6c15d834c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d60746-ba28-4e56-b994-7c9cee2de5d1",
        "cursor": {
          "ref": "c60b4fbd-bbd1-458f-9bed-c372e0e0e789",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd37975c-b6a8-4b91-ad56-cd3c1775f0fc"
        },
        "item": {
          "id": "28d60746-ba28-4e56-b994-7c9cee2de5d1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "367a1705-597d-4a4b-94ea-2151d884c904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eab983-81b3-4e07-a3fc-34fdda5f40a6",
        "cursor": {
          "ref": "9865ce27-2c3b-4fce-af72-c845d5015705",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b41f6b8-29cd-4153-90d9-d4d63008631b"
        },
        "item": {
          "id": "d0eab983-81b3-4e07-a3fc-34fdda5f40a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cab48652-173e-434c-92cb-2fd0ba8600a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4c009e-fde0-4ae2-854c-3707769edef7",
        "cursor": {
          "ref": "213aad47-8ce5-465d-8a5c-fc49f2cab64e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cd662e5f-2cc8-443d-a9dc-7813930a8b14"
        },
        "item": {
          "id": "3f4c009e-fde0-4ae2-854c-3707769edef7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5314a909-57f7-4002-b420-bf5361c4c3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad295b83-e6ec-452b-94fe-77fd444bb0d4",
        "cursor": {
          "ref": "e4c53687-adc2-4da2-9541-dfc565db2347",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bd411c30-aa42-4b81-87d8-6f249e7f3300"
        },
        "item": {
          "id": "ad295b83-e6ec-452b-94fe-77fd444bb0d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a79c6019-9d94-4c39-b064-8da5ec4931fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f06034-2354-4c0e-bb29-303c45cba27b",
        "cursor": {
          "ref": "bb8a71bc-59fa-4225-95db-c58f3822a42a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b45ba746-cbfa-4ae3-a7f2-8082c20555e9"
        },
        "item": {
          "id": "96f06034-2354-4c0e-bb29-303c45cba27b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b63f6090-5e9d-4355-a847-161f85cd0e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e717e4-0b70-48f5-9f05-d9a322df11d7",
        "cursor": {
          "ref": "409de0ae-3d49-46b3-87c3-5315486947a4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5215e9fd-3011-45fb-bfb6-9fa1f88ee51e"
        },
        "item": {
          "id": "41e717e4-0b70-48f5-9f05-d9a322df11d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4bc3447-b9cd-47c6-ac56-2d99c90b6aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e42484-ceb0-4a8c-b542-71abb1248a14",
        "cursor": {
          "ref": "ec3901ff-d649-4402-8817-3d0fd3870998",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4f3c0e5b-6fba-47ff-9e93-44ed72e32d6e"
        },
        "item": {
          "id": "50e42484-ceb0-4a8c-b542-71abb1248a14",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1a82935d-3ca6-4ddd-8fba-26834d12897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4adc0f-5e32-4b6b-8855-57b69482fc1f",
        "cursor": {
          "ref": "b4e3df02-0c6a-4bde-a62c-65f3e9375358",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "df5936b3-6813-45bd-bb24-ee5f31ead400"
        },
        "item": {
          "id": "dc4adc0f-5e32-4b6b-8855-57b69482fc1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c42fb6c7-84cd-4f5c-b57e-b2f8037bbf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571b1546-a225-4b94-b804-e1ae9dcf92b6",
        "cursor": {
          "ref": "86c532ca-932f-42ac-ac2e-ffa7f667a231",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50862ba1-288d-434c-97a4-7fcff50263b3"
        },
        "item": {
          "id": "571b1546-a225-4b94-b804-e1ae9dcf92b6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d1851fc8-0b42-43bb-9f09-67bd45bb33c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b3058-94f4-4db9-8600-e1fa12b7cbb1",
        "cursor": {
          "ref": "f75e07b7-cb6b-4802-98b2-5f2a957aff9e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "96c61b69-bd72-46c2-b4c7-4d5f79fc0c8f"
        },
        "item": {
          "id": "ae5b3058-94f4-4db9-8600-e1fa12b7cbb1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff048921-3792-4048-9af5-ad4d8d517ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dd9fee-e95f-4e56-99b4-f9524f4afe01",
        "cursor": {
          "ref": "cad3172b-a220-4f25-bab1-8fd1cec5f653",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b63a92f-de2f-4f6b-b85f-83c054cff6db"
        },
        "item": {
          "id": "b1dd9fee-e95f-4e56-99b4-f9524f4afe01",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "822d1768-497e-40cb-a5ee-1e4a40f0193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d57d0-7aa8-4407-9a91-d152d94c3cd7",
        "cursor": {
          "ref": "c0f520d4-754a-4d03-8f34-ecb51c0df629",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f95aa9ba-8a91-409d-b6cf-962905ac124a"
        },
        "item": {
          "id": "590d57d0-7aa8-4407-9a91-d152d94c3cd7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f86a9803-d3e0-4e0a-a201-fda87f9c708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b73753-c859-4b9f-8d97-f29c60821ad4",
        "cursor": {
          "ref": "d0b3d316-df80-4e86-87ac-fd03acf4d66e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e4147714-95ad-47b7-b2ce-4b451e7c5b72"
        },
        "item": {
          "id": "f4b73753-c859-4b9f-8d97-f29c60821ad4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b58bc819-063d-409f-bc2e-315d93ea8288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29690707-26d7-4af1-945c-3d5722619dd0",
        "cursor": {
          "ref": "b2c23c2a-70a7-40b3-8432-80dfb1b2583f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "137643c6-7393-479f-842d-968c8217496d"
        },
        "item": {
          "id": "29690707-26d7-4af1-945c-3d5722619dd0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd411ace-7cf7-43b1-af46-f4707606bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac74e72c-e7e5-49d4-afc7-5ba142d18626",
        "cursor": {
          "ref": "ee7a0bd6-e59c-469d-bd9d-6b8853455942",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "87bd9938-f03f-46b3-b517-d01a3807390c"
        },
        "item": {
          "id": "ac74e72c-e7e5-49d4-afc7-5ba142d18626",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8068ab57-e411-48c3-a7b4-08d21dc5dc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10020af3-dc6d-4bfc-b9c9-1d3ab768afd9",
        "cursor": {
          "ref": "cfa5db4c-6230-4e4d-b765-c19f6781c07d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04b7825e-80f3-49b7-954e-a071ad349669"
        },
        "item": {
          "id": "10020af3-dc6d-4bfc-b9c9-1d3ab768afd9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "692330a7-0521-4219-a5e0-92a77f012273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263b4b1a-6a4f-43fb-b0cf-0921d2099730",
        "cursor": {
          "ref": "40917099-c75a-476b-999a-87c4a4fd2822",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "681bca50-463d-495c-9bc6-defb8fc90130"
        },
        "item": {
          "id": "263b4b1a-6a4f-43fb-b0cf-0921d2099730",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "38fe75d0-57f1-47ef-9d31-9d1f53fc0e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab31504-b332-4b13-9bb7-d4d5352e6492",
        "cursor": {
          "ref": "1be27402-1711-490a-b97a-e2d3dabd90e9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dca72bc7-e8b6-427b-b63d-b3b78dfaa78c"
        },
        "item": {
          "id": "6ab31504-b332-4b13-9bb7-d4d5352e6492",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6be6dfbe-b6b3-42a6-a950-fc6ca1bfda7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a44a5c-97d1-4f9f-bd7e-95b2a9ce927a",
        "cursor": {
          "ref": "79282e23-a2c1-4055-8823-94dd49f1f714",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "00b77e02-d43e-4141-ab37-c6d69a4a0d1f"
        },
        "item": {
          "id": "d7a44a5c-97d1-4f9f-bd7e-95b2a9ce927a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a084901e-5e08-47f3-beef-d45036f129bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b23c31b-cfc9-42b4-a41e-dabf57ca3b1c",
        "cursor": {
          "ref": "5a9ed297-dea2-436d-8e89-c9fd6ca72bea",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3c48975c-8859-4e79-9ee4-2030c2a206bd"
        },
        "item": {
          "id": "9b23c31b-cfc9-42b4-a41e-dabf57ca3b1c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c4b3e4a-f08d-422b-841f-db0051476dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e167d0-e5eb-4be2-a86a-3d7a49ab6995",
        "cursor": {
          "ref": "011a5948-3e8a-411a-9209-67c511bc7dab",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "09c699c2-4487-4465-a823-243608f26620"
        },
        "item": {
          "id": "51e167d0-e5eb-4be2-a86a-3d7a49ab6995",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e5ee9cdc-e9b1-4dc9-9825-6e7f762a2222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774a83b-27c9-4c20-98ea-2e323168ecf4",
        "cursor": {
          "ref": "a80d2923-2932-4c3a-a5a0-8e54a122ca6f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6dcaeee5-92fd-44b0-8c4c-5379f8f4d941"
        },
        "item": {
          "id": "6774a83b-27c9-4c20-98ea-2e323168ecf4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96091b50-f8d7-47f5-8bff-80dbf4cebacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5399cf6d-c4be-4a68-971a-e7674981c101",
        "cursor": {
          "ref": "b926091e-b708-4a33-a46a-78ee5c7fc49d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "55c02fa7-7eed-446d-9180-1ee09d7b0e0a"
        },
        "item": {
          "id": "5399cf6d-c4be-4a68-971a-e7674981c101",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b97d864-c091-4150-b693-f915e0453934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a8851-2523-4102-9d6e-4c7669254501",
        "cursor": {
          "ref": "acf1bfe9-2934-4822-8eaa-c7b429aec4e2",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f34a06b-a49a-4872-8a50-265590acda62"
        },
        "item": {
          "id": "e34a8851-2523-4102-9d6e-4c7669254501",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1968f31a-8c8d-44ec-8647-252c0c366d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce67a61-f21e-42b9-8a8d-80e1dd3ef46b",
        "cursor": {
          "ref": "1a51a68c-b147-4e09-9990-ec66e8324ac7",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e3419410-635d-4c44-a134-b0fc2b1a5971"
        },
        "item": {
          "id": "7ce67a61-f21e-42b9-8a8d-80e1dd3ef46b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4bbba215-9ab9-47eb-9702-47e17e3e43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff2e817-a825-46f8-9439-16ab318e1ddf",
        "cursor": {
          "ref": "004e74c9-a447-45c0-af5d-df923501b81a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7d3634d7-91a6-40a5-b06a-e1ffd707ec91"
        },
        "item": {
          "id": "6ff2e817-a825-46f8-9439-16ab318e1ddf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d34dc7c3-e1c1-485f-b83f-2b92c3838e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cc2c59-6af7-48ca-8e84-f74ba9dd0c25",
        "cursor": {
          "ref": "3ebb4f2a-f670-4921-b976-0087bf07422f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ef1c7fc4-694d-432c-93dc-c45090c499dd"
        },
        "item": {
          "id": "71cc2c59-6af7-48ca-8e84-f74ba9dd0c25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9540c911-7e86-4011-8b03-47928e070847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e5683-4413-4fc9-96a2-3159f61f9661",
        "cursor": {
          "ref": "f9f88c01-a373-4bb5-bf99-d171a3e509f3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c86da018-9774-4594-92a3-b2133c98ac9a"
        },
        "item": {
          "id": "5c9e5683-4413-4fc9-96a2-3159f61f9661",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dccb2dd3-31e9-4c62-bcd6-4b53ca48d391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4d8c1f-5aa7-4127-82c1-cfd579483f8f",
        "cursor": {
          "ref": "e5a293a2-81fb-4fc5-83f5-99045af046a5",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "39a10b29-359e-49fb-b586-e2ddd44f54ef"
        },
        "item": {
          "id": "2d4d8c1f-5aa7-4127-82c1-cfd579483f8f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e3cd39d3-7226-4928-94bb-e110f6234975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e3dde-db48-411b-b1fd-7adda63bd779",
        "cursor": {
          "ref": "cb1ff2a4-98b9-4a5e-82c2-da3a99b94946",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "08d98682-1924-4b68-a86d-3575603382b1"
        },
        "item": {
          "id": "cc9e3dde-db48-411b-b1fd-7adda63bd779",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8aab48e7-1242-45c6-b3e6-7c160eebd6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41bdf24-23fc-4d6b-a1da-ef42c8a9bb22",
        "cursor": {
          "ref": "d237b0b3-a333-44f0-8519-057f8ea7c9ae",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4f48fc3f-04f1-4355-9556-d7bfbb74dc8a"
        },
        "item": {
          "id": "d41bdf24-23fc-4d6b-a1da-ef42c8a9bb22",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96deebbb-ad89-41b4-9c61-7625829f596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192d38d-9511-4437-aa17-a5fa4db0bfc7",
        "cursor": {
          "ref": "5e3bcd53-75fa-4a9d-a9f5-09c48009d79d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d49b849b-0530-4cf1-aeed-72b6e9212446"
        },
        "item": {
          "id": "6192d38d-9511-4437-aa17-a5fa4db0bfc7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49a48c6c-b50e-44fd-8e4b-5803625f5847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088b6e4e-d666-40f8-bc32-4feb1cd50d75",
        "cursor": {
          "ref": "abea72cf-bff3-4613-9d44-f9e9daec3cc4",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c31adcdb-ea56-4348-80c5-51ac07df1a5e"
        },
        "item": {
          "id": "088b6e4e-d666-40f8-bc32-4feb1cd50d75",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f08e8dd3-2e00-49c8-8bab-27047e9fd6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ff7ae6-990c-4fee-bbf1-9ecf8f4f9e0f",
        "cursor": {
          "ref": "dcf42d0a-30db-46a1-ae40-fcd7df475f1a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e34341e6-59f5-4583-9912-0a70dd6e6ff5"
        },
        "item": {
          "id": "32ff7ae6-990c-4fee-bbf1-9ecf8f4f9e0f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4bb6e81c-f0a9-4526-9a76-47cdb8f4cf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b55036-1c22-44b1-b568-1a74501b0feb",
        "cursor": {
          "ref": "ddd1f718-e2e6-4b09-a918-1471537d197b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7fea8510-ad4b-46a8-a386-39bac81829d4"
        },
        "item": {
          "id": "78b55036-1c22-44b1-b568-1a74501b0feb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2563c43d-59cf-4f44-904b-2334d9d7bd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d44428-4692-4dc2-a848-b52ea3158e9e",
        "cursor": {
          "ref": "d4eb9028-a1ca-4fe8-a490-d3d5f25bcd9f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b357c3c-8506-41b5-9fe7-b1998a57dd89"
        },
        "item": {
          "id": "f5d44428-4692-4dc2-a848-b52ea3158e9e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "29d26a9d-d4a7-4231-a0d0-c9d93343e2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb692ec-09a3-4e53-939b-9f6faca7ad16",
        "cursor": {
          "ref": "5d246c2a-4871-4689-9c3d-519b497f563f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cca987a3-ba4e-472f-bb85-d169fcda6cc8"
        },
        "item": {
          "id": "3bb692ec-09a3-4e53-939b-9f6faca7ad16",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0397c5e-e890-4971-a96a-987ed280da71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3edca6c-b91f-4130-9046-71e83c4d1f23",
        "cursor": {
          "ref": "c1da7648-c719-452d-b034-3e1903ae5a52",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55c6e78a-7278-469d-81f2-861bcdc9b2ff"
        },
        "item": {
          "id": "d3edca6c-b91f-4130-9046-71e83c4d1f23",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "616838d5-6b90-4cea-858e-c61cc11ded2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749ca67f-300a-4e9b-8347-bf9edcd0bb75",
        "cursor": {
          "ref": "a944953c-f217-430d-9687-71e57e501c9a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4f5da49d-fc04-4e15-a9f2-be0cb759ceb1"
        },
        "item": {
          "id": "749ca67f-300a-4e9b-8347-bf9edcd0bb75",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39ed62a2-9947-46cf-bf73-11c3bd01e23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b1b11a-dad7-4062-8aa5-0d23f4d60788",
        "cursor": {
          "ref": "b0239a39-864f-4e70-91ff-e18f34d46165",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1dabc717-5109-44d1-872c-ebe1cb995d94"
        },
        "item": {
          "id": "08b1b11a-dad7-4062-8aa5-0d23f4d60788",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f9e7dbbf-5e24-4415-8bd5-0b603c1e2742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f473169-1765-4788-a0bc-d568cee9c06c",
        "cursor": {
          "ref": "ff126ef7-f0b2-4638-8bc2-e6bea8ef1e1d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1b1049f4-0924-4e96-b6d0-e8a55315bb86"
        },
        "item": {
          "id": "5f473169-1765-4788-a0bc-d568cee9c06c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "44384f38-31ea-4cc0-94fa-7a71fe36373c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ac1b0-10b3-499b-9df2-af6ee52a60de",
        "cursor": {
          "ref": "2bdbfb19-87d4-46cf-908a-f5ea81566cd1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "793c06d0-8653-46ad-a19e-da1f4d2d96eb"
        },
        "item": {
          "id": "a48ac1b0-10b3-499b-9df2-af6ee52a60de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "94a72bc9-2db1-4a36-b590-43056861a37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a9e04f-e44d-47fe-a0a4-bdec9a2216f4",
        "cursor": {
          "ref": "222dcaa4-ec1a-4388-9261-375ae13fe6b3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "15aa5600-bcb8-4faa-b4c2-e96c6f5d350c"
        },
        "item": {
          "id": "e3a9e04f-e44d-47fe-a0a4-bdec9a2216f4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f193543-cdaf-4f5b-89b7-07d86797f608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a7d6d-f225-4d25-96a6-3084db046292",
        "cursor": {
          "ref": "51cf0fd7-7eea-4b47-8966-9914694f2d7a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f8d34e72-40af-41c5-95e4-07b6ef250a09"
        },
        "item": {
          "id": "281a7d6d-f225-4d25-96a6-3084db046292",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d32e75e8-b939-49a6-b086-a6cd8e1a2b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c21511-f56c-4617-a83f-64c9e116054c",
        "cursor": {
          "ref": "f36c4b40-33fc-4035-9b07-30a7ddeb0e9f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db40f52a-a308-44d3-ae1e-169bc08f9ea3"
        },
        "item": {
          "id": "e4c21511-f56c-4617-a83f-64c9e116054c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "95ef3988-6d04-40a1-b141-86fc90590d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a0f24-73c7-41e4-b5d5-b5f43bf42d1d",
        "cursor": {
          "ref": "8de6299d-8b60-48c6-a40a-f7538dff0dbf",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "509c2dbb-f1d6-4312-b9bb-ae1e3781c7b7"
        },
        "item": {
          "id": "705a0f24-73c7-41e4-b5d5-b5f43bf42d1d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a4384a5f-7aed-408c-8da6-f8bdd16fcca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67901221-266e-4ba3-9619-0fdc860813b5",
        "cursor": {
          "ref": "a6733875-8cd5-458d-b890-ea199a57b5b7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1350971d-589b-492b-87db-0d1ce62167a7"
        },
        "item": {
          "id": "67901221-266e-4ba3-9619-0fdc860813b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a498129-d3ed-4300-97fe-e01e84d0d3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bb095d-5a25-4702-a90f-17e4cf159d5a",
        "cursor": {
          "ref": "10c4aa96-a274-4a63-93f5-9d705cb903ff",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4dc04242-6db7-4828-8aab-018f3feab1a3"
        },
        "item": {
          "id": "f7bb095d-5a25-4702-a90f-17e4cf159d5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b3b555d0-9678-47c2-893c-fcaeca596170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59295e57-ef97-47c5-bf84-985453069e0c",
        "cursor": {
          "ref": "24235667-eab7-4fa2-9d07-aa29074732e4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0918daf7-55c0-4935-92c2-18ffc25d9055"
        },
        "item": {
          "id": "59295e57-ef97-47c5-bf84-985453069e0c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9e5f90e6-7824-4b14-be7a-9c008637ad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd164e-b614-4911-b70b-7334a38224b0",
        "cursor": {
          "ref": "ba1dbae2-473d-4d93-b429-c3f88d4ceb6e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8983e01e-e4ab-46a0-8b43-d20bd16c2170"
        },
        "item": {
          "id": "62dd164e-b614-4911-b70b-7334a38224b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8ada84b-2aab-4a44-9dee-f06c6543cc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d69cde-e2df-4fd3-950c-4316b3aadf48",
        "cursor": {
          "ref": "e076f414-77c4-452b-bfa1-edf0ec9332ae",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "708a872d-04cb-4eed-ae60-4ce320fafb92"
        },
        "item": {
          "id": "d6d69cde-e2df-4fd3-950c-4316b3aadf48",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "81968b21-3ca8-4238-91fa-507076c2f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec104e2-c78e-4803-b176-201c56a58dbf",
        "cursor": {
          "ref": "198ad263-9dac-4b76-a2c1-8104ab6c599f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f6bc797a-39f1-42ff-b77d-c939f96cf380"
        },
        "item": {
          "id": "4ec104e2-c78e-4803-b176-201c56a58dbf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "66f68800-9eca-4d86-8577-a79b17e80e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768c4481-64cf-4c3b-8cfc-f6fb65d1391e",
        "cursor": {
          "ref": "9d1ade3e-aad0-4401-9057-520f59ca8dfc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aa8838de-4658-430d-b43d-b1b59f94144d"
        },
        "item": {
          "id": "768c4481-64cf-4c3b-8cfc-f6fb65d1391e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aa25b5fc-5553-4323-ae5b-2d8d286530d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41739226-da81-43ee-ac48-639376c13774",
        "cursor": {
          "ref": "62e0d260-9fec-4904-b84f-6f9e9c12e3cf",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e309b14f-d246-4a37-9cbc-4ba8c66d2d30"
        },
        "item": {
          "id": "41739226-da81-43ee-ac48-639376c13774",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "31f9d6e0-49c8-48f3-b6d3-00e6e8ab7884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21267574-70c4-4674-b5ac-97e258b5fdbc",
        "cursor": {
          "ref": "7555cf94-c5b4-4998-804c-bc16bf3bdb3d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07a137ba-e811-44af-b1af-107a3b0c576a"
        },
        "item": {
          "id": "21267574-70c4-4674-b5ac-97e258b5fdbc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "381ecf60-b65c-422e-88cf-9f7f9a8b56dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a560c744-a65b-4aa7-812a-3455f34aa5b5",
        "cursor": {
          "ref": "e7f4595b-0652-4cbf-8fae-eee56623aceb",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6427512f-686e-4f60-9266-9a4a8cab00eb"
        },
        "item": {
          "id": "a560c744-a65b-4aa7-812a-3455f34aa5b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e2ff358a-c8b2-42f2-b662-4fadca9dd19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2ae9ac-bfbf-4601-bf48-c53604efe41e",
        "cursor": {
          "ref": "99b3d53c-0d76-420a-9938-fef63be39950",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "365d8c72-9bf0-493c-85e3-8f23f6380cad"
        },
        "item": {
          "id": "dd2ae9ac-bfbf-4601-bf48-c53604efe41e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a9a2195d-5cbc-4668-9835-84f0c2925e2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a3cfe3-5c5e-4fc1-b169-7f70c13b12a2",
        "cursor": {
          "ref": "3204716c-d730-47e7-97c4-c850bed2c4a8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "edcde6f7-a58d-4f8c-aada-51e9eb6d8efb"
        },
        "item": {
          "id": "c1a3cfe3-5c5e-4fc1-b169-7f70c13b12a2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6fffe3ad-0523-45d2-a658-b098eda4fb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35c90d7-d38e-47f8-9b27-f1f5eb0437ba",
        "cursor": {
          "ref": "d1efdf72-c010-4bbf-88da-201fee72d14f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eecc48cc-c28c-4fc8-b082-36f24f2ca512"
        },
        "item": {
          "id": "e35c90d7-d38e-47f8-9b27-f1f5eb0437ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "420cdfad-2956-4333-87ec-3196d0fb07a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00e55b2-2999-4cd6-af0b-3d14bcb9852e",
        "cursor": {
          "ref": "dbcac0cc-e245-4e43-9b9e-bda84e7678b0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d203058-0bac-4dea-ae84-5e0e1c70fc07"
        },
        "item": {
          "id": "c00e55b2-2999-4cd6-af0b-3d14bcb9852e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "49374844-0ca5-4d6f-a03b-1488b1cd12e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2666bd46-b33f-4ac6-a0d8-7642d21ca6ac",
        "cursor": {
          "ref": "c4bbeabe-b214-4b6e-b704-66094aef5c2d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22837f42-bc6f-4c47-ad53-50fc2042127b"
        },
        "item": {
          "id": "2666bd46-b33f-4ac6-a0d8-7642d21ca6ac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "852159f6-fe36-41c0-a2b4-dbddfbef1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d925764f-6de4-4bef-87cf-f9e0d918ed74",
        "cursor": {
          "ref": "84daeba5-8711-4c07-9a71-588181a96547",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3481072b-a51a-4070-bff9-5a4440eb07b3"
        },
        "item": {
          "id": "d925764f-6de4-4bef-87cf-f9e0d918ed74",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7259a23f-9b8c-48db-a554-2298a6975270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe632222-004c-4bf2-aea4-366e4a577949",
        "cursor": {
          "ref": "88b3f850-2af3-46cd-8637-bf030162c30a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a5ccd20-9e78-41c1-9868-55e561a0dbbf"
        },
        "item": {
          "id": "fe632222-004c-4bf2-aea4-366e4a577949",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d88a6070-66c4-4cb5-9a15-eb312c54f677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04d1be5-6a79-4675-99d5-57bf92f305ce",
        "cursor": {
          "ref": "9fe7311f-bda4-4ab2-8928-463495fb36b3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f4ec50f1-06bd-4418-9fc7-6aae83b7b04d"
        },
        "item": {
          "id": "b04d1be5-6a79-4675-99d5-57bf92f305ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "51ebd645-fc2b-420e-b954-6767a0e446d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ebc7c5-5a0b-4242-bcfc-16439f94e793",
        "cursor": {
          "ref": "69778f6a-919d-4939-9641-f9f497a888bf",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0ea48e4d-f5a7-4333-b26e-9124baa87d48"
        },
        "item": {
          "id": "40ebc7c5-5a0b-4242-bcfc-16439f94e793",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "92815bf4-cf6c-4e1f-9f47-c16391e88b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9efaf7-50fe-4b16-a70b-04de308b8db6",
        "cursor": {
          "ref": "3dd08df7-5793-4dd0-8d24-150b8d1b4e01",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7cacd1b-b770-49c1-8f74-a4e659384f2f"
        },
        "item": {
          "id": "2d9efaf7-50fe-4b16-a70b-04de308b8db6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa77eb71-2d53-4eb5-9865-aa7a493dfaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ec31fa-b826-4a71-99de-9a4e60c9a0ac",
        "cursor": {
          "ref": "ee9d50cb-ab42-4b61-b2f3-a0b02eb7a13e",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff4c93a9-e8f0-4208-a5e9-07b797076796"
        },
        "item": {
          "id": "d7ec31fa-b826-4a71-99de-9a4e60c9a0ac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "76651345-e847-45b5-8d9c-c07a00730a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfe59f5-3068-478f-a3b3-10403b1fb8a8",
        "cursor": {
          "ref": "31b38bf5-90e0-439b-845e-50e80145630c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8044fcb6-e3db-4752-8028-3d3b046f78bc"
        },
        "item": {
          "id": "6cfe59f5-3068-478f-a3b3-10403b1fb8a8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f270e281-6998-44a7-ab46-328d69731e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b31bcd-b074-47a2-9cfe-a4f8c6f51833",
        "cursor": {
          "ref": "88ba9883-8f03-49d3-8f02-ec290efd43ef",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c739e02e-0d49-4ca8-8555-bcc8c5d3e626"
        },
        "item": {
          "id": "f0b31bcd-b074-47a2-9cfe-a4f8c6f51833",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3496000f-6bd3-4ec9-bc28-96e7f2c3e4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db7b732-935d-407c-bd91-01a080a868b0",
        "cursor": {
          "ref": "b6d6f592-7d1a-4839-ac86-08e5bfefa114",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05ab2bcb-4352-4662-a9cd-529aa1facb28"
        },
        "item": {
          "id": "0db7b732-935d-407c-bd91-01a080a868b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a2388252-373b-43e6-82dd-dd91ea0736ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedfbb34-0b9c-4d0c-a402-d8cb30b80e7f",
        "cursor": {
          "ref": "17eaf254-b43c-4d84-8cfd-e2de573b2788",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5ddee094-29de-4033-ae6a-ea63829948b1"
        },
        "item": {
          "id": "bedfbb34-0b9c-4d0c-a402-d8cb30b80e7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3ef7e785-86a1-40be-899a-624d28502862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e770b9a1-8306-411a-a68d-9a2edc0cc590",
        "cursor": {
          "ref": "a6668a65-a4c5-45c7-b20d-6136a19f451d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ceb9a9e9-ff5d-4a28-b50c-32642fd01612"
        },
        "item": {
          "id": "e770b9a1-8306-411a-a68d-9a2edc0cc590",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "572a9265-3e22-4b56-8f03-166f016603be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e99826-720e-4081-acf5-54dfd515cdde",
        "cursor": {
          "ref": "0e33a24b-825c-4986-b238-344b05cacada",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e293290-de24-490c-91fd-82b98313289b"
        },
        "item": {
          "id": "90e99826-720e-4081-acf5-54dfd515cdde",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "02a1022a-623c-4d1a-9461-4dfeae143c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00907c3a-b28b-4b4b-858b-f964e7f325b6",
        "cursor": {
          "ref": "4a97e961-3da2-4ecb-8b2c-9df8e9a09ce6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1e9ab18c-bc6d-4c76-9c40-8066a94ac9fb"
        },
        "item": {
          "id": "00907c3a-b28b-4b4b-858b-f964e7f325b6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e8a4b36c-2180-4060-96ff-2d21b16b9408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d958d4-09ee-4c8b-97f0-885a96db0532",
        "cursor": {
          "ref": "57964b7a-0082-4328-a5b0-49a048e8f258",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f48987bc-0f4a-4da1-96cb-21d3f29a775e"
        },
        "item": {
          "id": "42d958d4-09ee-4c8b-97f0-885a96db0532",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9ae36168-02ea-45b0-8b41-533ccf995a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c71b991-4d8e-4a5e-9d0d-8db81847702d",
        "cursor": {
          "ref": "e82b4238-7424-4302-98b6-2fc3dbc537eb",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2979b75f-7d45-4600-8330-bb9ad803e8dd"
        },
        "item": {
          "id": "5c71b991-4d8e-4a5e-9d0d-8db81847702d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "56221438-6e05-45d7-86f4-e7b07f9c8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bab789-2c97-4e75-ac94-ea7be68a34b0",
        "cursor": {
          "ref": "d280e795-eef4-4cdf-850e-c035d40d7558",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d7dac1a4-06d0-495a-a153-85ed58a64896"
        },
        "item": {
          "id": "b8bab789-2c97-4e75-ac94-ea7be68a34b0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67255903-852b-4238-b4ef-06ad99ef2c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d27933-dfb3-4eef-a309-2e28489c6a06",
        "cursor": {
          "ref": "70940993-2e58-46a4-9c0f-718f8e0b046b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "050c012b-402f-4d14-a8dd-b283c7405119"
        },
        "item": {
          "id": "61d27933-dfb3-4eef-a309-2e28489c6a06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6f5faf55-6974-4d93-9972-d0e7e831b7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1fdcb2-b852-4055-a271-8cfa61af7a98",
        "cursor": {
          "ref": "ac795046-1047-4eea-8307-ceac8c147abe",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e8003eee-afaf-48a4-949c-8fbcd03f455d"
        },
        "item": {
          "id": "bb1fdcb2-b852-4055-a271-8cfa61af7a98",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "05ec77ec-db52-473c-a279-933bf43b0728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c4c242-591c-4f92-a8c1-0005ca9fdab9",
        "cursor": {
          "ref": "285c4333-e9e2-4773-bd71-f7d739d94a2e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "14a38451-24d7-40a2-8ded-224da750e436"
        },
        "item": {
          "id": "78c4c242-591c-4f92-a8c1-0005ca9fdab9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a16a2dbb-3e4c-4053-a79a-291ebd36f608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8ef7eb-bf0f-4b06-bcb5-6fe2bc3acb5d",
        "cursor": {
          "ref": "9c299dc1-92ff-490c-a416-40f74d63ec7d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6e9bc82d-893b-49ce-8831-18a79b1aefa2"
        },
        "item": {
          "id": "3b8ef7eb-bf0f-4b06-bcb5-6fe2bc3acb5d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4920a6ab-05cb-44b4-93f5-e7d4facc8706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89af2d5-e887-4897-a23a-e3f893405281",
        "cursor": {
          "ref": "c643ec4c-e495-4800-a6f0-65bc31f716af",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c0d4f959-f77c-4690-af7c-a8a9c6f67426"
        },
        "item": {
          "id": "b89af2d5-e887-4897-a23a-e3f893405281",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68d3559a-fd0f-4aee-b563-2eb7907189b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9212b2-34a6-4d0c-9abc-a4c36fa2db2f",
        "cursor": {
          "ref": "aa71b8f7-114d-4ffc-b7e7-f040ba6942b3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a97689f9-e4fa-47c4-8f03-02dc89d7510a"
        },
        "item": {
          "id": "ee9212b2-34a6-4d0c-9abc-a4c36fa2db2f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9e865016-a214-4a40-be97-aa94a5e60d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62cee71-9264-4318-8358-d3faa839116d",
        "cursor": {
          "ref": "6d1d027c-33f1-4f68-b632-d129997c1687",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1755ac4a-6f4d-407b-9cca-8dd9290a6d9e"
        },
        "item": {
          "id": "f62cee71-9264-4318-8358-d3faa839116d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cd9962b7-6a54-4ad5-90a2-d4795ce84770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c049a79e-1c84-4c20-9f3a-c66e4040fe81",
        "cursor": {
          "ref": "0b218871-18e1-4941-b596-3db84d637eaf",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e322b5fb-5026-417a-81a3-4a9d2ff6e3e3"
        },
        "item": {
          "id": "c049a79e-1c84-4c20-9f3a-c66e4040fe81",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "403f933e-2cd0-41c4-bb3b-1fc0611fc5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8145f2-b6f6-4e88-997a-23e1922fe34d",
        "cursor": {
          "ref": "959d7642-3264-45e3-8128-79e73dc78541",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3196780c-202a-4b88-89d1-8d10539ab32f"
        },
        "item": {
          "id": "9b8145f2-b6f6-4e88-997a-23e1922fe34d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4309430e-2cc3-4fea-9d1f-c4f8cf20da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed55956-5a2e-4769-b050-5c35098e6947",
        "cursor": {
          "ref": "110618b3-9b29-4a9d-9724-9ac026947b9f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f2a67578-68ac-4b49-9094-5a8db9d308b7"
        },
        "item": {
          "id": "fed55956-5a2e-4769-b050-5c35098e6947",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cd332244-be5f-4b38-a902-3a87536ce20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb7ff3-0ab4-4e40-b782-25e5910fb397",
        "cursor": {
          "ref": "15eb23ad-8108-459a-96aa-5aa0daa12892",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8da814cb-5c89-47fc-8771-a49938aeb72e"
        },
        "item": {
          "id": "c2bb7ff3-0ab4-4e40-b782-25e5910fb397",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da32dcac-f1b0-48ac-b8f6-150703b9ed12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a4b0d0-525d-428c-a3ad-4de6e59a152f",
        "cursor": {
          "ref": "9e67a247-801e-4b72-a2d9-1906bb2f69d0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1c5029f3-937c-472e-b016-2058f2b16017"
        },
        "item": {
          "id": "85a4b0d0-525d-428c-a3ad-4de6e59a152f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c2f801c4-61d6-4628-ab3e-b293e1fa0ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8131c6cf-0a66-4dc9-b56f-145d38ca84ba",
        "cursor": {
          "ref": "8c2f9c6b-ef86-4bf7-a1fb-5a9cfafd1155",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "671c7c35-5159-42cb-9b35-5cc0055c3269"
        },
        "item": {
          "id": "8131c6cf-0a66-4dc9-b56f-145d38ca84ba",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "486a7a12-8100-4ec7-b6b4-532568a28a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e043d13-4669-4f39-b8d8-93ff2645bd06",
        "cursor": {
          "ref": "e61d50f0-5bb5-4156-af5d-edc4d6d44cef",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d99bd8f1-f05c-4cfc-a2ba-8881c9e23167"
        },
        "item": {
          "id": "4e043d13-4669-4f39-b8d8-93ff2645bd06",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e01716c8-5272-46ed-9518-a9158b60ea6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f44c8b-4dbf-48a6-afaf-b3905e88ce72",
        "cursor": {
          "ref": "d01b462c-b12c-419a-8d5b-3d76461d6763",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "953914b7-2203-482a-b72c-c6bf843e05bf"
        },
        "item": {
          "id": "d2f44c8b-4dbf-48a6-afaf-b3905e88ce72",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b95f1c03-2a89-45d1-9f37-49a981b9cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c699be47-c2cd-484c-880e-d8f5e608c102",
        "cursor": {
          "ref": "ce9fc075-8bf9-4223-8ae0-bfee5e48bb4f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a366d76-d550-4e66-aa8a-4209d9a82551"
        },
        "item": {
          "id": "c699be47-c2cd-484c-880e-d8f5e608c102",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9a64b9c4-0170-46e4-b589-83ae8ce48ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09395105-4cd2-4b14-b226-120b6731a5c0",
        "cursor": {
          "ref": "01eebff7-ac1d-4a95-bd46-7aef645b862f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "54e5e8c1-7665-4784-b3c1-9cf3d0091d1a"
        },
        "item": {
          "id": "09395105-4cd2-4b14-b226-120b6731a5c0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d7bf847-b05d-4468-9365-1c421585b9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae666ad-0ed9-4830-95ff-1fba0f43fabc",
        "cursor": {
          "ref": "5626c4c7-6106-4622-bb45-fff9c51808fe",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fbe59ed6-3b16-4e2e-a949-6c520c8d619a"
        },
        "item": {
          "id": "fae666ad-0ed9-4830-95ff-1fba0f43fabc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2a38435a-25d6-479b-820c-4e06197cacf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782264bc-5420-47ab-b5da-d52f55f88507",
        "cursor": {
          "ref": "bfef0d31-0d91-4714-ae0a-a3da2f6b5f2e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "41e9c321-1e30-4777-b3c4-0c9182ace6c8"
        },
        "item": {
          "id": "782264bc-5420-47ab-b5da-d52f55f88507",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "95c64e66-8ba3-4e01-9719-db39c6549115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d47a923-01e9-4fcc-a2c4-25af76cc1e85",
        "cursor": {
          "ref": "ab2dafee-0aaa-44a0-8594-4022d2964ba6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3023d1e5-59c5-42ea-8ea7-1f13a3243e8d"
        },
        "item": {
          "id": "8d47a923-01e9-4fcc-a2c4-25af76cc1e85",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "327bc9eb-9e33-4c5b-9722-d9e4c648fc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d35a2-86c6-4a9b-b7bd-3edf848fe739",
        "cursor": {
          "ref": "3f3d97ed-bb95-42af-81eb-55880d26fc24",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f3f5c4d-84b0-455e-8095-7649f635fb29"
        },
        "item": {
          "id": "452d35a2-86c6-4a9b-b7bd-3edf848fe739",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "78c41bb6-e206-4cb2-9273-ca39311fe735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e04de7e-f605-4f11-8561-c8f78c0bdb2a",
        "cursor": {
          "ref": "692f1508-1685-4c3a-9e16-2e2fbe99e1fa",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7376dfa0-087c-4615-8390-a2974d74a1fa"
        },
        "item": {
          "id": "0e04de7e-f605-4f11-8561-c8f78c0bdb2a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "39f2a07a-6d85-467a-8369-2864ccadeee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3359a550-b7dc-4e39-b1d8-4dbadf5b0ae8",
        "cursor": {
          "ref": "e2f404c3-4a26-40e6-a841-b13faeba6069",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d720c328-515d-4db8-ac67-c614107aabe7"
        },
        "item": {
          "id": "3359a550-b7dc-4e39-b1d8-4dbadf5b0ae8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c54d81c-ea87-4085-a838-16ade4a05229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806ce1e4-4351-4f73-8771-65ff07197263",
        "cursor": {
          "ref": "26aa61a3-5e9c-4e3d-b704-4d4e450ad1da",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0f08d9d3-7a0a-4707-8697-ca8290d2867c"
        },
        "item": {
          "id": "806ce1e4-4351-4f73-8771-65ff07197263",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd964d80-f04c-45a0-917c-71a885a567be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e90b5b-5a96-4317-b0c2-2ff652f1219b",
        "cursor": {
          "ref": "48f969e0-eba5-4c5c-80c5-4024034a4a84",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e5185d3f-594e-4337-855c-62a73ad989df"
        },
        "item": {
          "id": "75e90b5b-5a96-4317-b0c2-2ff652f1219b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96e9cc90-7cc1-4349-aae4-be30d0239187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716bae30-e5ac-477e-8c00-8381b7967940",
        "cursor": {
          "ref": "3aaf1175-3f5c-484a-8951-6dd038ff8981",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d53a3dc3-4320-4204-ab86-55b7043f7297"
        },
        "item": {
          "id": "716bae30-e5ac-477e-8c00-8381b7967940",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "730e779c-31a5-40d2-acc4-019a34ab2b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f20ac9-c55d-4259-89b2-e8a502d5d4ef",
        "cursor": {
          "ref": "4dbcc9fc-f271-4407-9a3c-b9e361a5d135",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0f1b7df7-799a-4dd5-beb0-069ee37bffce"
        },
        "item": {
          "id": "03f20ac9-c55d-4259-89b2-e8a502d5d4ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "50a2ff3d-22bd-4f33-9d68-ba30447ebb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a09837e-f357-41d4-a92a-057d66f2b377",
        "cursor": {
          "ref": "c22938be-d8fb-4c98-b3f4-a5aac7de17b7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b5aaeca0-9332-4345-b49f-c454e569b996"
        },
        "item": {
          "id": "0a09837e-f357-41d4-a92a-057d66f2b377",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cfbe2023-9271-4c3a-b97f-28f5bf68c956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb537339-3a28-4cb0-a5b2-5c54054ccfb9",
        "cursor": {
          "ref": "75d8fc3e-8380-4cd4-bc65-e5faed9198dd",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa973ae2-0e6b-4b4c-a2cb-8b045b9c87a1"
        },
        "item": {
          "id": "cb537339-3a28-4cb0-a5b2-5c54054ccfb9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "260d1248-9e7d-4150-a3f8-0d3e28624151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fd1868-e33b-4bad-9949-181c1584b074",
        "cursor": {
          "ref": "94664d11-2961-413c-9b62-359e99005a39",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1aaab672-b4f7-4210-819c-87cd6a6099a7"
        },
        "item": {
          "id": "65fd1868-e33b-4bad-9949-181c1584b074",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "22f3d73c-776c-4a06-b7a1-c52cff31816f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad18f7b-59c7-459a-84e1-e03749c60f20",
        "cursor": {
          "ref": "800cb39b-f6c6-44d3-9d43-c26fd6ceed68",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f47c28e1-80e5-49c5-94e2-1821cbc45f9d"
        },
        "item": {
          "id": "4ad18f7b-59c7-459a-84e1-e03749c60f20",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ee66807d-5a97-4e67-ab80-9c2f7071d398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beba4dd-f12f-48f1-bbf6-a9b89b7609bf",
        "cursor": {
          "ref": "e343f238-50f2-4b2a-9c77-6f3dde37cedb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6d95ca98-3cf5-408d-9639-257669b92b9e"
        },
        "item": {
          "id": "3beba4dd-f12f-48f1-bbf6-a9b89b7609bf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "23f68021-9fb5-440a-a755-b60b3fa5c8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc1d22-c2cd-4125-bafc-a1535e25268f",
        "cursor": {
          "ref": "e97f6e82-02f1-4566-af99-b842b4e2e55f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2d81e773-66a0-4a40-9386-2b8b53b27edb"
        },
        "item": {
          "id": "a3bc1d22-c2cd-4125-bafc-a1535e25268f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4bec3120-6178-424c-be77-14e9acce0989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28796af-0878-483f-8539-6721497e9241",
        "cursor": {
          "ref": "00cf125d-0110-4e33-b649-31a78a2dd27d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "05c59a04-0953-4ae6-a16c-4da479b9fab9"
        },
        "item": {
          "id": "e28796af-0878-483f-8539-6721497e9241",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bb61817e-949f-4d11-bbaf-74d064d1102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62aca6d-7837-4f45-b754-888e75c7b46b",
        "cursor": {
          "ref": "5b148707-9487-45e3-89b9-d6811c1f9c76",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f9c25568-df1b-42d9-b4db-f5d6e5df8968"
        },
        "item": {
          "id": "b62aca6d-7837-4f45-b754-888e75c7b46b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b2701a21-7cbb-42fa-b3bc-be4a3bbfdfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e257dc-856d-405d-9bf5-72ad3ca36043",
        "cursor": {
          "ref": "ccdfeb5a-3cb2-4b45-95ef-24c5677e8214",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a89ebf9e-2a74-419b-b739-5e7a0837b41f"
        },
        "item": {
          "id": "20e257dc-856d-405d-9bf5-72ad3ca36043",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0c92a35a-3cb6-43af-876e-4268d5b4c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f34430-1294-4ce5-97b0-3b3bf3c249a6",
        "cursor": {
          "ref": "9b209c8f-cc55-4aa7-837f-3b44e0cd0640",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c596314c-7b7b-4f6a-a28e-0670e2543a0a"
        },
        "item": {
          "id": "09f34430-1294-4ce5-97b0-3b3bf3c249a6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "92360a41-bf89-46ef-9216-d6e42b17ccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c7a9cf-dd6c-4068-9909-d7ec86b64be7",
        "cursor": {
          "ref": "69745ef8-ad40-4edd-a3ed-b8f414f9bd80",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ec7a82a5-1d8d-49aa-9c43-ec18f8e8f5bb"
        },
        "item": {
          "id": "d7c7a9cf-dd6c-4068-9909-d7ec86b64be7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a0393b9d-9601-43a2-98bb-6be1b607780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34de3700-2731-46e4-b109-c491e1064a1f",
        "cursor": {
          "ref": "a2b0c0ed-d850-42fa-abec-47eeae367e7d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5f153b4d-1a8b-4298-89b2-d29ee052a367"
        },
        "item": {
          "id": "34de3700-2731-46e4-b109-c491e1064a1f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d611dd17-ea91-4d02-a525-a181c03d87d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e01df-5ee1-4f1e-95da-207c91599a05",
        "cursor": {
          "ref": "ffcd188f-fba3-42fa-8bd2-7aad85f60483",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a400b18-d9d5-4865-a47d-3f7e2e1869d4"
        },
        "item": {
          "id": "057e01df-5ee1-4f1e-95da-207c91599a05",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26a79c93-bbb6-4b4f-9f21-4dc34107090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e56c6-298e-433e-9205-46ea89153206",
        "cursor": {
          "ref": "e4e2f9e3-335e-4954-8f70-8d54f147062d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "03e4f328-2577-414b-97dc-0e8cb1bdf74f"
        },
        "item": {
          "id": "d20e56c6-298e-433e-9205-46ea89153206",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7ec566c7-ceae-4689-806e-390b725ca6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2ecd44-f186-4c06-8d94-4d79438a8ac2",
        "cursor": {
          "ref": "fb29872c-82e5-4808-9d49-7922f09e78d3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6f30afb7-264d-4c1d-859e-2d138aea41fc"
        },
        "item": {
          "id": "cd2ecd44-f186-4c06-8d94-4d79438a8ac2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ae98b035-cd45-4380-b89d-a73234360f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07af8efc-d436-4425-8c62-764dc64786fa",
        "cursor": {
          "ref": "c6e6e658-e362-4349-b5ec-98ad7eaf7400",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6e7f4867-c460-4302-8bb4-5609712ae297"
        },
        "item": {
          "id": "07af8efc-d436-4425-8c62-764dc64786fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "733cff9b-10e7-4cf4-b981-de76e48ea8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8630ff9-2c2c-4dd9-8cdc-7cdb5cf32cec",
        "cursor": {
          "ref": "73dd31bd-3e10-438f-88ad-f06f5c27fc87",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "50cefe88-ff5a-4384-b298-78aeab38858f"
        },
        "item": {
          "id": "a8630ff9-2c2c-4dd9-8cdc-7cdb5cf32cec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "23673fb6-57b7-4258-afe5-209b938bcc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c33fca-6264-4986-a649-72d99f7e729e",
        "cursor": {
          "ref": "03fa66ad-4f35-48b2-9591-bbf4a31cb1c9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c7e0ac49-22aa-44ad-b55c-bf5301231fe7"
        },
        "item": {
          "id": "f9c33fca-6264-4986-a649-72d99f7e729e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b6933bb-7c3d-456b-9625-263f2b759af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f33cbb6-bde7-44b5-a48c-258dc47cc1c4",
        "cursor": {
          "ref": "961a440d-44bb-48b8-a7da-5ccff703f1a1",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a476c924-ad03-4492-9c3c-ccbb41a4c29f"
        },
        "item": {
          "id": "5f33cbb6-bde7-44b5-a48c-258dc47cc1c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a53bb1f-9442-40b8-b40d-7e0421449f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ce2827-f51a-445f-98c4-8bb74ea30231",
        "cursor": {
          "ref": "54acdf79-c7e8-41e8-8989-7da91fa51c17",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "70dd7b72-df16-4ba4-b5f4-52e778ed9530"
        },
        "item": {
          "id": "b9ce2827-f51a-445f-98c4-8bb74ea30231",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "94047935-6eba-4d30-993a-da09bf8c41c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328628b1-ae69-4b99-a591-22bebea59bc4",
        "cursor": {
          "ref": "b6d13f2a-c8d3-4255-a798-d363c0f621c0",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20184447-6aad-44ba-8f88-523599780ab8"
        },
        "item": {
          "id": "328628b1-ae69-4b99-a591-22bebea59bc4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "82304bc7-4c27-4356-9225-182f56c4ddd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47b01db-bfb0-4cf3-84f0-a419af231796",
        "cursor": {
          "ref": "24568399-113c-44e1-8cfd-1b46a8f62619",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "28427c24-20da-4c48-be2f-ce7fc580e941"
        },
        "item": {
          "id": "a47b01db-bfb0-4cf3-84f0-a419af231796",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a0a064a-8b8a-4aca-bc80-8c3063f29fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5376a7d-2cfc-42c1-aa04-8243e4023c9a",
        "cursor": {
          "ref": "9a1e4d51-3ae2-4c25-9d2c-ac82fbfa2643",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "38f2d66d-7467-4392-bdff-7ef8adb5be91"
        },
        "item": {
          "id": "c5376a7d-2cfc-42c1-aa04-8243e4023c9a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "599353bf-45c4-4ad1-90e2-c54489b946fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fd49db-4136-4de2-95f7-376c5680ee55",
        "cursor": {
          "ref": "7834a515-0453-4dab-9e3e-8eec6afecfc6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7237b83c-0592-4287-b3c2-5c5c5ad9ce24"
        },
        "item": {
          "id": "05fd49db-4136-4de2-95f7-376c5680ee55",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3fafc5d2-7a6d-4b46-80df-e17fb4616c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756789e2-42b7-49ed-aba4-9f06996550a8",
        "cursor": {
          "ref": "6e284f56-4660-4521-a1df-3ec646cd6fbe",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b065aea-cc1f-45d0-a5a1-45199bef3bd0"
        },
        "item": {
          "id": "756789e2-42b7-49ed-aba4-9f06996550a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e2a2e5be-9977-4666-af0d-8d732eba52f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b86e69-bad2-49ce-bf45-631f7fe62664",
        "cursor": {
          "ref": "3df930c4-98ec-495c-b79e-d5b6ed144a11",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d83479de-d695-499b-8883-da301b19a956"
        },
        "item": {
          "id": "04b86e69-bad2-49ce-bf45-631f7fe62664",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7af92d3c-9a6e-42eb-8608-86c2fd28ebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948a5cbc-c2e8-48ab-85e6-1649c3f52792",
        "cursor": {
          "ref": "7c059f84-6c15-474f-a16c-1c2c6647acc7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1b448a4a-b83e-4cc2-be12-05cf539a70e2"
        },
        "item": {
          "id": "948a5cbc-c2e8-48ab-85e6-1649c3f52792",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bba6d14-8620-49b0-a213-b735b8624824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948f474e-05d9-491a-a5bb-7ffc7b07c316",
        "cursor": {
          "ref": "d0ef4c45-3c43-4ca7-bc13-2acebfe39a60",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1138dff1-a39a-49bd-9692-7211db88204a"
        },
        "item": {
          "id": "948f474e-05d9-491a-a5bb-7ffc7b07c316",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e78cc462-8f58-4205-a50b-46288d44bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7526c942-55ee-4466-abdd-c371a1694b7f",
        "cursor": {
          "ref": "fa0eac90-569f-4b0b-bab7-c8d7975418a2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "47c1a714-dada-4ea7-be7f-7b24e0f8f028"
        },
        "item": {
          "id": "7526c942-55ee-4466-abdd-c371a1694b7f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "672f4180-8fc5-497d-8bc2-781d48bb4072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6e6c9-6b48-4f50-a8b0-d53dfd83ca74",
        "cursor": {
          "ref": "81955c72-04b8-435e-9092-b8f8659a788e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5e4cf38b-a22c-425a-b295-ad1bd3c02083"
        },
        "item": {
          "id": "cec6e6c9-6b48-4f50-a8b0-d53dfd83ca74",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b400149-da2b-4eba-9341-2bc4dcaa5d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bca7db3-548c-4fc0-a447-fd88e6fa5b3f",
        "cursor": {
          "ref": "929b2557-6b3d-43de-ae56-19403da938cb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4c12668b-f47d-40bd-997b-fc4cce0e486f"
        },
        "item": {
          "id": "9bca7db3-548c-4fc0-a447-fd88e6fa5b3f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "117521d2-db97-4d2c-a5a5-996292e14650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a5fb1-cf27-4670-9d5b-9f839efe56d3",
        "cursor": {
          "ref": "ee07e190-df6a-4f88-af1b-23bf2d5c57ab",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9474fa6e-e36a-4c5e-aaec-2750d6b01666"
        },
        "item": {
          "id": "723a5fb1-cf27-4670-9d5b-9f839efe56d3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "53c2318b-006b-4d3e-b93b-d9d37207c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1586f-f548-4cb5-8cb8-67b75cded831",
        "cursor": {
          "ref": "daf41183-3870-4154-b07d-db45cf180701",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8be0b436-0e3a-4e10-a8a5-29a9c666adfa"
        },
        "item": {
          "id": "96e1586f-f548-4cb5-8cb8-67b75cded831",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c65dcb7-4124-4b64-bee9-cf654f8f0910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b7de7a-7702-4ba3-b400-70a594bcb7bb",
        "cursor": {
          "ref": "6a75fa00-bc4f-4b32-844b-431afb1057f7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c2ab0e4a-37b6-4024-b96e-9e15716b2578"
        },
        "item": {
          "id": "98b7de7a-7702-4ba3-b400-70a594bcb7bb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f2562524-1e2e-426a-bd07-8df9fa14b38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c240e-e999-41af-8ba2-c532ad36ef24",
        "cursor": {
          "ref": "6bae5358-7b7f-4fc3-8b98-af6739a8254e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8ca23b44-a226-4376-a3a4-3b9a1a061bb0"
        },
        "item": {
          "id": "7c9c240e-e999-41af-8ba2-c532ad36ef24",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "98835f9a-6181-4606-9677-fba7d347ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a3e2ce-b5b4-4987-a753-0f6db9d014f3",
        "cursor": {
          "ref": "b973b840-6cb7-4473-be88-8b81c94ef481",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "312a3f4e-8d4e-4743-81bf-0978b700ff49"
        },
        "item": {
          "id": "d4a3e2ce-b5b4-4987-a753-0f6db9d014f3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e805107-52c4-4747-9769-47ec1dab1f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0e5c50-2b22-46d5-9571-d45c0fb76e31",
        "cursor": {
          "ref": "d6ebf32f-4ce7-4d9e-a96e-a419df864f6b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7a1e7d35-df99-4490-958d-22243bd7b131"
        },
        "item": {
          "id": "ba0e5c50-2b22-46d5-9571-d45c0fb76e31",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be48e588-5136-44d1-a7e4-7b311c3df680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8c7523-b712-45bd-9acf-d4276bee5fc3",
        "cursor": {
          "ref": "2016dde2-bd52-444e-a03e-6af664769328",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "840e0275-ab5b-43fa-92cb-1ce8bfb79484"
        },
        "item": {
          "id": "cf8c7523-b712-45bd-9acf-d4276bee5fc3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0a20b32c-d5a2-4e03-9ed3-141639b45840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf22d368-8f07-4085-8095-c44722e1a7f5",
        "cursor": {
          "ref": "5ea5eb0d-1013-4acc-a1d3-39515bf7336d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "73c8ea04-755f-40c3-9999-8932e53c9de9"
        },
        "item": {
          "id": "cf22d368-8f07-4085-8095-c44722e1a7f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "983df02f-77c6-40f0-81c2-669242e82915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f1045-27f4-485c-abe1-6452d53022c2",
        "cursor": {
          "ref": "ff5dfb2b-1c0e-472a-87d4-dc71537c0ac0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b76b5321-7a9e-4e8e-9e2a-c9956ccbb903"
        },
        "item": {
          "id": "3a5f1045-27f4-485c-abe1-6452d53022c2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "949d0a8e-2d62-4de1-8968-246d0d347af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1fa6e7-13b0-4250-876f-eaf3f8e118d8",
        "cursor": {
          "ref": "b075d86e-61cf-4a6a-afd0-c87f42ec6aab",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "41606ffd-17e3-42b6-b074-9bfd75dcb0bd"
        },
        "item": {
          "id": "1f1fa6e7-13b0-4250-876f-eaf3f8e118d8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f7af60e0-e148-4d03-8e79-662683cbb2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474acdd6-52e9-424b-aa4b-9be25c5d91df",
        "cursor": {
          "ref": "d1615aaf-51d3-4819-85de-821c4b6fa105",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ddb55c2d-9603-4673-995d-54dd435e3f7a"
        },
        "item": {
          "id": "474acdd6-52e9-424b-aa4b-9be25c5d91df",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "db568203-80b0-418e-8cd6-9cf65b73fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946e82e-a25d-4e6d-8f04-f435b7fb1cc8",
        "cursor": {
          "ref": "1397b8e4-802f-4825-88a4-85b72af69560",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a03db489-09cd-41d4-bfff-fa8e604f9d66"
        },
        "item": {
          "id": "8946e82e-a25d-4e6d-8f04-f435b7fb1cc8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b8a375e-2c17-4956-a5ef-1a5e74dfd169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a0a72-0de3-422a-8915-900fe41f1757",
        "cursor": {
          "ref": "b437f9f2-60e8-4031-9faa-f10c60bf38cf",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "41f823f4-a8d2-4040-a39d-9b63e88f5ccd"
        },
        "item": {
          "id": "329a0a72-0de3-422a-8915-900fe41f1757",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "92153cb8-cd91-4e2e-9250-0a8f35d3f87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d1221e-a4ac-48ae-8184-78606af3c508",
        "cursor": {
          "ref": "94e4580e-1b67-442e-9330-8dcd8653d989",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9b1ba004-22f4-4c11-a731-ea5de6769673"
        },
        "item": {
          "id": "30d1221e-a4ac-48ae-8184-78606af3c508",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "12e28b9c-c27d-46ab-ad4b-84d71b8d15a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fecbffa-c25f-4c71-9311-ef948c8dcbf8",
        "cursor": {
          "ref": "d4e5dffb-cd3b-4aba-8b83-3179543c3faf",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3f696404-1eb8-440f-ac85-eb1c2bd22e4e"
        },
        "item": {
          "id": "2fecbffa-c25f-4c71-9311-ef948c8dcbf8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fe76a75f-ca5a-460c-a3e5-e404bc666d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f816b-fd09-4d32-9937-843b0a6066b7",
        "cursor": {
          "ref": "4b551824-3ccb-4bbf-985f-58aaa4f95458",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "581ae62b-dc20-42d4-9620-148c9515d076"
        },
        "item": {
          "id": "e78f816b-fd09-4d32-9937-843b0a6066b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5b0cb964-2f79-4267-82cc-a99ef601034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4311a4-afb6-47ef-8bc6-8fc31bc35b53",
        "cursor": {
          "ref": "cc8f5cc0-8def-4828-ac54-d64d722e5ae4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "93c30911-a610-4c48-bad9-755b19a60545"
        },
        "item": {
          "id": "5b4311a4-afb6-47ef-8bc6-8fc31bc35b53",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "16244661-6320-4973-b979-8292e2a6c6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b15bdf-2c16-4a12-a07a-57eb9b6b7d87",
        "cursor": {
          "ref": "13a18847-a380-4c25-8d17-e27c7abaffd9",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "33f868ec-fdcb-4955-9781-63225c10969f"
        },
        "item": {
          "id": "47b15bdf-2c16-4a12-a07a-57eb9b6b7d87",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f6edbb5c-550d-4bb2-b8c9-caa668183a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe376f50-f686-46ee-973b-87358e2e43c7",
        "cursor": {
          "ref": "06122623-04e5-4683-82da-a06487b37eac",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "93f9ef62-33ce-45bc-b1d2-b7668df53296"
        },
        "item": {
          "id": "fe376f50-f686-46ee-973b-87358e2e43c7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "254b9754-acdf-433c-bed5-79198f694484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb04f8b-26d5-423f-b915-cbab337fe08a",
        "cursor": {
          "ref": "d554ec1b-efdb-420b-bfd9-3ffde905ab1b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "708bb76a-d1af-4f57-8897-28ddbf9322d5"
        },
        "item": {
          "id": "5eb04f8b-26d5-423f-b915-cbab337fe08a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ee95d5ff-2624-4116-b849-647b0c95a9bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700d8546-0676-4107-9f01-11897f5e660e",
        "cursor": {
          "ref": "b996aac3-8ef0-4aea-a23d-9b554ec9cbdd",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1998ffb2-9e78-41a1-b29a-12c45883e459"
        },
        "item": {
          "id": "700d8546-0676-4107-9f01-11897f5e660e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "67c5dab2-86a5-42ed-b801-4916bb66b08f",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "131cf9e8-253d-4883-9da6-4a3d71eb9083",
        "cursor": {
          "ref": "c4ecf1ec-f13d-4331-95be-6aa82c0168a5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "91177506-2891-4db7-87df-6b94a72f43bd"
        },
        "item": {
          "id": "131cf9e8-253d-4883-9da6-4a3d71eb9083",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9509657a-73b9-4e44-933f-25c79df5cb0a",
          "status": "OK",
          "code": 200,
          "responseTime": 1505,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff41db7-cb42-448f-b24b-08facdf43214",
        "cursor": {
          "ref": "75161b83-468c-4f54-af15-7eb04c0f01d3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4b25299e-bd5a-41d9-af29-07e85cee3a33"
        },
        "item": {
          "id": "3ff41db7-cb42-448f-b24b-08facdf43214",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "494e1b00-ce99-400a-b947-cc23495cbe16",
          "status": "OK",
          "code": 200,
          "responseTime": 1574,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "de514fd6-46d4-474f-a36c-b413c04053d1",
        "cursor": {
          "ref": "af062b49-51e3-436d-b5ae-30ded33da874",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ddcb47e5-2bed-46d8-8ae0-50437b934227"
        },
        "item": {
          "id": "de514fd6-46d4-474f-a36c-b413c04053d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8edcd98-6011-443c-b772-72fa0091c5b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de514fd6-46d4-474f-a36c-b413c04053d1",
        "cursor": {
          "ref": "af062b49-51e3-436d-b5ae-30ded33da874",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ddcb47e5-2bed-46d8-8ae0-50437b934227"
        },
        "item": {
          "id": "de514fd6-46d4-474f-a36c-b413c04053d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8edcd98-6011-443c-b772-72fa0091c5b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e515b69c-0f8e-4b57-a9e2-3795f8d28c5f",
        "cursor": {
          "ref": "46a17e3e-d8a9-4ac1-8ea3-8cff601814d7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e0cd2853-faf3-4760-a75f-40e3519ebfcb"
        },
        "item": {
          "id": "e515b69c-0f8e-4b57-a9e2-3795f8d28c5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "baf9c0d0-d664-458c-a9b8-63e317b38e81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8a4e8e-99d2-4d03-8f14-e7b85589e790",
        "cursor": {
          "ref": "476220cd-e7f8-4d4b-97f8-a5717ea32e40",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6d0ed38e-ba4b-49d9-ac0b-c1383340a999"
        },
        "item": {
          "id": "2a8a4e8e-99d2-4d03-8f14-e7b85589e790",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a85cb21e-2c13-425d-ac54-1add389dfc4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}