{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8dfd05e1-af34-49a2-a6df-88042f19f397",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4637df72-a84b-4936-8ccb-ed355dedaf13",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6da39ae8-7520-48e3-8854-b7a7955f68bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "baf3e310-343f-43e6-ac1d-cafbea209f61"
                }
              }
            ]
          },
          {
            "id": "095d5320-d111-43d9-a06e-76388637aa11",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dc4459b-2aa3-4022-9f6a-8b02afd7026c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b023467-3474-4f46-9132-694dadb5d862"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9753f4de-a3e9-4acf-bf85-17b65c911141",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e28497cb-4c35-43dd-90c3-97a4cf2f4b84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9df46f7a-c219-4298-9665-d5fea31ca0b5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34c04166-2265-4d1e-92ef-23c0034fb487",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ba4a14d-8df6-4063-b762-e595ba654cc5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "075eb65d-038a-4f0b-8b03-4511af967c2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eac73f25-6716-4baa-8d20-1c8850c46d07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e2a8d66-e6b0-441c-93b2-dfbcaefa00e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fbcc7f4-0b1b-47c8-b1d7-8704ef15eb47"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa65ba2a-e11b-46d4-9168-e5e730fb9d16",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5459f0b-4846-40f2-8179-45cbb53f2198"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9827e36b-0437-42a0-8ce4-1223421dfb79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75bfd85a-c0c6-46bb-8dba-1589731bb1f7"
            }
          }
        ]
      },
      {
        "id": "7d41e945-96dd-406d-a51c-88c653f2572b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "94cf9231-54de-40de-a334-331551779a38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c211534-4f68-46a6-8b42-1c5e3777c85e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d917d426-3ed2-470b-91b3-4a2d214071c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dfa5f1-471c-45e0-afdb-f81817c20440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea9b933d-72fe-4b0c-a019-cc3e8f8a8fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d2a3f7-2ed7-4e09-acae-93702211806c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bfc9d2-ccd0-4edc-86b1-19514a7c65f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdba46f-ff23-4173-a42a-8eaf73496a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993ad882-8d08-482e-8d0f-9729a16398ee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca9538-4b86-4b37-9a14-b364d48581d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30753ac6-eed9-42e7-ad9d-4e543cb31c9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1391872c-e358-4b93-9017-19d635807ba0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce985958-1f3c-4465-b520-1fd63fa90611",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f3de53-0ed5-43d7-8829-2ed4056dae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6f49cb1-3c58-4f7f-ba82-84e2a8539a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c05ed94-0c89-4daa-81b5-879d3ec595c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4479581e-6b3b-4c0f-bc68-e106bef3c46d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c01c4078-c98a-4675-811d-ee4dd9cf93db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad15fa0f-9b26-49e5-abcc-f8c866f489b0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04803ebd-41c3-402c-90b1-1f3b7436905f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4c689540-6546-4b61-bfac-c65338cb2493"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93fa0da0-b47f-4c98-937b-baae2f0d4248",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "90f50d3d-39c6-4e39-b433-dfd11e7e9d6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "855fb857-d74a-4907-b665-ef9aa207f4d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e6ae622-c053-4ab8-a276-fe65cee5dd4c"
            }
          }
        ]
      },
      {
        "id": "558b8c4d-4f88-41df-aa23-ccd7bef0b979",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab932d1a-33a4-457a-847d-f97454e06abc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a360570-be07-424b-90c5-7c35da2a5971",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "23d3c306-b97f-4260-8f4d-4b7d2d521de6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c199b9-ffbb-4907-a666-551352ed0d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434215ba-23d1-4547-bdf6-ef2102419423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72297798-c337-4338-bd2d-feb9bc62c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f4b14f-21c8-4c65-9cea-9962de9a9f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cf921c-670e-4eca-94fd-0e6209ac6741",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b17be9-44c0-47f8-bf5e-29f926471b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f948a2-52fc-42c7-9e37-8eedb808b337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a9d4d-f5c0-4286-93fe-10b53087ead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1fb3435-b46c-4aca-bc51-1477c5fb8e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795dc32-ea91-4a4a-ad63-97b055f3d4ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69af8870-4566-4bde-a19a-e93eaceec0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7f79d1-5503-4690-996a-0e9355e8ef57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f334cc89-c841-4032-b8ce-4e8284188739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a894f30-0500-40bf-a7fa-2ff64f5ed85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8413ff92-5c9f-4881-8079-1004d1b8e91f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79405625-eff7-4c55-8dd1-a8ed30d8b1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cb2988-67f6-46cc-8c5d-4c5fada7802b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921d257a-1992-4375-8aa6-1fdbf956351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee10afa8-75eb-4032-a865-81b414970fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c362580f-df55-4ae6-8983-b09043e95594",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36e3d72-8eb8-47d9-94c7-fff7e798a5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2d641f-1cda-471e-9bca-048edc8b44e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c17916-9fe5-4ace-a414-6a6177f06cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a0c46ec-a690-4a58-b9a6-79e19d504d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95685134-3646-4cb6-b407-ce1986e6ca79",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619a6ce2-a06c-4b9d-bf11-98134d682027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d105b029-b50c-49db-b736-db60380115ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19588726-9dde-4ac3-8640-ed6598859593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7862211-c3d4-49a1-993c-d7256cc2356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4710c-e11c-45eb-84fc-f79e2c2d4eb2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beaf826-f13e-4362-9b25-397dac544035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a97af6d-58e4-459f-b6ae-c1ad024c8f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba611ba7-3082-4bb2-943b-17aa32096deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a19a64b9-2ee3-4d1a-9d1c-2b834ab989e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3151e6-ae81-4a4c-8406-f3896dadb128",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b67123d-5368-476a-8c62-4f98c7630fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7186dd-a12d-40c9-ba22-7f5c6436d81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88618234-0edd-4654-b038-096c165b7f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bfab0de-4e2b-48dd-ad5f-bf24cd184c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa29f67d-cd37-4b02-bdd6-71e19e320e19",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca0fa28-ba7a-4af2-a966-0112403e23c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a2781b-4335-490c-9f87-b145828794cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85955f47-975c-429c-997d-859b32076bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "574988c2-f5df-41f9-b00d-4cf9c8f40d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2e7395-c49b-4c99-b562-64e3d0a9cffa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea01573-40f9-4fe1-8af6-a5f89f47b78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59004a1-f878-458d-ae7a-2cc81dd8b0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676e6674-bd36-45be-9b5f-92efe31821af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a210357d-0dab-4b75-86c8-cc9196c51820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a45e39-7135-4102-b4f6-b39347082d3c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06fb95d-1bc5-45cc-a304-00128bfc678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf122d65-b000-4e32-bd33-5dd78773e9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3008d2-ddc9-4b4b-ac95-ee7ebf01e8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5409d67a-152a-4d31-87b9-fd1287e1c265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a6c48-b0b1-44d3-8927-9b68f6c608df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d290922c-463c-4153-b6ec-3d862bc7a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e45a3e-fbdd-47ac-8f19-262ea3f19d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d55180-919c-44de-a3d0-0acff85cc065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcb83a23-124f-4364-a00d-ec510386a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754b614f-0d7d-4782-9697-b58e317ee9c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32328ec0-3f9d-4383-9b62-29a1d0769f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16771961-f32e-432e-aa67-0d3ee59d9732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8002c3a-0cd1-43d9-b8d5-932d5f441044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffde4d6f-dec3-4123-9ebd-82c85dfa4149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bcb9b1-0f20-4bcf-8321-1114b76c2d54",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97efbc25-ecfe-499e-86e9-5909a78324bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7cf088-2d12-405a-bb6c-57759dfbdc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d472bc7c-0c1d-4aca-9dc3-38490a59750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2822015a-4f8a-45b6-a4a1-ca18ff740732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70cb99f-74bd-4f89-a172-032e06a2a350",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ccb3eb-e34c-4b35-9e8e-eb200de889b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcc32b4-b6f5-4888-8bb4-b7cffa33ef11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a3106f-548f-4eda-8a9d-c5c349a3f246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "916cce52-1125-426b-b1ee-fc90d3ceae96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08f85e4-ee08-4f30-94fe-25f2bfc89039",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23afe256-31c1-46d3-b954-fc6e8dc9a7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c9bc2f-ebd3-4a51-9bc5-b1127aab2b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a1dae5-2f6e-4996-be14-93df6ef602a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc3407d-aff4-4233-8ec9-cdaafe60a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806b68e-6ed6-4d69-98f6-9ae0288bd4bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc6da07-cc1e-49ad-bea5-f38372dcb65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dcafad-5e5d-41dc-83d3-2f25ef9803ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3ded8b-64f7-48c4-b264-b3fdd3769aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e441ad0-1026-491e-9421-53692eb5f7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3617f223-6ccc-4f99-9a12-571a4629fd3d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f41a140-e9cc-4007-9e91-88cd501c3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b0c39-658b-4a2d-b065-9b72bd028f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8650f7-6e13-4ae3-a622-0201572c84bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c111e87-f25d-448a-b0b8-9f36251a7913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e806ec-ac41-4f8e-b0c7-7937fa1e454e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a363814-8838-4777-befd-2b82c990af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e59d30-5f99-47d7-b57d-653a552e908b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb5cb0-a762-4aa6-a9c1-f213ca780a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ef18ec-f519-4396-bfb7-bb3278684678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3a718b-33e7-40af-a0fc-f989dc04bed1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc90d5df-a939-4d60-8252-063c0181971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2afc4bb-f11e-4578-8c88-91d28b64692d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32e6fae-b0fa-433c-96f3-fa57a9bc846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37cdfd08-7cbc-4b37-af3c-eb332362dd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0d5788-c5f6-4e86-92bc-4013f6761e7d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa32fff-8f64-499f-95b3-9971ed1f11fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e14a27-e6ab-4279-914e-4c398c00e609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df526a74-5ea2-49d0-9dbd-ddc8936bbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27fa1ef6-06b0-47b7-9371-b29983b71346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e526f1e0-9310-415b-9de2-f0ecdcfc261c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419de44-0f5e-4e5a-92d4-f31f962d23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d830fdab-cd27-403b-9fbc-74f73be4ca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da43c67b-4395-4077-bc9b-bece4390f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "293b0946-1934-4503-9971-09a77eda4d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d769f90-c1c2-41d6-a6df-4914c32a5dcb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d90ff4-a92c-4b47-964f-40118aeb0ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeabecea-e95a-4b83-b525-b0ec4dea9f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08a013b-55c0-4f5d-8d22-a30e4947396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98e9c142-4dac-4ba6-af93-135790a6b450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf2a65d-1107-4e0a-94ff-043c09fc2f6e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ab264-7c4c-4974-8084-f989e55a5757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015912c5-2966-45bb-bee3-e5f3c3230430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35ab1f4-e6ec-41dc-8e76-179d0705c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d43626-2c56-410d-8c2a-a6ac025fd816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f514b05-eb7f-4448-9e74-20196cd5a2c8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcebe425-d09c-4cc9-9f01-9e90dd371424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1465c4fd-d143-4205-b081-f0601fdf17eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32099c9-33d3-4e24-a293-7281e38e83c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c312a1-dfab-49e7-b805-69cd81bf5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae0a48f-b064-48f3-ae5e-4445659632e8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07908905-ff1f-46dd-9f8b-513633c040a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57103a19-eb18-456d-b7a6-cd0af27c980a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccaf195-d14b-451e-a64c-1f16b3381408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d778ff5e-0695-4b40-b2af-5d0b831278f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af041bb0-0617-4629-924b-873726477323",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1152ae0-bdca-486c-963d-e5d2e03e7f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dda542-ccad-4e58-a1cd-98a624bcee03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847b5750-f1fe-428e-856c-1e0ea77c7a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "151dc515-cd0e-4991-a023-947d1989f12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2530b43a-7923-4727-adce-c29766fca60d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f62d92-4488-4ed8-af80-7f8e4945df36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc84b35-f639-4772-b92b-d696c8aa05c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7133ebcf-8556-4374-b079-a9282db95ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c858600b-a85f-4f2e-98d4-bf826bc7456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5053ba06-13e5-4668-bb1a-5e2b72f89acf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53e377-8eb5-4aab-bcbc-22d87ec0fc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c96c75-12c2-4aed-a946-4b45a880f754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d68f80-6571-4153-8186-dcd191db67cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa923555-752c-4912-8a32-4439c556b8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d402889-8d74-4054-b7f4-111b36f1c37e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74393b4-c30a-49c7-bb32-04d971f0eb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749ef4dd-8785-4765-95ed-25f41a55dca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754fc92f-c4bd-41ea-aae2-6e30f380651b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f80de5d4-097b-48b7-badd-ce8158933742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d11d983-24a1-498d-8f8b-c0d961d13f45",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a05e453-08b0-4237-a7c5-da7590993e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e38fe2b-2110-45c9-9905-125c14a5055f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b13fe6-795b-43e9-941b-312efca07b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf00347-76c2-462f-8060-5b0b159c164b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f32143-2403-4ff2-8113-c612c0d6d5d4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1f097c-1095-4209-a8b2-622c4e96ea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f5e458-a258-42b4-b10d-f48957bea17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84d15f-484d-4b7b-b58b-a7a3e1f5076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec51029b-55c8-428f-a77f-f26f6a6a33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cb3f9a-c8a4-4c2d-a8d2-767360f9cd15",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc437fa-5399-437a-ac60-ebc739ccbb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363d1e40-add0-4843-9cfb-2f0a856c474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7008c179-cf33-42be-adae-70ac778247aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33563484-aabc-457e-92c2-b8e519871e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560cf938-55ae-4f64-9b8f-c8baec699871",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4166f07-5c6a-47d2-a52f-833035eba1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a53f6bb-9356-419b-b133-15795a5c803b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16bf26b-5850-4fad-b425-b09e85a3e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a35daa-d95b-46fb-b30c-b078374c478e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade19be-2f2c-4330-ad18-4ef6875a8b1f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b7927-ff17-4ac7-8c25-6f37ca2db2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3077749c-ffd4-4981-a8be-e4307393bf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b645a5-50ea-4377-9892-f22877a5a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a622861c-afcf-44e9-86f4-5efb7fde88a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af34d73-8d79-47dc-a296-c477342eef71",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039e2191-48a1-4acb-ad99-9640d1e97a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01150b89-ec2d-4566-8b50-f7ed41dceb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61638408-b3c8-4227-933c-0e017a97cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d58cb5-5ab1-4f85-b37a-c2ecfc7b87c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166304fe-4051-4343-87f5-fd6e384fdce8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c343c629-287d-49c0-9e37-963e4387a446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b2d6dd-457a-4f64-8fef-fd51eb5a46aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d6216-0046-4083-8b4b-aecd3b1f5b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af91b9a0-5494-4570-a46e-d3e2a28b3ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d3dd0c-219d-4398-b7b6-cd38670b6a3a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14031346-d53e-41f4-ac8a-de71b7c9fe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38de21eb-7e69-455e-b1ca-0f762bd89f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c26faf-003f-4ea6-8c2f-eac4dc9e82e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b00a08-c6d0-448a-80f9-da97f002d3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb55a3b-0bc0-4548-8720-1e7a6521531c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff821c0b-150b-4af0-a1ec-dddda0b34178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e48ee57-f495-4216-9a00-daaa5a04069f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabb3135-56d0-46da-89e2-b6e839a8b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f062cbc1-be57-49f4-9170-980e3220829d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06bc8c1-c3ca-4da0-8480-a2c41bfceb0e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8b1059-daa4-480e-b0a8-2a70b81f7c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503ec5ff-b274-48ad-815d-7a0c5095d68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a87a54b-56f1-4cd0-94b1-a83f39b33fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9122d483-a74b-4567-bb98-105ccd9d43c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4e6447-59c1-4e50-a480-83beb75a37c0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1878661-bbf8-4858-bd8b-ccb4e08c01a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dce3f4-74bc-49ee-b46e-355ce62b1c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55a9c91-35d0-451e-a1d9-70f0ad8c1621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c071b8c-ca86-49e5-b9e9-2934c35c45b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccde280-2918-4ded-a982-4c7ec4c92b2c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d47400-1296-4b3e-b153-93534a247016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c168ea-5c4a-4b31-8608-6085d8f4c542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98a380-6097-4e17-acde-105d339f060d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f167cff4-d6b2-419b-ad7e-d619bd962cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11327651-5f17-4ec6-a61e-15633e3b3e98",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c98a98-35fb-43c5-b680-2fb58f8b5121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e227531-7f18-44e4-ae6a-b858ad6b3618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab413da6-ad06-49ca-842b-110ccf7462f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d146c6-86ef-428f-965e-bb5328e5edc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10193411-fcfe-4017-a2e7-640c9a741a2a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9418ee-c6f6-460f-9435-29d30c796707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95254ce6-e02f-4c7e-8161-21a401c0beeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b136a34-cc1f-4783-933a-2e85c16f2d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4b32ba-b0f3-4fe9-9276-d3ac5791d8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9e6ff0-4d3c-40ed-bfba-1fbd4f829630",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cbd9fc-e896-43d9-b3b5-c125fb5778b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf95fdc-9f3e-499c-9e4b-59277999e2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614ac0fb-e0a0-4dc9-bb18-d92f66de32ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf38ac4b-8969-48b0-8faa-92478d263e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc21b24-75a5-41ac-ac30-ff35b3f3e289",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a157ce-28e3-45d1-8b9b-c8f4eb2007aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c961b995-abf5-447f-af24-1f65f965eee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d03773-33ec-4857-b961-8697c648f6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c71326e-f3ad-4ea4-b5c9-898707bcbad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188fb9b1-0c88-4b6e-8051-00a737c29e2a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898debfb-1a54-4687-ac59-65d6b3df5e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eaf627d-18c7-4073-a10f-578d96d1a775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c6cc4-1315-412f-971e-ab7c982a45a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f081944-f036-4b0e-988a-3d08f1a6a345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43628e40-1873-45a4-ba63-daf394be5da7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b7d2d-643b-4c3e-84e5-8cb5e8aab4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbe4b8b-7a88-4b40-8487-ebcb7a6f19cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f64e92-6d94-468b-b151-13f9cb456ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b57626-422c-44e8-9833-63bf74085c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42344993-f2bc-4679-9404-5a3e44bedd85",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a52f4d-22e2-4dec-858a-9a53aea02a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc88241-599c-4456-b1c3-b6759ed498a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd8c4ae-8ba4-45f6-a04b-7b0242e6dd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4865fe9e-a3d7-4a1b-b4cd-1aced3eae002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a244403e-77bc-4095-945d-1abcb00c1153",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6561053-33a1-464c-a150-6f8c9fab2b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6065462-a7da-47e8-a92b-64d4a21ea9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09390084-7ddd-41b1-b2e6-1ff9c718378e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f06aacb-8703-4202-a052-1e48a27f75c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db0f02-f3fe-4759-8235-05e52be22e98",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94f3d8d-e9c8-4420-b383-40ccdb1fd238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b4d46-8473-407a-a449-a0c5dc302e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2656bb56-6d16-4a9d-aea3-fb670c3d9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "705ebe28-0f8b-4098-9a53-8a25871a5b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31defd81-0288-4159-bd20-f2b2028a8d45",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7c143f-4fc6-4b17-aad2-e1d90113d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcfe4bc-9dab-4b23-b2ff-b99780ebaf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa67b85c-6c72-4161-a085-e1680af6b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3ef673-d2e1-44f5-920e-3562cc6d70d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01404c84-2281-47fc-8fc1-abaf9f9b5d19",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484b738b-7ce0-48b9-9f18-a8e471f6e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00ff6f5-792b-45e2-a9b1-d7eeb183b724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eac0576-5eb5-4764-b945-c20e7b6175be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca75b38-e1a5-4ebf-9fd1-2a1a219b4204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6338573-e67d-448d-b25c-6a8576ad445d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebe86ff-34e2-4abf-8eb2-a78417d77982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de6f3d0-0b27-4c3d-9c4d-89ecad6aa8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78cd5f8-1900-47b0-b56e-d9395396eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397fb955-ceaf-433f-9178-ba03910992a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581d800b-df2b-474f-9388-9500ec84085c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925cb76-18ff-4827-a6a4-8e4138e605a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b36493d-d542-4f78-b62a-498bb943db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68616d5-87fc-42af-b4f2-12a70e044ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4a273a-aa56-4bf0-86b0-f77e3c4af9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bf23d6-7031-4a12-8c60-e4d937d4b2ff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c84f0-6d50-42eb-9b57-621cf585d4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0ec732-fea2-4a55-ac6c-ad42f58fafa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2f5c93-3669-4e08-9a17-8d6996985fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "204f1281-390a-4200-8eb9-dae80c195518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35562483-3fa2-4f78-8424-d7ba92c3cef1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0004a130-4c97-47da-bd9f-5f00a88605b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf4ea9f-cbb2-4771-b607-4981c274d0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77877de4-d6b0-4301-8032-3cc86e2a2595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0266e1-d884-41a2-a453-186db48f0a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adfbf1d-91b4-48ed-9202-737263536f37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188281a4-6683-4d8a-8714-8eb2202acaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc10dcc-087a-487f-9c9f-7bdd781bc090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190e3402-16fc-419f-8b63-23a6827663cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1b9e4e-3156-4a32-b1e0-71ef085b3665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525c115-9b50-4a77-bff6-166e11e47e85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e8ade0-1748-4b31-905d-636495edcd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38434744-c826-407e-a9e8-2e7c5512351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe5033b-5bc2-40d3-90ff-557106c318c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c61d11d-a4bc-4a72-94b9-396b40301035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0c610e-93a3-462a-b03d-0e055531a94c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c63f6e8-627b-4a67-89ad-9990879582bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acf7240-db10-424a-b362-b59340d7be2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378f0178-2019-4001-8288-e9136d768866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fca892e-45da-4784-8112-663e94e5603e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142d280-7157-41a0-8022-911003cf2763",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97439a-5607-4b5a-9659-ab2530b759c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6c2ae1-3fd9-4fe3-a6ce-320d2f6d3554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca36c9-7b54-4bbc-b20a-05170c8eaa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00915026-ff44-4e8c-b867-090b875fe356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce23df97-aa06-4b62-9d85-a24c4691c158",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3da7e9-1d87-486c-a65e-26c04bf9b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6d57e6-d350-4415-a36b-e98204d636b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4c36c8-816e-438c-96eb-be3675ed3bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc67cc89-cf9b-4f40-8cd3-9e00076e6804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acc2ee0-f3c7-40ec-b613-e80a8d68da9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbef5ab-082b-41f4-ab78-6a176bc377ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a50ad9-058c-4920-9695-5c8554186305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5356148a-9db1-4415-907d-5bd5c23ad9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3c5f25-588c-495b-84a5-6ce49cc4db25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa6ddb0-3f88-442c-955c-66df85e1c939",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552cd0e4-5521-445e-9c17-4e7a68a0b243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f04b79-d8f6-415e-8970-0989bb0eb51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209a6c3f-f854-4b1a-96ba-0bbe008b2b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c070a6-6ce9-4d15-870e-9ba3c781dca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300531f8-25e1-4bb8-b699-c437fb092801",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa4927-0496-4f05-acfe-68701fed5ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f91691d-7788-4cde-91a3-b9569e232ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de3b53-780f-44ac-bd25-e1ccd368203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd10ba3-678f-4be9-8617-97847c40282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecef2282-5cff-4c76-b73d-8e89ae479b65",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac542f8d-2667-4363-85ca-edaeca4823eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dce00ab-81cb-4cbc-b189-5375d8017f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a174f-0ccc-4230-b1d3-062114ca27a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6f2276-5b2d-4236-8617-efa703cae873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b6bcee-2b36-4dcf-8f71-a8584176ef30",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471f448f-ae5e-4115-adb4-abd8b183128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d3dfc-1137-4cda-b316-7b880d00272c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39343703-14d1-45cf-bbee-8473e490b627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89628761-4ad4-4a86-bd69-f971afe7ab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ffadb-ae66-4fc0-b475-b60b17dd59e5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75b75c0-7aee-4755-8fb8-203e9f826427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6daf973-7fa1-4e87-a03d-14458a449a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dca5c29-b52a-4da2-bcbe-2a649f07146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54b9429-629f-4e94-8c09-0f3b4ca8ae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af62397-ca52-435d-8e8b-99f2e6c165e4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82b72b2-513c-4c2b-b5dc-85a20be72ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb77832-caf9-4851-a777-2a985bd39ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb5b8f-fa82-4659-9a2f-5787e5530934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3d7593-01ac-4ead-a0c0-84daae2c5572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf459a9-b86e-4547-98f8-b71ba2d19db7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4145e166-a6c2-4f82-bafc-169f4472d7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471c2bd9-1e49-4646-9d8a-117ba2834924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13f6389-01ac-48bf-a2bf-d561b1623c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9dcc78-a79c-41e8-9182-6ca019493691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0448e1f0-896e-4d66-b73c-de799aae9948",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4263c3c-8e8a-4667-b660-ada1132daae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2fe965-a267-41b6-954e-62988bb6909e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40356f2-cd8b-4019-a3ff-3ff50e09868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab5f045-8bb1-4f77-86d4-370ca0e26223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab72b43-02c7-4d1d-93db-9ab80180f572",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defda54b-9968-4708-ba60-44a2ceb29fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de20c81-204d-4d56-9dfa-e5ed8a7d7271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85a27c0-a2ef-444a-9912-8d778afd087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "715dff90-9be4-487c-b5b2-8e49c97bdf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2a4ed1-3638-4c43-b9b3-e6ca5c2fd913",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe81009-4851-44ff-ab1a-bdb2e5343f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934c35b6-756f-4bbe-ada0-fc9b72a8f171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d05470-c790-401d-bbed-c4a7855462a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f715910b-2f58-4509-bc11-f3d1037c9e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf6aa1-061a-4b29-bef0-8ace8a511215",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eaa9f2-f701-42b2-8ab8-ec1754253e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5295501-323d-4565-9b2a-f2c4a7302ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9df206-97e6-43ec-bacf-633654b8f833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e84c683-52c7-475e-918d-4eb08db4f70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ee4947-cc6d-472c-8f47-6c2b47b5ce58",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be84210a-cfe2-42b1-a319-69e3997e09e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3a3ed8-c86e-4d95-903e-aab2b7790b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10ee84-1715-4c95-bd03-6a485ffbab23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e39e13-6842-4965-b2c1-80df08443683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ad747f-8152-4d9f-9a20-eff9568f17f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9220ca30-6171-4695-84b7-1dc3f3cef998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfd375b-b75e-408d-9659-5adce91acc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3658d749-39ab-45ee-9af0-dfbe071528af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af378a2f-686b-4aa6-a2c3-9770c446026b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c98d3a-dea7-4620-b74f-e7bd78b97ac7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896a4fc5-edcc-4216-816e-cc0917e4f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ff370f-9a8b-4b63-8142-f575e9b7f3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667ee947-8ff2-43ee-b86c-0a1c8db8d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21aa99f-c97a-43ff-9a1e-6620ab08fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4341cf-f19b-451e-b38d-90c365162254",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89adb590-62c5-48a2-bda3-1b69e8a53432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf40ef3-125c-428d-b8fd-6f6b5aaca5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e19345-88c0-40ae-bc16-ffd054c62f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a44a8be-4243-4e6d-ba88-3377e1d7c334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c219709-8470-4323-9f2f-b76b10653732",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26400e03-6d57-4943-bbde-7261ec222e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27af894-4249-4778-967c-2c77763698a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceccfbb-4aab-4359-81a5-e2f9a8cc5787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96baf784-3d06-4f24-9e9b-b379dc722966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd7b8fc-27ab-4cfd-a4c1-b4f4d23f2b11",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c62c774-bb89-4154-9f59-6dc54d45c31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2095ac64-c7c1-4abc-88c3-d6cb1a9a7b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9179a67-ade9-4a9e-952d-e50417f95d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c749e827-9fce-46fc-bb24-74e9511ed5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643be41f-c907-4d7b-a846-dfc98705e28f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5fac15-f625-4042-bf50-956867270f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d8dfb0-06ee-4d46-b736-c4ae2eb46c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6491b16d-ae49-4055-af98-0738a06a6f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b16a00e-ceb0-457b-bd36-9315e2d8bb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5dd0e4-b304-465a-aaa0-6f5c43aaf077",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0a873d-54d6-46cb-ab4f-fdb4980835ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779ed697-4897-4d4b-98c1-a02c74d35e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874af94e-892a-4433-be53-f045f9306c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68185044-c7eb-4067-8bb0-ee82b0a28a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7f6cd5-4f32-46bf-b19a-901167d89889",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089076f7-8565-405d-9ba3-4152e446e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd91332-1be6-46a8-9662-1f73e6be1753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f086d6d7-d615-4b9b-ad89-8240ccd01954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3889c9-17f0-436e-892a-173ea9b714c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5b058c-66b6-44f7-9cd5-b2691e49dc2f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52907d50-adb6-42de-8cef-84c4c5bcd7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a805397c-25a8-4321-ac2c-815391eb6b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0212922-6c81-4278-9685-78417d6946c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eee208a-ef3b-4309-86db-41f64bf33bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2cbd8c-825b-4c4e-bf77-d3ab4b854faf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de743f72-2af6-47f1-aa33-f4bbe31424a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b914b21-2496-46a3-9423-45c5759cb561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa42112-69c9-4602-af4d-749c8dc86fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db4821e5-ac3e-4f5f-a2d6-d18d9a815608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfd7bc3-86a9-4a4e-9056-7deceedc1872",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea3a4e1-9ddc-4cb8-a1ea-79db40416893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97afcd62-32fe-4fb7-b756-45c55a503610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bca0a3-80ab-45ed-b5e5-da8f1acb6b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "144a91fe-7d7d-4cfc-8507-7bb04bb7286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a826573-13b6-4e70-9b98-78f0bd2193e0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62539cc2-b7a5-4cb6-a404-20265ea13d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be03bca7-c3de-46ce-8e2e-81128d630f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85431af-ce60-41d2-8787-880f18d49281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d80ffb9-61cd-41f2-b4f8-9e950f1290a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cba180e-af5f-4dfe-aac0-73bfe48795f1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86919888-2411-4b8f-afe1-ea965f2ee2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eafde27-8a38-4542-a0e0-3a7245a15690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b38dac-a4bd-4867-8cc4-0a9da97f9832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bac8ad6-ae13-4c6f-a824-81e9fdf32152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d51945-5295-467d-aa84-4b097a728857",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479872c5-4257-40aa-8a20-e938468205f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c01347-f5f8-4709-b016-81751881b14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553dbce-569d-4326-aba0-591ccf641a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f4b552-f6ae-4465-bf69-b9dd2f3a68d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49039512-ef66-427a-aa4e-2f7cf3a30ecb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6e472-87f0-4c2e-ade2-e99b5730b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5634289-5246-494a-a24a-f8cbc497bec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed90e3c5-d327-4f82-9d0f-b0a8781b07f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad543a54-ec90-4659-8cbf-f9123ca3920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab0e45c-d9fe-4a05-8d5f-7b0f37aea2d3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229fa4d2-4eee-4ced-8187-a7b781096413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7de185f-77e2-4597-9104-5b08af6260ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6374177b-186e-45a6-a067-592a7741ac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa81cb0-e8d5-4cb9-b9c0-87941aebe09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3635bc-75ab-4ee8-b27a-d7afc3365030",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993754f2-bdd9-468c-893e-3aa9b3d96bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ccbbe232-e6c6-47d8-b5d6-9b4584431fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45af2afa-bcdd-4abc-a713-b327fcbf89e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2f1a68-6250-41df-854d-634469b6d430"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd5cd46f-c2f1-4ff4-b737-e01a9490f90f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff6b1707-4ccb-4e0e-b405-ae461ba829fe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c056a542-132f-465a-8afd-65b3aa13fe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5416ff28-3f5e-4c03-8e8c-ecdfa3b3f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4c275-0a00-4127-af9d-31f3591f9a5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c30fd4f-e56a-47fd-9562-7cdce353e1d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b752ad1-02c3-43b1-a059-76090397a389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "720a2e9c-0981-4ddd-b8f6-cef9d3e79bf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee1bb661-6870-44b6-b347-aaf97a42481c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3170381-8b35-4c13-9684-70f95465e6d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9018f02-833a-45a0-af86-a72bea91d1d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4d1841f-0daa-452d-9ac5-091eecae8030"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a30907f-adee-425f-8c5f-d1c673ca27ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c06323c1-d102-4183-83a8-9508b4a71d4b"
                }
              }
            ]
          },
          {
            "id": "29a95d74-a99f-48be-ae5e-66770c758773",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe783973-9442-4457-a8db-6ea12dcad822",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "750ad5f3-97e9-4231-9604-2798d81400fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2931b7d1-1cd2-42ba-9c3f-8728efa9ca0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff2d961c-7df8-4213-ac8a-857b36c9508f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be8be84d-fc5a-4462-8e65-dc9eda7c3572"
                    }
                  }
                ]
              },
              {
                "id": "ed569212-57fe-4445-95e1-abe5561647db",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b58a07a-d55d-47d1-ae5c-51cd2852f8d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0c7fe75-7488-41f2-a051-f6f665af40ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59c4a7c4-04ca-4460-baee-1bd1c42f7087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23fa68e1-2b20-4511-bc7f-4629deccb2b8"
                    }
                  }
                ]
              },
              {
                "id": "63f18bab-033f-48fe-9e61-c5295513c6ff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87260569-8def-4622-bd7f-c843f8695130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "858f2184-fb9c-4797-9ba5-5301f061b7c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d16fb06e-adc3-452e-b7c7-ade0df89450a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6571b79e-bfb0-4eeb-a6f1-3d5cb38fe7ce"
                    }
                  }
                ]
              },
              {
                "id": "64da7c3c-31c8-43f9-8161-9f9a6153ac62",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4834010f-95f5-41b0-91c0-dcbe2e5dd459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bee95086-dfd1-4acb-9fb7-117fe6f0226b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521d3663-6c8b-4cba-8d97-43a5e752c319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f7e382b-001f-483c-a916-f8657b84415f"
                    }
                  }
                ]
              },
              {
                "id": "90d49332-3d89-4684-9cbf-c8c72e61f823",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95540425-c1fa-486a-a68f-261d9d633a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76534b1c-e84c-4239-913e-1daa5ab57765"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34084808-0271-49dc-b37b-5aec69c446f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "11ef7ec1-2f6a-4e1e-aa88-2f7439d60f1a"
                    }
                  }
                ]
              },
              {
                "id": "34a8db19-3e0a-462d-b433-ff0857ce39c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7833163-9a81-45b7-b94a-5d497ee002bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa1fc4c-71de-44de-95bf-5f8296373c45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414dbacc-839a-4717-88c5-a491fc72359a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb15b966-8f61-465f-838e-d2ab4b0199b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96a08c73-1a65-4baf-a81b-cf1cfe65eaac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bad9533c-a37f-46cf-8e65-50dde8afc6a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5bc9fc02-35fc-4fc2-847d-40459007bcf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a74a8af9-7348-48b6-99a4-948694b5a98e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a372226b-e193-4b55-9401-df0fca0e23f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fc984bd7-dd71-4983-a1c1-e260d9108c6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e947ed-f285-4d70-b102-d51e81272b4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5afdb0e-63be-4130-aabc-b62c4f3a6098"
            }
          }
        ]
      },
      {
        "id": "30461d00-c6e9-446b-9b8e-7e95716cf6e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41bc956a-60fe-4fa7-a5d0-a26f313faa47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53b8b475-6d76-48f4-abd8-71fca861053b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "341707f4-9372-4ee3-8b2f-d978896e30f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bf43c3-f732-407e-9c48-31e7dc1d0ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f5200c-b747-4440-a64e-e4dbbd445ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b2aa17-93c4-47cc-bccc-76503919e514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4e8434-8c5e-41eb-8c05-6c4490bfe3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3a2ede-67cd-4b32-83e1-91c257effb91",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26c4e71-147d-4fda-9701-5433093f4dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a5639a-2fb9-45f7-b5ed-6e338d4ba637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e863715-90ae-4302-b6d9-361862692ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "983c0970-9558-42f8-b213-7a1ebcde477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2187aa-c827-4a4a-9521-bf1b775ac996",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43206862-af7e-4086-91af-0e1ab8e5357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c91cfc-b4b3-4682-b13b-754f9f5c75c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94da9f4a-9820-4c3f-b567-854bcf3a9265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab6dfcf-d888-47b8-a69b-245e1959bae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69728986-4d46-4da8-b68f-cb8134701cbb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2fc102-40b3-435a-9bbc-973f8ad0d16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616bf0a3-375d-4232-b7fd-84319540e5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d3e19f-3ea3-4ffc-8067-01724ef56a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9702dcd6-0c61-4492-bd9d-958b02880db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774ae9dc-6649-43c7-9438-d595fc6fac8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8c6e06-cb17-4a83-95a2-6dc809be8277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ca6318-cc14-45d0-8b38-5e0a572b83ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c17e9a0-ee96-4dd8-8393-392fa44ff325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70500118-cca9-403f-8b6b-27c0c001f99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e64478f-eef9-4afc-acee-8f324df876cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0468049-4710-4cee-b5a9-d24676fbb9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d796285-4c1f-4d5c-9dc8-12cac3fadb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06306b6-d641-47a8-a758-eb969e5485d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f955e583-ff05-487a-8689-0b602236bbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf74a87f-8f52-4029-ad88-71505e1443da",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c67b3a-76ad-4e46-918d-e9e949dd3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccc2f1e-82d5-4eb1-aac5-8d51d2b4a7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8ed043-6840-4570-9f96-dd818e9d7039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae55e953-dbbd-4d64-a409-9bff1a5be636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b92fe75-b4c8-4e0a-914f-af9806c924df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806e57c4-0e37-48f5-8cdd-caefe39a6ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615de534-5e33-4d06-9d9a-7aa527d34b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b7df12-c471-42e6-9155-74f6e133223d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67545d0-c19a-4a81-9e98-01ba5ec065a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e942a8-8015-46b1-80ff-d5368ee23064",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a299d6-597e-4d73-a2f5-1c5b6bd8765f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a508d0-9651-4edd-a0ac-5120ce84c209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a98d3-ea0d-4e6c-84e9-7ac7b25aceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74da317e-9487-49c9-a6f6-9f5a137e08de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948017ee-d73a-4ebc-bd79-1d3ecca53c10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6901e29d-8a83-4e78-a8bc-b2273eb37140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde06cd6-bd7a-4785-bdd2-630b7aea510e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e70d7ac-25ce-4994-b032-9e99a949c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca8c7ef-9026-47b9-8983-ad312049fd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f7fc4e-9fb0-4077-ba8e-b6bf10f62c9c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd70a745-8d26-4ac4-bb61-67925d01f48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7c3f78-5710-4866-b840-9a940ffacf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8ce73a-7f16-428a-ade6-1bab38bed78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8194d9a-e463-4dee-9dec-fc25dd556c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89346d46-eb3d-43bd-8420-f9da8d3d83e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f91e08-7feb-40be-bc41-db6a6ae9d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86815823-1567-490e-ad34-4c2f9e29195c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68c5ba9-4d58-4ddb-b087-9c6895ca4809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad64b09-3bb0-4247-9a8e-35e79f15aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92be8d54-bf99-453a-8326-eb852607dffb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402fd432-dcd0-4e36-afab-62a710abf6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e78a681-e3cf-43e9-a960-5164c01b1231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86c1790-75d5-4ae3-8a82-df8b7ea3b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be430fc4-7065-4dab-9ca7-8215d1c7a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2027a42c-c6d2-48c8-ba62-04c83f4cf025",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eda16ed-cbb4-4062-8955-905130eab33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43615cc8-be7f-4830-b2fa-ba2a2d34c499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9673b9bb-156f-46e0-84bf-6e7001396515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2509f719-2c73-4a9f-9be2-9e1da8cb827b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a8f80-8a8f-4ec1-ade5-7e40c753ca1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023fb4e-adeb-440b-a3b8-f17494ffd1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a60242-bd6b-4868-bc22-4bfbc9a29a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc69f5cc-cd51-4501-918b-76bd658543e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4563aa09-c46a-44fb-9130-a5d31871ed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affdf37-ef93-4a6b-906d-c2813d3c0618",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1d36c2-7164-4750-bb7e-ad039f75c8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358e46a3-d74a-4190-bdfe-5c405fb34d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e612d9df-cd91-4b16-816c-0b7b00ee679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "562a7edc-0ee4-407d-ba58-7a14102c95d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b04d5e-97d0-4246-89a5-896ea41709af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ccb63-976c-4c99-9a20-1612b0b468d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b16ea1-363b-4315-b58f-1b9cb4555a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8192a16-2588-417c-a74d-667688f33dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aafc8c9c-1386-4580-bf0a-5d61a2b598f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1eb72e-8e7a-467f-9e63-2cb5f20159d2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f41630-d691-470b-b94a-eb8d4778c4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5a468b-6521-4ab4-af7a-8fcbe96eccf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20442710-d6a7-4809-bff2-76c100b0898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46897fa4-972a-4b6c-8daa-a1915f606b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33564fe-920e-4222-a69b-bff5e6ce27c6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba550357-60e6-4b08-8205-bff64ccd585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1a1f15-3924-438b-ac8d-eb5956bd1a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee038c78-3bb5-41af-851a-3012724f7e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e541783e-f18a-44ee-bdb2-5413564cf5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a04452-f92c-467d-9713-c0dafb17b8d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9404b3-5297-4643-b4a9-553b27415ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af3428d-746d-4b5a-a9a8-b7fd2163e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac300e43-8d7e-4466-9ee8-ecf5ee830d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe62b2b-f89d-472a-8ccc-c916037eb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1393cf47-0dff-4464-b0c3-e2318d5e6798",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7942f3d-acb1-4026-922a-8204ac1df7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fe7b2c-319b-4ceb-9b3f-6783a70a5843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c1250-e17a-4ad7-a7c9-0f0638d4cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "210e629f-7da8-490a-a551-b2c962485d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8357f736-f976-46fd-8944-bee6ef498264",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9f6e9-2980-44bf-84eb-982c837452ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19cb9b6-a316-4a32-9b2b-1b18bc60ea06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dc57bd-8b55-4af1-8cc6-24c24811bed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5faea0-b663-40ba-bd70-b2e0b60213b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0fc2fb-939f-44b7-b314-44d95c7fa83e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8225d5a-c770-4eeb-b58f-fde2c9fbbec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4756858e-bd7d-4717-96c2-d7108f749e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392c687e-86f7-4e7b-9238-3d21fbf0c969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a6fd43-fa4e-453e-979a-e988ad8a83e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6c21d6-3133-4615-abb6-615531b5fc02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb768842-d999-4528-9693-380b0d05d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4164afaa-971b-4260-8eff-f9ae250e0529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a50f1bf-86a3-48bc-9d0f-c7eed978e14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655ee1bb-f033-4887-9ad2-2b15441530ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e757d1-eee6-421b-aa5d-8947b6ae4197",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6df5a-bf76-4923-ad5b-d1c029cdc47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ea7206-8ad5-4bae-ab19-520fd0fb83d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14391f9f-e8ee-4d6a-b06c-866d90f47668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f472bfe8-b003-43f1-b9fa-c4604d599800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b84ba66-66ce-4e6b-a7d0-0591a82bb7c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd220d-be2f-4c95-af6b-948f7c3dcb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721282d9-6d28-4a06-aa21-178cfa5f9299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece6c8c-3899-43c9-a56c-650e803036cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509db879-7752-4d6b-8125-43625a93530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804ff2d6-4841-45d5-8ea2-eab02950ebd2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcecf39-f732-40ae-96d3-dcd256f1a8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bea5ee-a0de-4671-8092-b9c991444746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1c0c7e-7866-40b1-a6f4-a1decaf89126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d787696-46cb-4c42-860d-c5e8c5c50899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560acb9f-1602-4a63-a446-478e5fe3f440",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545e79ad-95fe-4c2e-a881-646cbaf02821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db73d365-17b1-455a-a8f2-e0e030316ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c6258a-7e18-4c92-bfe4-87dff800cfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1e0e9f-343b-4482-b8ad-0ac331282729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5b01b2-1aff-4e05-aa13-8c06a79307cf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0d6495-295e-4cf4-b9ab-6e27e40d64ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae91ad07-1cfa-4095-926d-08e760742590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c5aede-318b-41ce-bd0f-eb9cdad438b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9a695-35c7-4896-a424-1e011b2154a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e12304-0b17-4852-b862-fee41f53d8c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a942f1ee-d95b-4c96-b507-dd58df7d6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320e7c7d-a49d-4a4e-80d3-a72232ae49fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fed2663-1df0-4c6b-8d66-7d904d0a066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2c7172-5736-4841-8c81-cb74a073d996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d27bc0a-6379-4855-9b11-a7a868a92d50",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54136205-5b60-4858-9a38-1a2dd4468813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507e6cdc-770f-4536-a83c-b88bd47f75c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3700deca-a562-4dc2-a177-35c847f443ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20ba731-ae16-454f-b73f-40b482436d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e348f86-78dc-41d2-b075-78c9643698c9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2304c33a-ea59-4fc7-b5ac-a7d9c9bacb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f512c511-f8f2-4841-9969-b8fe1aa4be38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d5fb58-20c0-47c2-9b1d-1294d08e63ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cd43c7-59d8-4603-b454-41beca6480f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31d1d29d-81e3-4078-aa93-8fc5a1a5e658",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc384c40-0872-4461-bbd7-80ba90820f2e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef1e134-ab35-49e5-93a9-6e565d986c12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7c8076-2726-47a0-9e4e-ffbfc007854e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83ab73-3890-4e3f-9be8-fe45e8d291f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94126b34-9833-43f1-a3c2-febb79650659"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97c0cdfc-5583-483f-a2be-5f50fac9f2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac47c360-9d96-4c40-9d20-40d66a0c9e24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22edc121-cde0-40df-9d51-ab948c074eed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c782891b-1313-4d1a-8d50-7a1909a29c38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "865ff92f-1f6b-4606-a954-8f6e2cd0b263",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "538a8f93-092a-49b5-9781-0eab5259e966"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f41ac32f-6b83-431b-be4b-9ea308fe6086",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1149c4a3-3441-4121-9fa4-b842bf03d9ed"
            }
          }
        ]
      },
      {
        "id": "3e8129de-950f-4921-8806-4e73dc42d200",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fd9edb5c-da80-4e9d-bb04-b4c547528bd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcbbdbd5-bf5c-412a-b8e4-53f45193ea45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d6ab8a5-df10-49c6-8589-185fcade5b0b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76569f1e-37e6-4626-814b-132efc815e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c3eb12-ea3e-49c0-ad7a-da7628b1b434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc55a43-df80-4657-b550-e9a0dd5d5b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1d9867-57a1-4a7d-a9b6-9c327a23f881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea0b6a7-7609-4d22-80f9-8cff37fd8e48",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4188b622-0161-4c3b-b878-b9a5cbeb66f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72aa5de0-a701-482f-affc-1f61b0e31fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae48127-c20e-482d-a37e-ab1ef9392364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a7c798-25dd-4054-996a-68352123a9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42254265-4a61-424b-b6ec-7fd8e64dce43",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c8ff59-a359-4eed-a88d-ab39797f1cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24954b3-5e0e-43f9-9a86-095b52eee27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b5947-f1ad-41db-8a3e-ac2675292e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed587732-7d86-444f-85ea-03cb0c2b5d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704b2f78-a6a4-4dac-88b5-a4bbd324e5e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c7e02-8b2c-43b0-8649-c5573e7886f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e11a90-aaad-42ac-869b-1864a3677749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ae21a4-6194-4142-9c36-df968160da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5f34c4-f72f-471b-8a0b-787d131deda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5f800d-4aa3-4b2d-a2e8-3d979ae88cd4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acbfedb-ff49-45da-895c-abaa2698247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e739de1-af5d-451b-9569-ae00b5a6f680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306d16a7-3aaa-4835-978f-cc8d37fa3af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "140e9264-4f12-4579-a039-8bcae27ceda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520ece3d-85b0-4e22-81c7-959c8c853ab7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190c06dd-39a0-454a-bd05-d7d229b2ab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed902ee-6cb1-45ec-9817-ab974393bad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda63e25-7f8a-41e4-b4cf-0280746fcede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10800495-dfaf-47f7-b374-7d882da9ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9920563b-055b-49a2-a044-009ac05a37dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ab490-8f21-43bf-b201-11f2a498ce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d54637d-7920-455d-b1a8-ccfe6d9f11c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893f5143-c076-44b7-8bd3-2765964fdff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf25466-2497-44b6-b8ad-48a9f45c03a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b59122c-22f3-4319-b275-ee6b2b028055",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d028b6d2-2119-450d-8e2e-d3e582dc8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e406a126-db2a-4aae-87cc-99bebd82a5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a3816d-bfa7-4a07-8f10-0a6e824346d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b24a7309-bc49-4987-bacf-f0c91da9852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0322ef64-0cdb-42ac-bec0-07b6a20b71a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ada832f-db32-42df-8959-25a1adf8d987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4f5955-4bd0-4ccc-9569-5c0599b6d6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4607cd-79c8-4165-a207-614d5c627d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe86ed02-0471-4958-9cc9-cfbd94feede9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be13e2-b3a4-4ac0-bdc6-b5f7f9eb7aa3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed49484-6383-4cda-9b63-7cf4197c9ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ee3fc7-1acf-45d0-abf9-3edd9442117b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a1152d-c023-41c0-8a51-19740b59a32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "782c2d3a-9a81-422c-b66d-9a5197f940cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed388f8-88e8-43f3-82c9-1f4505c447f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26cbf42-efd3-45fc-babb-9bf7feafaf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36eff81-b744-46ac-8823-084573bb6bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b044b184-cb85-4a49-a934-6f4c2718728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e949c760-480a-4393-8f50-ee476ebc3351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10bf2ea-cddc-4c71-a2e4-f53f714e442c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dff731-f438-4788-ad2a-eb70f54b0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47786b8-a259-4487-ac63-21a9e495e22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9a9ea0-5173-446b-a84a-29f146009418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08817ec7-8ed1-44fe-9f5b-ff55afd5cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68f5630-82b9-4eb1-8be3-9201833d2a78",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9229a8a0-fe68-42f3-8c71-67ff901e5603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142484d7-ad64-4ba8-910e-f56750327a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffaa32a-d6d9-4ec8-94dd-ab7fac63c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c2daaa-8dfb-4746-b5c1-ae849d91328d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633c7f6a-df9d-48d2-b809-f65318bbf0f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4555d453-15d8-49f4-9de9-ac6f4eb10636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c90818-894f-4133-90bf-70ad4ecc0cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3841977-280b-4253-a236-90c9e0c73404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d790c6-7a36-4289-96f0-0ec07bf7cc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cd9560-0d0f-4eb6-a7bb-83fb3fe912b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb2ca77-b110-49c7-93cd-8086cc1836e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7070161d-b9d7-4836-8678-8ff14ff7eb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abdf6f1-8a63-432d-9fb1-a44997634d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a97d76c-5a06-44bc-b27e-82e7cf5bdd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4363428-9210-403a-b65e-307c6fd10abb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7092d9-4187-4427-a7ff-49e94be69ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a080366-0cab-4428-9c23-f645913c926e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bc6a86-225a-4de1-ad80-c89cfef287a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f809c6f2-1efd-41ee-8d63-29be0e9a406d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b02503-a01e-472d-b51d-2cd7251b4134",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcea458-b6aa-420d-85cf-0e9d56989e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe750e5-de6b-4e85-9c26-6c862991d52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1f3824-a3f5-4348-bc21-7b5fe925d969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f78a262-6316-4305-9b54-7da4779bc1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61806485-c98e-4d70-8128-56548cbcf08b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0c5f49-aabf-4ac9-af81-4e6dcaa27093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7eac39c-a38a-4b34-91b2-a0a7c06267dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c01d4e9-6113-481f-aa07-54e6d14c5b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fbd304-1087-42cd-b923-2dc8246a2208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddf6d1c-fea2-4b08-9529-bbcdf3e6b82c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3df02-33af-406b-a06e-b3c855fc30ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7ad5ad-f243-4789-9dc6-e23fa2727014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1885888-d963-4ac0-afb8-0430f52c2c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5670fd2-4124-4971-99cc-125cb0f058a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c33dc0-e60d-4045-a8c2-e80c7cc09a19",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e0d3c8-620f-4b53-864d-7d116764d026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3af9d4-4f4b-4467-a8cf-99090d150dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20138a6f-caa2-42f0-a7d0-abf2b47fcf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb832bb8-dffb-40f1-a68e-05326a594101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9c0211-727e-4b2a-a845-7554300c5f07",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d133f2f-d52a-4825-8595-f135f68b1d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bae9b4d-533b-411c-9133-0c5753032e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d4684a-52dd-44a2-842a-c1499b28bdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c2dc0b-76a5-47ad-ab05-cad7e4763d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cb91da-5134-4428-a2e1-0d69f4ede297",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c319d81-f0d3-4a41-8a31-a10b46b1b322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1711a3d-6b93-43ea-9d52-94c89639893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6728239-7ce0-4c2c-baae-e32959e5c7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "194190be-2b8f-41c4-8671-8f88d1f9efe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea00a915-b230-4d78-8a24-c537ba56f6ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d87b05c-44b5-405a-b973-1117ed60221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e4247b-6507-42ae-b4f5-e5d1237607fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf226ff-c9f6-4fdb-8141-ea1212f77e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4985a5c-b92c-465c-a4bc-2755bfff911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270522d3-c15f-430c-8b6e-52f3eed79b3e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37115729-8af5-4da4-8284-9f734ca3dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac163c0f-dd19-48ec-97a5-e883d02f6849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d02ca6-8d3c-43e2-ad58-39b919829af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe1479b-4387-4c0e-92e0-a486c6efc2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054c326a-4bc2-456f-9622-5832ec87e427",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd61fd2-4d9b-468a-b438-323ca109c685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa55d77-fbe1-4b85-b895-19eca3723c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eada71-c878-4a4d-a5a6-e225493821e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa080d2-463c-4db5-9a54-3d98f3991f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bddc8c0-5710-471b-a058-3dd4583b3473",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0402bc3c-e0c6-4c31-890b-713a579fce0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1f9228-e9e2-49e9-868c-deb601082639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cca577-239b-492b-87e8-29b13d7d958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd010aa1-c209-439a-8995-1b7925d64de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8951c1b-7a98-4293-b546-3fd7e8ae62e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842da03b-70bb-4585-a791-34ff561a3592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a08850-ee3c-4966-901e-cdc1af847b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78320c91-ed80-4efc-84fd-c5fdef642357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70df008-cdb3-4927-8274-c2c22b49f200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd634504-465d-41be-b0c2-b1aa23e094e6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293b7663-350e-40e3-badf-bf9a9686f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99594a9-d2ec-4c73-b002-365eb9d4eba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6713507e-71ad-455b-8889-bed1a2d7e2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70517c9b-152c-4cc6-923b-afc2c6ae359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88995c1e-e06a-424d-be6a-e0cc791d6b05",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34567c79-bbd3-468b-8b52-5a6f3b2f8ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49aa2256-1e06-45d2-a2b4-d2a5dc9645cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1cc623-648d-4bcb-a3f2-e4508b633cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c9a2d7-1cd3-4b59-b9f7-d7a038777d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e172b2d1-1ca4-4972-a55d-353f50c51c04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568cb8b-4d69-4c61-8f53-9e26c687aa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b579dbb-6e94-4337-9376-4eff38d815b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c7274-237c-4014-8439-d954123f3f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9c8298-2e22-407b-8873-a1c0e7a969ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a72f79b-ca13-4800-9279-01fecf492224",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c5dcf7-4323-44a7-b0d1-b09cb567c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d4351-9407-48ee-b2ed-bd2b903ab838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7bedb9-0dba-4a2b-b439-f17a68f71928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea92687-85e1-4db5-917c-4ef7a1c2aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73b39f2-aefb-42b6-8bdb-0cde0ee442f2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6c6bd-4fde-4397-ae84-1cdccbe5ccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0424e5-8f4e-4d21-af5e-da5be721ff38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ab131f-9f32-47d1-bea9-7be74e4d0d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6793b1b6-4b6b-4e5e-bb8c-bc9deebaa7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb62d4e3-1510-442c-b768-3df7b3ff31bf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f15ab38-9a5d-4826-8e9d-cb4deb59c802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79489234-03c1-4d3b-91d8-9a4e1b1feb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bca236-527c-48ea-bf86-18650bb269a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4a7a9e-891e-4a12-9f94-7a74ba578c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806098e2-2bb4-4a39-beeb-7c638663270d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b6a771-4525-4766-acbf-4e2b873da1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdb5737-ca30-471c-8e5e-c2210d96a703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53d4175-042d-42bf-a789-c6e407dc5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "161cec46-9537-493d-80ea-64dd924fc202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd00fd-5d3b-4fb6-a874-131c44b89818",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef18aa3b-fa04-4b62-a799-63c711fbc7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f6913a-6099-4857-9721-4fcfed5f870e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103545f4-2da3-4a0d-afde-b802e5d7f5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76936f20-4192-48ca-92bb-4d9134e3f9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c1c65a-c46e-4a08-8d2f-01cef2402736",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcb5d73-730a-48e4-9d58-0231edf60ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33752138-1a65-4352-851f-effaa8122cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dbb2a3-13a6-40c4-aa3e-f55161269765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0006e1f0-32f9-47ff-a973-0e37f984229a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0067c1-5741-46eb-b977-59e4510d96ab",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb55195-8403-426f-a29a-c03de59f0da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deea1678-88d4-4402-80d5-8965b78b7827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de9f436-eb3d-4b7f-b8de-2926b6c12fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bb5cb7-b6dc-4a89-b977-37b9aecec08b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "239314a3-5a75-441b-9dc6-da149083dc93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59464390-f9e5-4cff-b933-bd803c55e722",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c259124a-21ee-41a1-ba5e-2b059face2e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "388d1919-449a-478b-a5a9-b9b4b688edf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34f3af5-03d1-4cda-888e-bd175a7290b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de764064-4ddf-4bdf-9244-82c393ad838b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "219d4cdc-68fb-4c26-9e5e-65df979a4f33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e26d9fa5-b0a8-4307-8463-6bc7b14d141d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "262120a9-3362-4fc4-8845-6e4ba81aeebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c2c56a4-4b82-48f6-9057-71d1a4be9e08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4613166c-8b55-44a1-91b0-7464b8588cdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1357120-372d-4927-9b5e-6b64263c8d46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b3684f7-acf0-40a8-9f6b-001995171ab3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af8ac318-ecd1-435d-95c4-065ff276be72"
            }
          }
        ]
      },
      {
        "id": "dc77cce0-9ba3-45ca-89f2-84ea4f700b3c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "630830a9-4161-484b-a4bd-8b87b01bf574",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ef5f80a-1d3b-4dd1-b8c5-62823b5623f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f336382-1139-494c-8f73-4e51a5bf0ed5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b5ac0c-eefd-45a2-aa41-7be461afd963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbec4c5-cd28-4445-b1ad-d654a8f9d2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda9f6a9-562f-4e79-943e-c4f2d1493717",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224894d5-2400-4864-a6a5-45a04df8b5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d50f98-d95e-4a51-9081-ef6cb98369db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41335576-2086-4772-be20-563ba58f35d3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88894b74-67cf-4218-b16b-a91569f4edac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817e9143-ed5f-4fd3-b15d-f1fc41aecc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8b4dd0-6f04-49f2-a40d-87407b553aab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b744c-2d85-4141-83f9-008e383ed6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ad60c3-9130-4e87-93eb-266eebe186a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e083b4c4-bc5a-4f63-9c62-2ade2821f455",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a57bda-b354-4072-8371-8b33fbe35c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9634d535-3880-4b65-9a1e-7ed1594c27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d076ecd-580f-4d20-b705-906fb3c4a3c5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd863e6-a1d1-465b-8d42-8cc587b7d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dd5459-f080-4b8d-b152-60d0e1b070f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cf2034-e159-49ad-aa18-af7e9899f2c9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d40f96-4cc2-4c35-8b8b-a8746b3358a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b513a69-4486-4dbb-8c51-2e6a11346151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d82b1ba-9166-4d2c-bc99-07e14a2b35d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31a12d7-3da8-4869-9340-bdfde41cd569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f5f2a-35ae-455b-a121-ec0838ece94e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dff240-d6ae-4bbf-bbe1-4fd1cb755cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69cfd7e3-5157-4007-a649-23ed18eef06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a80c36-9305-4b04-95aa-b81b206b8a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2648c6-138d-4915-8ee1-c09f08ed8d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be75e47-443c-427d-b72c-73e223b511de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80900de5-6907-4ae0-9f3c-357552f00797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd23e45-cae2-45ba-a4f9-b47878efcfe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf0bab-b3b7-4632-9a03-595c4df5f628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2173233-350c-4bbd-b5fc-6fdf4f01df2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e99ed-525e-439a-aa9e-03a04b33d168",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d4e7d-0563-426d-bc37-68f1622aa006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a803d6eb-72c7-407c-a923-1022d47ef4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c99f55-076d-4ebc-a07b-1ef4a9bfbc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82ed533-1572-490f-86bd-0b6681b0af3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9c3197-f7b3-4e28-8990-7c48690285c0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aca974-a091-437f-b0c2-ccb4b23b9651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51462bf-a4d7-407f-836c-d8b225e205d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62702cf8-094b-4749-8486-6a3a4bd06dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541271b1-25d8-4e94-9333-f9ae9ff85f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44fc478-4971-4848-98ef-1cdded8b1f67",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c8455d-6c3e-434b-80bd-a1d589d8fbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddc6145-6142-4c9c-9471-73e436122ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceefac28-59f0-4590-8d10-545e44692cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40732522-4b14-4ed0-a6bc-510f9e781323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c39c34-cba5-4228-8971-da6d1926fbeb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a37615-22c3-4d62-88ac-74b031e50efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea6c0ac-a848-4181-b699-5310f7050298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494d67b5-b3c7-4240-b404-f596770b67ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1f5e2a-d2d3-49af-803c-3079c6023792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a98a1c-10d3-4123-8489-fc06945144e3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e6a6b8-9e02-47d8-8774-0d81901424ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0e444e-1f16-45be-9fa9-e69afc697fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf8ec8-8be1-430c-98f3-c31f1a6cfdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1571af9c-d6c5-4455-a74e-848e3d7006ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76e52c0-811e-48be-b953-e930a9687373",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa19d392-5e0e-40e4-a640-31a7c83d79fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0883c4-cb2a-420d-8113-dbb8c15f40e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339971fe-b7b4-41c1-abfd-dfc7dc39f98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa5bf9e-1433-4d9c-ad4c-036109269c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d55ce9-b243-405c-8416-0e8f03c81b4e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf3b63-8389-4552-9b56-e77ac399b515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d051ff-1f17-4240-ba40-3a9d55e2b14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b04d4c-8846-4db4-8eff-e2b9808bb2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d096e25b-824e-4c0d-a55e-610aedc9c4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f7d1d5-9e38-4365-83f8-2396b2bd9ac8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23abd74-3085-4570-a394-7689d731b37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c5423c-5671-42b3-971a-653b6e566b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aff767-e98e-4650-a42c-da3f58250db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434c4acf-85e1-4b6f-bad6-b5fe8674b34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845049ea-b569-42a0-aa45-f6cf1275d832",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e4dc0-4def-47d3-994c-111daa07bbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be445c8-1ce6-4c2c-a003-0f493ec20589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e456c3-af30-4330-9995-94e99b1c4975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263a69b8-5442-4457-a46d-912740324b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82580e3e-945e-4639-89c8-b404b9bee37f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184b00e-30a7-4d07-8d6a-985825bd6b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb66a03c-2ed0-45a7-a8f1-ae21b2906266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bfb79f-85fc-4bf4-9d20-951f0398d7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0af3b9-5528-4b42-88c4-6aae40a3acae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2202d866-841e-49ad-b7ae-cffadd57706a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb070586-c32c-40a4-94ff-776e026d492a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d4db2c-943e-4f8e-b4f4-e245d80853c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd52440a-5342-4493-bd04-4c1693ea380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2562a375-cde6-4d9d-b6fc-92ee588e1760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8098f7-21f3-4551-aef7-d9620ae48521",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aee63b0-613f-4ff8-b679-c189bb744950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35bf8f3-d9b3-4ff5-916f-e9817003ae7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98e3377-d2ff-4ce6-8e10-36f0f88e83e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06229fee-4473-4b08-84dd-b59e60dd0645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9675aee8-f00e-4cc9-a88a-5ccafc2d3875",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bee462-4e71-4bf5-8c4a-03b1f098ef53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ecd87e-6f3a-497c-a529-81599b41b920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e6d745-05ed-4c8d-a93e-1572de7b58a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfd1640-bcae-4755-91af-d8affd7cbe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf2fcd0-7099-46ac-a616-4004a78085d7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8c37a2-498d-4dd1-bdf5-e839600dd179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157a77bb-0d6e-46c9-b992-22e6d96e6f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e67d8b-a46b-4266-9cb0-e49e010bcabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19281b8d-516a-43ff-86e9-ac6fc39e8ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df422e61-1428-474a-a1f3-4c7da5c51be7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af95557-c1aa-4f24-bbe4-3d0b5929ac06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd191845-942c-496a-ac65-8265a8796575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f569854-f334-4643-af5b-658126bd5681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef580e61-adcd-4e67-b9be-3a545010c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feecec7b-d7f4-48e9-97aa-81d5108fc821",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4517438a-8ad3-4d21-b8bc-7b5ebd44da50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8578ab88-64b9-4728-a308-3b578cf688f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e0e2a9-1408-41ab-b693-981ee42883d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a60b88a-81da-4b1c-b9e6-c5db7babcbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b9475f-7458-4622-88a3-19ff739654cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db1f805-7f3e-41ba-874c-2bb624647cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08afe86f-dc45-475d-9c48-e0b7966e0437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70698e4-9d17-4f5b-8dff-098fa2ab0108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916fac71-e702-4427-82a2-57563add999e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea6187a-70b7-43bb-8c9f-5d7b53e7401c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb55201-ae33-40ae-8dc5-cc9cd4fa9008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4929b6d5-0c30-4d08-8722-7b0747a6c7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11558148-2847-4314-96b3-27aa5bf1e683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d4118b-dc3c-4f64-b419-5a99c4bb532e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d12f68f-c1da-4e6c-ba3b-8d64782fe4d5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3517f2-59a5-4494-b0f1-76a35e2b7d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4040eafc-1120-45ed-937d-4df2de6333b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3954124-e9ff-4976-9794-c310a5aedc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107ecd9b-ef56-4d80-baed-aafce55a8ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc478fb-b663-4dbb-a9f4-ce2606268b9d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caabe86d-c42c-4919-b437-6ca0d071b5fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d54e8a2-f829-4197-9124-85df6f10734b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04006215-d4ef-4f37-96c7-0c11bd58790f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a379d2e-57ed-4de1-991d-7328146f0dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d39b06-d8d5-4272-b2af-fb476e85b3be",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8806f647-5b71-4b44-bb65-2baebe5f3988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12f9e3f-a01c-4183-aca3-9df66cda82f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0622fcd9-d6e0-4781-a66e-5094559789cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fbc1a6-f1ad-47fa-abad-7ecf8f5bb08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c69526e-8188-4bab-b1ed-fe1b3cb8ecac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e0db8a-bad0-4269-9115-426f070c5cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f62048-8ea3-4f42-b58f-7b40c79d488f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537ddf3a-813c-4745-ae49-338c5957d376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac70999-13df-4eae-b526-63b3ea74dc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fc0af0-31e0-4387-a7d8-3ab8fcb77438",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9684824f-c053-47ef-bb6a-7cf9e9d71691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a124a9-7aef-4e59-90e8-1fc15d1bd2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0f6802-148d-404a-a76e-b4d7270799a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1467d8-9942-41fd-998e-cbb666d51331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d1ab87-05dc-4548-867f-1b8a86aa2d6d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee521a3-1abe-49c1-8ca3-646ec65ffa38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c270c123-dc52-484a-b9f4-9ad157b6fb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e89aba-97fb-4d54-a67e-5ce21969b621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d53214-5c42-485f-b402-3eb8de7d3f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685016d6-b7a2-4daa-a826-2aeb0ba65664",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d926087f-e04f-4b0a-a118-08d45d3bb5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d19f62-068a-4507-a60f-3fd43c21fc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f94434d-1093-4187-ad38-c692b2609389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e786d365-8e75-4934-a10c-c84ecef7c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977ee226-a15a-424b-a5f7-1d345864c70d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b2699-b221-4bea-904f-560116651368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65fea14-e17d-41ca-9cd8-38f811f54be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990a3e84-864a-44a5-8a1f-6e49d255f77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba5f1db-b869-46f5-b9ed-b950030bbe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bac942-d194-4d99-b8af-3eba28bdc35e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d54e28d-f21a-458a-8cb3-52cb126388d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf380805-aaad-47ee-8daf-f878cd7e2685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7084ca-3506-4182-ae61-b2fd36e5e68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991d6457-e953-4058-879b-308fc5d02fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8bac8-76dc-4a7e-b6cb-be929bb23dfd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a85ebf3-a970-4555-b52f-b9872d719e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520f6132-d9a4-462b-b137-be47fffd4479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b0cf5a-bcf1-428c-b4b0-3518940e4604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20536f9c-8e2c-45be-a92b-a6e08d44a37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c402ef2a-d264-4fc1-989b-d41a2928023f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79b23c9-efc1-422c-9e8b-66b7957d32f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fb57b1-ee7f-4e5b-b05c-9f72e69cdd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89a8612-ddbd-4774-b1d2-8b78d199b972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a909ab-1dc7-4ac3-9929-90837defe32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a303d5-9885-4404-b2b9-3a0df49ddb5d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57196699-65b7-4dda-8ab7-fba9b2438b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2bbbba-9b7c-4110-982c-14a70aec0d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c788137-42fa-4ec6-bbde-f026847b1fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd6afd0-dcf6-45b3-9bb2-6b9ccc97ec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151981db-84fb-40d5-9352-73e585e59f17",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984df70f-44d8-438c-803a-d1beff6b1217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e23536-8d8c-4fee-a486-c68e3db699d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789f5412-c078-4bf1-b74a-3dcfc4a00bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006ec06f-d8d8-4796-ac5d-dbda49b459cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79d5a5-310f-49a1-8a01-67b7ab23e864",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4abc3-284c-43b4-82bc-3d33a3d8ad0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5275067-e5ad-4fe1-a427-461144bfff64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cf6ff7-7517-49d5-a75d-ed33323a6428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736321b1-6601-4fea-8c20-890132851b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a64f8-d61d-4fc4-9d1f-15da7dcc23c3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e2cc1a-8c8f-45b2-942d-fbfc2a8b29ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5114f75a-3551-4b79-b124-480c4ae2556a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7204d876-0a31-4435-bcfb-a3a5033e761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e373aee-c94d-4bed-b8c9-9c5b474a93d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7babb18a-e313-4d09-9906-50837434454f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711ac1e9-e81e-488f-a173-458beac1dec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671f87d0-d69f-4b89-a441-979bdba9ee56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc56b5d8-0b4e-4a97-8b56-b5ecbbd76474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22934a1a-b17d-4692-995c-829abb3f2188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9191d6b5-c69f-4d3a-a5fc-d3007b10ff8a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f84e01b-5476-4db5-af23-a5e56d2a5b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc1187a-7794-471c-8cb9-91af3907aeae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb426571-ac09-441c-a0f1-dcb3d2f61364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d7927-4e08-4298-a2ba-146fbe1040a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e79e245-6a3e-43d2-b4f3-8c8d8c454a5b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ecb1a0-1878-41d3-8c79-d4c70e9cfa12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3903ed-7e24-4df0-80f3-03a2fbb8efa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5c94cd-254f-47df-ae53-65ad5a16b523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6a8af1-3200-47e2-b12e-5a7847b051b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9e7145-b9aa-4114-8f8e-d4a262afd6f3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d671adca-b87e-463d-9f51-92c9eaa3573c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3421b860-34ad-463d-8f0e-7a944c8912b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf987825-fd5c-4b19-8be5-1cc9ea0839e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91807b0c-fc06-484e-b550-0f21d554859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7913db5-4abd-4adc-8eb1-969ce8fee311",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f34db90-3725-4509-9f88-bda94845297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486c40c0-831e-4bcc-b9c9-8c12a0654403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36601a-57a4-4012-8d0c-29254e6b7798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d050c5-07c7-4998-a55e-49ae592167e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939971fd-9df2-4d6b-9e0f-03293d7931a8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c5675-2691-42a1-89dd-9366e92cdf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10d2c1b-40e3-45ed-8d50-d07e3d34b531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6744bbba-cb49-43a5-afb7-0039ffe6f87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f08c4-1f3e-4587-a7f5-9d1b483abd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d4e380-d031-49df-b422-dfbe03b58f87",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c264afd-9bf8-4079-b1c1-0eeef73a3962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd406bb-31a2-4a05-a23b-55153a3bc34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed93fe4-b2e5-4759-8bb2-42cfde07fbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c90a60-4461-481a-b243-fa336436c9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5547a7e-06ea-476f-86a5-eebfef45c824",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4d33dc-7222-437b-9560-43045772d74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a91d04-f02d-4bdf-86dc-ecd4e879d5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f10db8-cd85-4967-b072-2b94527acfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f974f3-f0af-428b-b37d-8c4b54a0113a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a54b16-9248-478c-9a5b-52e50266731e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182ecd2-63d9-45a6-ae34-25a1ab5f80e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e22db9-3359-4c8b-ac54-cef23f23d493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf49a86-ad65-4ac2-b1a8-fa974f7ee8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77657cc5-07a3-4c2b-933c-cbc16d433204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4e201c-86d9-4d1a-8faa-7bb0870b916f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a15fc4-d602-4bda-8e59-984c2cb73ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad58a78a-1d5f-477d-86e6-54752aa8ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051ff24-ccaa-47fd-945e-fea126dbc78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3249a2ac-ed68-4d33-9bc2-55864b3e85a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd60fb2-d793-463f-9031-ec6bc02c3c56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb65dc28-85aa-4e43-b16b-b247c08cc080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763ca2b9-43bc-43bf-aacf-4201ff8ce735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2e38b5-2e93-4c58-bcb9-9386b73f9fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32baf852-cfd2-4423-aeda-0331ca83bea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf02573-2ab6-44b3-98b5-363efcf73419",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f64bec4-3439-4fbd-b7ac-8a6587571c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8277c41d-84c3-4a75-abbf-500349a128a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0615a8-9bb4-4ebd-b056-7d41d427f759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011b6c71-a138-4c22-8c73-f747e302dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1984318-9f53-44e6-804e-777f78e52b98",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4667f9e0-29c8-474b-b3db-e8214c78f24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef8387e-6592-438f-8f54-3d02566ad631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b2f35e-3236-4bf3-bfb3-4e23efb1e342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2101c035-3356-478f-a535-a57f2dabc028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d37584-b030-46bf-922e-1d73b138420a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067a6560-9654-4a44-9aea-f119f1460d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c74e26-6efe-4b65-8a87-5147c05b0a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a61a82-3025-421d-a523-09a587a9c0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3110419-3739-4a4c-9200-8fb9e3bfa55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd10b02-77f4-4a62-ab38-595a4ef1b528",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee212f9-1ca7-4c6c-be97-724fb3692700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4976b3e-a04b-4376-8fd6-811245f14293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66639dec-061b-45d7-a7ca-725332b79c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd70ee6a-9cc8-4db2-9092-dace7b5256b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93605a7-1ebe-4deb-9766-6fe837f0b4fd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3690e36e-5c91-4a21-8ce8-5c139f39062c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c7aaf0-609a-4f6e-bce4-624875f66e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ae6f7-233a-427b-9213-3145151ce7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4be5c5-e249-4d18-81d7-fe7666c6d37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a221946-20b2-4a67-bd43-70ae54c0eb39",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd670c09-4b49-4477-b157-26f52a3841ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b876018d-e48e-4007-86d8-db645aeaf160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a3a797-f6c2-4108-9445-1104884c5df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366d6ac6-c08a-4fbf-be3c-08f6a3232c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b5e009-3e0c-4d1e-a897-4d8747c1c899",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c196e929-052c-459b-be5c-584723dcae80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c629606d-3430-43f6-9fc6-87a75d7f83cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5e1e3f-0a8c-4b18-b6e9-04e88c909ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6092d5-6c23-4a34-834d-d6de1dc39a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5c4296-e1da-4590-92e4-5586cdaf4edf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799c0f03-5800-4691-8715-34bd97cd6890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a0b534-ac77-4c10-a1ad-cfd0532ec0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234b9750-33e2-4c5d-9054-abe3612f2345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04161b20-d4b4-4330-a65b-e93fa8ab872a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d4eba-52b7-4451-9c6c-c51b0ae3d192",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac11ef48-16e8-496a-b25a-ea03304cf2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccfaf07-e27f-439a-8567-60a38ba5b12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65254344-cae6-45ec-90ec-839bd707c62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f07fa4-788e-4b97-bf28-2c68ebb65426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b510408-6a5e-4008-b921-de9ced9908ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64767794-e013-42d1-ba14-da516d768769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e442f6d-90de-41a7-a7ad-14c62d885e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e36f519-f8f5-40d7-a0f1-a6754087481e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10af70d3-e8a8-4948-9fa9-2dd45308414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cabeda8-8dbf-4dd9-8df3-94225777641c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f61722-2d38-4f50-89ce-506b0ca7ae2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11cfd3b-fe15-4a63-8193-fbc7b07ab493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836e8287-1c67-4853-8771-dc442ce6e2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383816ef-0176-4fd8-a628-f82ea653e285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d7548-2406-4117-ad00-9b81f5d692d5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e696f7f6-8dd6-4dc0-a34f-95263a5e688b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73dee71c-5b0d-433f-8ff8-6c915adc8587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef026975-de59-4b62-909c-1668a0cb9cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256bfb49-8fd5-4d7d-bb25-e820c1d3c3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4944a60c-c83a-4835-99e3-14be2b66b059",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b6d2dc-7447-409d-8bb8-7d86a0044727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11387d8-5259-4c18-a03e-7e37f6e0d8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fd3429-a7e2-4a99-9b52-f15eb6c93f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3a35c6-f3d3-421b-9baa-0eefba875655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc97d4d5-e89c-4681-9684-17bce3c02d9e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18055725-b2b2-4556-80ac-3db5dec72a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b91c4c-4359-474c-905d-d9016d542e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209efe27-c6b6-45b9-94dc-027cc18857a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4619558-f6a7-4cfe-adee-877023650b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f89d68e-8886-414b-93e4-04a07a896b16",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd46d19-815f-4395-a819-76feb9479b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b0d2af-408a-494d-b70a-dfdc19ad4614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4690e11-ef31-4120-8601-5725261974da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8baa35-83df-4f30-a78f-54c1e0b0cea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae041df-9c41-40bc-a492-c50b4dfbc115",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0846ccae-05ba-472a-a434-68e65d935dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5631368e-de79-4928-92ec-148c9b328ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a545ba4f-b139-42d1-8c04-b7ef28c4f7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f7f101-b0db-4225-842d-4a5e31c74b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38761c8-4d06-49ca-9a30-ab3efabd7cc7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f08a4-a662-439e-9846-ff2bd73779c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa40d661-91ee-44d5-b223-2b427b7f3cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3a3ca-b48b-4efe-91ee-3f4338101331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd692194-61a8-41c0-83dc-ce7fac8fe39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f53cedb-980c-436f-88e1-a82f4ec164a4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766c7e9-fb5d-478b-90ca-03923b4b7ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c988d3e-466e-4ff1-9fa7-4340fd74521c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95a2ba5-53ae-4c8b-b0ba-675338469c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce8ba03-c8a0-4bb8-bcdf-660681939f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac8919-9f0e-4851-942d-6e0711463f40",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327c7070-2a01-42d1-9841-d91ef2d247b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4834cd0c-8b52-4a9e-92c0-754c5f971c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e004f-3717-4f41-ab95-608f3b13ffd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe6376b-8a62-4e56-a98f-2c8fbe564a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecd8b27-3ebe-457d-91d1-5ab2aaa3ead0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5804dce9-786e-4321-a875-652a41e7ae3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95933ccc-a149-4ce7-8f53-a88b07c7ac88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e8a61b-14d9-432f-834b-1d864071ddb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346e4277-f42a-4dfa-a037-ac411bde0a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0162865-a947-49c6-b73a-02c9d074dae1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1659d475-863f-4a93-b1b3-e367d739c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30deae28-832b-4688-b682-3bcaa39d02f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3826339-4066-4799-9d97-0d177d3e672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a795a26-a9ec-4680-84aa-2c21bbe49e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5984e7f6-2876-48ac-b598-063ec26c577d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e68d5b7-bf03-438f-86c9-647aeec484cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b28b0a-e212-4f74-abe2-846e42a2e5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81d1612-cea3-4acd-8f15-1c1d6b4a021c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1105c925-5b3c-4668-8fdd-df63ce991742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73cd0b7-5646-4506-847c-f137522ef231",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fce6f45-c0b2-4f00-ba80-3f5d57ea7df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d119824-88c0-4d95-9599-de3d66a8af19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01638bb-d621-491d-9414-42ba924acb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea41da48-8f8f-4c8d-94c9-180d31bd54cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6c1ae2-0338-4c8c-9a39-a0c4b76897e6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea84470-ad75-425f-9a6c-b1af2fb314cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "766600a9-a31e-4491-ae00-f79e193d2fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7283816c-df05-400c-978b-963187549c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd698b44-31c2-4f7e-9560-a701121f0b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dce2954-0b9d-4bc5-a9af-5024ca179ac6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7ece53-d963-46a4-8b4a-8bdf25fce1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60fc28e2-5612-4785-b41f-6a41c36dbb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90496f75-1dc1-479c-892f-e02f9df859ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faa1a8d-4cae-41dc-8094-af492c0ae54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f229ef0c-e104-4f68-9534-38e1dc7f8eda",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fb9db1-be71-49ed-a717-7abc1ef30d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861ee104-4206-4b58-8f05-2c1baec55804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0804fb5e-ab41-47c9-822a-ef9ee324b6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f47e4c-c9b1-42b2-9fe9-bb48b0b6d2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f70d65-3b56-4e13-8e1a-68a1c1d25282",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f3764b-2974-4ad1-9505-aaae80f7c467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa51c1d-06de-4b60-82c8-55d37e382460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8380f3-4079-48ee-a562-e42a31f621b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3cb116-3134-47af-9036-65fc530712d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489bf123-1b8d-43d9-a721-63130b942673",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb45091-34e6-47d4-940d-b1212b31c4af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c52f7e-8f05-433d-9b0d-1f3941d590ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b4a85-beac-438f-9a21-8cd2640a7601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3344d8d5-4807-4bc1-bf03-d53f0338a7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2a217-e2e3-494f-b9d3-3cf65c92e75a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae19a427-2f45-44c4-b6c3-e9f846b90dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ec0654-b8a8-419a-8115-acdfe1ddd8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca901f-3b63-40e6-b8b4-e8cdb58a7617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ccbf8d-4a6b-4cd1-ab5d-b030a2d8e906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff98f1b-0eed-4327-ba96-8f46e098d2e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a509e-dec3-4b88-8958-ef743dffb2d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04421aa-0f30-49fc-992f-a07a14d2e4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3047d8-88c2-41b4-b797-c3b976597970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62f64aa-dcfe-482d-9eb9-780710f1fda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003016d-2d24-4664-bc08-8638841c9c04",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e6d92f-47bc-4ced-b240-a24dcb02e046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137cf337-a787-4ab8-9195-00899597fc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffbdb42-4078-48ea-96a7-572d8ae7c9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232ccd63-0c9a-4e1f-bbf4-c961c8098463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01f8c5-5948-4c02-93c3-b97a50b9f651",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace59a9-025f-4e83-a363-c0e5315ba795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5a37a2-f92b-480a-8c8b-c67faa8ad74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e66766d-dc72-4bdf-a66b-113b127fe2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97228750-4e96-4d2b-a794-76332dcb257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3713ad-7eab-49b1-8965-91de4809a645",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d72a1d2-fa28-454d-aae0-168ebb1f5315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7727a9a6-4e42-44d5-b136-311d87c8bb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b194f3d3-c210-48b1-92ca-101103c0650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5418050-8b65-4e79-ad43-5b8bf4e245f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c5702-9eea-432a-91a0-5c38cf540482",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c1df87-8f32-44db-9a47-374a8bb91688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa99d5f-d524-4ec2-b7f0-beb0dd1e3950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ac5356-e660-47ca-a86c-4ebbcdb03ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a039218-4026-48d3-bd2e-db619c08ba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756c4ebf-efa5-45fd-ba15-2e46eb637e5c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e782e340-6383-40b8-9a50-6bd63bd4c832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a5b53c-b976-4311-aaff-3f6efb56a098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9c7ea6-d8f1-4b04-bcd0-f243241f0030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b4d5fa-d96d-4d58-a8a0-5ee22cefe2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51ae386-b158-41dd-a9fe-d1ff00380d73",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd77256-d586-44c9-8014-e60d4399f232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d7f0a7-3441-404f-9ef0-f24e6a50aa68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69606e53-dcc1-4d0c-81eb-023a1cbf5783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eeff17-1714-4047-9a4b-797d82e49d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37ffbdc-648c-414c-bf30-05e190197eb4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e29e1e8-680b-49d8-bcaa-4ae2147bd58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048f09b3-c262-434f-84e7-e89d2c984351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e713aa-dceb-4cf9-a3a7-3581ab6084cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ff6bf-2fcb-4d78-9561-a96fd6944f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb70bf-2ec7-49f7-a21c-9c8ed9cc77c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6df6cfc-3d3e-4bee-9b71-9336d4b5851a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb87645-75ea-4681-b3fd-708f04025e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfb9854-aa5c-45b1-b3df-a7c7fc0fdf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dd0442-5912-4bd6-94d2-8b964b2fb877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beccab0b-d5d5-4e38-9832-796a6af2d5df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2297054-69f1-4f6b-a853-b38a9cb7f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f79680-d3f5-4f43-8277-ef288199bdab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267f221-c669-4418-a7cb-ec70b87033b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61299a2-a963-47c2-af54-1bca16eaa203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c17217-7280-4167-b969-5f04ad860ba3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129d9f5d-d08f-4987-b71e-fe278c1956c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3476b5c7-bca4-4142-811d-1fb388c206c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e35e1-deed-4198-8af4-7f790e403e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37d6e4b-fab7-472b-89fb-de6a1630eac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24267ad9-6c85-4a1b-b25d-5c230d523bcc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4967496d-14ca-4f95-aee0-acfbf22b0747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329073bc-4282-40f5-9f39-592ce7a44b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98afe784-7ec0-4ee1-b3a9-44d3a1b98df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a351a3e0-eaf4-4bb2-a76b-a9567c033a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5efe0f0-06d5-4ca3-9b97-e9b0fb807a2d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf0635-79d3-4d94-b4ae-24aca6ba7b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8d29ac-8fec-4c96-82d8-40c4f33452e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f513aafb-e882-4ec9-9de2-8402224b296c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1aa12a7-2853-4641-96ae-d59ec2f3f819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1186877c-b277-43af-8c72-f308fa8cee1b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33be64f0-00c7-4418-8029-97b57f22f84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038cf4e2-4149-4c2d-889a-e873a3add3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05776e-420f-43f3-89a6-d60ff079c2e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403a8608-5bdf-446c-9039-f952dbcea6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378165d0-e236-40dd-ab84-089bb1628ab6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432ac278-aeb7-4b01-8233-f225517f7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962bbb8e-69ac-4f14-9f5f-1aa0caaf6524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a366e776-a33f-4c3f-b590-402eb7729e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc83a73b-7450-4a05-9e7c-59e597b980e8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2658897e-a82b-4f42-90ef-9babeaa113bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e6db384-8051-4df0-bd06-5a6cbca52b10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cfc0540-f780-4210-86f8-10863cc0a141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cd779ed-f8b7-4aaf-bf4e-28a036aa6601"
                    }
                  }
                ]
              },
              {
                "id": "5c7b8762-9d4f-4ae1-92d9-461a72ebb8a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65360448-5222-4c9c-9894-06018bd7c743",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fb3d8c-5350-4888-99a5-e0271b14c944",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1c6ca543-bf60-41b0-93b4-d98736bff680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e599bdc-fc4c-4ed6-87bb-072418600f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64beb84c-2b6c-4299-a0a9-4c3452e43362"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50539de6-25fc-4a25-8220-9f847e67265e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd250c0f-7de8-462d-86b5-db4304686cf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d9a913e-1c81-4bd1-bc6e-4dba18adb096",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f737db0a-0415-47a5-8c37-b6fdd6a6063b"
                    }
                  }
                ]
              },
              {
                "id": "5f93fc12-8b4e-4d8d-ac88-2207f2f8c243",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "06089fb6-a566-4d29-b362-1bdfe6625fab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82038aef-ba1c-4cc2-ac02-e2f6e542902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "abf504da-de94-4bca-8d0d-cc222042ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5368bd-2bb9-42c6-9ec4-e51799a3a88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87be29e-5342-4444-9a24-26dbfb38615b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7bbc671b-8a86-432e-be6b-a7f0c3c7a8a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ae9f0a5-28a4-4bc2-a975-ea249bb61046",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b425da11-e4d8-4ef3-8c29-9d61dafd7f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0a73aaa-eacf-4858-9f61-740d042e8a1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "115eb049-0a18-43e9-83c5-e5c0d2061f43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "910391b2-495f-4820-a74e-06062791393d"
                    }
                  }
                ]
              },
              {
                "id": "4d13b1a2-d4d9-4a6e-a4ae-9aa75fe74802",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f64cdc26-5add-47dc-8d05-b717275d823d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a9c0303-68d6-4bcf-83fd-7beb8917273c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7f21af-6e1b-480b-8f4b-9c01e9572cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acb3c6d2-d783-45c6-b6ec-998b8b273e08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a572012-ef04-4cfb-8c20-2f1b8c944698",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6c3cf74b-8224-4aac-92d0-a7d60846b096"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7533f710-de74-49e2-b532-8bba411f8873",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "455a569d-9b62-4240-b7d3-d7fd75bc42c8"
            }
          }
        ]
      },
      {
        "id": "b5771458-3112-4fb4-9b29-e6edcbababd2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a8395db2-5b9b-43cb-b127-c1095cf30af5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7257801-06ce-47d1-9fb6-34c5d5a9e31f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5dd72202-e320-4c9d-89ce-6ccb9d3a60a2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974bbf7b-55a8-4452-a22d-09f3914a766c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed2ed6ff-a91c-4ae5-a936-6c10749a9635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa27d40-dfec-4c88-ada8-e56ffb850278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1a01014-94f3-4fdc-9a5e-64e56abb8e3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b742a988-ec4b-4000-b3a7-389bb0e27980",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3044960-9988-4f19-a6a1-5987b1768b3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0c92845-13f0-4701-8b74-270babf6aa26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d2c4cb-ed00-43e5-9965-d3332afb8ecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98a5eadc-2a0e-4c77-a09f-d50fd3393338",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "beb621b7-fcaf-4d85-87fd-cccbe903a54e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6f74847-2a59-4b4f-b9a0-46b1a403a8cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13b28755-4bff-4cea-81c7-4f283b02dbe8"
            }
          }
        ]
      },
      {
        "id": "84f7512d-6d9b-499a-8265-b1abb06506e9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b0b7388-cebe-49fa-89e3-dfb19036dba4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bfce86c-6cb0-4829-bd8f-4456a290950d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a58db3d9-0ba6-4a03-904a-ce3549328bff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0969c908-2c91-46ac-a805-b00948923100",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e796d60-1d97-4170-8fa2-9b2cc7370a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582586fd-c0aa-4556-8462-4e803a071be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6109fce-5f2f-48cf-8747-f7adffab9610"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f19b1185-5609-449d-9a7c-360cf82b9e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f18a5dcd-afbf-4d17-b88a-80acb8cce22e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd87388b-0acc-4b31-aafa-16dc17154fc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ac7b584-87d7-40b7-b2c4-7947042dc9e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b875eea3-f8bf-4d37-a13c-82430381043a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3e9e765-dea0-4da1-8b59-c20fc02b54a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b7db6f6-e951-4c47-9415-03dbe8445637",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7870ff36-bbbe-4c0c-901b-ca854d16e35d"
            }
          }
        ]
      },
      {
        "id": "c1de99d2-0831-47c3-a0f1-d2c8b451d192",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce2d3a0f-0bb3-48ad-822b-eba9c762869f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac477077-b7b0-4e3d-8b15-c564a80749be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6870a3fc-5079-4bf5-9e19-d05a71081ce3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ebf779-56f8-4350-bf78-17ce0a4370df",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93e9f0a0-c026-4eeb-b521-9cfcc2fc5938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c323c0-ccc2-420e-9447-82c25eab6925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7177605d-e1aa-47b6-adcb-c869d42864f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8ee8763-ee0b-40ad-af87-c0f8ace3a146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa07176d-6849-471f-8340-7b9885200d18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e106bf91-4bd2-43e9-82ab-e12ffbb1872e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "537354a4-5323-4c64-96ff-90f57f49f7ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53b8b6ba-e321-4760-8f25-bbc0a45192a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cbeb223e-5d4d-4ab9-b955-9e3e47cb2df1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f83f971a-166d-4d21-8b58-ea96680a490f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59141d6d-1311-4b79-a77e-f968fa31c919"
            }
          }
        ]
      },
      {
        "id": "50784527-2ab7-4079-8119-acf60f438b3f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf6a2060-9553-4a37-a296-2ad361ae1fe2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1136250b-ac7b-4e6f-8e1f-dfed53a13815",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2b5dd215-86af-4ede-8bbd-610ce4030911",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28077df3-a3d6-4c79-a61d-b6b7a5c84387",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a9abdfc-733c-443a-8d96-963b86f098e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 104.95774647887326,
      "responseMin": 13,
      "responseMax": 5316,
      "responseSd": 410.2738929407093,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692491614317,
      "completed": 1692491657330
    },
    "executions": [
      {
        "id": "4637df72-a84b-4936-8ccb-ed355dedaf13",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4fc885c0-59d7-432b-b8c4-4b65c14d897d",
          "httpRequestId": "f4765e4e-9e0e-46b1-b886-a72ee7b0a615"
        },
        "item": {
          "id": "4637df72-a84b-4936-8ccb-ed355dedaf13",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ebe200d9-77cb-4c50-a9a5-a700b3a5835c",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "095d5320-d111-43d9-a06e-76388637aa11",
        "cursor": {
          "ref": "82e4dfe0-9f9d-47a6-90e0-b3b034914836",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce3b0ece-e073-46d1-beb6-12c1e4095d22"
        },
        "item": {
          "id": "095d5320-d111-43d9-a06e-76388637aa11",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dc3ead61-34b0-4122-9e06-dc6c73dc00c0",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "9df46f7a-c219-4298-9665-d5fea31ca0b5",
        "cursor": {
          "ref": "b2496c81-c628-4877-9565-510ecfe4316a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3aa20f15-00da-4709-839a-80c36d16de33"
        },
        "item": {
          "id": "9df46f7a-c219-4298-9665-d5fea31ca0b5",
          "name": "did_json"
        },
        "response": {
          "id": "a4124ff8-8747-4796-b6f9-4a1c690bbdd5",
          "status": "OK",
          "code": 200,
          "responseTime": 391,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d917d426-3ed2-470b-91b3-4a2d214071c6",
        "cursor": {
          "ref": "dd77c5f6-f292-4028-a0a3-ec47e62c21d9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23a06480-775b-4b82-8bd6-fd528933c8be"
        },
        "item": {
          "id": "d917d426-3ed2-470b-91b3-4a2d214071c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "4522069d-5708-46b2-b4b2-55aa896f76e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1142,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d917d426-3ed2-470b-91b3-4a2d214071c6",
        "cursor": {
          "ref": "dd77c5f6-f292-4028-a0a3-ec47e62c21d9",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23a06480-775b-4b82-8bd6-fd528933c8be"
        },
        "item": {
          "id": "d917d426-3ed2-470b-91b3-4a2d214071c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "4522069d-5708-46b2-b4b2-55aa896f76e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1142,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d2a3f7-2ed7-4e09-acae-93702211806c",
        "cursor": {
          "ref": "8c52bafb-8404-4602-9510-2164aee4a51c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f0c92d1d-3b82-43d0-b214-dfe485a9aa60"
        },
        "item": {
          "id": "88d2a3f7-2ed7-4e09-acae-93702211806c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c2bfd9cb-8215-43d7-be3a-9d7882a6133c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993ad882-8d08-482e-8d0f-9729a16398ee",
        "cursor": {
          "ref": "1e24a9b2-0ad4-46de-8432-bd955e458bba",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4dc75c56-a58f-44b5-bc3f-b0ca189db7d2"
        },
        "item": {
          "id": "993ad882-8d08-482e-8d0f-9729a16398ee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3195c40a-c927-4d7e-afdc-0c3f7206bfc8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce985958-1f3c-4465-b520-1fd63fa90611",
        "cursor": {
          "ref": "e56b405b-13c4-48d1-83c8-53a2273b7cd1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "10130d8e-7e3d-49db-a588-8a02f87bf84f"
        },
        "item": {
          "id": "ce985958-1f3c-4465-b520-1fd63fa90611",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "eadc65f0-7fd5-44ac-9cdb-8f4eef03b546",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad15fa0f-9b26-49e5-abcc-f8c866f489b0",
        "cursor": {
          "ref": "d1c0d7c9-d769-44af-bd04-52be16d669ae",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "702aa5d7-53ba-4db2-b423-b8bbc5dee4f2"
        },
        "item": {
          "id": "ad15fa0f-9b26-49e5-abcc-f8c866f489b0",
          "name": "identifiers"
        },
        "response": {
          "id": "d00c1ca3-3e12-4e3b-854b-c57d87c58e03",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d3c306-b97f-4260-8f4d-4b7d2d521de6",
        "cursor": {
          "ref": "e835f582-a3f9-4b51-827a-f9fa2e49ec03",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8c3a9876-2cd3-42e4-95a0-127c40f107db"
        },
        "item": {
          "id": "23d3c306-b97f-4260-8f4d-4b7d2d521de6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b1b96665-2f48-4e24-a0ea-9f6e2c88e596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cf921c-670e-4eca-94fd-0e6209ac6741",
        "cursor": {
          "ref": "ad0d6647-89ed-4cf1-9bdf-25d702e6b625",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "40e6d5fc-9410-46f5-84ac-e610494c280b"
        },
        "item": {
          "id": "06cf921c-670e-4eca-94fd-0e6209ac6741",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ec337b5-d27f-4b39-896b-8c89ed4ae0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795dc32-ea91-4a4a-ad63-97b055f3d4ad",
        "cursor": {
          "ref": "387b07c4-0b12-417c-bcff-a1683a6d597c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "97c2963c-5067-4bd8-839c-085b40688d86"
        },
        "item": {
          "id": "3795dc32-ea91-4a4a-ad63-97b055f3d4ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "33a9e029-de7f-4f72-a245-e250b677276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8413ff92-5c9f-4881-8079-1004d1b8e91f",
        "cursor": {
          "ref": "6c0e0ca5-de88-4ac5-a703-3f71fd72a71b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "080d7e38-2308-4ef0-a1bc-aab0d9b7e878"
        },
        "item": {
          "id": "8413ff92-5c9f-4881-8079-1004d1b8e91f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "450331b4-2cc7-4d7f-b250-ca6cc8abfebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c362580f-df55-4ae6-8983-b09043e95594",
        "cursor": {
          "ref": "7f616b58-1bca-43b4-a85e-975ee232d4d3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8737692c-d882-4522-9f57-e74e7c858f26"
        },
        "item": {
          "id": "c362580f-df55-4ae6-8983-b09043e95594",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "85c7bdad-d389-4fd8-8aff-354aaa53aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95685134-3646-4cb6-b407-ce1986e6ca79",
        "cursor": {
          "ref": "8c500fae-b6cd-4b90-ae89-a730a3f8a225",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "16dc3103-c541-46f7-847d-2314f9bfd1d7"
        },
        "item": {
          "id": "95685134-3646-4cb6-b407-ce1986e6ca79",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a5946f49-7293-4f76-a822-856557875f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4710c-e11c-45eb-84fc-f79e2c2d4eb2",
        "cursor": {
          "ref": "ab126da5-004d-47f5-bb2f-db68ac27f209",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f370d63-44eb-4303-baf1-a01df8550885"
        },
        "item": {
          "id": "7ad4710c-e11c-45eb-84fc-f79e2c2d4eb2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "22cc6165-90ed-4db6-962b-f8f3f359cd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3151e6-ae81-4a4c-8406-f3896dadb128",
        "cursor": {
          "ref": "606f321e-3dd2-4b92-9eaa-d820d17bcf85",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "479ddd41-87e7-49f3-a668-301602fbae1e"
        },
        "item": {
          "id": "fd3151e6-ae81-4a4c-8406-f3896dadb128",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0975ad15-4ca6-47c8-99b3-d4b99e33558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa29f67d-cd37-4b02-bdd6-71e19e320e19",
        "cursor": {
          "ref": "821b90a1-4e66-48e8-bff6-98e6ae83b625",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "be32a2bc-c1da-4613-b421-39c5260dbafb"
        },
        "item": {
          "id": "aa29f67d-cd37-4b02-bdd6-71e19e320e19",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "505a02c2-8c3d-478f-af34-0d07e0a19b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2e7395-c49b-4c99-b562-64e3d0a9cffa",
        "cursor": {
          "ref": "35338639-ff61-4843-8c35-7c5c8d3bdb0b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1969cfc9-4b1b-4815-8575-5926ef29ca21"
        },
        "item": {
          "id": "ee2e7395-c49b-4c99-b562-64e3d0a9cffa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6b0e627a-42f3-4583-af5e-c8442f660f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a45e39-7135-4102-b4f6-b39347082d3c",
        "cursor": {
          "ref": "f3642ced-eaa6-41ac-9734-bf76f5fd814b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "79a8cb69-2555-414e-9ad7-1e33525e8124"
        },
        "item": {
          "id": "c5a45e39-7135-4102-b4f6-b39347082d3c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ac06f2eb-6b1f-4b15-a0de-16c570abd3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a6c48-b0b1-44d3-8927-9b68f6c608df",
        "cursor": {
          "ref": "23fdce9c-3074-4ed1-ba29-254cf74db4dd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1b092710-ec51-428f-943e-ee33a4ae77d7"
        },
        "item": {
          "id": "2a0a6c48-b0b1-44d3-8927-9b68f6c608df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "85948a55-5bc8-4760-a2ac-e9a126fb73eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754b614f-0d7d-4782-9697-b58e317ee9c3",
        "cursor": {
          "ref": "115a8c2d-3015-4c50-998e-7ca4d39d4f65",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7328c91-fbbe-432c-98f0-ff0909f15c52"
        },
        "item": {
          "id": "754b614f-0d7d-4782-9697-b58e317ee9c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "deeffb85-d6d3-44a1-ab27-dcdabc0bb20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bcb9b1-0f20-4bcf-8321-1114b76c2d54",
        "cursor": {
          "ref": "0cb7030a-432f-4a89-b5a7-289f3df8b194",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "83e0eef2-5996-4c62-a64d-ec64d0bb772c"
        },
        "item": {
          "id": "b0bcb9b1-0f20-4bcf-8321-1114b76c2d54",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "76ed4322-df65-4d1c-ad9f-be007cc15e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70cb99f-74bd-4f89-a172-032e06a2a350",
        "cursor": {
          "ref": "5a5dcea2-85b0-4653-97db-24d1e94ef32b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8fe13a69-090d-4d0a-8ecc-50dd0c89b8f7"
        },
        "item": {
          "id": "f70cb99f-74bd-4f89-a172-032e06a2a350",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a00f999-62d8-4ccb-a133-c7d1ea3252fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08f85e4-ee08-4f30-94fe-25f2bfc89039",
        "cursor": {
          "ref": "10598a38-336d-4b00-9adf-ef89f1b18502",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7b21b4b3-cbf2-4330-a54f-4e1fc0cd2ede"
        },
        "item": {
          "id": "f08f85e4-ee08-4f30-94fe-25f2bfc89039",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fde87b19-4a98-4602-87cd-b8eb8afbe4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806b68e-6ed6-4d69-98f6-9ae0288bd4bc",
        "cursor": {
          "ref": "d872586b-ff3f-46ed-a58f-fb6f644fb26f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fd68432d-d66c-469e-84fd-c119be769d35"
        },
        "item": {
          "id": "4806b68e-6ed6-4d69-98f6-9ae0288bd4bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2a23fb01-7ea4-46e3-9b3a-3d2ae9e4c336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3617f223-6ccc-4f99-9a12-571a4629fd3d",
        "cursor": {
          "ref": "39b6b433-f3c4-428c-a512-30044c7d5a46",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b20248a5-b40f-43df-8afe-79c01966ba65"
        },
        "item": {
          "id": "3617f223-6ccc-4f99-9a12-571a4629fd3d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f3877a26-3297-4a22-80d3-d8e3f2407ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e806ec-ac41-4f8e-b0c7-7937fa1e454e",
        "cursor": {
          "ref": "ac825435-8b29-4f46-9161-d10d2e85c604",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "527f7bcc-7fde-470d-a6e2-494f65710100"
        },
        "item": {
          "id": "17e806ec-ac41-4f8e-b0c7-7937fa1e454e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ff1f5084-d5e8-4d86-aa5a-e82b97020153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3a718b-33e7-40af-a0fc-f989dc04bed1",
        "cursor": {
          "ref": "52ce5c03-33df-45ed-b18d-72d095bdb647",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "78c1d633-9060-4f0b-b831-86ab687a0ebc"
        },
        "item": {
          "id": "9b3a718b-33e7-40af-a0fc-f989dc04bed1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "32cfdff1-b5c5-40a3-90f3-964ca5846097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0d5788-c5f6-4e86-92bc-4013f6761e7d",
        "cursor": {
          "ref": "dc8e8361-f5f5-44ec-b7fa-664fccdcfb73",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1eca1e2-8d77-40ac-9e0c-43faa2246aeb"
        },
        "item": {
          "id": "4e0d5788-c5f6-4e86-92bc-4013f6761e7d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "02c14ba8-51e4-474d-8f1b-347e3549be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e526f1e0-9310-415b-9de2-f0ecdcfc261c",
        "cursor": {
          "ref": "29254317-48cd-422f-bc87-759e2d77d605",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5b58be8b-93a7-48a6-84b9-fa91f96a8086"
        },
        "item": {
          "id": "e526f1e0-9310-415b-9de2-f0ecdcfc261c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b3e21452-386c-482d-9c59-fbd951220400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d769f90-c1c2-41d6-a6df-4914c32a5dcb",
        "cursor": {
          "ref": "14d82606-62e0-4bc1-a000-8b6cece24105",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d05e9077-c364-493d-9ddf-0c275df2c2eb"
        },
        "item": {
          "id": "9d769f90-c1c2-41d6-a6df-4914c32a5dcb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "984c6f83-b781-462d-966c-896f52516c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf2a65d-1107-4e0a-94ff-043c09fc2f6e",
        "cursor": {
          "ref": "c8885a02-ccff-451e-a003-5fa710e151c7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2435d63c-ea60-4e2f-8859-ea6c09b035e2"
        },
        "item": {
          "id": "adf2a65d-1107-4e0a-94ff-043c09fc2f6e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dcd7820d-27ef-413b-9f71-bd5f8be0f4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f514b05-eb7f-4448-9e74-20196cd5a2c8",
        "cursor": {
          "ref": "dd18c19a-6d73-453e-b0ab-73506c495755",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7631db83-42f9-4888-9d56-5a631562aee5"
        },
        "item": {
          "id": "5f514b05-eb7f-4448-9e74-20196cd5a2c8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0b06bc25-3e2b-452c-87ce-82a2b5afa6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae0a48f-b064-48f3-ae5e-4445659632e8",
        "cursor": {
          "ref": "0fe1b1bf-6821-4d1a-9d23-f634c7539ce0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d8d55430-53ae-4e98-95ef-c30e020fa110"
        },
        "item": {
          "id": "0ae0a48f-b064-48f3-ae5e-4445659632e8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ebffb85-4215-4858-8c97-87b3c6e6aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af041bb0-0617-4629-924b-873726477323",
        "cursor": {
          "ref": "6f84e266-30b2-4d93-85e1-fcfde4ab03b8",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dd092a33-bae9-42c8-8dcb-e9e634f85796"
        },
        "item": {
          "id": "af041bb0-0617-4629-924b-873726477323",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "be21c6e1-0fde-491b-a147-f8d8945a9a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2530b43a-7923-4727-adce-c29766fca60d",
        "cursor": {
          "ref": "038931b7-9d4d-4d75-a6b3-51ddf31b1b48",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0b69a471-49bf-423e-b64d-feb582966a30"
        },
        "item": {
          "id": "2530b43a-7923-4727-adce-c29766fca60d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4514769-7eb4-49ad-a8b1-412b6fbfe3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5053ba06-13e5-4668-bb1a-5e2b72f89acf",
        "cursor": {
          "ref": "59afee03-b7eb-4edb-93f8-1821881d8b10",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "59524b6f-3aae-4d09-a506-0e4a48a8aa20"
        },
        "item": {
          "id": "5053ba06-13e5-4668-bb1a-5e2b72f89acf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "591a917d-72ec-4cb6-a81b-35935f26008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d402889-8d74-4054-b7f4-111b36f1c37e",
        "cursor": {
          "ref": "c76a869d-5eea-4f3f-bc4b-e4c7e0ad032c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b8bc2214-9c82-46a4-8f62-1c95f6174061"
        },
        "item": {
          "id": "0d402889-8d74-4054-b7f4-111b36f1c37e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c068961e-e904-465a-bb82-c18d2d629d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d11d983-24a1-498d-8f8b-c0d961d13f45",
        "cursor": {
          "ref": "bd285aaa-c375-45df-ad2e-b0f1e44cf055",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "977ba778-fabb-40a2-a8ac-d0cae7991cc2"
        },
        "item": {
          "id": "5d11d983-24a1-498d-8f8b-c0d961d13f45",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c0544e65-3fac-4323-8242-410c644b144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f32143-2403-4ff2-8113-c612c0d6d5d4",
        "cursor": {
          "ref": "67c50803-e2a1-4c9d-b778-7731ee6bd91a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b536d2f0-8e1a-463c-a4a9-0f3753b98364"
        },
        "item": {
          "id": "70f32143-2403-4ff2-8113-c612c0d6d5d4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "586a3f70-5452-43f0-9e4b-877e450388bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cb3f9a-c8a4-4c2d-a8d2-767360f9cd15",
        "cursor": {
          "ref": "ee3323dd-07b3-4060-bbb1-82439b0d7213",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "54253943-a6d5-4632-a178-86e3fe3efeed"
        },
        "item": {
          "id": "83cb3f9a-c8a4-4c2d-a8d2-767360f9cd15",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "291ee826-4bc9-41b1-950e-292534824ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560cf938-55ae-4f64-9b8f-c8baec699871",
        "cursor": {
          "ref": "d8137892-6208-441a-b0fd-7175c561c16b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f7739c04-f215-49f6-a7ef-fe904f72f34d"
        },
        "item": {
          "id": "560cf938-55ae-4f64-9b8f-c8baec699871",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a2b19cb-4bea-4732-aae9-d6198b6edae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade19be-2f2c-4330-ad18-4ef6875a8b1f",
        "cursor": {
          "ref": "2b541529-b627-4542-a4da-3acaf1ca3384",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "985e38df-a450-40b9-9613-3862b2571c85"
        },
        "item": {
          "id": "4ade19be-2f2c-4330-ad18-4ef6875a8b1f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "93a85722-062d-4bdd-9582-26030111edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af34d73-8d79-47dc-a296-c477342eef71",
        "cursor": {
          "ref": "8d7369cd-6ba8-4d19-9f30-7238a526fd0d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8a8323cb-6de8-454f-8581-af1306c35012"
        },
        "item": {
          "id": "3af34d73-8d79-47dc-a296-c477342eef71",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f360f5be-9299-4d90-97b9-cbaa2ee23600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166304fe-4051-4343-87f5-fd6e384fdce8",
        "cursor": {
          "ref": "4d6348ff-f566-407f-ac38-d20b8e317896",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc88a7da-57fd-462f-b4cf-63d3765034cd"
        },
        "item": {
          "id": "166304fe-4051-4343-87f5-fd6e384fdce8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "97f564b3-62d2-4bf4-a2b6-40f70623fe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d3dd0c-219d-4398-b7b6-cd38670b6a3a",
        "cursor": {
          "ref": "8e6c77b4-04f7-4c43-8b3e-635001e305b7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "17e9ee2d-f6e4-4803-8e90-802c1771c627"
        },
        "item": {
          "id": "97d3dd0c-219d-4398-b7b6-cd38670b6a3a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "31356366-3a9e-4aec-abe8-8bbea06ea5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb55a3b-0bc0-4548-8720-1e7a6521531c",
        "cursor": {
          "ref": "9596a529-1d07-471d-8015-cdf50575208e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "793d151b-2888-4b05-9b80-274a540354c6"
        },
        "item": {
          "id": "5eb55a3b-0bc0-4548-8720-1e7a6521531c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "da2d8943-4843-4770-a69c-67ac18a0eb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06bc8c1-c3ca-4da0-8480-a2c41bfceb0e",
        "cursor": {
          "ref": "2e313787-7bb8-4469-a037-7c3dc0b46689",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e6ed6bfb-c72d-4be4-a9a9-b447b32def89"
        },
        "item": {
          "id": "b06bc8c1-c3ca-4da0-8480-a2c41bfceb0e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0cb2af81-f99b-4d82-a6bb-ddabe8d01a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4e6447-59c1-4e50-a480-83beb75a37c0",
        "cursor": {
          "ref": "fa021fcb-4a3a-413a-994d-36d3e522adfd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6b51b447-5242-4507-99f0-abbf4ad1921e"
        },
        "item": {
          "id": "5d4e6447-59c1-4e50-a480-83beb75a37c0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e14cc1a4-592b-42b4-9eaa-a9bf2cdba0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccde280-2918-4ded-a982-4c7ec4c92b2c",
        "cursor": {
          "ref": "d4886b45-c1ac-44cb-9b0f-845fb2323fb9",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "54950334-d305-4913-ba00-921bd29a7020"
        },
        "item": {
          "id": "eccde280-2918-4ded-a982-4c7ec4c92b2c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3517f121-8179-40ba-9034-a01354e03bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11327651-5f17-4ec6-a61e-15633e3b3e98",
        "cursor": {
          "ref": "9b457e2e-f98b-4d0d-8f8a-4ca915926fc7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d54130a7-888c-4795-8347-5b155beea124"
        },
        "item": {
          "id": "11327651-5f17-4ec6-a61e-15633e3b3e98",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "12ec671f-1162-4173-bf36-7ab2fc0c1af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10193411-fcfe-4017-a2e7-640c9a741a2a",
        "cursor": {
          "ref": "28a97561-66c3-42a1-be44-ec9faa016e9e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e60bd13c-7285-4cae-9ba0-66029d4cdf1a"
        },
        "item": {
          "id": "10193411-fcfe-4017-a2e7-640c9a741a2a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "84076e29-a73a-49b2-8a01-db16a3b0b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9e6ff0-4d3c-40ed-bfba-1fbd4f829630",
        "cursor": {
          "ref": "d3d846e0-6b0e-45ec-a979-8333431a2fa7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c11086ab-77f3-4364-990f-104412ae6bee"
        },
        "item": {
          "id": "db9e6ff0-4d3c-40ed-bfba-1fbd4f829630",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d4e426cf-ecaa-4028-bda0-3ef3c4c13441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc21b24-75a5-41ac-ac30-ff35b3f3e289",
        "cursor": {
          "ref": "24c6a574-2ce1-4e2b-b305-01362127bb0a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42cb1d42-4b1b-4f4a-8d70-b48735d97f57"
        },
        "item": {
          "id": "bcc21b24-75a5-41ac-ac30-ff35b3f3e289",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d77ab92b-715c-438e-b4cb-67855448895e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188fb9b1-0c88-4b6e-8051-00a737c29e2a",
        "cursor": {
          "ref": "ebed1f5c-a475-4273-a0da-e656a5f5e94e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5f401fe5-ebed-4342-8dd7-eedc3111f9b4"
        },
        "item": {
          "id": "188fb9b1-0c88-4b6e-8051-00a737c29e2a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "35407a41-b944-4403-84dc-d651566866fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43628e40-1873-45a4-ba63-daf394be5da7",
        "cursor": {
          "ref": "9ed8d39e-c0db-4ed8-8732-92c55f4a5fb1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "235e1974-a99c-40bd-b4c2-469f361b6bda"
        },
        "item": {
          "id": "43628e40-1873-45a4-ba63-daf394be5da7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c2921d6-11da-4d1b-9d4b-948b36551c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42344993-f2bc-4679-9404-5a3e44bedd85",
        "cursor": {
          "ref": "376a5dd3-22f4-4fa2-973e-3defae6e415a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0bd75051-1b89-47f3-9c20-6ac5556d3701"
        },
        "item": {
          "id": "42344993-f2bc-4679-9404-5a3e44bedd85",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3768f499-6ef4-4fa4-99d0-5b1b5b18dca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a244403e-77bc-4095-945d-1abcb00c1153",
        "cursor": {
          "ref": "6e2586d2-3d6a-4648-a710-8a987416687f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "81f8ef22-dc39-4271-b4bb-4845e53b34ab"
        },
        "item": {
          "id": "a244403e-77bc-4095-945d-1abcb00c1153",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "efb0bf6d-35f0-4f0e-97f0-b5c05e0dd5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db0f02-f3fe-4759-8235-05e52be22e98",
        "cursor": {
          "ref": "7c008df6-449b-428d-b3ef-6dc54d2c6b96",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ea2efba5-4c1c-491d-912e-5130a0cf7211"
        },
        "item": {
          "id": "24db0f02-f3fe-4759-8235-05e52be22e98",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e9fa3911-d163-480a-b48b-325add564eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31defd81-0288-4159-bd20-f2b2028a8d45",
        "cursor": {
          "ref": "93d45f53-1489-4380-80f6-46759a48623b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "131bb0df-5f7d-464b-b75c-02273c187ecb"
        },
        "item": {
          "id": "31defd81-0288-4159-bd20-f2b2028a8d45",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "427f7cce-be4f-47f9-82e5-3a3cb82575f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01404c84-2281-47fc-8fc1-abaf9f9b5d19",
        "cursor": {
          "ref": "9d7be8dc-305e-48fd-b117-d31338033269",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "42ab43b5-0c9a-42fb-bf23-bffbcbcc285c"
        },
        "item": {
          "id": "01404c84-2281-47fc-8fc1-abaf9f9b5d19",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d15c2b32-2eb3-403f-9c87-36c1f64a4249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6338573-e67d-448d-b25c-6a8576ad445d",
        "cursor": {
          "ref": "d22a192e-020e-4d53-9c61-71a6fed584be",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f561a53-7c94-4a33-8a10-4b71d4ffac48"
        },
        "item": {
          "id": "d6338573-e67d-448d-b25c-6a8576ad445d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2477758a-9a82-4dd9-aedd-156773e09fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581d800b-df2b-474f-9388-9500ec84085c",
        "cursor": {
          "ref": "b21553f6-6f8e-434c-8459-1b9de4d76d92",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca8a8b94-1203-4baa-8d67-cdf80bbb357d"
        },
        "item": {
          "id": "581d800b-df2b-474f-9388-9500ec84085c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fef6b1d5-09c7-4116-9e8f-19c97df9a6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bf23d6-7031-4a12-8c60-e4d937d4b2ff",
        "cursor": {
          "ref": "ac428f15-4f97-4d4a-9e14-997291e54d59",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9ccdde6e-0539-4f09-9ab9-d6f4b1f881de"
        },
        "item": {
          "id": "e0bf23d6-7031-4a12-8c60-e4d937d4b2ff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9df7128e-b1fe-4e2d-88c2-b9154e080081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35562483-3fa2-4f78-8424-d7ba92c3cef1",
        "cursor": {
          "ref": "048fa8a0-3b73-44a6-99d5-02d24165dfc5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7fc41fff-7f04-4395-b8eb-367f497dbda0"
        },
        "item": {
          "id": "35562483-3fa2-4f78-8424-d7ba92c3cef1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2a6ade0d-cbce-47ee-a9bc-b81625b1f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adfbf1d-91b4-48ed-9202-737263536f37",
        "cursor": {
          "ref": "689460ea-2672-423e-bc86-e3fe1a4ea0d0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1d59430-aa59-4e1b-a16e-347b666c9ed1"
        },
        "item": {
          "id": "8adfbf1d-91b4-48ed-9202-737263536f37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d96482a2-6600-4941-8e46-c28d7bee2dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525c115-9b50-4a77-bff6-166e11e47e85",
        "cursor": {
          "ref": "0dc091ec-0943-4c36-8871-6c8dacee4910",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7b44c907-33b3-401f-b035-2534f08be50e"
        },
        "item": {
          "id": "b525c115-9b50-4a77-bff6-166e11e47e85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "802fae93-9802-4fa2-a26c-a904ac13d184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0c610e-93a3-462a-b03d-0e055531a94c",
        "cursor": {
          "ref": "ed8fa5b4-5164-47c8-84d8-521877ea7e29",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "517550d5-5d36-4489-b25d-79d3ccb18d38"
        },
        "item": {
          "id": "9e0c610e-93a3-462a-b03d-0e055531a94c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "59cd2de4-3d22-42d0-b3b2-9b491398e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142d280-7157-41a0-8022-911003cf2763",
        "cursor": {
          "ref": "0af4596e-99c5-48cf-93ed-371408b0f0d7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e0159d9c-f87f-402d-943d-bc368cd82d70"
        },
        "item": {
          "id": "f142d280-7157-41a0-8022-911003cf2763",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7fef9b8d-306a-4079-93fb-8b136e7a829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce23df97-aa06-4b62-9d85-a24c4691c158",
        "cursor": {
          "ref": "598cb28f-a69e-42d9-83c8-aec5edc8fc5f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0e864f73-1733-44d5-80e7-6b8c4d9f97ff"
        },
        "item": {
          "id": "ce23df97-aa06-4b62-9d85-a24c4691c158",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c307013a-9269-463e-8a51-632ea827babe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acc2ee0-f3c7-40ec-b613-e80a8d68da9e",
        "cursor": {
          "ref": "e2db9453-17fd-49b2-a33c-f147b5f95d5e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b1d36408-22d8-41f0-91ce-c5837596fc2c"
        },
        "item": {
          "id": "6acc2ee0-f3c7-40ec-b613-e80a8d68da9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "72fb6857-2bdf-4ab4-b736-ae9c59987036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa6ddb0-3f88-442c-955c-66df85e1c939",
        "cursor": {
          "ref": "ad042825-ce81-47e1-b1db-97bd2c7ee39a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d48593c-69fd-4d96-b8a5-6f226cdcf605"
        },
        "item": {
          "id": "0aa6ddb0-3f88-442c-955c-66df85e1c939",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "925bb755-daf7-4522-a6e5-50b01315db9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300531f8-25e1-4bb8-b699-c437fb092801",
        "cursor": {
          "ref": "e6b2f7bb-a740-41ff-a016-dcba51238d18",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c7d6dc05-5605-405f-aef0-b287a18ce435"
        },
        "item": {
          "id": "300531f8-25e1-4bb8-b699-c437fb092801",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c7000621-98ce-4d4e-b082-b7536512981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecef2282-5cff-4c76-b73d-8e89ae479b65",
        "cursor": {
          "ref": "f7c2a93b-7655-424d-a511-c4026e4e7b41",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64ada948-dc6e-4aab-a7d2-3f82466995c9"
        },
        "item": {
          "id": "ecef2282-5cff-4c76-b73d-8e89ae479b65",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "417c7d79-dbea-4979-b739-0609e15f1606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b6bcee-2b36-4dcf-8f71-a8584176ef30",
        "cursor": {
          "ref": "46ed37fa-5bf2-4705-8e9b-3b59c432b136",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "611e6aa4-709b-49ca-9d7c-7722b96ffbec"
        },
        "item": {
          "id": "58b6bcee-2b36-4dcf-8f71-a8584176ef30",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cc12cd81-a11e-4acc-802f-9651556dd90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ffadb-ae66-4fc0-b475-b60b17dd59e5",
        "cursor": {
          "ref": "ba907d54-f0ad-4d52-a0ab-b7017d1ba61d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0859c4ad-5619-4983-bd32-33009db5681f"
        },
        "item": {
          "id": "086ffadb-ae66-4fc0-b475-b60b17dd59e5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "681b38e3-4059-4631-8503-5c0209fee3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af62397-ca52-435d-8e8b-99f2e6c165e4",
        "cursor": {
          "ref": "c216b5d8-44cb-43a3-8a3b-9a5e2aeb93d3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b8aa16e2-e489-43e8-80eb-0e77aea657fd"
        },
        "item": {
          "id": "3af62397-ca52-435d-8e8b-99f2e6c165e4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fcc0729b-4f3c-438a-8115-a3f34b55d7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf459a9-b86e-4547-98f8-b71ba2d19db7",
        "cursor": {
          "ref": "b1e8a960-197d-4dfc-aa01-e2f3a387e4f2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eba90bb8-143a-4697-9124-9524ee19c049"
        },
        "item": {
          "id": "dbf459a9-b86e-4547-98f8-b71ba2d19db7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7aad8726-bf6b-4279-ace4-43bbe8fee266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448e1f0-896e-4d66-b73c-de799aae9948",
        "cursor": {
          "ref": "8f929a5d-67e3-4adf-ab32-c84d92bb1101",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "72e58901-23b2-40ac-8198-66ec41403ff0"
        },
        "item": {
          "id": "0448e1f0-896e-4d66-b73c-de799aae9948",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4f9e9932-34c6-446e-affa-594303977c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab72b43-02c7-4d1d-93db-9ab80180f572",
        "cursor": {
          "ref": "8ae4a2ec-e048-4c7e-99f6-2ff54ab5c707",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e1ef112e-7510-4a86-a5f7-9bdf96d7f43c"
        },
        "item": {
          "id": "5ab72b43-02c7-4d1d-93db-9ab80180f572",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b5704f55-6863-4d47-a334-3e0f474c2cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2a4ed1-3638-4c43-b9b3-e6ca5c2fd913",
        "cursor": {
          "ref": "5c0cba4f-20c7-44c0-b966-4fbe7dd85b74",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d3b959cf-0d94-4ddd-a767-cdc91497de87"
        },
        "item": {
          "id": "6f2a4ed1-3638-4c43-b9b3-e6ca5c2fd913",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3532dfee-e1d0-45ee-bef4-13704aaeb6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf6aa1-061a-4b29-bef0-8ace8a511215",
        "cursor": {
          "ref": "cb48a83f-23fc-41fc-b093-4c61e6ba1379",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "912662b3-62de-46b0-b57c-25b6215916a8"
        },
        "item": {
          "id": "dacf6aa1-061a-4b29-bef0-8ace8a511215",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "93bc9265-358c-4126-ac61-6ed32107fcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ee4947-cc6d-472c-8f47-6c2b47b5ce58",
        "cursor": {
          "ref": "4b10c60c-a7e2-4451-b331-b7cc63299aa2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a3efd10a-7f04-4443-80e1-38dcaa96a121"
        },
        "item": {
          "id": "c0ee4947-cc6d-472c-8f47-6c2b47b5ce58",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "79eec6c0-59c6-4b93-bbf5-e7c2ed47d109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ad747f-8152-4d9f-9a20-eff9568f17f6",
        "cursor": {
          "ref": "91c04d5b-8655-48b7-9997-59828498bd61",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7132e2df-813a-4e0f-bf16-1d1d37212d3f"
        },
        "item": {
          "id": "90ad747f-8152-4d9f-9a20-eff9568f17f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8f4ae7b0-2bc5-45f1-971c-fb0b70f7982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c98d3a-dea7-4620-b74f-e7bd78b97ac7",
        "cursor": {
          "ref": "bdf2d71d-275d-40f2-b795-bbbd63db68c7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "10fc01de-7831-413f-ac2d-600a8e2e8d4b"
        },
        "item": {
          "id": "d8c98d3a-dea7-4620-b74f-e7bd78b97ac7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8d18082a-bcb6-462e-a0f0-64e439b74f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4341cf-f19b-451e-b38d-90c365162254",
        "cursor": {
          "ref": "2de634fd-bbb8-4693-b6e6-d54405e33294",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3a8f4f75-44d9-4e1e-9ef8-5928f5a4ae5d"
        },
        "item": {
          "id": "3a4341cf-f19b-451e-b38d-90c365162254",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e946539a-b3a5-453e-9ec4-ef5312ff846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c219709-8470-4323-9f2f-b76b10653732",
        "cursor": {
          "ref": "d60ad0ec-efc8-41fb-a057-d4bf28140dd5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec113a86-5519-4f4f-87f5-441f98085740"
        },
        "item": {
          "id": "7c219709-8470-4323-9f2f-b76b10653732",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7208db5a-607d-429b-a36e-d3dabe62663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd7b8fc-27ab-4cfd-a4c1-b4f4d23f2b11",
        "cursor": {
          "ref": "988a8d5f-c71e-4d1a-a8a0-fa84d71ccce8",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6c3b277a-9605-4dce-967a-71e87be44d05"
        },
        "item": {
          "id": "0bd7b8fc-27ab-4cfd-a4c1-b4f4d23f2b11",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "64667405-c379-4041-abc6-514e597bf309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643be41f-c907-4d7b-a846-dfc98705e28f",
        "cursor": {
          "ref": "6dd8ce79-12c5-467c-a848-1948fe96b30e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6d298c9-18e1-461c-88a9-16993eaf0af8"
        },
        "item": {
          "id": "643be41f-c907-4d7b-a846-dfc98705e28f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e0ccf822-a538-40a8-b329-e999fd822d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5dd0e4-b304-465a-aaa0-6f5c43aaf077",
        "cursor": {
          "ref": "7387db6c-0c56-4fad-b841-a0258391b454",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "76ba2f09-0195-40f5-a711-077c3d0b322d"
        },
        "item": {
          "id": "fd5dd0e4-b304-465a-aaa0-6f5c43aaf077",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8eb2115f-92f1-4418-9c71-153e1a2c31c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7f6cd5-4f32-46bf-b19a-901167d89889",
        "cursor": {
          "ref": "48d6ed4f-088e-4dbe-b406-a91d90315076",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "88eb264d-c061-4e4d-8df8-0951386b9ec5"
        },
        "item": {
          "id": "ec7f6cd5-4f32-46bf-b19a-901167d89889",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ef068409-47a0-43eb-9f06-789b2d1c6f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5b058c-66b6-44f7-9cd5-b2691e49dc2f",
        "cursor": {
          "ref": "18a378c4-4cd0-49fe-bf0a-874b82a8833b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "96fbb337-b4f5-4229-aba9-d268ffe139bd"
        },
        "item": {
          "id": "1b5b058c-66b6-44f7-9cd5-b2691e49dc2f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b5bab3ab-b7d0-4d3e-b2f6-c1f7b7861522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2cbd8c-825b-4c4e-bf77-d3ab4b854faf",
        "cursor": {
          "ref": "63cb0f87-ca91-412f-88c7-9fbd95fb1b22",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6fe3843a-57e4-406f-97b5-6d143fae397e"
        },
        "item": {
          "id": "9f2cbd8c-825b-4c4e-bf77-d3ab4b854faf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb57065b-0f7b-4865-b4ec-9fec6750ae7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfd7bc3-86a9-4a4e-9056-7deceedc1872",
        "cursor": {
          "ref": "2dfd5e3f-9839-42d2-87c2-e1efbf584861",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "62057081-e03e-4a62-af4b-cf158b3689cf"
        },
        "item": {
          "id": "ebfd7bc3-86a9-4a4e-9056-7deceedc1872",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "25199e38-a8a2-481a-a731-66536354938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a826573-13b6-4e70-9b98-78f0bd2193e0",
        "cursor": {
          "ref": "fa9dad62-e5aa-48c4-aaaf-181ab66688f4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "02d2423a-d613-447a-ae35-9b327a99e963"
        },
        "item": {
          "id": "8a826573-13b6-4e70-9b98-78f0bd2193e0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1444536f-8746-4ba0-8071-633a5ce91ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cba180e-af5f-4dfe-aac0-73bfe48795f1",
        "cursor": {
          "ref": "eb9ab5bc-03b9-4bf7-b98c-daaa7a10b9ba",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "df6c9616-bb65-4bfe-b5fc-d365fbedc23f"
        },
        "item": {
          "id": "2cba180e-af5f-4dfe-aac0-73bfe48795f1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "91605965-6a60-4330-a253-36bde9a76a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d51945-5295-467d-aa84-4b097a728857",
        "cursor": {
          "ref": "cb56673d-d5ae-4919-a150-9540cdfb0181",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00852494-9d0c-436e-8141-1446d2db56ef"
        },
        "item": {
          "id": "d1d51945-5295-467d-aa84-4b097a728857",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4794c223-7a69-4da5-b125-e62f73994d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49039512-ef66-427a-aa4e-2f7cf3a30ecb",
        "cursor": {
          "ref": "f8d2717e-72ba-49c6-9a2f-777b4d10f08f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d1c9113-dfc9-4bdc-9972-3fb3addcb00c"
        },
        "item": {
          "id": "49039512-ef66-427a-aa4e-2f7cf3a30ecb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cc3a9905-5c03-440d-b046-07f2365c2eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab0e45c-d9fe-4a05-8d5f-7b0f37aea2d3",
        "cursor": {
          "ref": "80145fc7-e2d1-45f1-a8ff-0b694bd01580",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a342f8ae-5f89-474f-9f34-c544c0f43e3a"
        },
        "item": {
          "id": "4ab0e45c-d9fe-4a05-8d5f-7b0f37aea2d3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fa503133-608d-449f-94d7-1fde066f86ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3635bc-75ab-4ee8-b27a-d7afc3365030",
        "cursor": {
          "ref": "f895e1ca-85dd-4da5-b142-33ce546f0ede",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1af94bd3-3ac2-4e12-9f5d-4d82c6dfc997"
        },
        "item": {
          "id": "dd3635bc-75ab-4ee8-b27a-d7afc3365030",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1292e4d1-c6bd-47b7-aa36-f3173bae7ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6b1707-4ccb-4e0e-b405-ae461ba829fe",
        "cursor": {
          "ref": "62eaf673-e30f-4543-b921-419450a1c306",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0e90e769-3b33-42da-8b51-1903bba695db"
        },
        "item": {
          "id": "ff6b1707-4ccb-4e0e-b405-ae461ba829fe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "07cad14c-96d5-460c-8a58-033020e121b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe783973-9442-4457-a8db-6ea12dcad822",
        "cursor": {
          "ref": "86e7e58f-2036-4f5b-9a68-d3b26624052b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "07bdabc5-8658-47ef-9a97-c01423f36a78"
        },
        "item": {
          "id": "fe783973-9442-4457-a8db-6ea12dcad822",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ab3f3720-d6f3-43e3-a8ae-0681f08b22db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "ed569212-57fe-4445-95e1-abe5561647db",
        "cursor": {
          "ref": "b6d8e820-f43a-40ce-a55a-a1a845de4a6b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1b29d457-4512-4bca-b2eb-aa92cf1c8fbe"
        },
        "item": {
          "id": "ed569212-57fe-4445-95e1-abe5561647db",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f562aa96-f4bf-4bfe-b907-20ccb7a60c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "63f18bab-033f-48fe-9e61-c5295513c6ff",
        "cursor": {
          "ref": "abc4da25-df7b-452e-a45e-7c859e228f3b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1541b03f-b078-400b-a2dd-fc71771ed926"
        },
        "item": {
          "id": "63f18bab-033f-48fe-9e61-c5295513c6ff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "85847784-62e0-4778-886b-78c8ab67e529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "64da7c3c-31c8-43f9-8161-9f9a6153ac62",
        "cursor": {
          "ref": "eb338ec5-48ff-435f-8cc3-9412311fd1c6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bf5a4265-fd9d-4c69-9d85-11c3a4363cb8"
        },
        "item": {
          "id": "64da7c3c-31c8-43f9-8161-9f9a6153ac62",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c6560484-85d2-455c-a9d8-6de78ce271bd",
          "status": "Created",
          "code": 201,
          "responseTime": 5316,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d49332-3d89-4684-9cbf-c8c72e61f823",
        "cursor": {
          "ref": "b9fc7633-4997-48fb-af9e-de0854607a72",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "30b35269-8016-45e0-af3a-5de630865f9d"
        },
        "item": {
          "id": "90d49332-3d89-4684-9cbf-c8c72e61f823",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c74b98f0-3a37-4186-85dd-243433a95c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "34a8db19-3e0a-462d-b433-ff0857ce39c0",
        "cursor": {
          "ref": "48b64c5a-a625-44d6-819c-572b0e6c964d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cbccb4dd-21c4-462c-951a-a8013f47ad7d"
        },
        "item": {
          "id": "34a8db19-3e0a-462d-b433-ff0857ce39c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff28236b-0b80-4197-8dac-73b1b38b864d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "341707f4-9372-4ee3-8b2f-d978896e30f7",
        "cursor": {
          "ref": "5fbbb184-251d-4571-a238-c066a27a35ba",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "355a77ca-3fca-4a92-904e-c21da7e3b739"
        },
        "item": {
          "id": "341707f4-9372-4ee3-8b2f-d978896e30f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ce61db83-8b06-4bae-b1ad-50c447206d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3a2ede-67cd-4b32-83e1-91c257effb91",
        "cursor": {
          "ref": "109b96a2-73a7-4bf8-99bb-a99d1888ec33",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f7199c0-e2fc-4e7e-b871-a5c2cb3be686"
        },
        "item": {
          "id": "0f3a2ede-67cd-4b32-83e1-91c257effb91",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c00bb64c-1bd4-4db1-803e-23c1986b1dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2187aa-c827-4a4a-9521-bf1b775ac996",
        "cursor": {
          "ref": "5e41e847-daa7-4bae-ae1e-c28b357ee285",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d8d0f5f-e204-4ecb-a8ee-49bbbf9704c0"
        },
        "item": {
          "id": "7d2187aa-c827-4a4a-9521-bf1b775ac996",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7be373f4-a4b4-403c-9e9d-25939f2db7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69728986-4d46-4da8-b68f-cb8134701cbb",
        "cursor": {
          "ref": "08dfdc42-996a-4185-9fd1-e510901e5161",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e2236b64-6664-4687-a3f9-2264496a297d"
        },
        "item": {
          "id": "69728986-4d46-4da8-b68f-cb8134701cbb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dbe48787-bbfb-49fb-960f-c3a4c350d26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774ae9dc-6649-43c7-9438-d595fc6fac8a",
        "cursor": {
          "ref": "595ac4cd-9f6a-4948-9de6-f1c812c718f4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "19cf1c67-b5b7-414c-9dcb-8f37063e128f"
        },
        "item": {
          "id": "774ae9dc-6649-43c7-9438-d595fc6fac8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31388315-6031-46ad-9943-57d52100d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e64478f-eef9-4afc-acee-8f324df876cd",
        "cursor": {
          "ref": "ef8fbf3c-14ec-4cae-914a-c4e0c0555c27",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3ae43ddd-9517-435c-b606-09fda5988121"
        },
        "item": {
          "id": "1e64478f-eef9-4afc-acee-8f324df876cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5cb5181-09f6-400b-bf82-52fa31a0db17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf74a87f-8f52-4029-ad88-71505e1443da",
        "cursor": {
          "ref": "d7fa2fe8-6592-475c-a20f-cb21618a85d1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb3850d3-823a-469b-866e-af701455c8db"
        },
        "item": {
          "id": "bf74a87f-8f52-4029-ad88-71505e1443da",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fcb7443b-6528-41cd-913f-bb782ce11edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b92fe75-b4c8-4e0a-914f-af9806c924df",
        "cursor": {
          "ref": "416e61c1-536d-462c-8eba-842ce4dded18",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7d6efdf6-8a3b-471b-8b0b-a64cd4459424"
        },
        "item": {
          "id": "8b92fe75-b4c8-4e0a-914f-af9806c924df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4fad8094-0d94-4e69-8279-185dac8cfa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e942a8-8015-46b1-80ff-d5368ee23064",
        "cursor": {
          "ref": "d3810fe4-8a48-4c3e-a920-6b88a3983bf4",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7a90024e-0111-4886-a858-d5e5f0871aa6"
        },
        "item": {
          "id": "92e942a8-8015-46b1-80ff-d5368ee23064",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d71a6e0-67d6-43bf-9736-294a30e6b12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948017ee-d73a-4ebc-bd79-1d3ecca53c10",
        "cursor": {
          "ref": "a01aa157-6220-42dd-9d04-2d62dba9ddc0",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8d8dfaae-9bcd-4d02-afe6-fd12fcac424d"
        },
        "item": {
          "id": "948017ee-d73a-4ebc-bd79-1d3ecca53c10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "77be7974-e26f-4f2f-8c0c-314142251036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f7fc4e-9fb0-4077-ba8e-b6bf10f62c9c",
        "cursor": {
          "ref": "c40cf248-c742-4478-bfaa-31bb286d6bde",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "903668a3-f54b-47ea-89d1-8989aa6bb384"
        },
        "item": {
          "id": "92f7fc4e-9fb0-4077-ba8e-b6bf10f62c9c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "327c93be-d3af-4345-a6cc-dea54cb78d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89346d46-eb3d-43bd-8420-f9da8d3d83e6",
        "cursor": {
          "ref": "4e8fee9c-d845-44ce-9142-ab2d64974cbe",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c173cdb-b1f8-4c02-947c-87d08b499573"
        },
        "item": {
          "id": "89346d46-eb3d-43bd-8420-f9da8d3d83e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "76016aff-e3fa-4a04-9d8a-510f51f665cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be8d54-bf99-453a-8326-eb852607dffb",
        "cursor": {
          "ref": "31a0caf1-c4dd-4c5f-bd6a-3bf2b0176484",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1a64be1e-f62e-49e9-86f1-726879af3c28"
        },
        "item": {
          "id": "92be8d54-bf99-453a-8326-eb852607dffb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ae533e2-83d5-4c9a-899a-456e76d85ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2027a42c-c6d2-48c8-ba62-04c83f4cf025",
        "cursor": {
          "ref": "bed6dc03-a824-4b6b-8393-2a6740f7c109",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bac9b81a-b2ff-481f-a378-a1adee8ccb02"
        },
        "item": {
          "id": "2027a42c-c6d2-48c8-ba62-04c83f4cf025",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "026608cb-7ae6-415c-8f48-648f823c823c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a8f80-8a8f-4ec1-ade5-7e40c753ca1f",
        "cursor": {
          "ref": "a9e2f0dd-073f-46d5-8b3d-715035d1693b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9d86fcfd-8f7f-4347-9d82-ae8e51789f2a"
        },
        "item": {
          "id": "c16a8f80-8a8f-4ec1-ade5-7e40c753ca1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "677a3442-8a8b-4865-8cc2-e111dae77045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affdf37-ef93-4a6b-906d-c2813d3c0618",
        "cursor": {
          "ref": "9ffbd93c-ebf5-415b-9e6e-37beff163e3e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b07e4a29-1d49-4f94-84fb-023e912c4cc3"
        },
        "item": {
          "id": "8affdf37-ef93-4a6b-906d-c2813d3c0618",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1fdafae7-c5be-4e8b-bff7-620edd5a71dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b04d5e-97d0-4246-89a5-896ea41709af",
        "cursor": {
          "ref": "0d44e0d2-5f9f-4a48-b465-149b3eacd54a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b38ebac8-e539-4eb8-b1d4-7f6978a98a8e"
        },
        "item": {
          "id": "d4b04d5e-97d0-4246-89a5-896ea41709af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7024cf85-65b8-4c59-b75c-91c2bd7696a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1eb72e-8e7a-467f-9e63-2cb5f20159d2",
        "cursor": {
          "ref": "50fb1663-ea87-4eef-a330-5585e012109c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e185dca-0ba5-4b79-b070-82ce18d539da"
        },
        "item": {
          "id": "2b1eb72e-8e7a-467f-9e63-2cb5f20159d2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "393314b3-e783-4bc4-80f5-b71f14b02d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33564fe-920e-4222-a69b-bff5e6ce27c6",
        "cursor": {
          "ref": "d4b64be6-4c9c-43fe-a767-26cfc1b9d007",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9bb773ea-ec19-46d1-9dd3-aea1e7118d35"
        },
        "item": {
          "id": "f33564fe-920e-4222-a69b-bff5e6ce27c6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3d9d6cf-581b-490e-85e7-381392977776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a04452-f92c-467d-9713-c0dafb17b8d1",
        "cursor": {
          "ref": "e3751f20-dc78-46ce-8f4e-5a30b0c2d719",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "375c7825-ef79-4eb4-a924-ad1b0173e7d0"
        },
        "item": {
          "id": "01a04452-f92c-467d-9713-c0dafb17b8d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c493cd1-ea3b-4ae5-a216-f688612f28d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1393cf47-0dff-4464-b0c3-e2318d5e6798",
        "cursor": {
          "ref": "e055c21d-2e80-4a43-88a2-9632dae93776",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "623da042-a1d3-4fba-8952-b550ed419abc"
        },
        "item": {
          "id": "1393cf47-0dff-4464-b0c3-e2318d5e6798",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "09ac95e7-47aa-4f78-aaf9-9739b590aafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8357f736-f976-46fd-8944-bee6ef498264",
        "cursor": {
          "ref": "a1a05857-961c-4097-b3cd-50b754d1f74d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "41532127-2c8f-491d-9554-3162ae9c62c3"
        },
        "item": {
          "id": "8357f736-f976-46fd-8944-bee6ef498264",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c002a1ca-5192-463c-b09a-f40dc5ffc31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0fc2fb-939f-44b7-b314-44d95c7fa83e",
        "cursor": {
          "ref": "34cfbb77-51bd-40a5-927d-5da5242bf95c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5064eac-0041-44c5-ab17-69d41cd64076"
        },
        "item": {
          "id": "ad0fc2fb-939f-44b7-b314-44d95c7fa83e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3537a11e-4e2b-41a9-8ce3-8431d32a59a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6c21d6-3133-4615-abb6-615531b5fc02",
        "cursor": {
          "ref": "dac5b3e6-4777-4809-acb8-664d2fe50a22",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a7be143-6d2d-491a-aafc-ca213f3e7aae"
        },
        "item": {
          "id": "fc6c21d6-3133-4615-abb6-615531b5fc02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54684d9c-e333-4d8e-adf6-cc54dee56047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e757d1-eee6-421b-aa5d-8947b6ae4197",
        "cursor": {
          "ref": "5baa4715-7e0b-40f2-a2bf-76f731f21c51",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "102c93c6-65f1-4866-8fb6-16a47efee33f"
        },
        "item": {
          "id": "11e757d1-eee6-421b-aa5d-8947b6ae4197",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c558fc5-e8aa-45e6-ac6f-ace719917330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b84ba66-66ce-4e6b-a7d0-0591a82bb7c2",
        "cursor": {
          "ref": "83dc7233-7e0a-4ce1-a178-109a8b4b518f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c74c774d-d214-4678-b446-19320941bee8"
        },
        "item": {
          "id": "3b84ba66-66ce-4e6b-a7d0-0591a82bb7c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ae968e46-bbf2-4955-9a76-90ae873358d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804ff2d6-4841-45d5-8ea2-eab02950ebd2",
        "cursor": {
          "ref": "88be94c0-f38f-4daa-aa81-6c154cadad55",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2791a4a6-dc4d-4596-a2ab-061584198c48"
        },
        "item": {
          "id": "804ff2d6-4841-45d5-8ea2-eab02950ebd2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f66d6897-2cb5-4701-879b-5c2d5ee2d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560acb9f-1602-4a63-a446-478e5fe3f440",
        "cursor": {
          "ref": "0d29cfec-dc09-4b7c-bd02-40b32a030842",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4189f876-57a8-4d03-9dda-9d60ce5b55a0"
        },
        "item": {
          "id": "560acb9f-1602-4a63-a446-478e5fe3f440",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dd2b9c95-59c9-4928-ae51-f96bebacbc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5b01b2-1aff-4e05-aa13-8c06a79307cf",
        "cursor": {
          "ref": "e67c30cb-8446-4267-9138-547aeb71b98a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "469774f1-7176-4345-97b5-832c64992804"
        },
        "item": {
          "id": "3d5b01b2-1aff-4e05-aa13-8c06a79307cf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0281f09-2b18-4c3b-81e1-06fe709f89a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e12304-0b17-4852-b862-fee41f53d8c8",
        "cursor": {
          "ref": "7428931a-2597-4e30-bf3d-0e242beb02c8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90976fb4-7bd2-4112-b2b6-a064513f83a4"
        },
        "item": {
          "id": "f6e12304-0b17-4852-b862-fee41f53d8c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8b330183-5e56-45bc-a95d-97e99ad5d2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d27bc0a-6379-4855-9b11-a7a868a92d50",
        "cursor": {
          "ref": "1e646577-36db-4588-839f-0cd54f3f3526",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de29e5f0-3f07-4c46-8fa3-b1e1107d1019"
        },
        "item": {
          "id": "9d27bc0a-6379-4855-9b11-a7a868a92d50",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1202c46d-c796-4e31-91a8-35c5058d64bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e348f86-78dc-41d2-b075-78c9643698c9",
        "cursor": {
          "ref": "e3062c3b-01c2-4199-bc2d-6d1f2c2f0c6e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0f6abb66-1f7d-4cf0-b456-8b5218fa2482"
        },
        "item": {
          "id": "1e348f86-78dc-41d2-b075-78c9643698c9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "02386244-ba51-42ff-9ddb-bb783f85a12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc384c40-0872-4461-bbd7-80ba90820f2e",
        "cursor": {
          "ref": "761b6ae6-b1df-4150-bc78-931cdd7a4921",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "35a1fe80-566a-403c-ac4a-a76c731b4466"
        },
        "item": {
          "id": "bc384c40-0872-4461-bbd7-80ba90820f2e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0dca0879-c6b0-4466-b072-dabebfc84bcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6ab8a5-df10-49c6-8589-185fcade5b0b",
        "cursor": {
          "ref": "91bbb1da-715d-4de1-99dc-78fc88600dc9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "efb599ef-bac3-47d8-b352-0c90a87a0fab"
        },
        "item": {
          "id": "6d6ab8a5-df10-49c6-8589-185fcade5b0b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "063b018a-49cc-459f-a7d2-c59de72ca854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea0b6a7-7609-4d22-80f9-8cff37fd8e48",
        "cursor": {
          "ref": "2135db85-298d-4b03-beb3-0b7f2c6bdf52",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6be4da35-fc3d-4fff-a7e2-d81ee1acd1f0"
        },
        "item": {
          "id": "6ea0b6a7-7609-4d22-80f9-8cff37fd8e48",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecdab40f-07da-45c8-9db9-b46b5a66697d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42254265-4a61-424b-b6ec-7fd8e64dce43",
        "cursor": {
          "ref": "853c9cb1-8e27-4629-a6c2-b7c699d4afa3",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1bb1a6fd-ff70-4101-92d6-4c7c8d5ccaa4"
        },
        "item": {
          "id": "42254265-4a61-424b-b6ec-7fd8e64dce43",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f1159e21-3a3d-40a7-9eb4-2c5f75b51139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b2f78-a6a4-4dac-88b5-a4bbd324e5e5",
        "cursor": {
          "ref": "f6e9d12c-8359-4d73-bd91-9d72016a5591",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5cbdd271-9d63-41bd-ae77-1723f554315b"
        },
        "item": {
          "id": "704b2f78-a6a4-4dac-88b5-a4bbd324e5e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9207966a-206d-4fec-96e7-c150538e3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5f800d-4aa3-4b2d-a2e8-3d979ae88cd4",
        "cursor": {
          "ref": "7a15baf2-5f69-4f08-9cf9-cf034a465770",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a953305-a9f0-4df8-b151-f3cb88284173"
        },
        "item": {
          "id": "1a5f800d-4aa3-4b2d-a2e8-3d979ae88cd4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9dc8840b-7d47-48a8-9f4b-ef50cdf8d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520ece3d-85b0-4e22-81c7-959c8c853ab7",
        "cursor": {
          "ref": "0a6e0f65-f454-485f-ab56-2a6ce083f811",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c6c87bd6-b845-4d7f-b39f-2d2d4e92cbcb"
        },
        "item": {
          "id": "520ece3d-85b0-4e22-81c7-959c8c853ab7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "64810353-f2bb-4690-a808-efabe142f879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9920563b-055b-49a2-a044-009ac05a37dd",
        "cursor": {
          "ref": "211ced53-62ad-4b2a-85fe-644b3db28960",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9a22d1f1-8fbf-454c-bb2a-27aee90e9a6c"
        },
        "item": {
          "id": "9920563b-055b-49a2-a044-009ac05a37dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7df7b867-d564-4f25-b071-a46c01a50f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b59122c-22f3-4319-b275-ee6b2b028055",
        "cursor": {
          "ref": "f3c45334-ebb3-4d53-9f43-b96b2e306cea",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2684a914-46fa-4082-a958-668761ff2b2d"
        },
        "item": {
          "id": "1b59122c-22f3-4319-b275-ee6b2b028055",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ab91abd-9c20-42bc-9598-eb82a146946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0322ef64-0cdb-42ac-bec0-07b6a20b71a7",
        "cursor": {
          "ref": "f58ed21d-3a62-4c58-9340-953cc7247bcb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1d494e0f-c3ac-4ead-8799-04c5df2b4441"
        },
        "item": {
          "id": "0322ef64-0cdb-42ac-bec0-07b6a20b71a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8103f56-e6b8-420f-b845-586a047a2ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be13e2-b3a4-4ac0-bdc6-b5f7f9eb7aa3",
        "cursor": {
          "ref": "fac6ff01-391c-4de1-b226-fcc149db2de2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "233894ca-356b-4325-bfb6-348c7b602c42"
        },
        "item": {
          "id": "d1be13e2-b3a4-4ac0-bdc6-b5f7f9eb7aa3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f00cdb66-cf7b-4267-ae74-0129d5b81575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed388f8-88e8-43f3-82c9-1f4505c447f1",
        "cursor": {
          "ref": "80d81d0e-f746-4168-ac57-d110691dbd99",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "98b122fc-e10c-4a57-9185-3cbcbc082772"
        },
        "item": {
          "id": "3ed388f8-88e8-43f3-82c9-1f4505c447f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1a3a211b-c2d1-4dd6-be74-ee006ed83817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10bf2ea-cddc-4c71-a2e4-f53f714e442c",
        "cursor": {
          "ref": "c9a66033-8484-4598-acf9-c952a57289e0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41631647-e9d9-4793-b49e-578351f6ce21"
        },
        "item": {
          "id": "a10bf2ea-cddc-4c71-a2e4-f53f714e442c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eae5182a-6cb3-4fe1-a514-a90b67b52b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68f5630-82b9-4eb1-8be3-9201833d2a78",
        "cursor": {
          "ref": "fa627c3c-b2cb-4f5b-b44f-6ff4f01627df",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f457065c-e3e8-49d7-aaaf-77ec0076479b"
        },
        "item": {
          "id": "b68f5630-82b9-4eb1-8be3-9201833d2a78",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33219aeb-7d13-4c04-94aa-c7c8131fbff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633c7f6a-df9d-48d2-b809-f65318bbf0f1",
        "cursor": {
          "ref": "4153dac5-5452-4242-bb40-953b3904292c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "afdee9ef-db40-4bb7-8096-7f7ce0e8c9eb"
        },
        "item": {
          "id": "633c7f6a-df9d-48d2-b809-f65318bbf0f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "91455168-0778-46c8-ac87-32dc400adba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cd9560-0d0f-4eb6-a7bb-83fb3fe912b7",
        "cursor": {
          "ref": "d65a426b-3928-4f09-9092-835d355dd1f7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c4645e9d-9904-4479-b046-a4b6a0cf0e50"
        },
        "item": {
          "id": "78cd9560-0d0f-4eb6-a7bb-83fb3fe912b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b576fd53-613d-4fd5-b836-8932b7fcc0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4363428-9210-403a-b65e-307c6fd10abb",
        "cursor": {
          "ref": "a0a74eaa-cbd5-48f0-aff7-cf902c24b36a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16ba7bf5-bb2b-4059-b987-1055c22c820f"
        },
        "item": {
          "id": "e4363428-9210-403a-b65e-307c6fd10abb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a7061fc1-178f-428a-bbb7-47ee8f3e9e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b02503-a01e-472d-b51d-2cd7251b4134",
        "cursor": {
          "ref": "cda5c504-b5bc-43c5-814f-7b774409602a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "743ad2d3-35ad-4a26-beed-9913125e1285"
        },
        "item": {
          "id": "02b02503-a01e-472d-b51d-2cd7251b4134",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eedd1ce4-7555-40d2-a42f-60de6db849ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61806485-c98e-4d70-8128-56548cbcf08b",
        "cursor": {
          "ref": "01d54a1c-3d35-4736-8b02-1cd7dd8e3fa3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b0a1cb6d-e6a6-44e0-9f66-5795a7520585"
        },
        "item": {
          "id": "61806485-c98e-4d70-8128-56548cbcf08b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0d85a061-689b-4852-9581-7b104855ba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddf6d1c-fea2-4b08-9529-bbcdf3e6b82c",
        "cursor": {
          "ref": "9b470c32-ac94-43c4-902e-7acb48b54fec",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ac4335c8-3b3a-4ab0-915f-8f13879599fb"
        },
        "item": {
          "id": "6ddf6d1c-fea2-4b08-9529-bbcdf3e6b82c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a636da7e-27d5-45c9-8506-b82030d8f903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c33dc0-e60d-4045-a8c2-e80c7cc09a19",
        "cursor": {
          "ref": "317b4731-5edb-4634-ba82-f5cd0bf49665",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a8b693f7-fb02-486e-85dd-377861df4065"
        },
        "item": {
          "id": "40c33dc0-e60d-4045-a8c2-e80c7cc09a19",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b3216b27-6744-4f92-bf7b-c031b29d2e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9c0211-727e-4b2a-a845-7554300c5f07",
        "cursor": {
          "ref": "eb716d98-7064-4b45-a452-8236aeb9abd1",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a80e36c-2659-4285-9023-8581d4afd048"
        },
        "item": {
          "id": "bf9c0211-727e-4b2a-a845-7554300c5f07",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d1cabb7-623d-4ba0-80d5-2107ed4e4d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cb91da-5134-4428-a2e1-0d69f4ede297",
        "cursor": {
          "ref": "55d0dcd0-7909-4267-a658-3617a3e02138",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca6ec8f2-7a56-4eaa-9e00-3ef992304465"
        },
        "item": {
          "id": "07cb91da-5134-4428-a2e1-0d69f4ede297",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0151af03-8b46-4c5f-8517-d2ae2b677fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea00a915-b230-4d78-8a24-c537ba56f6ec",
        "cursor": {
          "ref": "4ee8bc9d-8964-4b3a-808d-c8b449731df0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9d9bf4fe-0d2d-4072-99d1-67b7763af0da"
        },
        "item": {
          "id": "ea00a915-b230-4d78-8a24-c537ba56f6ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1522e532-84e2-4d37-a8e4-34e4ab76ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270522d3-c15f-430c-8b6e-52f3eed79b3e",
        "cursor": {
          "ref": "c460ed08-8576-4356-8f7d-5a2b61641170",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "23ebc8d0-066d-4562-a818-037b71a683d8"
        },
        "item": {
          "id": "270522d3-c15f-430c-8b6e-52f3eed79b3e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "58ee7227-2002-4c40-a9c2-79843be2534b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054c326a-4bc2-456f-9622-5832ec87e427",
        "cursor": {
          "ref": "bc99a4cf-de89-432d-952a-8df5431bf132",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ff65c574-c255-4c73-ab7a-6cf425aed6ba"
        },
        "item": {
          "id": "054c326a-4bc2-456f-9622-5832ec87e427",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "914f0f02-d300-4a41-a684-9bc045656eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bddc8c0-5710-471b-a058-3dd4583b3473",
        "cursor": {
          "ref": "479c04ee-8bc4-4bb9-8af8-f8d57b71a197",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a8b69e89-322e-4f23-9d82-5870569e0864"
        },
        "item": {
          "id": "3bddc8c0-5710-471b-a058-3dd4583b3473",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7088fa4-c20a-4d41-9e7a-94e570770dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8951c1b-7a98-4293-b546-3fd7e8ae62e9",
        "cursor": {
          "ref": "3473da9a-64a0-45cc-9264-a7cc1fd540c5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eafeda60-9fbd-4746-9fbd-8cd281b4282c"
        },
        "item": {
          "id": "f8951c1b-7a98-4293-b546-3fd7e8ae62e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5a8071be-4551-4615-8382-45cfab3dafdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd634504-465d-41be-b0c2-b1aa23e094e6",
        "cursor": {
          "ref": "2e0c5daa-0981-4768-9255-8533ad53269e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b259f0ff-3de0-4b50-becf-fde6d19488ae"
        },
        "item": {
          "id": "cd634504-465d-41be-b0c2-b1aa23e094e6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "163da5c9-ab09-466c-82a1-14c5dfdf8beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88995c1e-e06a-424d-be6a-e0cc791d6b05",
        "cursor": {
          "ref": "b35fd5dc-18f1-4699-a3a2-3a1e9322cd9f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3028d14c-681a-48ad-913b-0b7c4c272648"
        },
        "item": {
          "id": "88995c1e-e06a-424d-be6a-e0cc791d6b05",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "505fae09-9c4d-4d06-88a6-c24dbd68eecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e172b2d1-1ca4-4972-a55d-353f50c51c04",
        "cursor": {
          "ref": "e09f2b00-9782-42fe-a926-e6bc55b1e5c8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "063f6d65-9322-437d-b08b-bb2d06a4e0f1"
        },
        "item": {
          "id": "e172b2d1-1ca4-4972-a55d-353f50c51c04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "878ba8ab-874c-423d-ad1f-1188f2f529d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a72f79b-ca13-4800-9279-01fecf492224",
        "cursor": {
          "ref": "45522a55-ca81-48fe-b9e4-989c9618a058",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6b735295-d82e-4586-9e42-703ee109e92c"
        },
        "item": {
          "id": "5a72f79b-ca13-4800-9279-01fecf492224",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8224ece4-0818-403b-8752-110689c36319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73b39f2-aefb-42b6-8bdb-0cde0ee442f2",
        "cursor": {
          "ref": "c1e0858d-b370-4ca2-a0a7-0b49e9814d11",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b2ceeda7-da66-4ffe-8bae-9a01b1dd44b7"
        },
        "item": {
          "id": "b73b39f2-aefb-42b6-8bdb-0cde0ee442f2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7d395157-1814-4e87-9079-c3f8c4a4002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb62d4e3-1510-442c-b768-3df7b3ff31bf",
        "cursor": {
          "ref": "d45c45b5-aaa5-4c40-9d2c-e6060ca2e8dd",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "80d07136-8f8a-4b88-a8b9-d37c91e5e9a6"
        },
        "item": {
          "id": "fb62d4e3-1510-442c-b768-3df7b3ff31bf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "931aa841-e6b3-435a-96f9-179c78607043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806098e2-2bb4-4a39-beeb-7c638663270d",
        "cursor": {
          "ref": "d08bc161-4076-4b8e-831b-982b38b664ce",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8bfa3202-1de2-40f0-98c2-d21481861d91"
        },
        "item": {
          "id": "806098e2-2bb4-4a39-beeb-7c638663270d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3a78234f-a850-4212-8f01-b99fe0b4a38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd00fd-5d3b-4fb6-a874-131c44b89818",
        "cursor": {
          "ref": "e765d9c1-1ea9-462f-8963-1cf2067838b4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5da78fcb-2492-4008-9b8d-55706efc2f1f"
        },
        "item": {
          "id": "44cd00fd-5d3b-4fb6-a874-131c44b89818",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4296571a-929b-42a9-8da2-c50539424642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c1c65a-c46e-4a08-8d2f-01cef2402736",
        "cursor": {
          "ref": "b7460231-849d-473a-b939-a2590bdd3307",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "266493cc-66af-425d-b916-bcf0ea66eb1e"
        },
        "item": {
          "id": "07c1c65a-c46e-4a08-8d2f-01cef2402736",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "57a72ac1-a863-4e6a-9aca-06494c56bbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0067c1-5741-46eb-b977-59e4510d96ab",
        "cursor": {
          "ref": "d3727200-299c-4af8-a023-9a829e9a9e8a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d8528af-ea0e-4d2c-b300-0497a1c7b86a"
        },
        "item": {
          "id": "9f0067c1-5741-46eb-b977-59e4510d96ab",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b93ea6bd-c555-48ee-8f14-ced5ebddb393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59464390-f9e5-4cff-b933-bd803c55e722",
        "cursor": {
          "ref": "5bc3e737-c267-4d75-88ea-04654d80a89e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "48f6f8e4-f913-4bfc-acd7-5a0e5d0a709b"
        },
        "item": {
          "id": "59464390-f9e5-4cff-b933-bd803c55e722",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eebb4f9f-b715-47e7-9a6b-efd7ad87172e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f336382-1139-494c-8f73-4e51a5bf0ed5",
        "cursor": {
          "ref": "8b18b27d-eca2-45d6-a416-58faebffb40e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2395b298-d6b1-498f-9c32-0c8b7fa8bec9"
        },
        "item": {
          "id": "7f336382-1139-494c-8f73-4e51a5bf0ed5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4934a4c0-cc38-4fd4-834f-3f59558e897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda9f6a9-562f-4e79-943e-c4f2d1493717",
        "cursor": {
          "ref": "0a6f8f7d-e7fd-415a-b7b6-5d02419c4e8f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cf7f4448-c12a-46ce-b7bf-41c3eeade9cf"
        },
        "item": {
          "id": "cda9f6a9-562f-4e79-943e-c4f2d1493717",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0d481cca-7986-4210-bf62-a2513b29dd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41335576-2086-4772-be20-563ba58f35d3",
        "cursor": {
          "ref": "37017a11-66ac-466c-942d-b0839994ca89",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0d13bb2f-1216-485d-a976-0c0a564e2f2c"
        },
        "item": {
          "id": "41335576-2086-4772-be20-563ba58f35d3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f208b8d0-4ff9-4701-8420-cd73550bbd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8b4dd0-6f04-49f2-a40d-87407b553aab",
        "cursor": {
          "ref": "639ee520-28aa-40b2-9ba6-10aae45159f7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c44a8151-6ece-4e1b-9b82-3b876af90c03"
        },
        "item": {
          "id": "5b8b4dd0-6f04-49f2-a40d-87407b553aab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c0356520-2c37-4408-a080-7074456963af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e083b4c4-bc5a-4f63-9c62-2ade2821f455",
        "cursor": {
          "ref": "3ea861da-26d2-41da-86b0-1ff4079217ff",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "40c51d62-7e4f-45ca-bf54-669ad4600f96"
        },
        "item": {
          "id": "e083b4c4-bc5a-4f63-9c62-2ade2821f455",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7abf1a8e-c6d7-4dd9-94af-7f69881e4284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d076ecd-580f-4d20-b705-906fb3c4a3c5",
        "cursor": {
          "ref": "9485a976-cfdb-4a89-987e-d4c5eec7eee6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "09b104bf-5990-4b27-96bd-74c8b037e6f0"
        },
        "item": {
          "id": "5d076ecd-580f-4d20-b705-906fb3c4a3c5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d1121967-b678-47fa-82b0-9d60778a6648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cf2034-e159-49ad-aa18-af7e9899f2c9",
        "cursor": {
          "ref": "12db93c3-a546-4b6f-aa2b-f68efa45a907",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4257afcb-bd09-42b7-a27c-02d0c5b1956f"
        },
        "item": {
          "id": "37cf2034-e159-49ad-aa18-af7e9899f2c9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "842b19e5-2ee8-4bff-91a6-dfcf1aac84da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f5f2a-35ae-455b-a121-ec0838ece94e",
        "cursor": {
          "ref": "7dc2a44c-89e8-4e6d-b0c5-8c9a93ba75ec",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ae14e0ac-6df3-4190-8128-49455fb9c951"
        },
        "item": {
          "id": "8c6f5f2a-35ae-455b-a121-ec0838ece94e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "89b447df-6981-4227-b44d-bab4e9eb4935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be75e47-443c-427d-b72c-73e223b511de",
        "cursor": {
          "ref": "0cee35a8-2442-4572-b4ea-f1f09012ca5a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3b4a82a6-d957-4cfb-b342-3a48fd236dc5"
        },
        "item": {
          "id": "4be75e47-443c-427d-b72c-73e223b511de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ce922179-cdbd-42da-b454-50774b9c1498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e99ed-525e-439a-aa9e-03a04b33d168",
        "cursor": {
          "ref": "1dee6d56-92fc-47aa-ad71-90252dc407df",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "24fe3777-6dd6-40e2-8c22-e34c34069ab8"
        },
        "item": {
          "id": "779e99ed-525e-439a-aa9e-03a04b33d168",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c06431c1-7478-4492-8ecf-ee4daf17379c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9c3197-f7b3-4e28-8990-7c48690285c0",
        "cursor": {
          "ref": "c75639fb-a320-4932-a83c-5a62cd02ba82",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "74cb3fd5-fbef-41ba-9626-2de094178fa9"
        },
        "item": {
          "id": "fa9c3197-f7b3-4e28-8990-7c48690285c0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fbf9de28-1b6b-44d7-88e3-f5115ac0f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44fc478-4971-4848-98ef-1cdded8b1f67",
        "cursor": {
          "ref": "51bd2306-e29a-4737-af58-302d05b2e818",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b64742e0-6607-4c58-96f6-c1139fef7ff9"
        },
        "item": {
          "id": "e44fc478-4971-4848-98ef-1cdded8b1f67",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "74b3882f-1755-45ce-9019-f6cfaa794314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c39c34-cba5-4228-8971-da6d1926fbeb",
        "cursor": {
          "ref": "213d5d3f-f4c5-46eb-98f0-de637dc2d4b4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3038169c-897e-4567-aa09-b0d56c21c359"
        },
        "item": {
          "id": "13c39c34-cba5-4228-8971-da6d1926fbeb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1df99df1-c790-4d52-bffb-115303403ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a98a1c-10d3-4123-8489-fc06945144e3",
        "cursor": {
          "ref": "8d45afaf-6e40-4c1c-af48-1c526e455b1a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8793b3fc-d984-4a09-993d-ea922deba554"
        },
        "item": {
          "id": "f3a98a1c-10d3-4123-8489-fc06945144e3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f71b4ffb-6416-4427-8e1a-6f476345f983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76e52c0-811e-48be-b953-e930a9687373",
        "cursor": {
          "ref": "7271fa3b-6a00-4403-b652-b958e0dc7e1c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "62c3a314-ac0a-4394-a312-73adebeee9b9"
        },
        "item": {
          "id": "a76e52c0-811e-48be-b953-e930a9687373",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "26787a8e-cbc7-4aff-b6ce-29585fe2364f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d55ce9-b243-405c-8416-0e8f03c81b4e",
        "cursor": {
          "ref": "33680651-a1d5-4132-82c6-2bab73bfc4c8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dfc5fbc4-9de9-4dd9-bc45-b5ba82c1ff27"
        },
        "item": {
          "id": "13d55ce9-b243-405c-8416-0e8f03c81b4e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d139d89-ed12-411c-a6f4-bcc6ae17abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f7d1d5-9e38-4365-83f8-2396b2bd9ac8",
        "cursor": {
          "ref": "a12c252d-6235-4177-b363-0827deae6e25",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aee01846-c751-405e-a841-8565b35bacdb"
        },
        "item": {
          "id": "49f7d1d5-9e38-4365-83f8-2396b2bd9ac8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "595862f9-cb7d-4250-97b0-8bff9e26df2f",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "845049ea-b569-42a0-aa45-f6cf1275d832",
        "cursor": {
          "ref": "112ca346-39a4-49a7-a3d8-996b137c50f0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97ef4b21-6a18-432a-a2ea-2c4080f9ad6e"
        },
        "item": {
          "id": "845049ea-b569-42a0-aa45-f6cf1275d832",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a7b1f5c2-858b-436a-8f81-ec3c44915587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82580e3e-945e-4639-89c8-b404b9bee37f",
        "cursor": {
          "ref": "f3a1827d-f27c-4c0e-a8bc-b3cf735cec20",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c7c08760-3d3f-4d0b-b05c-576167b88797"
        },
        "item": {
          "id": "82580e3e-945e-4639-89c8-b404b9bee37f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e9764368-b45a-4800-b3ce-d1ac767b90e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2202d866-841e-49ad-b7ae-cffadd57706a",
        "cursor": {
          "ref": "67173bd0-e882-4a43-94c4-1e528b435592",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0818a133-e4bf-4c05-aa02-89fb1894ba3c"
        },
        "item": {
          "id": "2202d866-841e-49ad-b7ae-cffadd57706a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa2dbb90-3d48-409e-bd27-461f56c9dbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8098f7-21f3-4551-aef7-d9620ae48521",
        "cursor": {
          "ref": "879f4e22-a5b2-45ae-b955-9457b5946ae7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fcee0802-b9c4-4e5e-8ea1-e6053da34109"
        },
        "item": {
          "id": "cc8098f7-21f3-4551-aef7-d9620ae48521",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f9d50df5-a39b-465d-8f28-4a501067ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9675aee8-f00e-4cc9-a88a-5ccafc2d3875",
        "cursor": {
          "ref": "a8719bbf-c80d-4da4-96a5-a0790406a90b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c18f09dd-524a-4b2d-b017-26284de9d9ff"
        },
        "item": {
          "id": "9675aee8-f00e-4cc9-a88a-5ccafc2d3875",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f05cb0c3-b5e8-4863-b3a9-c57d434774a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf2fcd0-7099-46ac-a616-4004a78085d7",
        "cursor": {
          "ref": "c982f53c-8f9b-4b93-91b8-0b7847dab703",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7b99f7cb-a1b9-40f5-bfe9-ed4d0710078d"
        },
        "item": {
          "id": "bcf2fcd0-7099-46ac-a616-4004a78085d7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "028bd492-0005-40b7-9486-1de1a1ce2977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df422e61-1428-474a-a1f3-4c7da5c51be7",
        "cursor": {
          "ref": "cd4937d1-0b1b-43a1-81ff-2e621764b952",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9207a1b9-926c-43bd-a8b5-b3ec59cb3a85"
        },
        "item": {
          "id": "df422e61-1428-474a-a1f3-4c7da5c51be7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b65baa9-5f13-4d9b-8369-d8244cd9f66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feecec7b-d7f4-48e9-97aa-81d5108fc821",
        "cursor": {
          "ref": "4784cb07-fb86-466f-802f-b273650979fe",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "82438b2b-69ad-4f89-b1a7-7c6863b9961f"
        },
        "item": {
          "id": "feecec7b-d7f4-48e9-97aa-81d5108fc821",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "454e7b4e-8bd7-4bbf-bfb4-2dd8ad94d4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b9475f-7458-4622-88a3-19ff739654cc",
        "cursor": {
          "ref": "d60c49c5-8718-498b-b583-a119fecf8d39",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5aa70c82-c315-4171-b4ae-f632322e9c98"
        },
        "item": {
          "id": "02b9475f-7458-4622-88a3-19ff739654cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "10b06cb3-2c81-47e7-8be6-a3fafb6c8017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea6187a-70b7-43bb-8c9f-5d7b53e7401c",
        "cursor": {
          "ref": "f0fcdea5-732b-4551-90cd-478e94c08e14",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4b9009f0-3af3-4f86-a236-c16e2fb66a9f"
        },
        "item": {
          "id": "3ea6187a-70b7-43bb-8c9f-5d7b53e7401c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dfbc0bb8-6e91-4973-ab4a-fd7500ac914e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d12f68f-c1da-4e6c-ba3b-8d64782fe4d5",
        "cursor": {
          "ref": "0c0944c5-4b7a-4748-90eb-234ee1c0f8c0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "342bfa95-dc20-4654-887d-1dccc33a1607"
        },
        "item": {
          "id": "3d12f68f-c1da-4e6c-ba3b-8d64782fe4d5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d3343161-df85-4b59-85b9-3ab83b9357ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc478fb-b663-4dbb-a9f4-ce2606268b9d",
        "cursor": {
          "ref": "28d16ef4-cfed-4b34-bdee-8ac7648180ba",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f824acf3-4f99-4e88-addd-192233fc679f"
        },
        "item": {
          "id": "6fc478fb-b663-4dbb-a9f4-ce2606268b9d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aa726ce0-ed3a-4b06-b3f4-b9fc42b25949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d39b06-d8d5-4272-b2af-fb476e85b3be",
        "cursor": {
          "ref": "767692c8-8d71-4a03-b7e4-cdedf773894b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "047f3da4-0d34-4ac9-961c-c8cef4de31b4"
        },
        "item": {
          "id": "65d39b06-d8d5-4272-b2af-fb476e85b3be",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5cd31596-c171-45ca-8b8b-27ed628fcc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c69526e-8188-4bab-b1ed-fe1b3cb8ecac",
        "cursor": {
          "ref": "0b3fcc99-fbe3-4f0a-89b2-c07dcd9be194",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8489bf7-2c21-46f5-83c1-76e054c9f7d7"
        },
        "item": {
          "id": "5c69526e-8188-4bab-b1ed-fe1b3cb8ecac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "06550d95-99d3-4220-bf88-07fed34b42f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fc0af0-31e0-4387-a7d8-3ab8fcb77438",
        "cursor": {
          "ref": "3c6b13cd-049a-4dc5-a4f2-4dcde07e54fb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bd398778-6dee-483c-9a28-99dcca98fa69"
        },
        "item": {
          "id": "28fc0af0-31e0-4387-a7d8-3ab8fcb77438",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1d61658-286c-481f-8549-c9740d1dcf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d1ab87-05dc-4548-867f-1b8a86aa2d6d",
        "cursor": {
          "ref": "c77417d8-21c2-4c90-89c3-b5f5f893236f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "10419df4-52e9-4b16-a556-d23e12f689ca"
        },
        "item": {
          "id": "74d1ab87-05dc-4548-867f-1b8a86aa2d6d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1c3e178d-d2fc-4c81-8ee9-a2983dba496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685016d6-b7a2-4daa-a826-2aeb0ba65664",
        "cursor": {
          "ref": "5e18b8f8-541e-4c43-9744-4b09ca89c7da",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6bac1a70-e724-4827-b033-605450ebb7aa"
        },
        "item": {
          "id": "685016d6-b7a2-4daa-a826-2aeb0ba65664",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0d00e46e-a4dc-477f-a845-91e0ed32d745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ee226-a15a-424b-a5f7-1d345864c70d",
        "cursor": {
          "ref": "7d1ad2e2-fb7a-4879-a6a1-7265dd0a1bf4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6df08b20-46cc-4272-bcb4-5f6a3df6d6be"
        },
        "item": {
          "id": "977ee226-a15a-424b-a5f7-1d345864c70d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8bfa92ab-791a-4be0-b28a-2b2cc2face80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bac942-d194-4d99-b8af-3eba28bdc35e",
        "cursor": {
          "ref": "490bf0ca-7c92-4453-bc82-68988ca35f8f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c5587940-f751-4e4d-b934-3039f8392a35"
        },
        "item": {
          "id": "61bac942-d194-4d99-b8af-3eba28bdc35e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b8dbe07b-1551-48f5-8578-ad16a80faa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8bac8-76dc-4a7e-b6cb-be929bb23dfd",
        "cursor": {
          "ref": "afe8eb39-e25e-4049-a60b-c0ca868092d3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "97e7de7e-8e18-4a2c-8101-fdca58de1c1a"
        },
        "item": {
          "id": "aae8bac8-76dc-4a7e-b6cb-be929bb23dfd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "751d89a3-b953-4abb-a7f9-d725287d3095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c402ef2a-d264-4fc1-989b-d41a2928023f",
        "cursor": {
          "ref": "3bab77ee-4073-4ff7-9c5a-6d8ef7cb2b9e",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "605054cb-dd43-478e-a3b3-bca3b4d78023"
        },
        "item": {
          "id": "c402ef2a-d264-4fc1-989b-d41a2928023f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4e7b89e4-125d-48f5-85fe-37462aa606b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a303d5-9885-4404-b2b9-3a0df49ddb5d",
        "cursor": {
          "ref": "17e29a19-9353-4fe3-9c19-49a876b61d23",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f34b428-9196-430f-98ea-5155446945d8"
        },
        "item": {
          "id": "c2a303d5-9885-4404-b2b9-3a0df49ddb5d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dd443efc-511a-4e78-a128-39e0bafefb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151981db-84fb-40d5-9352-73e585e59f17",
        "cursor": {
          "ref": "8fdc6462-5c2c-44c4-bb07-d84668aca3b8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8c2a5b73-d4ff-4f74-a252-c64a3d6f377b"
        },
        "item": {
          "id": "151981db-84fb-40d5-9352-73e585e59f17",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bc3b616a-5528-4b68-bf9c-96e31eeb4b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79d5a5-310f-49a1-8a01-67b7ab23e864",
        "cursor": {
          "ref": "67409374-2b69-4c9c-ac55-94dd5636cbfb",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6d8c9965-a3b6-40d5-b960-ee8154ee1e50"
        },
        "item": {
          "id": "ad79d5a5-310f-49a1-8a01-67b7ab23e864",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2e67026-85fa-43ed-aacc-d4cd87c772d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a64f8-d61d-4fc4-9d1f-15da7dcc23c3",
        "cursor": {
          "ref": "96b98e98-918e-4378-841a-e25261993a7b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d65124d4-3413-417b-9427-642df47c398c"
        },
        "item": {
          "id": "1d6a64f8-d61d-4fc4-9d1f-15da7dcc23c3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "760855ec-eb94-4754-aa32-e82947c7b5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7babb18a-e313-4d09-9906-50837434454f",
        "cursor": {
          "ref": "9d11131d-aea2-4b6c-a911-a0ecb41ac3dc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "62b17fe1-9957-46db-a7dd-72c0004023a1"
        },
        "item": {
          "id": "7babb18a-e313-4d09-9906-50837434454f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9c46271c-c63d-4c0a-bcd8-edd2ff39d6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9191d6b5-c69f-4d3a-a5fc-d3007b10ff8a",
        "cursor": {
          "ref": "75436f30-21f8-42eb-910e-559b5d8f8347",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a4bab2f-9b53-4e35-8b7d-665c6f636d24"
        },
        "item": {
          "id": "9191d6b5-c69f-4d3a-a5fc-d3007b10ff8a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e1c05747-9d8c-4d5f-b487-fe171c9a3e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e79e245-6a3e-43d2-b4f3-8c8d8c454a5b",
        "cursor": {
          "ref": "a6945c27-943e-46bd-8ddf-c2297bbc4db6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d69ff0ee-ad9e-4896-910f-fa4dc946a381"
        },
        "item": {
          "id": "6e79e245-6a3e-43d2-b4f3-8c8d8c454a5b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6023658c-9c3f-48d3-8954-97a4d4edbcb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9e7145-b9aa-4114-8f8e-d4a262afd6f3",
        "cursor": {
          "ref": "e8412505-afb8-44a7-970c-5d0201af503c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d1a69b4-2e08-4f01-977a-b1803125d648"
        },
        "item": {
          "id": "5e9e7145-b9aa-4114-8f8e-d4a262afd6f3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cd4ba2bf-f75a-4f8a-894b-dde98b65a410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7913db5-4abd-4adc-8eb1-969ce8fee311",
        "cursor": {
          "ref": "bbbe3f2b-c9a9-4911-be40-63cd6f354165",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "94708313-079a-4910-af14-b97feb72c115"
        },
        "item": {
          "id": "f7913db5-4abd-4adc-8eb1-969ce8fee311",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "31285f37-3524-4c8c-8901-8c4e6127ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939971fd-9df2-4d6b-9e0f-03293d7931a8",
        "cursor": {
          "ref": "48871238-64ec-49c1-904a-7ce7b0228c57",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e18b2cb-1c62-4c5c-9311-4cb278e4c4b0"
        },
        "item": {
          "id": "939971fd-9df2-4d6b-9e0f-03293d7931a8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "69dc5e3b-a299-4b3d-8d3a-a224792685cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d4e380-d031-49df-b422-dfbe03b58f87",
        "cursor": {
          "ref": "a6cb43a5-6a40-4ef2-a70f-6a12a5b6a190",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b719d033-9b04-41bd-96d8-52b5678f5cc1"
        },
        "item": {
          "id": "15d4e380-d031-49df-b422-dfbe03b58f87",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e949755f-c924-49e3-a9c2-e7b8983ff300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5547a7e-06ea-476f-86a5-eebfef45c824",
        "cursor": {
          "ref": "601d400a-c07a-4d33-9e53-4c83cb03fce1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "25f52e7d-5e34-43bd-96f0-58e61b23dbcc"
        },
        "item": {
          "id": "b5547a7e-06ea-476f-86a5-eebfef45c824",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02523a1a-8abf-470a-97c0-d606065a40d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a54b16-9248-478c-9a5b-52e50266731e",
        "cursor": {
          "ref": "197172a4-9d0c-4bc6-8ff5-1502cded9525",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "972af8f5-3e7c-45ca-b9b8-29ac6f05cd37"
        },
        "item": {
          "id": "57a54b16-9248-478c-9a5b-52e50266731e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "536e2280-660a-4dca-925f-013f6c7d118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4e201c-86d9-4d1a-8faa-7bb0870b916f",
        "cursor": {
          "ref": "555d7254-cddb-42ef-a3e5-60c47a48c097",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ffabd842-a763-4271-ac4f-bad90913d0b8"
        },
        "item": {
          "id": "1d4e201c-86d9-4d1a-8faa-7bb0870b916f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7dfafe8-d7ee-43b4-b5dd-cc121ee7adcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd60fb2-d793-463f-9031-ec6bc02c3c56",
        "cursor": {
          "ref": "f6953ef6-5bb0-4f6e-80fa-8439ed16be60",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e442f6bd-35ab-412c-a937-c27cff991881"
        },
        "item": {
          "id": "0cd60fb2-d793-463f-9031-ec6bc02c3c56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4383db0e-41e2-4e34-9a08-46baa3866dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf02573-2ab6-44b3-98b5-363efcf73419",
        "cursor": {
          "ref": "daa982dc-8835-4d24-aa45-c109bc324ce2",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c3e0a2eb-c46c-4813-8b3a-a82514773c95"
        },
        "item": {
          "id": "9cf02573-2ab6-44b3-98b5-363efcf73419",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a676c8e3-e178-459b-a199-c7a0ed9a8e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1984318-9f53-44e6-804e-777f78e52b98",
        "cursor": {
          "ref": "c2382b2f-e949-4231-812b-739165cfe1df",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ccb98252-6a33-4e4e-b8ec-580f667d578b"
        },
        "item": {
          "id": "d1984318-9f53-44e6-804e-777f78e52b98",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "54f2cc7f-704f-4457-a3f9-41a8504c7cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d37584-b030-46bf-922e-1d73b138420a",
        "cursor": {
          "ref": "6269ad2d-b46d-4d61-bb06-18e05c4f9e7d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef26ff2a-d5c4-40bc-8010-0ccdf96bad85"
        },
        "item": {
          "id": "58d37584-b030-46bf-922e-1d73b138420a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0424ae46-93a8-411e-b518-0d105c8f9fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd10b02-77f4-4a62-ab38-595a4ef1b528",
        "cursor": {
          "ref": "e7261564-8dda-4035-96cf-1cfc03d0fa97",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0da35298-d792-4192-bb85-c8f4d5dcfd9b"
        },
        "item": {
          "id": "9cd10b02-77f4-4a62-ab38-595a4ef1b528",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "210a8afb-bc9e-4dac-b8bf-1186bbf5537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93605a7-1ebe-4deb-9766-6fe837f0b4fd",
        "cursor": {
          "ref": "22f0b034-f58b-4284-9893-05ed34212c1e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1ba14814-5cf5-4e21-bbe1-11ec4246e337"
        },
        "item": {
          "id": "d93605a7-1ebe-4deb-9766-6fe837f0b4fd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4107917-4c4b-4338-a7ff-d6b6680319f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a221946-20b2-4a67-bd43-70ae54c0eb39",
        "cursor": {
          "ref": "3377c2db-506e-44c8-bf58-808ef9939641",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3209abc9-c7c2-425c-bedf-4b36781baca7"
        },
        "item": {
          "id": "5a221946-20b2-4a67-bd43-70ae54c0eb39",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7942f31-9ab7-4263-a1ec-0710798466c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b5e009-3e0c-4d1e-a897-4d8747c1c899",
        "cursor": {
          "ref": "fc6651d8-ff59-46ac-bc37-ff718fa04ffc",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "38f68149-2e44-480f-a2b2-ae0edd4af155"
        },
        "item": {
          "id": "f5b5e009-3e0c-4d1e-a897-4d8747c1c899",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ccbd2b6e-2fc6-4a81-a0e7-55723e5b41b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5c4296-e1da-4590-92e4-5586cdaf4edf",
        "cursor": {
          "ref": "76c6003e-549f-45a8-9bbc-c5aa072b9904",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "22c1bca4-edfe-4f6c-a503-313a02d0296f"
        },
        "item": {
          "id": "9d5c4296-e1da-4590-92e4-5586cdaf4edf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e48ff868-c47e-4e6b-ae41-8f650e4c4db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d4eba-52b7-4451-9c6c-c51b0ae3d192",
        "cursor": {
          "ref": "e61d7287-5ad0-46d1-b05a-4f3a96836cf4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "56178d55-e5fc-4c30-9f52-9e8502b11f47"
        },
        "item": {
          "id": "660d4eba-52b7-4451-9c6c-c51b0ae3d192",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4e6adeac-5f96-47f5-80c4-c92b2db5f500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b510408-6a5e-4008-b921-de9ced9908ba",
        "cursor": {
          "ref": "40c8a3e0-16b0-43b1-a818-903846adadb6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1557913d-e162-4695-8642-8d9a8d7f3f9d"
        },
        "item": {
          "id": "9b510408-6a5e-4008-b921-de9ced9908ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "deb10ed0-6b38-4602-bec1-003d5d56c2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cabeda8-8dbf-4dd9-8df3-94225777641c",
        "cursor": {
          "ref": "c04196b3-41c0-43d6-a9e0-5a19fffae92b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1564dd8c-f5cb-4d67-8cd0-9c7aa76d9a43"
        },
        "item": {
          "id": "6cabeda8-8dbf-4dd9-8df3-94225777641c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5a1ba94f-6727-47c0-960b-1e67fdf4a844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d7548-2406-4117-ad00-9b81f5d692d5",
        "cursor": {
          "ref": "6d3ab148-2485-4a3d-9aa7-59d5df9199c2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "af707ae3-94f8-4be3-8d04-f8e37f28b0b6"
        },
        "item": {
          "id": "b07d7548-2406-4117-ad00-9b81f5d692d5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "13ecf834-d8ca-4522-ade7-0e24becd3e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4944a60c-c83a-4835-99e3-14be2b66b059",
        "cursor": {
          "ref": "e4473a81-0b84-453c-94e4-98dc370a156d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "05582b20-0ef7-4db8-9333-25ab29d6e027"
        },
        "item": {
          "id": "4944a60c-c83a-4835-99e3-14be2b66b059",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67f1110e-99d6-4f75-acec-a01d5a386fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc97d4d5-e89c-4681-9684-17bce3c02d9e",
        "cursor": {
          "ref": "dae5f5c4-d032-41c8-b6e2-efda063e7292",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4240d325-0f9b-47c6-b177-99357a626221"
        },
        "item": {
          "id": "bc97d4d5-e89c-4681-9684-17bce3c02d9e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da85ea1e-338c-49c6-87f5-0d350e0a9bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f89d68e-8886-414b-93e4-04a07a896b16",
        "cursor": {
          "ref": "10a683ff-7978-41a3-8323-3bbbbfa230ab",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2a63828-d97e-4c69-a629-5b869e17396c"
        },
        "item": {
          "id": "4f89d68e-8886-414b-93e4-04a07a896b16",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5231b2a7-df29-453b-bd02-4772fd2b631d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae041df-9c41-40bc-a492-c50b4dfbc115",
        "cursor": {
          "ref": "cd76756a-d030-4704-93a9-9fdb1da0fd38",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bca48117-bfdf-41a2-8555-70519a7459c9"
        },
        "item": {
          "id": "5ae041df-9c41-40bc-a492-c50b4dfbc115",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48592b1b-d129-465b-9b29-10616097049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38761c8-4d06-49ca-9a30-ab3efabd7cc7",
        "cursor": {
          "ref": "5eea8353-621b-4efb-95a6-1fa24cc87ad4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "37afe2da-9e50-46ac-81a3-8f308ba7d081"
        },
        "item": {
          "id": "f38761c8-4d06-49ca-9a30-ab3efabd7cc7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7d6eeb0f-c87d-4508-8d6e-104c7277cdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f53cedb-980c-436f-88e1-a82f4ec164a4",
        "cursor": {
          "ref": "2ec0a515-3f36-4a83-bbc4-f964915bf274",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f465c7aa-a5d0-4215-a150-90a071cc6d50"
        },
        "item": {
          "id": "1f53cedb-980c-436f-88e1-a82f4ec164a4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1b8c087b-077d-4bc1-8fc0-6813ffd9e316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac8919-9f0e-4851-942d-6e0711463f40",
        "cursor": {
          "ref": "e50e8b9f-15bd-432e-9a71-23cbc291ec57",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "65f002f1-5eea-4501-8695-6776b36ac21f"
        },
        "item": {
          "id": "7fac8919-9f0e-4851-942d-6e0711463f40",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "808930e3-d1cc-45b0-bb39-f1c756b5e1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecd8b27-3ebe-457d-91d1-5ab2aaa3ead0",
        "cursor": {
          "ref": "b2df8380-3ac9-48da-b547-af3a7bd9c7c7",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "889fa181-d1ae-4adf-939d-9687270ffd96"
        },
        "item": {
          "id": "4ecd8b27-3ebe-457d-91d1-5ab2aaa3ead0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "043120aa-ab0f-4aa9-bafc-415285078b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0162865-a947-49c6-b73a-02c9d074dae1",
        "cursor": {
          "ref": "6b72b6cd-bff5-4e3e-99ee-b113bed5076d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0aba7a8f-6258-4e7e-8007-d9cef070e00d"
        },
        "item": {
          "id": "d0162865-a947-49c6-b73a-02c9d074dae1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "63ef2ca8-824a-4e54-afbc-a9a0a36521d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5984e7f6-2876-48ac-b598-063ec26c577d",
        "cursor": {
          "ref": "e42321da-e96e-4c1d-8007-f0336f8d2cda",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ac79490f-eebc-4fc8-b074-fb64b01a959b"
        },
        "item": {
          "id": "5984e7f6-2876-48ac-b598-063ec26c577d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6eb953a9-2a26-40e3-93dc-8e1aeb2fdcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73cd0b7-5646-4506-847c-f137522ef231",
        "cursor": {
          "ref": "77c22323-eca7-41b4-970b-a69626472133",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e3361fda-c681-44ee-bf1e-f67a6708d040"
        },
        "item": {
          "id": "c73cd0b7-5646-4506-847c-f137522ef231",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e18a279f-84e7-4fe3-91d6-07572149c951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6c1ae2-0338-4c8c-9a39-a0c4b76897e6",
        "cursor": {
          "ref": "008f162d-a74d-4d99-a4ac-fec3319664ef",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fa7e1ba2-5f34-4745-b643-9a4bcd2ac56a"
        },
        "item": {
          "id": "bd6c1ae2-0338-4c8c-9a39-a0c4b76897e6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "25eefbaf-4458-4f5a-8a82-c703fb963d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dce2954-0b9d-4bc5-a9af-5024ca179ac6",
        "cursor": {
          "ref": "76337ca7-07cb-42cc-9b10-66adf9f7fb4b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6776a039-9941-4eb9-87dc-5b990123e822"
        },
        "item": {
          "id": "9dce2954-0b9d-4bc5-a9af-5024ca179ac6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ebd0869b-1c8f-4a1e-b3ef-ed34d3c5def6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f229ef0c-e104-4f68-9534-38e1dc7f8eda",
        "cursor": {
          "ref": "9f74affb-e7f8-407d-8c46-4aa7be62e5ba",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "570efc4b-0d89-4c46-997d-4c742eae14da"
        },
        "item": {
          "id": "f229ef0c-e104-4f68-9534-38e1dc7f8eda",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "74e614b9-ba9a-4b29-aff1-c65b25a73d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f70d65-3b56-4e13-8e1a-68a1c1d25282",
        "cursor": {
          "ref": "af78101d-492d-417b-a663-16c82d237605",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b73d0c56-d299-4a34-9c81-9e05ef0c9ce5"
        },
        "item": {
          "id": "c0f70d65-3b56-4e13-8e1a-68a1c1d25282",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8bd843cf-d83e-4377-82fa-005a0ac91dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489bf123-1b8d-43d9-a721-63130b942673",
        "cursor": {
          "ref": "4a4d0bb8-6d95-407d-b87f-03a439eae97b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b9993247-ca96-485b-9a83-5716a3fa7950"
        },
        "item": {
          "id": "489bf123-1b8d-43d9-a721-63130b942673",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ad5d2e7e-c382-4c5b-a1b8-7423a4e19c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2a217-e2e3-494f-b9d3-3cf65c92e75a",
        "cursor": {
          "ref": "4bb1f516-3123-4a93-94bd-b4ee9219cfb5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "947e632f-7aaf-4224-a8e2-4db804a7ebfe"
        },
        "item": {
          "id": "99b2a217-e2e3-494f-b9d3-3cf65c92e75a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cab386d6-c423-4b0f-8540-08242250e545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff98f1b-0eed-4327-ba96-8f46e098d2e2",
        "cursor": {
          "ref": "2772d81e-51a2-4a8b-a8fe-074ee8df382b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ff9f2c4c-259b-4363-b318-30973a52a7f2"
        },
        "item": {
          "id": "7ff98f1b-0eed-4327-ba96-8f46e098d2e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "28067c7c-6f6a-442a-ab19-04577751bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003016d-2d24-4664-bc08-8638841c9c04",
        "cursor": {
          "ref": "f942eb40-0c09-4553-8e80-14fee069edba",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7bec349e-2ff5-45cd-ad4f-78fe80bb1963"
        },
        "item": {
          "id": "7003016d-2d24-4664-bc08-8638841c9c04",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7cd4c232-5d29-496f-8dda-2910db67dd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01f8c5-5948-4c02-93c3-b97a50b9f651",
        "cursor": {
          "ref": "b706d480-a94b-4f3f-b5ff-0a3e2d24efd4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e7677ed3-7196-4ed1-9630-754b9ffa6350"
        },
        "item": {
          "id": "3b01f8c5-5948-4c02-93c3-b97a50b9f651",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d93f2d49-b76e-4663-9f90-53541b92c3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3713ad-7eab-49b1-8965-91de4809a645",
        "cursor": {
          "ref": "b40bcba9-31d7-42a0-858b-f3ee615f1dfb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2b8eb880-12f0-40d5-929e-f06cca4df36f"
        },
        "item": {
          "id": "0e3713ad-7eab-49b1-8965-91de4809a645",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "70453586-f75b-48f4-ae73-477b0e1596ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c5702-9eea-432a-91a0-5c38cf540482",
        "cursor": {
          "ref": "95e98cd5-3264-40b4-b471-01ca7990f63e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "396e7906-c0b9-4acb-82dc-e9cd0f21a899"
        },
        "item": {
          "id": "ef6c5702-9eea-432a-91a0-5c38cf540482",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ccd7a210-845a-4d85-adfb-b1e77c7f226b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756c4ebf-efa5-45fd-ba15-2e46eb637e5c",
        "cursor": {
          "ref": "a904634f-98e9-47ab-a0a6-b53055a6a9cc",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ceb619d3-bf22-40c1-8b14-b46adf8593c7"
        },
        "item": {
          "id": "756c4ebf-efa5-45fd-ba15-2e46eb637e5c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "43147bcc-6178-423c-afde-0d0cd8b306dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51ae386-b158-41dd-a9fe-d1ff00380d73",
        "cursor": {
          "ref": "72daa8ec-c9e7-43ff-b44d-15478433e906",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7646b94b-f0e4-4c71-ba72-06a64961e796"
        },
        "item": {
          "id": "a51ae386-b158-41dd-a9fe-d1ff00380d73",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d5ccf6a3-1203-4067-a1a0-dd6dfec0a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37ffbdc-648c-414c-bf30-05e190197eb4",
        "cursor": {
          "ref": "d84541d5-7082-4fcb-83c0-39e0c79e9e3f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9731a76a-58c1-499f-b7e9-a408a832a48c"
        },
        "item": {
          "id": "f37ffbdc-648c-414c-bf30-05e190197eb4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d091495c-d575-4201-8300-25bebd1a3b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb70bf-2ec7-49f7-a21c-9c8ed9cc77c7",
        "cursor": {
          "ref": "518465ca-c28d-4341-9933-5dea40cbe8bb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3e168f5e-ce40-4e29-aa8b-00aae12f38a9"
        },
        "item": {
          "id": "1edb70bf-2ec7-49f7-a21c-9c8ed9cc77c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39a3897e-f916-4897-a37d-572e4243b1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beccab0b-d5d5-4e38-9832-796a6af2d5df",
        "cursor": {
          "ref": "b48befc8-6ff5-4115-8d84-bd2c65198021",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "80fa4a75-7765-4dd9-b02b-3cbb5ae21688"
        },
        "item": {
          "id": "beccab0b-d5d5-4e38-9832-796a6af2d5df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8e6b7135-224b-4f74-b359-4cb070130ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c17217-7280-4167-b969-5f04ad860ba3",
        "cursor": {
          "ref": "3b3daa6e-d0cf-4175-8064-080aeca1aa25",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b5f66323-e407-4e25-9d1a-2602784b4db5"
        },
        "item": {
          "id": "45c17217-7280-4167-b969-5f04ad860ba3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e015c7f0-1d09-4346-bb3b-dc404f53aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24267ad9-6c85-4a1b-b25d-5c230d523bcc",
        "cursor": {
          "ref": "23ab21ce-ae6e-4bc5-8c31-5c2c36099998",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "976cb7fe-10be-43b6-a376-9e29c3dceaf6"
        },
        "item": {
          "id": "24267ad9-6c85-4a1b-b25d-5c230d523bcc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "95090b21-365c-42f1-ab72-b3520fb844a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5efe0f0-06d5-4ca3-9b97-e9b0fb807a2d",
        "cursor": {
          "ref": "3d5df0f4-ec8e-41a7-b960-69eaf0e326ba",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ab740885-649d-4f8c-9ebe-befaeb6cb987"
        },
        "item": {
          "id": "c5efe0f0-06d5-4ca3-9b97-e9b0fb807a2d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "92ffc755-2759-428f-8a8b-7d7c8e76f417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1186877c-b277-43af-8c72-f308fa8cee1b",
        "cursor": {
          "ref": "f4400316-2cb2-46ba-92c3-53af6fecb8b6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "21cd9cae-a5fe-45f2-8694-0e172f763a35"
        },
        "item": {
          "id": "1186877c-b277-43af-8c72-f308fa8cee1b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f5d98274-93d6-4513-9821-ab3a72665d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378165d0-e236-40dd-ab84-089bb1628ab6",
        "cursor": {
          "ref": "743ef0df-a197-4efb-a7d0-5c3320150f35",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c1268fec-6a25-4910-b47d-4b8b053594c4"
        },
        "item": {
          "id": "378165d0-e236-40dd-ab84-089bb1628ab6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "66ca8b36-ee84-4d79-89f1-fa65ed347efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65360448-5222-4c9c-9894-06018bd7c743",
        "cursor": {
          "ref": "9173d933-aecc-455d-aa16-0e8fb7d42820",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "91a364ec-ad17-42c6-943a-877409038c6a"
        },
        "item": {
          "id": "65360448-5222-4c9c-9894-06018bd7c743",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a90185f9-6883-4e54-bc89-043f051e88cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06089fb6-a566-4d29-b362-1bdfe6625fab",
        "cursor": {
          "ref": "3bd4e641-82d4-4e99-89fe-4d964abfe1e1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "926eb3f2-812a-454c-851b-1c4e21caf9fb"
        },
        "item": {
          "id": "06089fb6-a566-4d29-b362-1bdfe6625fab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "959b6167-6784-4c71-beb1-5fa12aeb837b",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae9f0a5-28a4-4bc2-a975-ea249bb61046",
        "cursor": {
          "ref": "62e14321-8d93-47d2-8b77-1331c809c96f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9f4907c3-8788-4440-aeda-f07a9bcc2080"
        },
        "item": {
          "id": "8ae9f0a5-28a4-4bc2-a975-ea249bb61046",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6214db8e-3e02-4b14-9c08-878663552d0a",
          "status": "OK",
          "code": 200,
          "responseTime": 3289,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13b1a2-d4d9-4a6e-a4ae-9aa75fe74802",
        "cursor": {
          "ref": "fea5f287-ecd6-4950-bb71-754a559dc717",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b6434a83-dfe0-457e-982c-3028577dca72"
        },
        "item": {
          "id": "4d13b1a2-d4d9-4a6e-a4ae-9aa75fe74802",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c6bbc288-b34c-4aab-b2b6-45f4ef6d2802",
          "status": "OK",
          "code": 200,
          "responseTime": 1865,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd72202-e320-4c9d-89ce-6ccb9d3a60a2",
        "cursor": {
          "ref": "f9b90754-2818-41bb-a719-e120e8c96856",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "396a5a27-035a-49da-9461-3717c8dda026"
        },
        "item": {
          "id": "5dd72202-e320-4c9d-89ce-6ccb9d3a60a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4a8afbe2-b110-4e81-9b1b-2d59f12c0f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd72202-e320-4c9d-89ce-6ccb9d3a60a2",
        "cursor": {
          "ref": "f9b90754-2818-41bb-a719-e120e8c96856",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "396a5a27-035a-49da-9461-3717c8dda026"
        },
        "item": {
          "id": "5dd72202-e320-4c9d-89ce-6ccb9d3a60a2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4a8afbe2-b110-4e81-9b1b-2d59f12c0f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58db3d9-0ba6-4a03-904a-ce3549328bff",
        "cursor": {
          "ref": "ead79dd4-43d3-4315-aa15-8806a623511d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2805eb0f-0355-4563-aaa8-414bb6f12707"
        },
        "item": {
          "id": "a58db3d9-0ba6-4a03-904a-ce3549328bff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80012375-eb9d-44bd-ae54-e674342b811e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6870a3fc-5079-4bf5-9e19-d05a71081ce3",
        "cursor": {
          "ref": "a0c0c1df-889f-4d6d-b564-18816718c3a1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "710d30c7-1b67-4b91-bb86-499b5b2aa73a"
        },
        "item": {
          "id": "6870a3fc-5079-4bf5-9e19-d05a71081ce3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e166c8fd-f861-4f8e-937f-a014b588d8eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}